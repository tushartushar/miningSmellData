Implementation smell,Namespace,Class,File,Method,Description
Long Method,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The method has 822 lines of code.
Complex Method,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,Cyclomatic complexity of the method is 122
Complex Method,DuoVia.FuzzyStrings,LevenshteinDistanceExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\LevenshteinDistanceExtensions.cs,LevenshteinDistance,Cyclomatic complexity of the method is 11
Complex Method,DuoVia.FuzzyStrings,LongestCommonSubsequenceExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\LongestCommonSubsequenceExtensions.cs,LongestCommonSubsequence,Cyclomatic complexity of the method is 14
Long Statement,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The length of the statement  "                            || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER))) " is 120.
Long Statement,DuoVia.FuzzyStrings,LongestCommonSubsequenceExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\LongestCommonSubsequenceExtensions.cs,LongestCommonSubsequence,The length of the statement  "			if (string.IsNullOrWhiteSpace(input) || string.IsNullOrWhiteSpace(comparedTo)) return new Tuple<string' double>(string.Empty' 0.0d); " is 132.
Complex Conditional,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The conditional expression  "(current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER)))"  is complex.
Complex Conditional,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The conditional expression  "(current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE)"  is complex.
Complex Conditional,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The conditional expression  "(StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp))"  is complex.
Complex Conditional,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The conditional expression  "((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH))"  is complex.
Complex Conditional,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The conditional expression  "(StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY)"  is complex.
Complex Conditional,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The conditional expression  "current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO))"  is complex.
Complex Conditional,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The conditional expression  "((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE))"  is complex.
Complex Conditional,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The conditional expression  "(StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM)"  is complex.
Complex Conditional,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The conditional expression  "(current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA)"  is complex.
Complex Conditional,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The conditional expression  "(current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH)"  is complex.
Complex Conditional,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The conditional expression  "StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT))"  is complex.
Magic Number,DuoVia.FuzzyStrings,DiceCoefficientExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DiceCoefficientExtensions.cs,DiceCoefficient,The following statement contains a magic number: return (2 * matches) / totalBigrams;
Magic Number,DuoVia.FuzzyStrings,DiceCoefficientExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DiceCoefficientExtensions.cs,ToBiGrams,The following statement contains a magic number: return ToNGrams(input' 2);
Magic Number,DuoVia.FuzzyStrings,DiceCoefficientExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DiceCoefficientExtensions.cs,ToTriGrams,The following statement contains a magic number: return ToNGrams(input' 3);
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: switch (workingString[current])                  {                      case charA:                      case charE:                      case charI:                      case charO:                      case charU:                      case charY:                          if (current == 0)                          {                              //all init vowels now map to 'A'                              metaphoneData.Add("A");                          }                          current += 1;                          break;                        case charB:                          //"-mb"' e.g"' "dumb"' already skipped over...                          metaphoneData.Add("P");                            if (workingString[current + 1] == charB)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charAdash:                          metaphoneData.Add(strS);                          current += 1;                          break;                        case charC:                          //various germanic                          if ((current > 1)                              && !IsVowel(workingString[current - 2])                              && StringAt(workingString' (current - 1)' strACH)                              && ((workingString[current + 2] != charI)                              && ((workingString[current + 2] != charE)                              || StringAt(workingString' (current - 2)' strBACHER' strMACHER))))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            //special case 'caesar'                          if ((current == 0) && StringAt(workingString' current' strCAESAR))                          {                              metaphoneData.Add(strS);                              current += 2;                              break;                          }                            //italian 'chianti'                          if (StringAt(workingString' current' strCHIA))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCH))                          {                              //find 'michael'                              if ((current > 0) && StringAt(workingString' current' strCHAE))                              {                                  metaphoneData.Add(strK' strX);                                  current += 2;                                  break;                              }                                //greek roots e.g. 'chemistry'' 'chorus'                              if ((current == 0)                                  && (StringAt(workingString' (current + 1)' strHARAC' strHARIS)                                  || StringAt(workingString' (current + 1)' strHOR' strHYM' strHIA' strHEM))                                  && !StringAt(workingString' 0' strCHORE))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                //germanic' greek' or otherwise 'ch' for 'kh' sound                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH)) // 'architect but not 'arch'' 'orchestra'' 'orchid'                                  || StringAt(workingString' (current - 2)' strORCHES' strARCHIT' strORCHID)                                  || StringAt(workingString' (current + 2)' strT' strS)                                      || ((StringAt(workingString' (current - 1)' strA' strO' strU' strE)                                      || (current == 0)) //e.g.' 'wachtler'' 'wechsler'' but not 'tichner'                                          && StringAt(workingString' (current + 2)' strL' strR' strN' strM' strB' strH' strF' strV' strW' sp)))                              {                                  metaphoneData.Add(strK);                              }                              else                              {                                  if (current > 0)                                  {                                      if (StringAt(workingString' 0' strMC))                                      {                                          //e.g.' "McHugh"                                          metaphoneData.Add(strK);                                      }                                      else                                      {                                          metaphoneData.Add(strX' strK);                                      }                                  }                                  else                                  {                                      metaphoneData.Add(strX);                                  }                              }                              current += 2;                              break;                          }                          //e.g' 'czerny'                          if (StringAt(workingString' current' strCZ) && !StringAt(workingString' (current - 2)' strWICZ))                          {                              metaphoneData.Add(strS' strX);                              current += 2;                              break;                          }                            //e.g.' 'focaccia'                          if (StringAt(workingString' (current + 1)' strCIA))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            //double 'C'' but not if e.g. 'McClellan'                          if (StringAt(workingString' current' strCC) && !((current == 1) && (workingString[0] == charM)))                          {                              //'bellocchio' but not 'bacchus'                              if (StringAt(workingString' (current + 2)' strI' strE' strH)                                  && !StringAt(workingString' (current + 2)' strHU))                              {                                  //'accident'' 'accede' 'succeed'                                  if (((current == 1) && (workingString[current - 1] == charA))                                      || StringAt(workingString' (current - 1)' strUCCEE' strUCCES))                                  {                                      metaphoneData.Add(strKS);                                  }                                  //'bacci'' 'bertucci'' other italian                                  else                                  {                                      metaphoneData.Add(strX);                                  }                                  current += 3;                                  break;                              }                              else                              {                                  //Pierce's rule                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strCK' strCG' strCQ))                          {                              metaphoneData.Add(strK);                              current += 2;                              break;                          }                            if (StringAt(workingString' current' strCI' strCE' strCY))                          {                              //italian vs. english                              if (StringAt(workingString' current' strCIO' strCIE' strCIA))                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strK);                            //name sent in 'mac caffrey'' 'mac gregor                          if (StringAt(workingString' (current + 1)' strspC' strspQ' strspG))                          {                              current += 3;                          }                          else if (StringAt(workingString' (current + 1)' strC' strK' strQ)                              && !StringAt(workingString' (current + 1)' strCE' strCI))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charD:                          if (StringAt(workingString' current' strDG))                          {                              if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  //e.g. 'edge'                                  metaphoneData.Add(strJ);                                  current += 3;                                  break;                              }                              else                              {                                  //e.g. 'edgar'                                  metaphoneData.Add(strTK);                                  current += 2;                                  break;                              }                          }                            if (StringAt(workingString' current' strDT' strDD))                          {                              metaphoneData.Add(strT);                              current += 2;                              break;                          }                            //else                          metaphoneData.Add(strT);                          current += 1;                          break;                        case charF:                          if (workingString[current + 1] == charF)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charG:                          if (workingString[current + 1] == charH)                          {                              if ((current > 0) && !IsVowel(workingString[current - 1]))                              {                                  metaphoneData.Add(strK);                                  current += 2;                                  break;                              }                                if (current < 3)                              {                                  //'ghislane'' ghiradelli                                  if (current == 0)                                  {                                      if (workingString[current + 2] == charI)                                      {                                          metaphoneData.Add(strJ);                                      }                                      else                                      {                                          metaphoneData.Add(strK);                                      }                                      current += 2;                                      break;                                  }                              }                              //Parker's rule (with some further refinements) - e.g.' 'hugh'                              if (((current > 1) && StringAt(workingString' (current - 2)' strB' strH' strD)) //e.g.' 'bough'                                  || ((current > 2) && StringAt(workingString' (current - 3)' strB' strH' strD)) //e.g.' 'broughton'                                      || ((current > 3) && StringAt(workingString' (current - 4)' strB' strH)))                              {                                  current += 2;                                  break;                              }                              else                              {                                  //e.g.' 'laugh'' 'McLaughlin'' 'cough'' 'gough'' 'rough'' 'tough'                                  if ((current > 2) && (workingString[current - 1] == charU)                                      && StringAt(workingString' (current - 3)' strC' strG' strL' strR' strT))                                  {                                      metaphoneData.Add(strF);                                  }                                  else if ((current > 0) && workingString[current - 1] != charI)                                  {                                      metaphoneData.Add(strK);                                  }                                    current += 2;                                  break;                              }                          }                            if (workingString[current + 1] == charN)                          {                              if ((current == 1) && IsVowel(workingString[0]) && !isSlavoGermanic)                              {                                  metaphoneData.Add(strKN' strN);                              }                              else                                  //not e.g. 'cagney'                                  if (!StringAt(workingString' (current + 2)' strEY)                                      && (workingString[current + 1] != charY) && !isSlavoGermanic)                                  {                                      metaphoneData.Add(strN' strKN);                                  }                                  else                                  {                                      metaphoneData.Add(strKN);                                  }                              current += 2;                              break;                          }                            //'tagliaro'                          if (StringAt(workingString' (current + 1)' strLI) && !isSlavoGermanic)                          {                              metaphoneData.Add(strKL' strL);                              current += 2;                              break;                          }                            //-ges-'-gep-'-gel-' -gie- at beginning                          if ((current == 0)                              && ((workingString[current + 1] == charY)                              || StringAt(workingString' (current + 1)' strES' strEP' strEB' strEL' strEY' strIB' strIL' strIN' strIE' strEI' strER)))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // -ger-'  -gy-                          if ((StringAt(workingString' (current + 1)' strER)                              || (workingString[current + 1] == charY))                              && !StringAt(workingString' 0' strDANGER' strRANGER' strMANGER)                              && !StringAt(workingString' (current - 1)' strE' strI)                              && !StringAt(workingString' (current - 1)' strRGY' strOGY))                          {                              metaphoneData.Add(strK' strJ);                              current += 2;                              break;                          }                            // italian e.g' 'biaggi'                          if (StringAt(workingString' (current + 1)' strE' strI' strY)                              || StringAt(workingString' (current - 1)' strAGGI' strOGGI))                          {                              //obvious germanic                              if ((StringAt(workingString' 0' strVANsp' strVONsp)                                  || StringAt(workingString' 0' strSCH))                                  || StringAt(workingString' (current + 1)' strET))                              {                                  metaphoneData.Add(strK);                              }                              else                                  //always soft if french ending                                  if (StringAt(workingString' (current + 1)' strIERsp))                                  {                                      metaphoneData.Add(strJ);                                  }                                  else                                  {                                      metaphoneData.Add(strJ' strK);                                  }                              current += 2;                              break;                          }                            if (workingString[current + 1] == charG)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case 'H':                          //only keep if first & before vowel or btw. 2 vowels                          if (((current == 0) || IsVowel(workingString[current - 1])) && IsVowel(workingString[current + 1]))                          {                              metaphoneData.Add(strH);                              current += 2;                          }                          else //also takes care of 'HH'                          {                              current += 1;                          }                          break;                        case 'J':                          //obvious spanish' 'jose'' 'san jacinto'                          if (StringAt(workingString' current' strJOSE) || StringAt(workingString' 0' strSANsp))                          {                              if (((current == 0) && (workingString[current + 4] == ' ')) || StringAt(workingString' 0' strSANsp))                              {                                  metaphoneData.Add(strH);                              }                              else                              {                                  metaphoneData.Add(strJ' strH);                              }                              current += 1;                              break;                          }                            if ((current == 0) && !StringAt(workingString' current' strJOSE))                          {                              metaphoneData.Add(strJ' strA); //Yankelovich/Jankelowicz                          }                          else                              //spanish pron. of e.g. 'bajador'                              if (current > 0                                   && IsVowel(workingString[current - 1])                                  && !isSlavoGermanic && ((workingString[current + 1] == charA)                                  || (workingString[current + 1] == charO)))                              {                                  metaphoneData.Add(strJ' strH);                              }                              else if (current == last)                              {                                  metaphoneData.Add(strJ' sp);                              }                              else if (!StringAt(workingString' (current + 1)' strL' strT' strK' strS' strN' strM' strB' strZ)                                  && !StringAt(workingString' (current - 1)' strS' strK' strL))                              {                                  metaphoneData.Add(strJ);                              }                            if (workingString[current + 1] == charJ) //it could happen!                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charK:                          if (workingString[current + 1] == charK)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charL:                          if (workingString[current + 1] == charL)                          {                              //spanish e.g. 'cabrillo'' 'gallegos'                              if (((current == (input.Length - 3))                                  && StringAt(workingString' (current - 1)' strILLO' strILLA' strALLE))                                  || ((StringAt(workingString' (last - 1)' strAS' strOS)                                  || StringAt(workingString' last' strA' strO))                                  && StringAt(workingString' (current - 1)' strALLE)))                              {                                  metaphoneData.Add(strL' sp);                                  current += 2;                                  break;                              }                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("L");                          break;                        case charM:                          if ((StringAt(workingString' (current - 1)' strUMB)                              && (((current + 1) == last)                              || StringAt(workingString' (current + 2)' strER))) //'dumb'''thumb'                              || (workingString[current + 1] == charM))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add("M");                          break;                        case charN:                          if (workingString[current + 1] == charN)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strN);                          break;                        case charOdash:                          current += 1;                          metaphoneData.Add(strN);                          break;                        case charP:                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strF);                              current += 2;                              break;                          }                            //also account for "campbell"' "raspberry"                          if (StringAt(workingString' (current + 1)' strP' strB))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strP);                          break;                        case charQ:                          if (workingString[current + 1] == charQ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strK);                          break;                        case charR:                          //french e.g. 'rogier'' but exclude 'hochmeier'                          if ((current == last) && !isSlavoGermanic                              && StringAt(workingString' (current - 2)' strIE)                              && !StringAt(workingString' (current - 4)' strME' strMA))                          {                              metaphoneData.Add(string.Empty' strR);                          }                          else                          {                              metaphoneData.Add(strR);                          }                            if (workingString[current + 1] == charR)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charS:                          //special cases 'island'' 'isle'' 'carlisle'' 'carlysle'                          if (StringAt(workingString' (current - 1)' strISL' strYSL))                          {                              current += 1;                              break;                          }                            //special case 'sugar-'                          if ((current == 0) && StringAt(workingString' current' strSUGAR))                          {                              metaphoneData.Add(strX' strS);                              current += 1;                              break;                          }                            if (StringAt(workingString' current' strSH))                          {                              //germanic                              if (StringAt(workingString' (current + 1)' strHEIM' strHOEK' strHOLM' strHOLZ))                              {                                  metaphoneData.Add(strS);                              }                              else                              {                                  metaphoneData.Add(strX);                              }                              current += 2;                              break;                          }                            //italian & armenian                          if (StringAt(workingString' current' strSIO' strSIA) || StringAt(workingString' current' strSIAN))                          {                              if (!isSlavoGermanic)                              {                                  metaphoneData.Add(strS' strX);                              }                              else                              {                                  metaphoneData.Add(strS);                              }                              current += 3;                              break;                          }                            //german & anglicisations' e.g. 'smith' match 'schmidt'' 'snider' match 'schneider'                          //also' -sz- in slavic language altho in hungarian it is pronounced 's'                          if (((current == 0)                              && StringAt(workingString' (current + 1)' strM' strN' strL' strW))                              || StringAt(workingString' (current + 1)' strZ))                          {                              metaphoneData.Add(strS' strX);                              if (StringAt(workingString' (current + 1)' strZ))                              {                                  current += 2;                              }                              else                              {                                  current += 1;                              }                              break;                          }                            if (StringAt(workingString' current' strSC))                          {                              //Schlesinger's rule                              if (workingString[current + 2] == charH)                              {                                  //dutch origin' e.g. 'school'' 'schooner'                                  if (StringAt(workingString' (current + 3)' strOO' strER' strEN' strUY' strED' strEM))                                  {                                      //'schermerhorn'' 'schenker'                                      if (StringAt(workingString' (current + 3)' strER' strEN))                                      {                                          metaphoneData.Add(strX' strSK);                                      }                                      else                                      {                                          metaphoneData.Add(strSK);                                      }                                      current += 3;                                      break;                                  }                                  else                                  {                                      if ((current == 0) && !IsVowel(workingString[3]) && (workingString[3] != charW))                                      {                                          metaphoneData.Add(strX' strS);                                      }                                      else                                      {                                          metaphoneData.Add(strX);                                      }                                      current += 3;                                      break;                                  }                              }                                if (StringAt(workingString' (current + 2)' strI' strE' strY))                              {                                  metaphoneData.Add(strS);                                  current += 3;                                  break;                              }                              //else                              metaphoneData.Add(strSK);                              current += 3;                              break;                          }                            //french e.g. 'resnais'' 'artois'                          if ((current == last) && StringAt(workingString' (current - 2)' strAI' strOI))                          {                              metaphoneData.Add(string.Empty' strS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (StringAt(workingString' (current + 1)' strS' strZ))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charT:                          if (StringAt(workingString' current' strTION))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTIA' strTCH))                          {                              metaphoneData.Add(strX);                              current += 3;                              break;                          }                            if (StringAt(workingString' current' strTH) || StringAt(workingString' current' strTTH))                          {                              //special case 'thomas'' 'thames' or germanic                              if (StringAt(workingString' (current + 2)' strOM' strAM)                                  || StringAt(workingString' 0' strVANsp' strVONsp) || StringAt(workingString' 0' strSCH))                              {                                  metaphoneData.Add(strT);                              }                              else                              {                                  metaphoneData.Add(strO' strT);                              }                              current += 2;                              break;                          }                            if (StringAt(workingString' (current + 1)' strT' strD))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strT);                          break;                        case charV:                          if (workingString[current + 1] == charV)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          metaphoneData.Add(strF);                          break;                        case charW:                          //can also be in middle of word                          if (StringAt(workingString' current' strWR))                          {                              metaphoneData.Add(strR);                              current += 2;                              break;                          }                            if ((current == 0) && (IsVowel(workingString[current + 1])                              || StringAt(workingString' current' strWH)))                          {                              //Wasserman should match Vasserman                              if (IsVowel(workingString[current + 1]))                              {                                  metaphoneData.Add(strA' strF);                              }                              else                              {                                  //need Uomo to match Womo                                  metaphoneData.Add(strA);                              }                          }                            //Arnow should match Arnoff                          if ((current == last && current > 0 && IsVowel(workingString[current - 1]))                              || StringAt(workingString' (current - 1)' strEWSKI' strEWSKY' strOWSKI' strOWSKY)                              || StringAt(workingString' 0' strSCH))                          {                              metaphoneData.Add(string.Empty' strF);                              current += 1;                              break;                          }                            //polish e.g. 'filipowicz'                          if (StringAt(workingString' current' strWICZ' strWITZ))                          {                              metaphoneData.Add(strTS' strFX);                              current += 4;                              break;                          }                            //else skip it                          current += 1;                          break;                        case charX:                          //french e.g. breaux                          if (!((current == last)                              && (StringAt(workingString' (current - 3)' strIAU' strEAU)                              || StringAt(workingString' (current - 2)' strAU' strOU))))                          {                              metaphoneData.Add(strKS);                          }                            if (StringAt(workingString' (current + 1)' strC' strX))                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        case charZ:                          //chinese pinyin e.g. 'zhao'                          if (workingString[current + 1] == charH)                          {                              metaphoneData.Add(strJ);                              current += 2;                              break;                          }                          else if (StringAt(workingString' (current + 1)' strZO' strZI' strZA)                              || (isSlavoGermanic && ((current > 0) && workingString[current - 1] != charT)))                          {                              metaphoneData.Add(strS' strTS);                          }                          else                          {                              metaphoneData.Add(strS);                          }                            if (workingString[current + 1] == charZ)                          {                              current += 2;                          }                          else                          {                              current += 1;                          }                          break;                        default:                          current += 1;                          break;                  }
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: (metaphoneData.PrimaryLength < 4) || (metaphoneData.SecondaryLength < 4)
Magic Number,DuoVia.FuzzyStrings,DoubleMetaphoneExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToDoubleMetaphone,The following statement contains a magic number: (metaphoneData.PrimaryLength < 4) || (metaphoneData.SecondaryLength < 4)
Magic Number,DuoVia.FuzzyStrings,MetaphoneData,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToString,The following statement contains a magic number: ret = ret.Substring(0' 4);
Magic Number,DuoVia.FuzzyStrings,MetaphoneData,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\DoubleMetaphoneExtensions.cs,ToString,The following statement contains a magic number: ret.Length > 4
Magic Number,DuoVia.FuzzyStrings,LevenshteinDistanceExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\LevenshteinDistanceExtensions.cs,LevenshteinDistance,The following statement contains a magic number: var trans = matrix[i - 2' j - 2] + 1;
Magic Number,DuoVia.FuzzyStrings,LevenshteinDistanceExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\LevenshteinDistanceExtensions.cs,LevenshteinDistance,The following statement contains a magic number: var trans = matrix[i - 2' j - 2] + 1;
Magic Number,DuoVia.FuzzyStrings,LevenshteinDistanceExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\LevenshteinDistanceExtensions.cs,LevenshteinDistance,The following statement contains a magic number: input[i - 2] != comparedTo[j - 1]
Magic Number,DuoVia.FuzzyStrings,LevenshteinDistanceExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\LevenshteinDistanceExtensions.cs,LevenshteinDistance,The following statement contains a magic number: input[i - 1] != comparedTo[j - 2]
Magic Number,DuoVia.FuzzyStrings,StringExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\StringExtensions.cs,FuzzyMatch,The following statement contains a magic number: return avgWeightedHighCoefficient < 0.999999 ? avgWeightedHighCoefficient : 0.999999;
Magic Number,DuoVia.FuzzyStrings,StringExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\StringExtensions.cs,FuzzyMatch,The following statement contains a magic number: return avgWeightedHighCoefficient < 0.999999 ? avgWeightedHighCoefficient : 0.999999;
Magic Number,DuoVia.FuzzyStrings,StringExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\StringExtensions.cs,CompositeCoefficient,The following statement contains a magic number: double levenCoefficient = 1.0 / (1.0 * (leven + 0.2));
Magic Number,DuoVia.FuzzyStrings,StringExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\StringExtensions.cs,CompositeCoefficient,The following statement contains a magic number: strAMp.Length == 4 && strBMp.Length == 4
Magic Number,DuoVia.FuzzyStrings,StringExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\StringExtensions.cs,CompositeCoefficient,The following statement contains a magic number: strAMp.Length == 4 && strBMp.Length == 4
Magic Number,DuoVia.FuzzyStrings,StringExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\StringExtensions.cs,CompositeCoefficient,The following statement contains a magic number: double mpCoefficient = matchCount == 0 ? 0.0 : matchCount / 4.0;
Magic Number,DuoVia.FuzzyStrings,StringExtensions,D:\research\architectureSmells\repos1\tylerjensen_duovia-fuzzystrings\src\DuoVia.FuzzyStrings\DuoVia.FuzzyStrings\StringExtensions.cs,CompositeCoefficient,The following statement contains a magic number: double avgCoefficent = (dice + lcs.Item2 + levenCoefficient + mpCoefficient) / 4.0;
