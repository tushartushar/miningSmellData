Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,Run,The length of the statement  "	// http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/web-development-best-practices#async " is 159.
Long Statement,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,Run,The length of the statement  "			// http://azure.microsoft.com/en-us/documentation/articles/cloud-services-dotnet-multi-tier-app-storage-5-worker-role-b/#addcode " is 128.
Long Statement,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,OnStart,The length of the statement  "	var storageAccount = CloudStorageAccount.Parse (RoleEnvironment.GetConfigurationSettingValue ("StorageConnectionString")); " is 122.
Magic Number,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,Run,The following statement contains a magic number: while (true) {  	try {  		// Retrieve a new message from the queue.  		// A production app could be more efficient and scalable and conserve  		// on transaction costs by using the GetMessages method to get  		// multiple queue messages at a time. See:  		// http://azure.microsoft.com/en-us/documentation/articles/cloud-services-dotnet-multi-tier-app-storage-5-worker-role-b/#addcode  		msg = this.imagesQueue.GetMessage ();  		if (msg != null) {  			ProcessQueueMessage (msg);  		}  		else {  			System.Threading.Thread.Sleep (1000);  		}  	}  	catch (StorageException e) {  		if (msg != null && msg.DequeueCount > 5) {  			this.imagesQueue.DeleteMessage (msg);  			Trace.TraceError ("Deleting poison queue item: '{0}'"' msg.AsString);  		}  		Trace.TraceError ("Exception in ContosoAdsWorker: '{0}'"' e.Message);  		System.Threading.Thread.Sleep (5000);  	}  }  
Magic Number,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,Run,The following statement contains a magic number: while (true) {  	try {  		// Retrieve a new message from the queue.  		// A production app could be more efficient and scalable and conserve  		// on transaction costs by using the GetMessages method to get  		// multiple queue messages at a time. See:  		// http://azure.microsoft.com/en-us/documentation/articles/cloud-services-dotnet-multi-tier-app-storage-5-worker-role-b/#addcode  		msg = this.imagesQueue.GetMessage ();  		if (msg != null) {  			ProcessQueueMessage (msg);  		}  		else {  			System.Threading.Thread.Sleep (1000);  		}  	}  	catch (StorageException e) {  		if (msg != null && msg.DequeueCount > 5) {  			this.imagesQueue.DeleteMessage (msg);  			Trace.TraceError ("Deleting poison queue item: '{0}'"' msg.AsString);  		}  		Trace.TraceError ("Exception in ContosoAdsWorker: '{0}'"' e.Message);  		System.Threading.Thread.Sleep (5000);  	}  }  
Magic Number,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,Run,The following statement contains a magic number: while (true) {  	try {  		// Retrieve a new message from the queue.  		// A production app could be more efficient and scalable and conserve  		// on transaction costs by using the GetMessages method to get  		// multiple queue messages at a time. See:  		// http://azure.microsoft.com/en-us/documentation/articles/cloud-services-dotnet-multi-tier-app-storage-5-worker-role-b/#addcode  		msg = this.imagesQueue.GetMessage ();  		if (msg != null) {  			ProcessQueueMessage (msg);  		}  		else {  			System.Threading.Thread.Sleep (1000);  		}  	}  	catch (StorageException e) {  		if (msg != null && msg.DequeueCount > 5) {  			this.imagesQueue.DeleteMessage (msg);  			Trace.TraceError ("Deleting poison queue item: '{0}'"' msg.AsString);  		}  		Trace.TraceError ("Exception in ContosoAdsWorker: '{0}'"' e.Message);  		System.Threading.Thread.Sleep (5000);  	}  }  
Magic Number,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,Run,The following statement contains a magic number: try {  	// Retrieve a new message from the queue.  	// A production app could be more efficient and scalable and conserve  	// on transaction costs by using the GetMessages method to get  	// multiple queue messages at a time. See:  	// http://azure.microsoft.com/en-us/documentation/articles/cloud-services-dotnet-multi-tier-app-storage-5-worker-role-b/#addcode  	msg = this.imagesQueue.GetMessage ();  	if (msg != null) {  		ProcessQueueMessage (msg);  	}  	else {  		System.Threading.Thread.Sleep (1000);  	}  }  catch (StorageException e) {  	if (msg != null && msg.DequeueCount > 5) {  		this.imagesQueue.DeleteMessage (msg);  		Trace.TraceError ("Deleting poison queue item: '{0}'"' msg.AsString);  	}  	Trace.TraceError ("Exception in ContosoAdsWorker: '{0}'"' e.Message);  	System.Threading.Thread.Sleep (5000);  }  
Magic Number,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,Run,The following statement contains a magic number: try {  	// Retrieve a new message from the queue.  	// A production app could be more efficient and scalable and conserve  	// on transaction costs by using the GetMessages method to get  	// multiple queue messages at a time. See:  	// http://azure.microsoft.com/en-us/documentation/articles/cloud-services-dotnet-multi-tier-app-storage-5-worker-role-b/#addcode  	msg = this.imagesQueue.GetMessage ();  	if (msg != null) {  		ProcessQueueMessage (msg);  	}  	else {  		System.Threading.Thread.Sleep (1000);  	}  }  catch (StorageException e) {  	if (msg != null && msg.DequeueCount > 5) {  		this.imagesQueue.DeleteMessage (msg);  		Trace.TraceError ("Deleting poison queue item: '{0}'"' msg.AsString);  	}  	Trace.TraceError ("Exception in ContosoAdsWorker: '{0}'"' e.Message);  	System.Threading.Thread.Sleep (5000);  }  
Magic Number,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,Run,The following statement contains a magic number: try {  	// Retrieve a new message from the queue.  	// A production app could be more efficient and scalable and conserve  	// on transaction costs by using the GetMessages method to get  	// multiple queue messages at a time. See:  	// http://azure.microsoft.com/en-us/documentation/articles/cloud-services-dotnet-multi-tier-app-storage-5-worker-role-b/#addcode  	msg = this.imagesQueue.GetMessage ();  	if (msg != null) {  		ProcessQueueMessage (msg);  	}  	else {  		System.Threading.Thread.Sleep (1000);  	}  }  catch (StorageException e) {  	if (msg != null && msg.DequeueCount > 5) {  		this.imagesQueue.DeleteMessage (msg);  		Trace.TraceError ("Deleting poison queue item: '{0}'"' msg.AsString);  	}  	Trace.TraceError ("Exception in ContosoAdsWorker: '{0}'"' e.Message);  	System.Threading.Thread.Sleep (5000);  }  
Magic Number,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,Run,The following statement contains a magic number: if (msg != null) {  	ProcessQueueMessage (msg);  }  else {  	System.Threading.Thread.Sleep (1000);  }  
Magic Number,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,Run,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
Magic Number,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,Run,The following statement contains a magic number: if (msg != null && msg.DequeueCount > 5) {  	this.imagesQueue.DeleteMessage (msg);  	Trace.TraceError ("Deleting poison queue item: '{0}'"' msg.AsString);  }  
Magic Number,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,Run,The following statement contains a magic number: System.Threading.Thread.Sleep (5000);  
Magic Number,ContosoAdsWorker,WorkerRole,C:\repos\ranjithrs_azuresample\ContosoAdsWorker\WorkerRole.cs,OnStart,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 12;  
