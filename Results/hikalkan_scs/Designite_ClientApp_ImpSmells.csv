Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ClientApp,DuplexClientDefaultProtocol,F:\newReposMay17\hikalkan_scs\performance-tests\Messaging\ClientApp\DuplexClientDefaultProtocol.cs,client_MessageReceived,The length of the statement  "		Console.WriteLine (Consts.MessageCount + " message is received in " + _stopwatch.Elapsed.TotalMilliseconds.ToString ("0.000") + " ms."); " is 136.
Long Statement,ClientApp,DuplexClientCustomProtocol,F:\newReposMay17\hikalkan_scs\performance-tests\Messaging\ClientApp\DuplexClientCustomProtocol.cs,client_MessageReceived,The length of the statement  "		Console.WriteLine (Consts.MessageCount + " message is received in " + _stopwatch.Elapsed.TotalMilliseconds.ToString ("0.000") + " ms."); " is 136.
Magic Number,ClientApp,DuplexClientCustomProtocolSynchronized,F:\newReposMay17\hikalkan_scs\performance-tests\Messaging\ClientApp\DuplexClientCustomProtocolSynchronized.cs,Run,The following statement contains a magic number: using (var client = ScsClientFactory.CreateClient (new ScsTcpEndPoint ("127.0.0.1"' 10033))) {  	client.WireProtocol = new MyWireProtocol ();  	using (var synchronizedMessenger = new SynchronizedMessenger<IScsClient> (client)) {  		synchronizedMessenger.Start ();  		client.Connect ();  		for (var i = 0; i < Consts.MessageCount; i++) {  			synchronizedMessenger.SendMessage (new ScsTextMessage ("Hello from client!"));  			var reply = synchronizedMessenger.ReceiveMessage<ScsTextMessage> ();  		}  	}  	Console.WriteLine ("Press enter to disconnect from server");  	Console.ReadLine ();  }  
Magic Number,ClientApp,DuplexClientDefaultProtocolSynchronized,F:\newReposMay17\hikalkan_scs\performance-tests\Messaging\ClientApp\DuplexClientDefaultProtocolSynchronized.cs,Run,The following statement contains a magic number: using (var client = ScsClientFactory.CreateClient (new ScsTcpEndPoint ("127.0.0.1"' 10033))) {  	using (var synchronizedMessenger = new SynchronizedMessenger<IScsClient> (client)) {  		synchronizedMessenger.Start ();  		client.Connect ();  		for (var i = 0; i < Consts.MessageCount; i++) {  			synchronizedMessenger.SendMessage (new ScsTextMessage ("Hello from client!"));  			var reply = synchronizedMessenger.ReceiveMessage<ScsTextMessage> ();  		}  	}  	Console.WriteLine ("Press enter to disconnect from server");  	Console.ReadLine ();  }  
Magic Number,ClientApp,DuplexClientDefaultProtocol,F:\newReposMay17\hikalkan_scs\performance-tests\Messaging\ClientApp\DuplexClientDefaultProtocol.cs,Run,The following statement contains a magic number: using (var client = ScsClientFactory.CreateClient (new ScsTcpEndPoint ("127.0.0.1"' 10033))) {  	client.MessageReceived += client_MessageReceived;  	client.Connect ();  	for (var i = 0; i < Consts.MessageCount; i++) {  		client.SendMessage (new ScsTextMessage ("Hello from client!"));  	}  	Console.WriteLine ("Press enter to disconnect from server");  	Console.ReadLine ();  }  
Magic Number,ClientApp,OneWayClientDefaultProtocol,F:\newReposMay17\hikalkan_scs\performance-tests\Messaging\ClientApp\OneWayClientDefaultProtocol.cs,Run,The following statement contains a magic number: using (var client = ScsClientFactory.CreateClient (new ScsTcpEndPoint ("127.0.0.1"' 10033))) {  	client.Connect ();  	for (var i = 0; i < Consts.MessageCount; i++) {  		client.SendMessage (new ScsTextMessage ("Hello from client!"));  	}  	Console.WriteLine ("Press enter to disconnect from server");  	Console.ReadLine ();  }  
Magic Number,ClientApp,DuplexClientCustomProtocol,F:\newReposMay17\hikalkan_scs\performance-tests\Messaging\ClientApp\DuplexClientCustomProtocol.cs,Run,The following statement contains a magic number: using (var client = ScsClientFactory.CreateClient (new ScsTcpEndPoint ("127.0.0.1"' 10033))) {  	client.WireProtocol = new MyWireProtocol ();  	//Set custom wire protocol!  	client.MessageReceived += client_MessageReceived;  	client.Connect ();  	for (var i = 0; i < Consts.MessageCount; i++) {  		client.SendMessage (new ScsTextMessage ("Hello from client!"));  	}  	Console.WriteLine ("Press enter to disconnect from server");  	Console.ReadLine ();  }  
Magic Number,ClientApp,OneWayClientCustomProtocol,F:\newReposMay17\hikalkan_scs\performance-tests\Messaging\ClientApp\OneWayClientCustomProtocol.cs,Run,The following statement contains a magic number: using (var client = ScsClientFactory.CreateClient (new ScsTcpEndPoint ("127.0.0.1"' 10033))) {  	client.WireProtocol = new MyWireProtocol ();  	client.Connect ();  	for (var i = 0; i < Consts.MessageCount; i++) {  		client.SendMessage (new ScsTextMessage ("Hello from client!"));  	}  	Console.WriteLine ("Press enter to disconnect from server");  	Console.ReadLine ();  }  
