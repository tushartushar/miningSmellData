Implementation smell,Namespace,Class,File,Method,Description
Long Statement,CalculatorClient,Program,C:\repos\hikalkan_scs\performance-tests\RMI\CalculatorClient\Program.cs,Main,The length of the statement  "                Console.WriteLine(Consts.MethodCallCount + " remote method call made in " + stopwatch.Elapsed.TotalMilliseconds.ToString("0.000") + " ms."); " is 140.
Magic Number,CalculatorClient,Program,C:\repos\hikalkan_scs\performance-tests\RMI\CalculatorClient\Program.cs,Main,The following statement contains a magic number: using (var client = ScsServiceClientBuilder.CreateClient<ICalculatorService>(new ScsTcpEndPoint("127.0.0.1"' 10083)))              {                  client.Connect();                    var stopwatch = Stopwatch.StartNew();                  for (var i = 0; i < Consts.MethodCallCount; i++)                  {                      var division = client.ServiceProxy.Add(2' 3);                  }                    stopwatch.Stop();                  Console.WriteLine(Consts.MethodCallCount + " remote method call made in " + stopwatch.Elapsed.TotalMilliseconds.ToString("0.000") + " ms.");              }
Magic Number,CalculatorClient,Program,C:\repos\hikalkan_scs\performance-tests\RMI\CalculatorClient\Program.cs,Main,The following statement contains a magic number: using (var client = ScsServiceClientBuilder.CreateClient<ICalculatorService>(new ScsTcpEndPoint("127.0.0.1"' 10083)))              {                  client.Connect();                    var stopwatch = Stopwatch.StartNew();                  for (var i = 0; i < Consts.MethodCallCount; i++)                  {                      var division = client.ServiceProxy.Add(2' 3);                  }                    stopwatch.Stop();                  Console.WriteLine(Consts.MethodCallCount + " remote method call made in " + stopwatch.Elapsed.TotalMilliseconds.ToString("0.000") + " ms.");              }
Magic Number,CalculatorClient,Program,C:\repos\hikalkan_scs\performance-tests\RMI\CalculatorClient\Program.cs,Main,The following statement contains a magic number: using (var client = ScsServiceClientBuilder.CreateClient<ICalculatorService>(new ScsTcpEndPoint("127.0.0.1"' 10083)))              {                  client.Connect();                    var stopwatch = Stopwatch.StartNew();                  for (var i = 0; i < Consts.MethodCallCount; i++)                  {                      var division = client.ServiceProxy.Add(2' 3);                  }                    stopwatch.Stop();                  Console.WriteLine(Consts.MethodCallCount + " remote method call made in " + stopwatch.Elapsed.TotalMilliseconds.ToString("0.000") + " ms.");              }
