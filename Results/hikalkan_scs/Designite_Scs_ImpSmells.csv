Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Hik.Communication.Scs.Client,ScsClientBase,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Client\ScsClientBase.cs,,The length of the parameter DefaultConnectionAttemptTimeout is 31.
Long Statement,Hik.Communication.ScsServices.Client,ScsServiceClient<T>,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\ScsServices\Client\ScsServiceClient.cs,RequestReplyMessenger_MessageReceived,The length of the statement  "                SendInvokeResponse(invokeMessage' null' new ScsRemoteException("Client does not wait for method invocations by server.")); " is 122.
Long Statement,Hik.Communication.ScsServices.Service,ScsServiceApplication,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\ScsServices\Service\ScsServiceApplication.cs,Client_MessageReceived,The length of the statement  "                    SendInvokeResponse(requestReplyMessenger' invokeMessage' null' new ScsRemoteException("There is no service with name '" + invokeMessage.ServiceClassName + "'")); " is 161.
Long Statement,Hik.Communication.ScsServices.Service,ScsServiceApplication,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\ScsServices\Service\ScsServiceApplication.cs,Client_MessageReceived,The length of the statement  "                    SendInvokeResponse(requestReplyMessenger' invokeMessage' null' new ScsRemoteException(innerEx.Message + Environment.NewLine + "Service Version: " + serviceObject.ServiceAttribute.Version' innerEx)); " is 198.
Long Statement,Hik.Communication.ScsServices.Service,ScsServiceApplication,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\ScsServices\Service\ScsServiceApplication.cs,Client_MessageReceived,The length of the statement  "                    SendInvokeResponse(requestReplyMessenger' invokeMessage' null' new ScsRemoteException(ex.Message + Environment.NewLine + "Service Version: " + serviceObject.ServiceAttribute.Version' ex)); " is 188.
Long Statement,Hik.Communication.ScsServices.Service,ScsServiceApplication,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\ScsServices\Service\ScsServiceApplication.cs,Client_MessageReceived,The length of the statement  "                SendInvokeResponse(requestReplyMessenger' invokeMessage' null' new ScsRemoteException("An error occured during remote service method call."' ex)); " is 146.
Long Statement,Hik.Communication.Scs.Client,ScsClientBase,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Client\ScsClientBase.cs,PingTimer_Elapsed,The length of the statement  "                if (_communicationChannel.LastReceivedMessageTime > lastMinute || _communicationChannel.LastSentMessageTime > lastMinute) " is 121.
Long Statement,Hik.Communication.Scs.Communication.Channels.Tcp,TcpCommunicationChannel,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Channels\Tcp\TcpCommunicationChannel.cs,SendMessageInternal,The length of the statement  "                        throw new CommunicationException("Message could not be sent via TCP socket. Only " + totalSent + " bytes of " + messageBytes.Length + " bytes are sent."); " is 154.
Long Statement,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,GetBytes,The length of the statement  "                throw new CommunicationException("Message is too big (" + messageLength + " bytes). Max allowed length is " + MaxMessageLength + " bytes."); " is 140.
Long Statement,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,DeserializeMessage,The length of the statement  "                    Reset(); // reset the received memory stream before the exception is rethrown - otherwise the same erroneous message is received again and again " is 144.
Long Statement,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The length of the statement  "                throw new Exception("Message is too big (" + messageLength + " bytes). Max allowed length is " + MaxMessageLength + " bytes."); " is 127.
Empty Catch Block,Hik.Threading,Timer,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Threading\Timer.cs,TimerCallBack,The method has an empty catch block.
Magic Number,Hik.Communication.Scs.Client,ClientReConnecter,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Client\ClientReConnecter.cs,ClientReConnecter,The following statement contains a magic number: _reconnectTimer = new Timer(20000);
Magic Number,Hik.Communication.Scs.Client,ScsClientBase,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Client\ScsClientBase.cs,ScsClientBase,The following statement contains a magic number: _pingTimer = new Timer(30000);
Magic Number,Hik.Communication.Scs.Communication.EndPoints,ScsEndPoint,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\EndPoints\ScsEndPoint.cs,CreateEndPoint,The following statement contains a magic number: splittedEndPoint.Length != 2
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,GetBytes,The following statement contains a magic number: var bytes = new byte[messageLength + 4];
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,GetBytes,The following statement contains a magic number: Array.Copy(serializedMessage' 0' bytes' 4' messageLength);
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: _receiveMemoryStream.Length < 4
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: _receiveMemoryStream.Length == 4
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: _receiveMemoryStream.Write(bytes' 4' bytes.Length - 4);
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: _receiveMemoryStream.Write(bytes' 4' bytes.Length - 4);
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: _receiveMemoryStream.Length < (4 + messageLength)
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: var remainingBytes = ReadByteArray(_receiveMemoryStream' (int)(_receiveMemoryStream.Length - (4 + messageLength)));
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: return (remainingBytes.Length > 4);
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,WriteInt32,The following statement contains a magic number: buffer[startIndex] = (byte)((number >> 24) & 0xFF);
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,WriteInt32,The following statement contains a magic number: buffer[startIndex + 1] = (byte)((number >> 16) & 0xFF);
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,WriteInt32,The following statement contains a magic number: buffer[startIndex + 2] = (byte)((number >> 8) & 0xFF);
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,WriteInt32,The following statement contains a magic number: buffer[startIndex + 2] = (byte)((number >> 8) & 0xFF);
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,WriteInt32,The following statement contains a magic number: buffer[startIndex + 3] = (byte)((number) & 0xFF);
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadInt32,The following statement contains a magic number: var buffer = ReadByteArray(stream' 4);
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadInt32,The following statement contains a magic number: return ((buffer[0] << 24) |                      (buffer[1] << 16) |                      (buffer[2] << 8) |                      (buffer[3])                     );
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadInt32,The following statement contains a magic number: return ((buffer[0] << 24) |                      (buffer[1] << 16) |                      (buffer[2] << 8) |                      (buffer[3])                     );
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadInt32,The following statement contains a magic number: return ((buffer[0] << 24) |                      (buffer[1] << 16) |                      (buffer[2] << 8) |                      (buffer[3])                     );
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadInt32,The following statement contains a magic number: return ((buffer[0] << 24) |                      (buffer[1] << 16) |                      (buffer[2] << 8) |                      (buffer[3])                     );
Magic Number,Hik.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadInt32,The following statement contains a magic number: return ((buffer[0] << 24) |                      (buffer[1] << 16) |                      (buffer[2] << 8) |                      (buffer[3])                     );
Missing Default,Hik.Communication.Scs.Communication.Messengers,RequestReplyMessenger<T>,D:\research\architectureSmells\repos\hikalkan_scs\src\Scs\Communication\Scs\Communication\Messengers\RequestReplyMessenger.cs,SendMessageAndWaitForResponse,The following switch statement is missing a default case: switch (waitingMessage.State)                  {                      case WaitingMessageStates.WaitingForResponse:                          throw new TimeoutException("Timeout occured. Can not received response.");                      case WaitingMessageStates.Cancelled:                          throw new CommunicationException("Disconnected before response received.");                  }
