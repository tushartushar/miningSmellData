Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,Cyclomatic complexity of the method is 9
Complex Method,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AlwaysTimer_Tick,Cyclomatic complexity of the method is 8
Complex Method,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,Cyclomatic complexity of the method is 9
Complex Method,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,Cyclomatic complexity of the method is 8
Complex Method,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,Cyclomatic complexity of the method is 9
Complex Method,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadSpreadsheetToolStripMenuItem_Click,Cyclomatic complexity of the method is 13
Long Statement,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The length of the statement  "		TextBox toremove = ModifierContainer.Controls.Find (clickedLabel.Name.Replace ("Label"' "")' true).FirstOrDefault () as TextBox; " is 128.
Long Statement,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The length of the statement  "		for (int i = ModifierContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards). " is 131.
Long Statement,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,ModifyDataButton_Click_1,The length of the statement  "		this.OwnerForm.ModifyData (Convert.ToInt32 (modifierparts [0])' Convert.ToInt32 (modifierparts [1])' Convert.ToDouble (modifierparts [2])); " is 139.
Long Statement,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,LoadModifiers_Click_1,The length of the statement  "		for (int i = ModifierContainer.Controls.Count - 1; i >= 0; i--)//Remove all labels and textboxes (iterates through them backwards). " is 131.
Long Statement,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,SaveModifiers_Click,The length of the statement  "	System.IO.File.WriteAllLines (AppDomain.CurrentDomain.BaseDirectory + this.Text.Replace (" Settings"' "") + ".modifiers"' datatosave); " is 134.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,PredictFurtherData,The length of the statement  "            //http://www.smokycogs.com/blog/maths-algorithms-in-c-sharp-linear-least-squares-fit/ (Comment added 1:13 PM 11/23/2014)" is 120.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,PredictFurtherData,The length of the statement  "            //http://stackoverflow.com/questions/14523378/calculating-exponential-growth-equation-from-data-points-c-sharp (Comment added 6:27 AM 11/26/2014)" is 145.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,PredictFurtherData,The length of the statement  "            //http://numerics.mathdotnet.com/docs/Regression.html (Comment added 6:28 AM 11/26/2014) [Note: THIS MIGHT BE THE MOST USEFUL.]" is 127.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,PredictFurtherData,The length of the statement  "            //https://answers.yahoo.com/question/index?qid=20071210225406AAIOUlZ (For if I really wish to make this by hand.) (Comment added 6:29 AM 11/26/2014)" is 148.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,PredictFurtherData,The length of the statement  "            */DataChart.DataManipulator.FinancialFormula (FinancialFormula.Forecasting' "Exponential'20'false'false"' "Series1:Y"' "Series1:Y"); " is 132.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,PredictFurtherData,The length of the statement  "	//For manual forecasting: http://forums.codeguru.com/showthread.php?461020-Forecast-function and http://support.microsoft.com/kb/828236 " is 135.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The length of the statement  "		for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Remove all labels and textboxes (iterates through them backwards). " is 128.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,saveImageToolStripMenuItem_Click,The length of the statement  "	DataChart.SaveImage (AppDomain.CurrentDomain.BaseDirectory + this.Text + ".png"' System.Drawing.Imaging.ImageFormat.Png); " is 121.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The length of the statement  "							TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox; " is 121.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The length of the statement  "						DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text; " is 158.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The length of the statement  "		TextBox toremove = InputContainer.Controls.Find (clickedLabel.Name.Replace ("Label"' "")' true).FirstOrDefault () as TextBox; " is 125.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The length of the statement  "		for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards). " is 128.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,savePredictToolStripMenuItem_Click,The length of the statement  "		datatosave [(int)p] = "PredictPoint" + p + "_" + Convert.ToString (p) + "_" + DataChart.Series [0].Points.ElementAt (p).YValues [0]; " is 132.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,generateStatsToolStripMenuItem_Click,The length of the statement  "		sumy2 = sumy2 + (DataChart.Series [0].Points.ElementAt (x).YValues [0] * DataChart.Series [0].Points.ElementAt (x).YValues [0]); " is 128.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,generateStatsToolStripMenuItem_Click,The length of the statement  "			averagerate += ((DataChart.Series [0].Points.ElementAt (x + 1).YValues [0] - DataChart.Series [0].Points.ElementAt (x).YValues [0]) / ((x + 1) - (x))); " is 151.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,generateStatsToolStripMenuItem_Click,The length of the statement  "	double r = (n * sumxy - (sumx * sumy)) / (Math.Sqrt ((n * sumx2) - ((sumx) * (sumx))) * Math.Sqrt ((n * sumy2) - ((sumy) * (sumy)))); " is 133.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,generateStatsToolStripMenuItem_Click,The length of the statement  "	datatosave [5] = "Rate between the first and final points: " + Convert.ToString ((DataChart.Series [0].Points.ElementAt (DataChart.Series [0].Points.Count - 1).YValues [0] - DataChart.Series [0].Points.ElementAt (0).YValues [0]) / (DataChart.Series [0].Points.Count - 1)); " is 272.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,expToolStripMenuItem_Click,The length of the statement  "	DataChart.DataManipulator.FinancialFormula (FinancialFormula.Forecasting' "Exponential'" + globalvariables.ToPredict + "'false'false"' DataChart.Series [0].Name + ":Y"' DataChart.Series [0].Name + ":Y"); " is 203.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,quadraticToolStripMenuItem_Click,The length of the statement  "	DataChart.DataManipulator.FinancialFormula (FinancialFormula.Forecasting' "3'" + globalvariables.ToPredict + "'false'false"' DataChart.Series [0].Name + ":Y"' DataChart.Series [0].Name + ":Y"); " is 193.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,quadraticToolStripMenuItem_Click,The length of the statement  "	double y1 = DataChart.Series [0].Points.ElementAt (0).YValues [0] - DataChart.Series [0].Points.ElementAt (1).YValues [0]; " is 122.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,quadraticToolStripMenuItem_Click,The length of the statement  "	double y2 = DataChart.Series [0].Points.ElementAt (2).YValues [0] - DataChart.Series [0].Points.ElementAt (1).YValues [0]; " is 122.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,cubicToolStripMenuItem_Click,The length of the statement  "	DataChart.DataManipulator.FinancialFormula (FinancialFormula.Forecasting' "4'" + globalvariables.ToPredict + "'false'false"' DataChart.Series [0].Name + ":Y"' DataChart.Series [0].Name + ":Y"); " is 193.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,cubicToolStripMenuItem_Click,The length of the statement  "	//http://math.stackexchange.com/questions/168855/given-four-points-on-a-cubic-function-curve-how-can-i-find-the-curves-function " is 127.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,cubicToolStripMenuItem_Click,The length of the statement  "	double y1 = DataChart.Series [0].Points.ElementAt (2).YValues [0] - DataChart.Series [0].Points.ElementAt (1).YValues [0]; " is 122.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,cubicToolStripMenuItem_Click,The length of the statement  "	double y2 = DataChart.Series [0].Points.ElementAt (3).YValues [0] - DataChart.Series [0].Points.ElementAt (2).YValues [0]; " is 122.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,cubicToolStripMenuItem_Click,The length of the statement  "	double y3 = DataChart.Series [0].Points.ElementAt (4).YValues [0] - DataChart.Series [0].Points.ElementAt (3).YValues [0]; " is 122.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,cubicToolStripMenuItem_Click,The length of the statement  "	Function.Text = "Function: " + Math.Round (a' 10) + "x^3 + " + Math.Round (b' 10) + "x^2 + " + Math.Round (c' 10) + "x + " + Math.Round (d' 10); " is 144.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,linearToolStripMenuItem_Click,The length of the statement  "	DataChart.DataManipulator.FinancialFormula (FinancialFormula.Forecasting' "2'" + globalvariables.ToPredict + "'false'false"' DataChart.Series [0].Name + ":Y"' DataChart.Series [0].Name + ":Y"); " is 193.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadSpreadsheetToolStripMenuItem_Click,The length of the statement  "		for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Remove all labels and textboxes (iterates through them backwards). " is 128.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,Error_MouseEnter,The length of the statement  "	errorhover.Show ("This is the difference between the original y-value at 0 and the current one."' this' Error.Location.X' Error.Location.Y); " is 140.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,ModifyData,The length of the statement  "			DataChart.Series [0].Points.ElementAt (x).YValues [0] = DataChart.Series [0].Points.ElementAt (x).YValues [0] + (DataChart.Series [0].Points.ElementAt (x).YValues [0] * mod); " is 174.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,ModifyData,The length of the statement  "			if (x <= inputcount && DataChart.Series [0].Points.Count <= inputcount)//If we are using the original chart' modify the inputs to match the updated points. " is 155.
Long Statement,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,ModifyData,The length of the statement  "				settext.Text = Convert.ToString (DataChart.Series [0].Points.ElementAt (x).YValues [0] + (DataChart.Series [0].Points.ElementAt (x).YValues [0] * mod)); " is 152.
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,SettingsForm_Load,The following statement contains a magic number: ChartSettings.BackColor = Color.FromArgb (65' 140' 240);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,SettingsForm_Load,The following statement contains a magic number: ChartSettings.BackColor = Color.FromArgb (65' 140' 240);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,SettingsForm_Load,The following statement contains a magic number: ChartSettings.BackColor = Color.FromArgb (65' 140' 240);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,SettingsForm_Load,The following statement contains a magic number: ModifierContainer.BackColor = Color.FromArgb (65' 140' 240);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,SettingsForm_Load,The following statement contains a magic number: ModifierContainer.BackColor = Color.FromArgb (65' 140' 240);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,SettingsForm_Load,The following statement contains a magic number: ModifierContainer.BackColor = Color.FromArgb (65' 140' 240);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (name != "") {  	if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		NewModLbl.MouseDoubleClick += label_Click;  		ModifierContainer.Controls.Add (NewModLbl);  	}  	else//If there are no modifiers at the moment.  	 {  		TextBox NewMod = new TextBox ();  		NewMod.Name = "Modifier" + (modifierscount + 1);  		NewMod.Size = new System.Drawing.Size (181' 20);  		NewMod.Location = new System.Drawing.Point (14' 26);  		NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		ModifierContainer.Controls.Add (NewMod);  		Label NewModLbl = new Label ();  		NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewModLbl.Text = name + ":";  		else  			NewModLbl.Text = name;  		NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  		NewModLbl.MouseDoubleClick += label_Click;  		NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  		ModifierContainer.Controls.Add (NewModLbl);  	}  	ModifierToAdd.Text = "";  	//Clears the ModifierToAdd textbox text.  	modifierscount += 1;  	//Adds 1 to the number of modifiers.  }  else  	ModifierToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: if (ModifierContainer.Controls.Count > 0)//If there is at least one modifier.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	NewModLbl.MouseDoubleClick += label_Click;  	ModifierContainer.Controls.Add (NewModLbl);  }  else//If there are no modifiers at the moment.   {  	TextBox NewMod = new TextBox ();  	NewMod.Name = "Modifier" + (modifierscount + 1);  	NewMod.Size = new System.Drawing.Size (181' 20);  	NewMod.Location = new System.Drawing.Point (14' 26);  	NewMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	ModifierContainer.Controls.Add (NewMod);  	Label NewModLbl = new Label ();  	NewModLbl.Name = "Modifier" + (modifierscount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewModLbl.Text = name + ":";  	else  		NewModLbl.Text = name;  	NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  	NewModLbl.MouseDoubleClick += label_Click;  	NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  	ModifierContainer.Controls.Add (NewModLbl);  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewMod.Size = new System.Drawing.Size (181' 20);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewMod.Size = new System.Drawing.Size (181' 20);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewMod.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewMod.Size = new System.Drawing.Size (181' 20);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewMod.Size = new System.Drawing.Size (181' 20);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewMod.Location = new System.Drawing.Point (14' 26);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewMod.Location = new System.Drawing.Point (14' 26);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewModLbl.Location = new System.Drawing.Point (11' NewMod.Location.Y - 20);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,AddModifier,The following statement contains a magic number: NewModLbl.ForeColor = Color.FromArgb (255' 255' 255);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Left) {  	if (clickedLabel != null) {  		string currenttext = clickedLabel.Text;  		//Set a string variable to the current text of the clicked label  		if (ModifierToAdd.Text != "") {  			if (currenttext.Substring (currenttext.Length) != ":")  				clickedLabel.Text = ModifierToAdd.Text + ":";  			else  				clickedLabel.Text = ModifierToAdd.Text;  			//If there's a colon' just set the text to what's in the InputToAdd textbox  			ModifierToAdd.Text = "";  			//Empty the textbox  		}  	}  }  else if (e.Button == System.Windows.Forms.MouseButtons.Middle) {  	TextBox toremove = ModifierContainer.Controls.Find (clickedLabel.Name.Replace ("Label"' "")' true).FirstOrDefault () as TextBox;  	ModifierContainer.Controls.Remove (toremove);  	//Remove the textbox that goes with the label.  	ModifierContainer.Controls.Remove (clickedLabel);  	//Then remove the label itself.  	modifierscount -= 1;  	//Subtract one from the inputcount since there's one less input.  	for (int i = ModifierContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards).  	 {  		if (ModifierContainer.Controls [i] is Label)  			ModifierContainer.Controls [i].Name = "Input" + i / 2 + "Label";  		else if (ModifierContainer.Controls [i] is TextBox)  			ModifierContainer.Controls [i].Name = "Input" + i / 2;  	}  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Left) {  	if (clickedLabel != null) {  		string currenttext = clickedLabel.Text;  		//Set a string variable to the current text of the clicked label  		if (ModifierToAdd.Text != "") {  			if (currenttext.Substring (currenttext.Length) != ":")  				clickedLabel.Text = ModifierToAdd.Text + ":";  			else  				clickedLabel.Text = ModifierToAdd.Text;  			//If there's a colon' just set the text to what's in the InputToAdd textbox  			ModifierToAdd.Text = "";  			//Empty the textbox  		}  	}  }  else if (e.Button == System.Windows.Forms.MouseButtons.Middle) {  	TextBox toremove = ModifierContainer.Controls.Find (clickedLabel.Name.Replace ("Label"' "")' true).FirstOrDefault () as TextBox;  	ModifierContainer.Controls.Remove (toremove);  	//Remove the textbox that goes with the label.  	ModifierContainer.Controls.Remove (clickedLabel);  	//Then remove the label itself.  	modifierscount -= 1;  	//Subtract one from the inputcount since there's one less input.  	for (int i = ModifierContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards).  	 {  		if (ModifierContainer.Controls [i] is Label)  			ModifierContainer.Controls [i].Name = "Input" + i / 2 + "Label";  		else if (ModifierContainer.Controls [i] is TextBox)  			ModifierContainer.Controls [i].Name = "Input" + i / 2;  	}  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Middle) {  	TextBox toremove = ModifierContainer.Controls.Find (clickedLabel.Name.Replace ("Label"' "")' true).FirstOrDefault () as TextBox;  	ModifierContainer.Controls.Remove (toremove);  	//Remove the textbox that goes with the label.  	ModifierContainer.Controls.Remove (clickedLabel);  	//Then remove the label itself.  	modifierscount -= 1;  	//Subtract one from the inputcount since there's one less input.  	for (int i = ModifierContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards).  	 {  		if (ModifierContainer.Controls [i] is Label)  			ModifierContainer.Controls [i].Name = "Input" + i / 2 + "Label";  		else if (ModifierContainer.Controls [i] is TextBox)  			ModifierContainer.Controls [i].Name = "Input" + i / 2;  	}  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Middle) {  	TextBox toremove = ModifierContainer.Controls.Find (clickedLabel.Name.Replace ("Label"' "")' true).FirstOrDefault () as TextBox;  	ModifierContainer.Controls.Remove (toremove);  	//Remove the textbox that goes with the label.  	ModifierContainer.Controls.Remove (clickedLabel);  	//Then remove the label itself.  	modifierscount -= 1;  	//Subtract one from the inputcount since there's one less input.  	for (int i = ModifierContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards).  	 {  		if (ModifierContainer.Controls [i] is Label)  			ModifierContainer.Controls [i].Name = "Input" + i / 2 + "Label";  		else if (ModifierContainer.Controls [i] is TextBox)  			ModifierContainer.Controls [i].Name = "Input" + i / 2;  	}  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The following statement contains a magic number: for (int i = ModifierContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards).   {  	if (ModifierContainer.Controls [i] is Label)  		ModifierContainer.Controls [i].Name = "Input" + i / 2 + "Label";  	else if (ModifierContainer.Controls [i] is TextBox)  		ModifierContainer.Controls [i].Name = "Input" + i / 2;  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The following statement contains a magic number: for (int i = ModifierContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards).   {  	if (ModifierContainer.Controls [i] is Label)  		ModifierContainer.Controls [i].Name = "Input" + i / 2 + "Label";  	else if (ModifierContainer.Controls [i] is TextBox)  		ModifierContainer.Controls [i].Name = "Input" + i / 2;  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The following statement contains a magic number: if (ModifierContainer.Controls [i] is Label)  	ModifierContainer.Controls [i].Name = "Input" + i / 2 + "Label";  else if (ModifierContainer.Controls [i] is TextBox)  	ModifierContainer.Controls [i].Name = "Input" + i / 2;  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The following statement contains a magic number: if (ModifierContainer.Controls [i] is Label)  	ModifierContainer.Controls [i].Name = "Input" + i / 2 + "Label";  else if (ModifierContainer.Controls [i] is TextBox)  	ModifierContainer.Controls [i].Name = "Input" + i / 2;  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The following statement contains a magic number: ModifierContainer.Controls [i].Name = "Input" + i / 2 + "Label";  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The following statement contains a magic number: if (ModifierContainer.Controls [i] is TextBox)  	ModifierContainer.Controls [i].Name = "Input" + i / 2;  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,label_Click,The following statement contains a magic number: ModifierContainer.Controls [i].Name = "Input" + i / 2;  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,ModifierToAdd_KeyDown,The following statement contains a magic number: if (e.KeyValue == 13)  	AddModifier (ModifierToAdd.Text);  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,ModifyDataButton_Click_1,The following statement contains a magic number: foreach (TextBox modifier in ModifierContainer.Controls.OfType<TextBox> ())//Go through each modifier.   {  	char[] DelimiterChars =  {  		'''  	};  	//Delimeter.  	string[] modifierparts = new string[3];  	//This array holds that split information.  	modifierparts = modifier.Text.Split (DelimiterChars);  	//Split at the comma.  	this.OwnerForm.ModifyData (Convert.ToInt32 (modifierparts [0])' Convert.ToInt32 (modifierparts [1])' Convert.ToDouble (modifierparts [2]));  	//Do the magic!  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,ModifyDataButton_Click_1,The following statement contains a magic number: foreach (TextBox modifier in ModifierContainer.Controls.OfType<TextBox> ())//Go through each modifier.   {  	char[] DelimiterChars =  {  		'''  	};  	//Delimeter.  	string[] modifierparts = new string[3];  	//This array holds that split information.  	modifierparts = modifier.Text.Split (DelimiterChars);  	//Split at the comma.  	this.OwnerForm.ModifyData (Convert.ToInt32 (modifierparts [0])' Convert.ToInt32 (modifierparts [1])' Convert.ToDouble (modifierparts [2]));  	//Do the magic!  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,ModifyDataButton_Click_1,The following statement contains a magic number: this.OwnerForm.ModifyData (Convert.ToInt32 (modifierparts [0])' Convert.ToInt32 (modifierparts [1])' Convert.ToDouble (modifierparts [2]));  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,LoadModifiers_Click_1,The following statement contains a magic number: if (result == DialogResult.OK) {  	for (int i = ModifierContainer.Controls.Count - 1; i >= 0; i--)//Remove all labels and textboxes (iterates through them backwards).  	 {  		if (ModifierContainer.Controls [i] is Label || ModifierContainer.Controls [i] is TextBox) {  			ModifierContainer.Controls.Remove (ModifierContainer.Controls [i]);  		}  	}  	modifierscount = 0;  	//The data points are loaded.  	string[] lines = System.IO.File.ReadAllLines (ModifiersLoader.FileName);  	//Array for lines in the .modifiers file.  	char[] DelimiterChars =  {  		'_'  	};  	//Delimeters.  	foreach (string line in lines) {  		string[] perline = new string[2];  		//Per line information.  		perline = line.Split (DelimiterChars);  		//Splits at "_".  		AddModifier (perline [0]);  		//Adds a modifier for the current line.  		TextBox settext = ModifierContainer.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  		settext.Text = perline [1];  		//Set the text of the textbox to the modifier info of the point it refers to.  	}  }  
Magic Number,Prediction_Machine,SettingsForm,C:\repos\Thought-Weaver_Envisage\SettingsForm.cs,LoadModifiers_Click_1,The following statement contains a magic number: foreach (string line in lines) {  	string[] perline = new string[2];  	//Per line information.  	perline = line.Split (DelimiterChars);  	//Splits at "_".  	AddModifier (perline [0]);  	//Adds a modifier for the current line.  	TextBox settext = ModifierContainer.Controls.Find ("Modifier" + modifierscount' true).FirstOrDefault () as TextBox;  	settext.Text = perline [1];  	//Set the text of the textbox to the modifier info of the point it refers to.  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (name != "") {  	if (InputContainer.Controls.Count > 0)//If there is at least one input.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	else//If there are no inputs at the moment.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		NewInput.Location = new System.Drawing.Point (14' 26);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	InputToAdd.Text = "";  	//Clears the InputToAdd textbox text.  	inputcount += 1;  	//Adds 1 to the number of inputs.  }  else  	InputToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (name != "") {  	if (InputContainer.Controls.Count > 0)//If there is at least one input.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	else//If there are no inputs at the moment.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		NewInput.Location = new System.Drawing.Point (14' 26);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	InputToAdd.Text = "";  	//Clears the InputToAdd textbox text.  	inputcount += 1;  	//Adds 1 to the number of inputs.  }  else  	InputToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (name != "") {  	if (InputContainer.Controls.Count > 0)//If there is at least one input.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	else//If there are no inputs at the moment.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		NewInput.Location = new System.Drawing.Point (14' 26);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	InputToAdd.Text = "";  	//Clears the InputToAdd textbox text.  	inputcount += 1;  	//Adds 1 to the number of inputs.  }  else  	InputToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (name != "") {  	if (InputContainer.Controls.Count > 0)//If there is at least one input.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	else//If there are no inputs at the moment.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		NewInput.Location = new System.Drawing.Point (14' 26);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	InputToAdd.Text = "";  	//Clears the InputToAdd textbox text.  	inputcount += 1;  	//Adds 1 to the number of inputs.  }  else  	InputToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (name != "") {  	if (InputContainer.Controls.Count > 0)//If there is at least one input.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	else//If there are no inputs at the moment.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		NewInput.Location = new System.Drawing.Point (14' 26);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	InputToAdd.Text = "";  	//Clears the InputToAdd textbox text.  	inputcount += 1;  	//Adds 1 to the number of inputs.  }  else  	InputToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (name != "") {  	if (InputContainer.Controls.Count > 0)//If there is at least one input.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	else//If there are no inputs at the moment.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		NewInput.Location = new System.Drawing.Point (14' 26);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	InputToAdd.Text = "";  	//Clears the InputToAdd textbox text.  	inputcount += 1;  	//Adds 1 to the number of inputs.  }  else  	InputToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (name != "") {  	if (InputContainer.Controls.Count > 0)//If there is at least one input.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	else//If there are no inputs at the moment.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		NewInput.Location = new System.Drawing.Point (14' 26);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	InputToAdd.Text = "";  	//Clears the InputToAdd textbox text.  	inputcount += 1;  	//Adds 1 to the number of inputs.  }  else  	InputToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (name != "") {  	if (InputContainer.Controls.Count > 0)//If there is at least one input.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	else//If there are no inputs at the moment.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		NewInput.Location = new System.Drawing.Point (14' 26);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	InputToAdd.Text = "";  	//Clears the InputToAdd textbox text.  	inputcount += 1;  	//Adds 1 to the number of inputs.  }  else  	InputToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (name != "") {  	if (InputContainer.Controls.Count > 0)//If there is at least one input.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	else//If there are no inputs at the moment.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		NewInput.Location = new System.Drawing.Point (14' 26);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	InputToAdd.Text = "";  	//Clears the InputToAdd textbox text.  	inputcount += 1;  	//Adds 1 to the number of inputs.  }  else  	InputToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (name != "") {  	if (InputContainer.Controls.Count > 0)//If there is at least one input.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	else//If there are no inputs at the moment.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		NewInput.Location = new System.Drawing.Point (14' 26);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	InputToAdd.Text = "";  	//Clears the InputToAdd textbox text.  	inputcount += 1;  	//Adds 1 to the number of inputs.  }  else  	InputToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (name != "") {  	if (InputContainer.Controls.Count > 0)//If there is at least one input.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	else//If there are no inputs at the moment.  	 {  		TextBox NewInput = new TextBox ();  		NewInput.Name = "Input" + (inputcount + 1);  		NewInput.Size = new System.Drawing.Size (181' 20);  		NewInput.Location = new System.Drawing.Point (14' 26);  		NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  		InputContainer.Controls.Add (NewInput);  		Label NewInputLbl = new Label ();  		NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  		if (name.Substring (name.Length - 1) != ":")  			NewInputLbl.Text = name + ":";  		else  			NewInputLbl.Text = name;  		NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  		InputContainer.Controls.Add (NewInputLbl);  		NewInputLbl.MouseDoubleClick += label_Click;  		//Added 11/22/2014  	}  	InputToAdd.Text = "";  	//Clears the InputToAdd textbox text.  	inputcount += 1;  	//Adds 1 to the number of inputs.  }  else  	InputToAdd.Text = "Specify a name.";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (InputContainer.Controls.Count > 0)//If there is at least one input.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  else//If there are no inputs at the moment.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	NewInput.Location = new System.Drawing.Point (14' 26);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (InputContainer.Controls.Count > 0)//If there is at least one input.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  else//If there are no inputs at the moment.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	NewInput.Location = new System.Drawing.Point (14' 26);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (InputContainer.Controls.Count > 0)//If there is at least one input.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  else//If there are no inputs at the moment.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	NewInput.Location = new System.Drawing.Point (14' 26);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (InputContainer.Controls.Count > 0)//If there is at least one input.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  else//If there are no inputs at the moment.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	NewInput.Location = new System.Drawing.Point (14' 26);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (InputContainer.Controls.Count > 0)//If there is at least one input.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  else//If there are no inputs at the moment.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	NewInput.Location = new System.Drawing.Point (14' 26);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (InputContainer.Controls.Count > 0)//If there is at least one input.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  else//If there are no inputs at the moment.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	NewInput.Location = new System.Drawing.Point (14' 26);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (InputContainer.Controls.Count > 0)//If there is at least one input.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  else//If there are no inputs at the moment.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	NewInput.Location = new System.Drawing.Point (14' 26);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (InputContainer.Controls.Count > 0)//If there is at least one input.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  else//If there are no inputs at the moment.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	NewInput.Location = new System.Drawing.Point (14' 26);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (InputContainer.Controls.Count > 0)//If there is at least one input.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  else//If there are no inputs at the moment.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	NewInput.Location = new System.Drawing.Point (14' 26);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (InputContainer.Controls.Count > 0)//If there is at least one input.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  else//If there are no inputs at the moment.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	NewInput.Location = new System.Drawing.Point (14' 26);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: if (InputContainer.Controls.Count > 0)//If there is at least one input.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	TextBox lasttextbox = this.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  else//If there are no inputs at the moment.   {  	TextBox NewInput = new TextBox ();  	NewInput.Name = "Input" + (inputcount + 1);  	NewInput.Size = new System.Drawing.Size (181' 20);  	NewInput.Location = new System.Drawing.Point (14' 26);  	NewInput.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;  	InputContainer.Controls.Add (NewInput);  	Label NewInputLbl = new Label ();  	NewInputLbl.Name = "Input" + (inputcount + 1) + "Label";  	if (name.Substring (name.Length - 1) != ":")  		NewInputLbl.Text = name + ":";  	else  		NewInputLbl.Text = name;  	NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  	InputContainer.Controls.Add (NewInputLbl);  	NewInputLbl.MouseDoubleClick += label_Click;  	//Added 11/22/2014  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: NewInput.Size = new System.Drawing.Size (181' 20);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: NewInput.Size = new System.Drawing.Size (181' 20);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: NewInput.Location = new System.Drawing.Point (lasttextbox.Location.X' lasttextbox.Location.Y + 50);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: NewInput.Size = new System.Drawing.Size (181' 20);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: NewInput.Size = new System.Drawing.Size (181' 20);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: NewInput.Location = new System.Drawing.Point (14' 26);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: NewInput.Location = new System.Drawing.Point (14' 26);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AddInput,The following statement contains a magic number: NewInputLbl.Location = new System.Drawing.Point (11' NewInput.Location.Y - 20);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AlwaysTimer_Tick,The following statement contains a magic number: AddInputButton.BackColor = Color.FromArgb (255' 255' 255);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AlwaysTimer_Tick,The following statement contains a magic number: AddInputButton.BackColor = Color.FromArgb (255' 255' 255);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AlwaysTimer_Tick,The following statement contains a magic number: AddInputButton.BackColor = Color.FromArgb (255' 255' 255);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AlwaysTimer_Tick,The following statement contains a magic number: RenderDataButton.BackColor = Color.FromArgb (255' 255' 255);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AlwaysTimer_Tick,The following statement contains a magic number: RenderDataButton.BackColor = Color.FromArgb (255' 255' 255);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AlwaysTimer_Tick,The following statement contains a magic number: RenderDataButton.BackColor = Color.FromArgb (255' 255' 255);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AlwaysTimer_Tick,The following statement contains a magic number: if (DataChart.Series [0].Points.Count <= 3)  	cubicToolStripMenuItem.Enabled = false;  //Added 11/27/2014 to make sure this regression is usable.  else  	cubicToolStripMenuItem.Enabled = true;  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,AlwaysTimer_Tick,The following statement contains a magic number: if (DataChart.Series [0].Points.Count <= 2)  	quadraticToolStripMenuItem.Enabled = false;  //Added 11/27/2014 to make sure this regression is usable.  else  	quadraticToolStripMenuItem.Enabled = true;  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,saveToolStripMenuItem_Click,The following statement contains a magic number: settingstosave [2] = Convert.ToString (globalvariables.ToPredict);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: if (result == DialogResult.OK)//Added 4:56 PM 11/23/2014 to account for if the user cancels loading a new file.   {  	for (int x = 0; x < DataChart.Series.Count; x++) {  		DataChart.Series [x].Points.Clear ();  		//Clears any points currently on the chart.  		if (x > 0)  			DataChart.Series.RemoveAt (x);  	}  	Function.Text = "";  	Error.Text = "";  	for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Remove all labels and textboxes (iterates through them backwards).  	 {  		if (InputContainer.Controls [i] is Label || InputContainer.Controls [i] is TextBox) {  			InputContainer.Controls.Remove (InputContainer.Controls [i]);  		}  	}  	inputcount = 0;  	//Added 11/26/2014 to reset the number of inputs.  	//The data points are loaded.  	string[] lines = System.IO.File.ReadAllLines (ChartLoader.FileName);  	//Array for lines in the .chart file.  	char[] DelimiterChars =  {  		'_'  	};  	//Delimeters.  	foreach (string line in lines) {  		string[] perline = new string[3];  		//Per line information.  		perline = line.Split (DelimiterChars);  		//Splits at "_".  		AddInput (perline [0]);  		//Adds an input for the current line.  		if (perline [2] == null || perline [2] == "")  			DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  		//In case the y-value is null.  		else  			DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  		TextBox settext = InputContainer.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		settext.Text = perline [2];  		//Set the text of the textbox to the y-value of the point it refers to.  	}  	this.Text = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' "");  	//Added 8:16 AM 11/23/2014  	//What is below was added at 10:29 AM on the 27th day of this year' 2014' in the 11th month of said year.  	string settingsfile = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' ".settings");  	if (System.IO.File.Exists (settingsfile)) {  		string[] lines2 = System.IO.File.ReadAllLines (settingsfile);  		DataChart.ChartAreas [0].Axes [0].Title = lines2 [0];  		DataChart.ChartAreas [0].Axes [1].Title = lines2 [1];  		globalvariables.ToPredict = Convert.ToInt32 (lines2 [2]);  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: if (result == DialogResult.OK)//Added 4:56 PM 11/23/2014 to account for if the user cancels loading a new file.   {  	for (int x = 0; x < DataChart.Series.Count; x++) {  		DataChart.Series [x].Points.Clear ();  		//Clears any points currently on the chart.  		if (x > 0)  			DataChart.Series.RemoveAt (x);  	}  	Function.Text = "";  	Error.Text = "";  	for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Remove all labels and textboxes (iterates through them backwards).  	 {  		if (InputContainer.Controls [i] is Label || InputContainer.Controls [i] is TextBox) {  			InputContainer.Controls.Remove (InputContainer.Controls [i]);  		}  	}  	inputcount = 0;  	//Added 11/26/2014 to reset the number of inputs.  	//The data points are loaded.  	string[] lines = System.IO.File.ReadAllLines (ChartLoader.FileName);  	//Array for lines in the .chart file.  	char[] DelimiterChars =  {  		'_'  	};  	//Delimeters.  	foreach (string line in lines) {  		string[] perline = new string[3];  		//Per line information.  		perline = line.Split (DelimiterChars);  		//Splits at "_".  		AddInput (perline [0]);  		//Adds an input for the current line.  		if (perline [2] == null || perline [2] == "")  			DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  		//In case the y-value is null.  		else  			DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  		TextBox settext = InputContainer.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		settext.Text = perline [2];  		//Set the text of the textbox to the y-value of the point it refers to.  	}  	this.Text = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' "");  	//Added 8:16 AM 11/23/2014  	//What is below was added at 10:29 AM on the 27th day of this year' 2014' in the 11th month of said year.  	string settingsfile = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' ".settings");  	if (System.IO.File.Exists (settingsfile)) {  		string[] lines2 = System.IO.File.ReadAllLines (settingsfile);  		DataChart.ChartAreas [0].Axes [0].Title = lines2 [0];  		DataChart.ChartAreas [0].Axes [1].Title = lines2 [1];  		globalvariables.ToPredict = Convert.ToInt32 (lines2 [2]);  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: if (result == DialogResult.OK)//Added 4:56 PM 11/23/2014 to account for if the user cancels loading a new file.   {  	for (int x = 0; x < DataChart.Series.Count; x++) {  		DataChart.Series [x].Points.Clear ();  		//Clears any points currently on the chart.  		if (x > 0)  			DataChart.Series.RemoveAt (x);  	}  	Function.Text = "";  	Error.Text = "";  	for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Remove all labels and textboxes (iterates through them backwards).  	 {  		if (InputContainer.Controls [i] is Label || InputContainer.Controls [i] is TextBox) {  			InputContainer.Controls.Remove (InputContainer.Controls [i]);  		}  	}  	inputcount = 0;  	//Added 11/26/2014 to reset the number of inputs.  	//The data points are loaded.  	string[] lines = System.IO.File.ReadAllLines (ChartLoader.FileName);  	//Array for lines in the .chart file.  	char[] DelimiterChars =  {  		'_'  	};  	//Delimeters.  	foreach (string line in lines) {  		string[] perline = new string[3];  		//Per line information.  		perline = line.Split (DelimiterChars);  		//Splits at "_".  		AddInput (perline [0]);  		//Adds an input for the current line.  		if (perline [2] == null || perline [2] == "")  			DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  		//In case the y-value is null.  		else  			DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  		TextBox settext = InputContainer.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		settext.Text = perline [2];  		//Set the text of the textbox to the y-value of the point it refers to.  	}  	this.Text = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' "");  	//Added 8:16 AM 11/23/2014  	//What is below was added at 10:29 AM on the 27th day of this year' 2014' in the 11th month of said year.  	string settingsfile = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' ".settings");  	if (System.IO.File.Exists (settingsfile)) {  		string[] lines2 = System.IO.File.ReadAllLines (settingsfile);  		DataChart.ChartAreas [0].Axes [0].Title = lines2 [0];  		DataChart.ChartAreas [0].Axes [1].Title = lines2 [1];  		globalvariables.ToPredict = Convert.ToInt32 (lines2 [2]);  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: if (result == DialogResult.OK)//Added 4:56 PM 11/23/2014 to account for if the user cancels loading a new file.   {  	for (int x = 0; x < DataChart.Series.Count; x++) {  		DataChart.Series [x].Points.Clear ();  		//Clears any points currently on the chart.  		if (x > 0)  			DataChart.Series.RemoveAt (x);  	}  	Function.Text = "";  	Error.Text = "";  	for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Remove all labels and textboxes (iterates through them backwards).  	 {  		if (InputContainer.Controls [i] is Label || InputContainer.Controls [i] is TextBox) {  			InputContainer.Controls.Remove (InputContainer.Controls [i]);  		}  	}  	inputcount = 0;  	//Added 11/26/2014 to reset the number of inputs.  	//The data points are loaded.  	string[] lines = System.IO.File.ReadAllLines (ChartLoader.FileName);  	//Array for lines in the .chart file.  	char[] DelimiterChars =  {  		'_'  	};  	//Delimeters.  	foreach (string line in lines) {  		string[] perline = new string[3];  		//Per line information.  		perline = line.Split (DelimiterChars);  		//Splits at "_".  		AddInput (perline [0]);  		//Adds an input for the current line.  		if (perline [2] == null || perline [2] == "")  			DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  		//In case the y-value is null.  		else  			DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  		TextBox settext = InputContainer.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		settext.Text = perline [2];  		//Set the text of the textbox to the y-value of the point it refers to.  	}  	this.Text = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' "");  	//Added 8:16 AM 11/23/2014  	//What is below was added at 10:29 AM on the 27th day of this year' 2014' in the 11th month of said year.  	string settingsfile = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' ".settings");  	if (System.IO.File.Exists (settingsfile)) {  		string[] lines2 = System.IO.File.ReadAllLines (settingsfile);  		DataChart.ChartAreas [0].Axes [0].Title = lines2 [0];  		DataChart.ChartAreas [0].Axes [1].Title = lines2 [1];  		globalvariables.ToPredict = Convert.ToInt32 (lines2 [2]);  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: if (result == DialogResult.OK)//Added 4:56 PM 11/23/2014 to account for if the user cancels loading a new file.   {  	for (int x = 0; x < DataChart.Series.Count; x++) {  		DataChart.Series [x].Points.Clear ();  		//Clears any points currently on the chart.  		if (x > 0)  			DataChart.Series.RemoveAt (x);  	}  	Function.Text = "";  	Error.Text = "";  	for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Remove all labels and textboxes (iterates through them backwards).  	 {  		if (InputContainer.Controls [i] is Label || InputContainer.Controls [i] is TextBox) {  			InputContainer.Controls.Remove (InputContainer.Controls [i]);  		}  	}  	inputcount = 0;  	//Added 11/26/2014 to reset the number of inputs.  	//The data points are loaded.  	string[] lines = System.IO.File.ReadAllLines (ChartLoader.FileName);  	//Array for lines in the .chart file.  	char[] DelimiterChars =  {  		'_'  	};  	//Delimeters.  	foreach (string line in lines) {  		string[] perline = new string[3];  		//Per line information.  		perline = line.Split (DelimiterChars);  		//Splits at "_".  		AddInput (perline [0]);  		//Adds an input for the current line.  		if (perline [2] == null || perline [2] == "")  			DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  		//In case the y-value is null.  		else  			DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  		TextBox settext = InputContainer.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		settext.Text = perline [2];  		//Set the text of the textbox to the y-value of the point it refers to.  	}  	this.Text = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' "");  	//Added 8:16 AM 11/23/2014  	//What is below was added at 10:29 AM on the 27th day of this year' 2014' in the 11th month of said year.  	string settingsfile = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' ".settings");  	if (System.IO.File.Exists (settingsfile)) {  		string[] lines2 = System.IO.File.ReadAllLines (settingsfile);  		DataChart.ChartAreas [0].Axes [0].Title = lines2 [0];  		DataChart.ChartAreas [0].Axes [1].Title = lines2 [1];  		globalvariables.ToPredict = Convert.ToInt32 (lines2 [2]);  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: if (result == DialogResult.OK)//Added 4:56 PM 11/23/2014 to account for if the user cancels loading a new file.   {  	for (int x = 0; x < DataChart.Series.Count; x++) {  		DataChart.Series [x].Points.Clear ();  		//Clears any points currently on the chart.  		if (x > 0)  			DataChart.Series.RemoveAt (x);  	}  	Function.Text = "";  	Error.Text = "";  	for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Remove all labels and textboxes (iterates through them backwards).  	 {  		if (InputContainer.Controls [i] is Label || InputContainer.Controls [i] is TextBox) {  			InputContainer.Controls.Remove (InputContainer.Controls [i]);  		}  	}  	inputcount = 0;  	//Added 11/26/2014 to reset the number of inputs.  	//The data points are loaded.  	string[] lines = System.IO.File.ReadAllLines (ChartLoader.FileName);  	//Array for lines in the .chart file.  	char[] DelimiterChars =  {  		'_'  	};  	//Delimeters.  	foreach (string line in lines) {  		string[] perline = new string[3];  		//Per line information.  		perline = line.Split (DelimiterChars);  		//Splits at "_".  		AddInput (perline [0]);  		//Adds an input for the current line.  		if (perline [2] == null || perline [2] == "")  			DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  		//In case the y-value is null.  		else  			DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  		TextBox settext = InputContainer.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  		settext.Text = perline [2];  		//Set the text of the textbox to the y-value of the point it refers to.  	}  	this.Text = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' "");  	//Added 8:16 AM 11/23/2014  	//What is below was added at 10:29 AM on the 27th day of this year' 2014' in the 11th month of said year.  	string settingsfile = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' ".settings");  	if (System.IO.File.Exists (settingsfile)) {  		string[] lines2 = System.IO.File.ReadAllLines (settingsfile);  		DataChart.ChartAreas [0].Axes [0].Title = lines2 [0];  		DataChart.ChartAreas [0].Axes [1].Title = lines2 [1];  		globalvariables.ToPredict = Convert.ToInt32 (lines2 [2]);  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: foreach (string line in lines) {  	string[] perline = new string[3];  	//Per line information.  	perline = line.Split (DelimiterChars);  	//Splits at "_".  	AddInput (perline [0]);  	//Adds an input for the current line.  	if (perline [2] == null || perline [2] == "")  		DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  	//In case the y-value is null.  	else  		DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  	TextBox settext = InputContainer.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	settext.Text = perline [2];  	//Set the text of the textbox to the y-value of the point it refers to.  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: foreach (string line in lines) {  	string[] perline = new string[3];  	//Per line information.  	perline = line.Split (DelimiterChars);  	//Splits at "_".  	AddInput (perline [0]);  	//Adds an input for the current line.  	if (perline [2] == null || perline [2] == "")  		DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  	//In case the y-value is null.  	else  		DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  	TextBox settext = InputContainer.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	settext.Text = perline [2];  	//Set the text of the textbox to the y-value of the point it refers to.  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: foreach (string line in lines) {  	string[] perline = new string[3];  	//Per line information.  	perline = line.Split (DelimiterChars);  	//Splits at "_".  	AddInput (perline [0]);  	//Adds an input for the current line.  	if (perline [2] == null || perline [2] == "")  		DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  	//In case the y-value is null.  	else  		DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  	TextBox settext = InputContainer.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	settext.Text = perline [2];  	//Set the text of the textbox to the y-value of the point it refers to.  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: foreach (string line in lines) {  	string[] perline = new string[3];  	//Per line information.  	perline = line.Split (DelimiterChars);  	//Splits at "_".  	AddInput (perline [0]);  	//Adds an input for the current line.  	if (perline [2] == null || perline [2] == "")  		DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  	//In case the y-value is null.  	else  		DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  	TextBox settext = InputContainer.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	settext.Text = perline [2];  	//Set the text of the textbox to the y-value of the point it refers to.  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: foreach (string line in lines) {  	string[] perline = new string[3];  	//Per line information.  	perline = line.Split (DelimiterChars);  	//Splits at "_".  	AddInput (perline [0]);  	//Adds an input for the current line.  	if (perline [2] == null || perline [2] == "")  		DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  	//In case the y-value is null.  	else  		DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  	TextBox settext = InputContainer.Controls.Find ("Input" + inputcount' true).FirstOrDefault () as TextBox;  	settext.Text = perline [2];  	//Set the text of the textbox to the y-value of the point it refers to.  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: if (perline [2] == null || perline [2] == "")  	DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  //In case the y-value is null.  else  	DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: if (perline [2] == null || perline [2] == "")  	DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  //In case the y-value is null.  else  	DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: if (perline [2] == null || perline [2] == "")  	DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' 0);  //In case the y-value is null.  else  	DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: DataChart.Series [0].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: settext.Text = perline [2];  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: if (System.IO.File.Exists (settingsfile)) {  	string[] lines2 = System.IO.File.ReadAllLines (settingsfile);  	DataChart.ChartAreas [0].Axes [0].Title = lines2 [0];  	DataChart.ChartAreas [0].Axes [1].Title = lines2 [1];  	globalvariables.ToPredict = Convert.ToInt32 (lines2 [2]);  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadToolStripMenuItem_Click,The following statement contains a magic number: globalvariables.ToPredict = Convert.ToInt32 (lines2 [2]);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: DataChart.ChartAreas [0].CursorX.Interval = 0.1;  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: DataChart.ChartAreas [0].CursorY.Interval = 0.1;  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: foreach (var result in results) {  	if (result.ChartElementType == ChartElementType.DataPoint) {  		var point = result.Object as DataPoint;  		if (point != null) {  			double pointXPixel = result.ChartArea.AxisX.ValueToPixelPosition (point.XValue);  			double pointYPixel = result.ChartArea.AxisY.ValueToPixelPosition (point.YValues [0]);  			//This checks as to whether or not the cursor is close to the point by about 15 pixels  			if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  				tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  				if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  				 {  					double[] newpoints = new double[2] {  						pY'  						point.XValue  					};  					//Array for the new x and y points for the modified point.  					DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  					//Sets the point to the new coordinates.  					DataChart.Refresh ();  					//Refreshes and updates the Chart.  					if (DataChart.Series [0].Points.Count == inputcount) {  						TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  						//Finds the input for the changing point.  						textboxtomodify.Text = Convert.ToString (pY);  						//Changes the input of the point being changed.  					}  				}  				if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  				 {  					DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  					DataChart.Refresh ();  				}  			}  		}  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: foreach (var result in results) {  	if (result.ChartElementType == ChartElementType.DataPoint) {  		var point = result.Object as DataPoint;  		if (point != null) {  			double pointXPixel = result.ChartArea.AxisX.ValueToPixelPosition (point.XValue);  			double pointYPixel = result.ChartArea.AxisY.ValueToPixelPosition (point.YValues [0]);  			//This checks as to whether or not the cursor is close to the point by about 15 pixels  			if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  				tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  				if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  				 {  					double[] newpoints = new double[2] {  						pY'  						point.XValue  					};  					//Array for the new x and y points for the modified point.  					DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  					//Sets the point to the new coordinates.  					DataChart.Refresh ();  					//Refreshes and updates the Chart.  					if (DataChart.Series [0].Points.Count == inputcount) {  						TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  						//Finds the input for the changing point.  						textboxtomodify.Text = Convert.ToString (pY);  						//Changes the input of the point being changed.  					}  				}  				if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  				 {  					DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  					DataChart.Refresh ();  				}  			}  		}  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: foreach (var result in results) {  	if (result.ChartElementType == ChartElementType.DataPoint) {  		var point = result.Object as DataPoint;  		if (point != null) {  			double pointXPixel = result.ChartArea.AxisX.ValueToPixelPosition (point.XValue);  			double pointYPixel = result.ChartArea.AxisY.ValueToPixelPosition (point.YValues [0]);  			//This checks as to whether or not the cursor is close to the point by about 15 pixels  			if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  				tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  				if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  				 {  					double[] newpoints = new double[2] {  						pY'  						point.XValue  					};  					//Array for the new x and y points for the modified point.  					DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  					//Sets the point to the new coordinates.  					DataChart.Refresh ();  					//Refreshes and updates the Chart.  					if (DataChart.Series [0].Points.Count == inputcount) {  						TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  						//Finds the input for the changing point.  						textboxtomodify.Text = Convert.ToString (pY);  						//Changes the input of the point being changed.  					}  				}  				if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  				 {  					DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  					DataChart.Refresh ();  				}  			}  		}  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: foreach (var result in results) {  	if (result.ChartElementType == ChartElementType.DataPoint) {  		var point = result.Object as DataPoint;  		if (point != null) {  			double pointXPixel = result.ChartArea.AxisX.ValueToPixelPosition (point.XValue);  			double pointYPixel = result.ChartArea.AxisY.ValueToPixelPosition (point.YValues [0]);  			//This checks as to whether or not the cursor is close to the point by about 15 pixels  			if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  				tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  				if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  				 {  					double[] newpoints = new double[2] {  						pY'  						point.XValue  					};  					//Array for the new x and y points for the modified point.  					DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  					//Sets the point to the new coordinates.  					DataChart.Refresh ();  					//Refreshes and updates the Chart.  					if (DataChart.Series [0].Points.Count == inputcount) {  						TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  						//Finds the input for the changing point.  						textboxtomodify.Text = Convert.ToString (pY);  						//Changes the input of the point being changed.  					}  				}  				if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  				 {  					DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  					DataChart.Refresh ();  				}  			}  		}  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (result.ChartElementType == ChartElementType.DataPoint) {  	var point = result.Object as DataPoint;  	if (point != null) {  		double pointXPixel = result.ChartArea.AxisX.ValueToPixelPosition (point.XValue);  		double pointYPixel = result.ChartArea.AxisY.ValueToPixelPosition (point.YValues [0]);  		//This checks as to whether or not the cursor is close to the point by about 15 pixels  		if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  			tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  			if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  			 {  				double[] newpoints = new double[2] {  					pY'  					point.XValue  				};  				//Array for the new x and y points for the modified point.  				DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  				//Sets the point to the new coordinates.  				DataChart.Refresh ();  				//Refreshes and updates the Chart.  				if (DataChart.Series [0].Points.Count == inputcount) {  					TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  					//Finds the input for the changing point.  					textboxtomodify.Text = Convert.ToString (pY);  					//Changes the input of the point being changed.  				}  			}  			if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  			 {  				DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  				DataChart.Refresh ();  			}  		}  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (result.ChartElementType == ChartElementType.DataPoint) {  	var point = result.Object as DataPoint;  	if (point != null) {  		double pointXPixel = result.ChartArea.AxisX.ValueToPixelPosition (point.XValue);  		double pointYPixel = result.ChartArea.AxisY.ValueToPixelPosition (point.YValues [0]);  		//This checks as to whether or not the cursor is close to the point by about 15 pixels  		if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  			tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  			if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  			 {  				double[] newpoints = new double[2] {  					pY'  					point.XValue  				};  				//Array for the new x and y points for the modified point.  				DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  				//Sets the point to the new coordinates.  				DataChart.Refresh ();  				//Refreshes and updates the Chart.  				if (DataChart.Series [0].Points.Count == inputcount) {  					TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  					//Finds the input for the changing point.  					textboxtomodify.Text = Convert.ToString (pY);  					//Changes the input of the point being changed.  				}  			}  			if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  			 {  				DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  				DataChart.Refresh ();  			}  		}  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (result.ChartElementType == ChartElementType.DataPoint) {  	var point = result.Object as DataPoint;  	if (point != null) {  		double pointXPixel = result.ChartArea.AxisX.ValueToPixelPosition (point.XValue);  		double pointYPixel = result.ChartArea.AxisY.ValueToPixelPosition (point.YValues [0]);  		//This checks as to whether or not the cursor is close to the point by about 15 pixels  		if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  			tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  			if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  			 {  				double[] newpoints = new double[2] {  					pY'  					point.XValue  				};  				//Array for the new x and y points for the modified point.  				DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  				//Sets the point to the new coordinates.  				DataChart.Refresh ();  				//Refreshes and updates the Chart.  				if (DataChart.Series [0].Points.Count == inputcount) {  					TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  					//Finds the input for the changing point.  					textboxtomodify.Text = Convert.ToString (pY);  					//Changes the input of the point being changed.  				}  			}  			if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  			 {  				DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  				DataChart.Refresh ();  			}  		}  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (result.ChartElementType == ChartElementType.DataPoint) {  	var point = result.Object as DataPoint;  	if (point != null) {  		double pointXPixel = result.ChartArea.AxisX.ValueToPixelPosition (point.XValue);  		double pointYPixel = result.ChartArea.AxisY.ValueToPixelPosition (point.YValues [0]);  		//This checks as to whether or not the cursor is close to the point by about 15 pixels  		if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  			tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  			if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  			 {  				double[] newpoints = new double[2] {  					pY'  					point.XValue  				};  				//Array for the new x and y points for the modified point.  				DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  				//Sets the point to the new coordinates.  				DataChart.Refresh ();  				//Refreshes and updates the Chart.  				if (DataChart.Series [0].Points.Count == inputcount) {  					TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  					//Finds the input for the changing point.  					textboxtomodify.Text = Convert.ToString (pY);  					//Changes the input of the point being changed.  				}  			}  			if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  			 {  				DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  				DataChart.Refresh ();  			}  		}  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (point != null) {  	double pointXPixel = result.ChartArea.AxisX.ValueToPixelPosition (point.XValue);  	double pointYPixel = result.ChartArea.AxisY.ValueToPixelPosition (point.YValues [0]);  	//This checks as to whether or not the cursor is close to the point by about 15 pixels  	if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  		tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  		if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  		 {  			double[] newpoints = new double[2] {  				pY'  				point.XValue  			};  			//Array for the new x and y points for the modified point.  			DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  			//Sets the point to the new coordinates.  			DataChart.Refresh ();  			//Refreshes and updates the Chart.  			if (DataChart.Series [0].Points.Count == inputcount) {  				TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  				//Finds the input for the changing point.  				textboxtomodify.Text = Convert.ToString (pY);  				//Changes the input of the point being changed.  			}  		}  		if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  		 {  			DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  			DataChart.Refresh ();  		}  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (point != null) {  	double pointXPixel = result.ChartArea.AxisX.ValueToPixelPosition (point.XValue);  	double pointYPixel = result.ChartArea.AxisY.ValueToPixelPosition (point.YValues [0]);  	//This checks as to whether or not the cursor is close to the point by about 15 pixels  	if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  		tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  		if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  		 {  			double[] newpoints = new double[2] {  				pY'  				point.XValue  			};  			//Array for the new x and y points for the modified point.  			DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  			//Sets the point to the new coordinates.  			DataChart.Refresh ();  			//Refreshes and updates the Chart.  			if (DataChart.Series [0].Points.Count == inputcount) {  				TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  				//Finds the input for the changing point.  				textboxtomodify.Text = Convert.ToString (pY);  				//Changes the input of the point being changed.  			}  		}  		if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  		 {  			DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  			DataChart.Refresh ();  		}  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (point != null) {  	double pointXPixel = result.ChartArea.AxisX.ValueToPixelPosition (point.XValue);  	double pointYPixel = result.ChartArea.AxisY.ValueToPixelPosition (point.YValues [0]);  	//This checks as to whether or not the cursor is close to the point by about 15 pixels  	if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  		tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  		if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  		 {  			double[] newpoints = new double[2] {  				pY'  				point.XValue  			};  			//Array for the new x and y points for the modified point.  			DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  			//Sets the point to the new coordinates.  			DataChart.Refresh ();  			//Refreshes and updates the Chart.  			if (DataChart.Series [0].Points.Count == inputcount) {  				TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  				//Finds the input for the changing point.  				textboxtomodify.Text = Convert.ToString (pY);  				//Changes the input of the point being changed.  			}  		}  		if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  		 {  			DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  			DataChart.Refresh ();  		}  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (point != null) {  	double pointXPixel = result.ChartArea.AxisX.ValueToPixelPosition (point.XValue);  	double pointYPixel = result.ChartArea.AxisY.ValueToPixelPosition (point.YValues [0]);  	//This checks as to whether or not the cursor is close to the point by about 15 pixels  	if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  		tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  		if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  		 {  			double[] newpoints = new double[2] {  				pY'  				point.XValue  			};  			//Array for the new x and y points for the modified point.  			DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  			//Sets the point to the new coordinates.  			DataChart.Refresh ();  			//Refreshes and updates the Chart.  			if (DataChart.Series [0].Points.Count == inputcount) {  				TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  				//Finds the input for the changing point.  				textboxtomodify.Text = Convert.ToString (pY);  				//Changes the input of the point being changed.  			}  		}  		if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  		 {  			DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  			DataChart.Refresh ();  		}  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  	tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  	if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  	 {  		double[] newpoints = new double[2] {  			pY'  			point.XValue  		};  		//Array for the new x and y points for the modified point.  		DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  		//Sets the point to the new coordinates.  		DataChart.Refresh ();  		//Refreshes and updates the Chart.  		if (DataChart.Series [0].Points.Count == inputcount) {  			TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  			//Finds the input for the changing point.  			textboxtomodify.Text = Convert.ToString (pY);  			//Changes the input of the point being changed.  		}  	}  	if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  	 {  		DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  		DataChart.Refresh ();  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  	tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  	if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  	 {  		double[] newpoints = new double[2] {  			pY'  			point.XValue  		};  		//Array for the new x and y points for the modified point.  		DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  		//Sets the point to the new coordinates.  		DataChart.Refresh ();  		//Refreshes and updates the Chart.  		if (DataChart.Series [0].Points.Count == inputcount) {  			TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  			//Finds the input for the changing point.  			textboxtomodify.Text = Convert.ToString (pY);  			//Changes the input of the point being changed.  		}  	}  	if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  	 {  		DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  		DataChart.Refresh ();  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  	tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  	if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  	 {  		double[] newpoints = new double[2] {  			pY'  			point.XValue  		};  		//Array for the new x and y points for the modified point.  		DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  		//Sets the point to the new coordinates.  		DataChart.Refresh ();  		//Refreshes and updates the Chart.  		if (DataChart.Series [0].Points.Count == inputcount) {  			TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  			//Finds the input for the changing point.  			textboxtomodify.Text = Convert.ToString (pY);  			//Changes the input of the point being changed.  		}  	}  	if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  	 {  		DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  		DataChart.Refresh ();  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (Math.Abs (pos.X - pointXPixel) < 15 && Math.Abs (pos.Y - pointYPixel) < 15) {  	tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  	if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.  	 {  		double[] newpoints = new double[2] {  			pY'  			point.XValue  		};  		//Array for the new x and y points for the modified point.  		DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  		//Sets the point to the new coordinates.  		DataChart.Refresh ();  		//Refreshes and updates the Chart.  		if (DataChart.Series [0].Points.Count == inputcount) {  			TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  			//Finds the input for the changing point.  			textboxtomodify.Text = Convert.ToString (pY);  			//Changes the input of the point being changed.  		}  	}  	if (e.Button == MouseButtons.Right)//Added 7:38 3/15/2015 to allow the user to label specific points on the chart.  	 {  		DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (pX)).Label = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault ().Text;  		DataChart.Refresh ();  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: tooltip.Show ("X=" + point.XValue + "' Y=" + point.YValues [0]' this.DataChart' pos.X' pos.Y - 15);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,DataChart_MouseMove,The following statement contains a magic number: if (e.Button == MouseButtons.Left)//For draggable points. Added 11/26/2014.   {  	double[] newpoints = new double[2] {  		pY'  		point.XValue  	};  	//Array for the new x and y points for the modified point.  	DataChart.Series [0].Points.ElementAt (Convert.ToInt32 (point.XValue)).YValues = newpoints;  	//Sets the point to the new coordinates.  	DataChart.Refresh ();  	//Refreshes and updates the Chart.  	if (DataChart.Series [0].Points.Count == inputcount) {  		TextBox textboxtomodify = InputContainer.Controls.Find ("Input" + (point.XValue + 1)' true).FirstOrDefault () as TextBox;  		//Finds the input for the changing point.  		textboxtomodify.Text = Convert.ToString (pY);  		//Changes the input of the point being changed.  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Left) {  	if (clickedLabel != null) {  		string currenttext = clickedLabel.Text;  		//Set a string variable to the current text of the clicked label  		if (InputToAdd.Text != "") {  			if (currenttext.Substring (currenttext.Length) != ":")  				clickedLabel.Text = InputToAdd.Text + ":";  			else  				clickedLabel.Text = InputToAdd.Text;  			//If there's a colon' just set the text to what's in the InputToAdd textbox  			InputToAdd.Text = "";  			//Empty the textbox  		}  	}  }  else if (e.Button == System.Windows.Forms.MouseButtons.Middle)//Added 11/27/2014 to allow for input removal.   {  	TextBox toremove = InputContainer.Controls.Find (clickedLabel.Name.Replace ("Label"' "")' true).FirstOrDefault () as TextBox;  	InputContainer.Controls.Remove (toremove);  	//Remove the textbox that goes with the label.  	InputContainer.Controls.Remove (clickedLabel);  	//Then remove the label itself.  	inputcount -= 1;  	//Subtract one from the inputcount since there's one less input.  	for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards).  	 {  		if (InputContainer.Controls [i] is Label)  			InputContainer.Controls [i].Name = "Input" + i / 2 + "Label";  		else if (InputContainer.Controls [i] is TextBox)  			InputContainer.Controls [i].Name = "Input" + i / 2;  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Left) {  	if (clickedLabel != null) {  		string currenttext = clickedLabel.Text;  		//Set a string variable to the current text of the clicked label  		if (InputToAdd.Text != "") {  			if (currenttext.Substring (currenttext.Length) != ":")  				clickedLabel.Text = InputToAdd.Text + ":";  			else  				clickedLabel.Text = InputToAdd.Text;  			//If there's a colon' just set the text to what's in the InputToAdd textbox  			InputToAdd.Text = "";  			//Empty the textbox  		}  	}  }  else if (e.Button == System.Windows.Forms.MouseButtons.Middle)//Added 11/27/2014 to allow for input removal.   {  	TextBox toremove = InputContainer.Controls.Find (clickedLabel.Name.Replace ("Label"' "")' true).FirstOrDefault () as TextBox;  	InputContainer.Controls.Remove (toremove);  	//Remove the textbox that goes with the label.  	InputContainer.Controls.Remove (clickedLabel);  	//Then remove the label itself.  	inputcount -= 1;  	//Subtract one from the inputcount since there's one less input.  	for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards).  	 {  		if (InputContainer.Controls [i] is Label)  			InputContainer.Controls [i].Name = "Input" + i / 2 + "Label";  		else if (InputContainer.Controls [i] is TextBox)  			InputContainer.Controls [i].Name = "Input" + i / 2;  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Middle)//Added 11/27/2014 to allow for input removal.   {  	TextBox toremove = InputContainer.Controls.Find (clickedLabel.Name.Replace ("Label"' "")' true).FirstOrDefault () as TextBox;  	InputContainer.Controls.Remove (toremove);  	//Remove the textbox that goes with the label.  	InputContainer.Controls.Remove (clickedLabel);  	//Then remove the label itself.  	inputcount -= 1;  	//Subtract one from the inputcount since there's one less input.  	for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards).  	 {  		if (InputContainer.Controls [i] is Label)  			InputContainer.Controls [i].Name = "Input" + i / 2 + "Label";  		else if (InputContainer.Controls [i] is TextBox)  			InputContainer.Controls [i].Name = "Input" + i / 2;  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Middle)//Added 11/27/2014 to allow for input removal.   {  	TextBox toremove = InputContainer.Controls.Find (clickedLabel.Name.Replace ("Label"' "")' true).FirstOrDefault () as TextBox;  	InputContainer.Controls.Remove (toremove);  	//Remove the textbox that goes with the label.  	InputContainer.Controls.Remove (clickedLabel);  	//Then remove the label itself.  	inputcount -= 1;  	//Subtract one from the inputcount since there's one less input.  	for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards).  	 {  		if (InputContainer.Controls [i] is Label)  			InputContainer.Controls [i].Name = "Input" + i / 2 + "Label";  		else if (InputContainer.Controls [i] is TextBox)  			InputContainer.Controls [i].Name = "Input" + i / 2;  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The following statement contains a magic number: for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards).   {  	if (InputContainer.Controls [i] is Label)  		InputContainer.Controls [i].Name = "Input" + i / 2 + "Label";  	else if (InputContainer.Controls [i] is TextBox)  		InputContainer.Controls [i].Name = "Input" + i / 2;  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The following statement contains a magic number: for (int i = InputContainer.Controls.Count - 1; i >= 0; i--)//Rename all labels and textboxes (iterates through them backwards).   {  	if (InputContainer.Controls [i] is Label)  		InputContainer.Controls [i].Name = "Input" + i / 2 + "Label";  	else if (InputContainer.Controls [i] is TextBox)  		InputContainer.Controls [i].Name = "Input" + i / 2;  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The following statement contains a magic number: if (InputContainer.Controls [i] is Label)  	InputContainer.Controls [i].Name = "Input" + i / 2 + "Label";  else if (InputContainer.Controls [i] is TextBox)  	InputContainer.Controls [i].Name = "Input" + i / 2;  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The following statement contains a magic number: if (InputContainer.Controls [i] is Label)  	InputContainer.Controls [i].Name = "Input" + i / 2 + "Label";  else if (InputContainer.Controls [i] is TextBox)  	InputContainer.Controls [i].Name = "Input" + i / 2;  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The following statement contains a magic number: InputContainer.Controls [i].Name = "Input" + i / 2 + "Label";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The following statement contains a magic number: if (InputContainer.Controls [i] is TextBox)  	InputContainer.Controls [i].Name = "Input" + i / 2;  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,label_Click,The following statement contains a magic number: InputContainer.Controls [i].Name = "Input" + i / 2;  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,generateStatsToolStripMenuItem_Click,The following statement contains a magic number: datatosave [2] = "Median: " + Convert.ToString (DataChart.DataManipulator.Statistics.Median ("Series1"));  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,generateStatsToolStripMenuItem_Click,The following statement contains a magic number: datatosave [3] = "r: " + r;  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,generateStatsToolStripMenuItem_Click,The following statement contains a magic number: datatosave [4] = "r^2: " + (r * r);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,generateStatsToolStripMenuItem_Click,The following statement contains a magic number: datatosave [5] = "Rate between the first and final points: " + Convert.ToString ((DataChart.Series [0].Points.ElementAt (DataChart.Series [0].Points.Count - 1).YValues [0] - DataChart.Series [0].Points.ElementAt (0).YValues [0]) / (DataChart.Series [0].Points.Count - 1));  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,generateStatsToolStripMenuItem_Click,The following statement contains a magic number: datatosave [6] = "Average rate of the graph: " + Convert.ToString (averagerate);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,InputToAdd_KeyDown,The following statement contains a magic number: if (e.KeyValue == 13)  	AddInput (InputToAdd.Text);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,expToolStripMenuItem_Click,The following statement contains a magic number: Error.Text = "Difference: " + Convert.ToString (100 - ((originalpoint / a) * 100)) + "%";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,expToolStripMenuItem_Click,The following statement contains a magic number: Error.Text = "Difference: " + Convert.ToString (100 - ((originalpoint / a) * 100)) + "%";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,quadraticToolStripMenuItem_Click,The following statement contains a magic number: Error.Text = "Difference: " + Convert.ToString (100 - ((originalpoint / c) * 100)) + "%";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,quadraticToolStripMenuItem_Click,The following statement contains a magic number: Error.Text = "Difference: " + Convert.ToString (100 - ((originalpoint / c) * 100)) + "%";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,cubicToolStripMenuItem_Click,The following statement contains a magic number: Function.Text = "Function: " + Math.Round (a' 10) + "x^3 + " + Math.Round (b' 10) + "x^2 + " + Math.Round (c' 10) + "x + " + Math.Round (d' 10);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,cubicToolStripMenuItem_Click,The following statement contains a magic number: Function.Text = "Function: " + Math.Round (a' 10) + "x^3 + " + Math.Round (b' 10) + "x^2 + " + Math.Round (c' 10) + "x + " + Math.Round (d' 10);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,cubicToolStripMenuItem_Click,The following statement contains a magic number: Function.Text = "Function: " + Math.Round (a' 10) + "x^3 + " + Math.Round (b' 10) + "x^2 + " + Math.Round (c' 10) + "x + " + Math.Round (d' 10);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,cubicToolStripMenuItem_Click,The following statement contains a magic number: Function.Text = "Function: " + Math.Round (a' 10) + "x^3 + " + Math.Round (b' 10) + "x^2 + " + Math.Round (c' 10) + "x + " + Math.Round (d' 10);  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,cubicToolStripMenuItem_Click,The following statement contains a magic number: Error.Text = "Difference: " + Convert.ToString (100 - ((originalpoint / d) * 100)) + "%";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,cubicToolStripMenuItem_Click,The following statement contains a magic number: Error.Text = "Difference: " + Convert.ToString (100 - ((originalpoint / d) * 100)) + "%";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,linearToolStripMenuItem_Click,The following statement contains a magic number: Error.Text = "Difference: " + Convert.ToString (100 - ((originalpoint / b) * 100)) + "%";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,linearToolStripMenuItem_Click,The following statement contains a magic number: Error.Text = "Difference: " + Convert.ToString (100 - ((originalpoint / b) * 100)) + "%";  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadChartAsAreaToolStripMenuItem_Click,The following statement contains a magic number: if (result == DialogResult.OK) {  	string layer = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' "");  	if (DataChart.Series.IndexOf (layer) == -1)  		DataChart.Series.Add (layer);  	else  		Error.Text = "That series of data already exists in the chart.";  	DataChart.Series [layer].ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Line;  	DataChart.Series [layer].MarkerStyle = System.Windows.Forms.DataVisualization.Charting.MarkerStyle.Circle;  	DataChart.Series [layer].IsVisibleInLegend = true;  	//The data points are loaded.  	string[] lines = System.IO.File.ReadAllLines (ChartLoader.FileName);  	//Array for lines in the .chart file.  	char[] DelimiterChars =  {  		'_'  	};  	//Delimeters.  	foreach (string line in lines) {  		string[] perline = new string[3];  		//Per line information.  		perline = line.Split (DelimiterChars);  		//Splits at "_".  		if (perline [2] == null || perline [2] == "")  			DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' 0);  		//In case the y-value is null.  		else  			DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadChartAsAreaToolStripMenuItem_Click,The following statement contains a magic number: if (result == DialogResult.OK) {  	string layer = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' "");  	if (DataChart.Series.IndexOf (layer) == -1)  		DataChart.Series.Add (layer);  	else  		Error.Text = "That series of data already exists in the chart.";  	DataChart.Series [layer].ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Line;  	DataChart.Series [layer].MarkerStyle = System.Windows.Forms.DataVisualization.Charting.MarkerStyle.Circle;  	DataChart.Series [layer].IsVisibleInLegend = true;  	//The data points are loaded.  	string[] lines = System.IO.File.ReadAllLines (ChartLoader.FileName);  	//Array for lines in the .chart file.  	char[] DelimiterChars =  {  		'_'  	};  	//Delimeters.  	foreach (string line in lines) {  		string[] perline = new string[3];  		//Per line information.  		perline = line.Split (DelimiterChars);  		//Splits at "_".  		if (perline [2] == null || perline [2] == "")  			DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' 0);  		//In case the y-value is null.  		else  			DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadChartAsAreaToolStripMenuItem_Click,The following statement contains a magic number: if (result == DialogResult.OK) {  	string layer = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' "");  	if (DataChart.Series.IndexOf (layer) == -1)  		DataChart.Series.Add (layer);  	else  		Error.Text = "That series of data already exists in the chart.";  	DataChart.Series [layer].ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Line;  	DataChart.Series [layer].MarkerStyle = System.Windows.Forms.DataVisualization.Charting.MarkerStyle.Circle;  	DataChart.Series [layer].IsVisibleInLegend = true;  	//The data points are loaded.  	string[] lines = System.IO.File.ReadAllLines (ChartLoader.FileName);  	//Array for lines in the .chart file.  	char[] DelimiterChars =  {  		'_'  	};  	//Delimeters.  	foreach (string line in lines) {  		string[] perline = new string[3];  		//Per line information.  		perline = line.Split (DelimiterChars);  		//Splits at "_".  		if (perline [2] == null || perline [2] == "")  			DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' 0);  		//In case the y-value is null.  		else  			DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadChartAsAreaToolStripMenuItem_Click,The following statement contains a magic number: if (result == DialogResult.OK) {  	string layer = System.IO.Path.GetFileName (ChartLoader.FileName).Replace (".chart"' "");  	if (DataChart.Series.IndexOf (layer) == -1)  		DataChart.Series.Add (layer);  	else  		Error.Text = "That series of data already exists in the chart.";  	DataChart.Series [layer].ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Line;  	DataChart.Series [layer].MarkerStyle = System.Windows.Forms.DataVisualization.Charting.MarkerStyle.Circle;  	DataChart.Series [layer].IsVisibleInLegend = true;  	//The data points are loaded.  	string[] lines = System.IO.File.ReadAllLines (ChartLoader.FileName);  	//Array for lines in the .chart file.  	char[] DelimiterChars =  {  		'_'  	};  	//Delimeters.  	foreach (string line in lines) {  		string[] perline = new string[3];  		//Per line information.  		perline = line.Split (DelimiterChars);  		//Splits at "_".  		if (perline [2] == null || perline [2] == "")  			DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' 0);  		//In case the y-value is null.  		else  			DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  	}  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadChartAsAreaToolStripMenuItem_Click,The following statement contains a magic number: foreach (string line in lines) {  	string[] perline = new string[3];  	//Per line information.  	perline = line.Split (DelimiterChars);  	//Splits at "_".  	if (perline [2] == null || perline [2] == "")  		DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' 0);  	//In case the y-value is null.  	else  		DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadChartAsAreaToolStripMenuItem_Click,The following statement contains a magic number: foreach (string line in lines) {  	string[] perline = new string[3];  	//Per line information.  	perline = line.Split (DelimiterChars);  	//Splits at "_".  	if (perline [2] == null || perline [2] == "")  		DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' 0);  	//In case the y-value is null.  	else  		DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadChartAsAreaToolStripMenuItem_Click,The following statement contains a magic number: foreach (string line in lines) {  	string[] perline = new string[3];  	//Per line information.  	perline = line.Split (DelimiterChars);  	//Splits at "_".  	if (perline [2] == null || perline [2] == "")  		DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' 0);  	//In case the y-value is null.  	else  		DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadChartAsAreaToolStripMenuItem_Click,The following statement contains a magic number: foreach (string line in lines) {  	string[] perline = new string[3];  	//Per line information.  	perline = line.Split (DelimiterChars);  	//Splits at "_".  	if (perline [2] == null || perline [2] == "")  		DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' 0);  	//In case the y-value is null.  	else  		DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  }  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadChartAsAreaToolStripMenuItem_Click,The following statement contains a magic number: if (perline [2] == null || perline [2] == "")  	DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' 0);  //In case the y-value is null.  else  	DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadChartAsAreaToolStripMenuItem_Click,The following statement contains a magic number: if (perline [2] == null || perline [2] == "")  	DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' 0);  //In case the y-value is null.  else  	DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadChartAsAreaToolStripMenuItem_Click,The following statement contains a magic number: if (perline [2] == null || perline [2] == "")  	DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' 0);  //In case the y-value is null.  else  	DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  
Magic Number,Prediction_Machine,MainForm,C:\repos\Thought-Weaver_Envisage\MainForm.cs,loadChartAsAreaToolStripMenuItem_Click,The following statement contains a magic number: DataChart.Series [layer].Points.AddXY (Convert.ToDouble (perline [1])' Convert.ToDouble (perline [2]));  
