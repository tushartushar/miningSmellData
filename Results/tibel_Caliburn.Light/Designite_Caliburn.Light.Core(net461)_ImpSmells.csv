Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Caliburn.Light,SimpleContainer,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\IoC\SimpleContainer.cs,GetInstance,Cyclomatic complexity of the method is 8
Long Parameter List,Caliburn.Light,AsyncDelegateCommand<TParameter>,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\Action\AsyncDelegateCommand.cs,AsyncDelegateCommand,The method has 5 parameters. Parameters: coerceParameter' execute' canExecute' target' propertyNames
Long Parameter List,Caliburn.Light,DelegateCommand<TParameter>,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\Action\DelegateCommand.cs,DelegateCommand,The method has 5 parameters. Parameters: coerceParameter' execute' canExecute' target' propertyNames
Long Parameter List,Caliburn.Light,RangeValidationRule<T;TProperty>,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\Validation\RangeValidationRule.cs,RangeValidationRule,The method has 5 parameters. Parameters: propertyName' getPropertyValue' minimum' maximum' errorMessage
Long Parameter List,Caliburn.Light,StringLengthValidationRule<T>,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\Validation\StringLengthValidationRule.cs,StringLengthValidationRule,The method has 5 parameters. Parameters: propertyName' getPropertyValue' minimumLength' maximumLength' errorMessage
Long Identifier,Caliburn.Light,BindableCommand,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\Action\BindableCommand.cs,,The length of the parameter _isExecutableNeedsInvalidation is 30.
Long Identifier,Caliburn.Light,DefaultCloseStrategy<T>,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\ViewModel\DefaultCloseStrategy.cs,DefaultCloseStrategy,The length of the parameter closeConductedItemsWhenConductorCannotClose is 43.
Long Identifier,Caliburn.Light,DefaultCloseStrategy<T>,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\ViewModel\DefaultCloseStrategy.cs,,The length of the parameter _closeConductedItemsWhenConductorCannotClose is 44.
Long Statement,Caliburn.Light,EventAggregator,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\EventAggregator\EventAggregator.cs,Publish,The length of the statement  "            var currentThreadHandlers = selectedHandlers.FindAll(h => h.ThreadOption == ThreadOption.PublisherThread || isUIThread && h.ThreadOption == ThreadOption.UIThread); " is 163.
Long Statement,Caliburn.Light,SimpleContainer,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\IoC\SimpleContainer.cs,GetInstance,The length of the statement  "                    throw new InvalidOperationException(string.Format("Found multiple registrations for type '{0}' and key {1}."' service' key)); " is 125.
Long Statement,Caliburn.Light,SimpleContainer,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\IoC\SimpleContainer.cs,GetInstance,The length of the statement  "                var factoryFactoryMethod = factoryFactoryType.GetRuntimeMethod("Create"' new[] { typeof(SimpleContainer)' typeof(string) }); " is 124.
Long Statement,Caliburn.Light,SimpleContainer,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\IoC\SimpleContainer.cs,GetInstance,The length of the statement  "                    throw new InvalidOperationException(string.Format("Requesting type '{0}' with key {1} is not supported."' service' key)); " is 121.
Empty Catch Block,Caliburn.Light,TaskDecoratorCoTask,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\Coroutines\TaskDecoratorCoTask.cs,BeginExecute,The method has an empty catch block.
Missing Default,Caliburn.Light,AllActive,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\ViewModel\ConductorWithCollectionAllActive.cs,AllActive,The following switch statement is missing a default case: switch (e.Action)                          {                              case NotifyCollectionChangedAction.Add:                                  foreach (var x in e.NewItems.OfType<IChild>()) { x.Parent = this; }                                  break;                              case NotifyCollectionChangedAction.Remove:                                  foreach (var x in e.OldItems.OfType<IChild>()) { x.Parent = null; }                                  break;                              case NotifyCollectionChangedAction.Replace:                                  foreach (var x in e.NewItems.OfType<IChild>()) { x.Parent = this; }                                  foreach (var x in e.OldItems.OfType<IChild>()) { x.Parent = null; }                                  break;                              case NotifyCollectionChangedAction.Reset:                                  foreach (var x in _items.OfType<IChild>()) { x.Parent = this; }                                  break;                          }
Missing Default,Caliburn.Light,OneActive,D:\research\architectureSmells\repos1\tibel_Caliburn.Light\src\Caliburn.Light.Core\ViewModel\ConductorWithCollectionOneActive.cs,OneActive,The following switch statement is missing a default case: switch (e.Action)                          {                              case NotifyCollectionChangedAction.Add:                                  foreach (var x in e.NewItems.OfType<IChild>()) { x.Parent = this; }                                  break;                              case NotifyCollectionChangedAction.Remove:                                  foreach (var x in e.OldItems.OfType<IChild>()) { x.Parent = null; }                                  break;                              case NotifyCollectionChangedAction.Replace:                                  foreach (var x in e.NewItems.OfType<IChild>()) { x.Parent = this; }                                  foreach (var x in e.OldItems.OfType<IChild>()) { x.Parent = null; }                                  break;                              case NotifyCollectionChangedAction.Reset:                                  foreach (var x in _items.OfType<IChild>()) { x.Parent = this; }                                  break;                          }
