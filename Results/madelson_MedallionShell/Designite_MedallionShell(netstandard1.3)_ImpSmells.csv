Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Medallion.Shell.Streams,Pipe,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\Pipe.cs,UpdateSignalsNoLock,Cyclomatic complexity of the method is 10
Long Parameter List,Medallion.Shell,AttachedCommand,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\AttachedCommand.cs,AttachedCommand,The method has 5 parameters. Parameters: process' throwOnError' timeout' cancellationToken' disposeOnExit
Long Parameter List,Medallion.Shell,ProcessCommand,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\ProcessCommand.cs,ProcessCommand,The method has 6 parameters. Parameters: startInfo' throwOnError' disposeOnExit' timeout' cancellationToken' standardInputEncoding
Long Parameter List,Medallion.Shell,ProcessHelper,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\ProcessHelper.cs,CreateProcessTask,The method has 5 parameters. Parameters: process' processMonitoringTask' throwOnError' timeout' cancellationToken
Long Parameter List,Medallion.Shell.Streams,Pipe,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\Pipe.cs,WriteAsync,The method has 5 parameters. Parameters: buffer' offset' count' timeout' cancellationToken
Long Parameter List,Medallion.Shell.Streams,Pipe,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\Pipe.cs,WriteNoLockAsync,The method has 5 parameters. Parameters: buffer' offset' count' timeout' cancellationToken
Long Parameter List,Medallion.Shell.Streams,Pipe,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\Pipe.cs,ReadAsync,The method has 5 parameters. Parameters: buffer' offset' count' timeout' cancellationToken
Long Parameter List,Medallion.Shell.Streams,Pipe,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\Pipe.cs,ReadNoLockAsync,The method has 5 parameters. Parameters: buffer' offset' count' timeout' cancellationToken
Long Identifier,Medallion.Shell,AttachedCommand,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\AttachedCommand.cs,,The length of the parameter StreamPropertyExceptionMessage is 30.
Long Identifier,Medallion.Shell,ProcessCommand,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\ProcessCommand.cs,,The length of the parameter processIdOrExceptionDispatchInfo is 32.
Long Identifier,Medallion.Shell,ProcessHelper,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\ProcessHelper.cs,,The length of the parameter ProcessNotAccessibleWithDisposeOnExitEnabled is 44.
Long Identifier,Medallion.Shell.Signals,NativeMethods,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Signals\NativeMethods.cs,,The length of the parameter AllProcessesWithCurrentConsoleGroup is 35.
Long Statement,Medallion.Shell,PlatformCompatibilityHelper,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\PlatformCompatibilityHelper.cs,SafeGetExitCode,The length of the statement  "                // hack works around the issue. See https://github.com/mono/mono/blob/master/mcs/class/referencesource/System/services/monitoring/system/diagnosticts/Process.cs " is 160.
Long Statement,Medallion.Shell,PlatformCompatibilityHelper,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\PlatformCompatibilityHelper.cs,SafeStart,The length of the statement  "                standardInput = redirectStandardInput ? new StreamWriter(Stream.Null' Console.InputEncoding) { AutoFlush = true } : null; " is 121.
Long Statement,Medallion.Shell,ProcessHelper,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\ProcessHelper.cs,CreateProcessTask,The length of the statement  "            // want the task result to match the exit condition. The approach is to use a TCS for the returned task that gets completed " is 123.
Long Statement,Medallion.Shell,ProcessHelper,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\ProcessHelper.cs,CreateProcessTask,The length of the statement  "            // in a continuation on the monitoring task. We can't use the continuation itself as the result because it won't be canceled " is 124.
Long Statement,Medallion.Shell,ProcessHelper,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\ProcessHelper.cs,CreateProcessTask,The length of the statement  "            // even from throwing an OCE. To determine the result of the TCS' we set off a "race" between timeout' cancellation' and " is 120.
Long Statement,Medallion.Shell,ProcessHelper,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\ProcessHelper.cs,CreateProcessTask,The length of the statement  "            // processExit to set a resultObject' which is done thread-safely using Interlocked. When timeout or cancellation win' they " is 123.
Long Statement,Medallion.Shell,Shell,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Shell.cs,Run,The length of the statement  "                    ? finalOptions.CommandLineSyntax.CreateArgumentString(arguments.Select(arg => Convert.ToString(arg' CultureInfo.InvariantCulture))) " is 131.
Long Statement,Medallion.Shell,Shell,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Shell.cs,Run,The length of the statement  "                if (command == null) { throw new InvalidOperationException($"{nameof(Command)} initializer passed to {nameof(Options)}.{nameof(Options.Command)} must not return null!"); } " is 171.
Long Statement,Medallion.Shell,Options,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Shell.cs,Timeout,The length of the statement  "                Throw<ArgumentOutOfRangeException>.If(timeout < TimeSpan.Zero && timeout != System.Threading.Timeout.InfiniteTimeSpan' "timeout"); " is 130.
Long Statement,Medallion.Shell,ExceptionHelpers,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Utilities\ExceptionHelpers.cs,IsExpectedPipeException,The length of the statement  "                // see http://stackoverflow.com/questions/24876580/how-to-distinguish-programmatically-between-different-ioexceptions/24877149#24877149 " is 135.
Long Statement,Medallion.Shell,WindowsCommandLineSyntax,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\WindowsCommandLineSyntax.cs,AppendArgument,The length of the statement  "            // https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/ " is 129.
Long Statement,Medallion.Shell.Signals,WindowsProcessSignaler,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Signals\WindowsProcessSignaler.cs,DeploySignalerExeAsync,The length of the statement  "            using (var fileStream = new FileStream(exePath' FileMode.CreateNew' FileAccess.Write' FileShare.None' Constants.ByteBufferSize' useAsync: true)) " is 144.
Long Statement,Medallion.Shell.Streams,Pipe,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\Pipe.cs,WriteNoLockAsync,The length of the statement  "                // MA: we only use the timeout/token on the first time through' to avoid doing part of the write. This way' it's all or nothing " is 127.
Long Statement,Medallion.Shell.Streams,Pipe,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\Pipe.cs,WriteNoLock,The length of the statement  "            Buffer.BlockCopy(src: buffer' srcOffset: offset + writeStartToEndCount' dst: this.buffer' dstOffset: 0' count: count - writeStartToEndCount); " is 141.
Long Statement,Medallion.Shell.Streams,Pipe,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\Pipe.cs,EnsureCapacityNoLock,The length of the statement  "                throw new InvalidOperationException("Sanity check: pipe should not attempt to expand beyond stable size in fixed length mode"); " is 127.
Long Statement,Medallion.Shell.Streams,Pipe,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\Pipe.cs,EnsureCapacityNoLock,The length of the statement  "            Buffer.BlockCopy(src: this.buffer' srcOffset: 0' dst: newBuffer' dstOffset: startToEndCount' count: this.count - startToEndCount); " is 130.
Long Statement,Medallion.Shell.Streams,Pipe,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\Pipe.cs,ReadNoLock,The length of the statement  "                Buffer.BlockCopy(src: this.buffer' srcOffset: this.start' dst: buffer' dstOffset: offset + bytesRead' count: bytesToRead); " is 122.
Long Statement,Medallion.Shell.Streams,PipeInputStream,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\Pipe.cs,Write,The length of the statement  "                    this.pipe.WriteAsync(buffer' offset' count' TimeSpan.FromMilliseconds(this.WriteTimeout)' CancellationToken.None).Wait(); " is 121.
Long Statement,Medallion.Shell.Streams,PipeOutputStream,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\Pipe.cs,Read,The length of the statement  "                    return this.pipe.ReadAsync(buffer' offset' count' TimeSpan.FromMilliseconds(this.ReadTimeout)' CancellationToken.None).Result; " is 126.
Long Statement,Medallion.Shell.Streams,ProcessStreamReader,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\ProcessStreamReader.cs,PipeToAsync,The length of the statement  "            var stream = new FileStream(file.FullName' FileMode.Create' FileAccess.Write' FileShare.Read' bufferSize: 4096' useAsync: true); " is 128.
Empty Catch Block,Medallion.Shell.Streams,CompatibilityStandardInputWrapperStream,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\CompatibilityStandardInputWrapperStream.cs,Flush,The method has an empty catch block.
Empty Catch Block,Medallion.Shell.Streams,CompatibilityStandardInputWrapperStream,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\CompatibilityStandardInputWrapperStream.cs,FlushAsync,The method has an empty catch block.
Empty Catch Block,Medallion.Shell.Streams,CompatibilityStandardInputWrapperStream,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\CompatibilityStandardInputWrapperStream.cs,Write,The method has an empty catch block.
Empty Catch Block,Medallion.Shell.Streams,CompatibilityStandardInputWrapperStream,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\CompatibilityStandardInputWrapperStream.cs,WriteAsync,The method has an empty catch block.
Magic Number,Medallion.Shell,ProcessCommand,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\ProcessCommand.cs,ProcessCommand,The following statement contains a magic number: var ioTasks = new List<Task>(capacity: 2);
Magic Number,Medallion.Shell,WindowsCommandLineSyntax,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\WindowsCommandLineSyntax.cs,AppendArgument,The following statement contains a magic number: switch (ch)                  {                      case '\\':                          ++backSlashCount;                          break;                      case '"':                          builder.Append('\\'' repeatCount: (2 * backSlashCount) + 1);                          backSlashCount = 0;                          builder.Append(ch);                          break;                      default:                          builder.Append('\\'' repeatCount: backSlashCount);                          backSlashCount = 0;                          builder.Append(ch);                          break;                  }
Magic Number,Medallion.Shell,WindowsCommandLineSyntax,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\WindowsCommandLineSyntax.cs,AppendArgument,The following statement contains a magic number: builder.Append('\\'' repeatCount: 2 * backSlashCount)                  .Append('"');
Magic Number,Medallion.Shell.Signals,WindowsProcessSignaler,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Signals\WindowsProcessSignaler.cs,SendSignalFromCurrentProcess,The following statement contains a magic number: return await waitForSignalSemaphore.WaitAsync(TimeSpan.FromSeconds(30)).ConfigureAwait(false);
Magic Number,Medallion.Shell.Streams,MergedLinesEnumerable,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\MergedLinesEnumerable.cs,GetEnumeratorInternal,The following statement contains a magic number: var tasks = new List<ReaderAndTask>(capacity: 2);
Magic Number,Medallion.Shell.Streams,ProcessStreamReader,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\Streams\ProcessStreamReader.cs,PipeToAsync,The following statement contains a magic number: var stream = new FileStream(file.FullName' FileMode.Create' FileAccess.Write' FileShare.Read' bufferSize: 4096' useAsync: true);
Missing Default,Medallion.Shell,MonoUnixCommandLineSyntax,D:\research\architectureSmells\repos\madelson_MedallionShell\MedallionShell\MonoUnixCommandLineSyntax.cs,AppendArgument,The following switch statement is missing a default case: switch (@char)                  {                      case '$':                      case '`':                      case '"':                      case '\\':                          builder.Append('\\');                          break;                  }
