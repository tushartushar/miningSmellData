Implementation smell,Namespace,Class,File,Method,Description
Long Statement,WindowsAzure.Tests.Common,MocksFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\MocksFactory.cs,GetQueryExecutorMock,The length of the statement  "            mock.Setup(executor => executor.ExecuteWithoutResult(It.IsAny<TEntity>()' It.IsAny<Func<ITableEntity' TableOperation>>())); " is 123.
Long Statement,WindowsAzure.Tests.Common,MocksFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\MocksFactory.cs,GetQueryExecutorMock,The length of the statement  "            mock.Setup(executor => executor.ExecuteAsync(It.IsAny<TEntity>()' It.IsAny<Func<ITableEntity' TableOperation>>()' It.IsAny<CancellationToken>())) " is 145.
Long Statement,WindowsAzure.Tests.Common,MocksFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\MocksFactory.cs,GetQueryExecutorMock,The length of the statement  "                .Returns((TEntity entity' Func<ITableEntity' TableOperation> operation' CancellationToken cancellationToken) => Task.FromResult(entity)); " is 137.
Long Statement,WindowsAzure.Tests.Common,MocksFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\MocksFactory.cs,GetQueryExecutorMock,The length of the statement  "            mock.Setup(executor => executor.ExecuteWithoutResultAsync(It.IsAny<TEntity>()' It.IsAny<Func<ITableEntity' TableOperation>>()' It.IsAny<CancellationToken>())) " is 158.
Long Statement,WindowsAzure.Tests.Common,MocksFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\MocksFactory.cs,GetQueryExecutorMock,The length of the statement  "                .Returns((TEntity entity' Func<ITableEntity' TableOperation> operation' CancellationToken cancellationToken) => TaskHelpers.Completed()); " is 137.
Long Statement,WindowsAzure.Tests.Common,MocksFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\MocksFactory.cs,GetQueryExecutorMock,The length of the statement  "            mock.Setup(executor => executor.ExecuteBatches(It.IsAny<IEnumerable<TEntity>>()' It.IsAny<Func<ITableEntity' TableOperation>>())) " is 129.
Long Statement,WindowsAzure.Tests.Common,MocksFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\MocksFactory.cs,GetQueryExecutorMock,The length of the statement  "            mock.Setup(executor => executor.ExecuteBatchesWithoutResult(It.IsAny<IEnumerable<TEntity>>()' It.IsAny<Func<ITableEntity' TableOperation>>())); " is 143.
Long Statement,WindowsAzure.Tests.Common,MocksFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\MocksFactory.cs,GetQueryExecutorMock,The length of the statement  "            mock.Setup(executor => executor.ExecuteBatchesAsync(It.IsAny<IEnumerable<TEntity>>()' It.IsAny<Func<ITableEntity' TableOperation>>()' It.IsAny<CancellationToken>())) " is 165.
Long Statement,WindowsAzure.Tests.Common,MocksFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\MocksFactory.cs,GetQueryExecutorMock,The length of the statement  "                .Returns((IEnumerable<TEntity> entities' Func<ITableEntity' TableOperation> operation' CancellationToken cancellationToken) => Task.FromResult(entities)); " is 154.
Long Statement,WindowsAzure.Tests.Common,MocksFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\MocksFactory.cs,GetQueryExecutorMock,The length of the statement  "            mock.Setup(executor => executor.ExecuteBatchesWithoutResultAsync(It.IsAny<IEnumerable<TEntity>>()' It.IsAny<Func<ITableEntity' TableOperation>>()' It.IsAny<CancellationToken>())) " is 178.
Long Statement,WindowsAzure.Tests.Common,MocksFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\MocksFactory.cs,GetQueryExecutorMock,The length of the statement  "                .Returns((IEnumerable<TEntity> entities' Func<ITableEntity' TableOperation> operation' CancellationToken cancellationToken) => TaskHelpers.Completed()); " is 152.
Long Statement,WindowsAzure.Tests.Table.Context,AddEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddEntitiesTests.cs,AddEntitiesWithNullParameter,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatches(It.IsAny<IEnumerable<Country>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 146.
Long Statement,WindowsAzure.Tests.Table.Context,AddEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddEntitiesTests.cs,AddEntitiesWithNullParameterAsync,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatches(It.IsAny<IEnumerable<Country>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 146.
Long Statement,WindowsAzure.Tests.Table.Context,AddEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddEntityTests.cs,AddEntityWithNullParameter,The length of the statement  "            mock.Verify(executor => executor.Execute(It.IsAny<Country>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 126.
Long Statement,WindowsAzure.Tests.Table.Context,AddEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddEntityTests.cs,AddEntityWithNullParameterAsync,The length of the statement  "            mock.Verify(executor => executor.Execute(It.IsAny<Country>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 126.
Long Statement,WindowsAzure.Tests.Table.Context,AddOrMergeEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrMergeEntitiesTests.cs,AddOrMergeEntitiesWithNullParameter,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatches(It.IsAny<IEnumerable<Country>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 146.
Long Statement,WindowsAzure.Tests.Table.Context,AddOrMergeEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrMergeEntitiesTests.cs,AddOrMergeEntitiesAsync,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatchesAsync(countries' TableOperation.InsertOrMerge' It.IsAny<CancellationToken>())); " is 126.
Long Statement,WindowsAzure.Tests.Table.Context,AddOrMergeEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrMergeEntitiesTests.cs,AddOrMergeEntitiesWithNullParameterAsync,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatches(It.IsAny<IEnumerable<Country>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 146.
Long Statement,WindowsAzure.Tests.Table.Context,AddOrMergeEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrMergeEntityTests.cs,AddOrMergeEntityWithNullParameter,The length of the statement  "            mock.Verify(executor => executor.Execute(It.IsAny<Country>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 126.
Long Statement,WindowsAzure.Tests.Table.Context,AddOrMergeEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrMergeEntityTests.cs,AddOrMergeEntityWithNullParameterAsync,The length of the statement  "            mock.Verify(executor => executor.Execute(It.IsAny<Country>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 126.
Long Statement,WindowsAzure.Tests.Table.Context,AddOrUpdateEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrUpdateEntitiesTests.cs,AddOrUpdateEntitiesWithNullParameter,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatches(It.IsAny<IEnumerable<Country>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 146.
Long Statement,WindowsAzure.Tests.Table.Context,AddOrUpdateEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrUpdateEntitiesTests.cs,AddOrUpdateEntitiesAsync,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatchesAsync(countries' TableOperation.InsertOrReplace' It.IsAny<CancellationToken>())); " is 128.
Long Statement,WindowsAzure.Tests.Table.Context,AddOrUpdateEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrUpdateEntitiesTests.cs,AddOrUpdateEntitiesWithNullParameterAsync,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatches(It.IsAny<IEnumerable<Country>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 146.
Long Statement,WindowsAzure.Tests.Table.Context,AddOrUpdateEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrUpdateEntityTests.cs,AddOrUpdateEntityWithNullParameter,The length of the statement  "            mock.Verify(executor => executor.Execute(It.IsAny<Country>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 126.
Long Statement,WindowsAzure.Tests.Table.Context,AddOrUpdateEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrUpdateEntityTests.cs,AddOrUpdateEntityWithNullParameterAsync,The length of the statement  "            mock.Verify(executor => executor.Execute(It.IsAny<Country>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 126.
Long Statement,WindowsAzure.Tests.Table.Context,DeleteEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\DeleteEntitiesTests.cs,RemoveEntitiesWithNullParameter,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatches(It.IsAny<IList<Country>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 140.
Long Statement,WindowsAzure.Tests.Table.Context,DeleteEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\DeleteEntitiesTests.cs,RemoveEntitiesAsync,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatchesWithoutResultAsync(countries' TableOperation.Delete' It.IsAny<CancellationToken>())); " is 132.
Long Statement,WindowsAzure.Tests.Table.Context,DeleteEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\DeleteEntitiesTests.cs,RemoveEntitiesWithNullParameterAsync,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatches(It.IsAny<IList<Country>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 140.
Long Statement,WindowsAzure.Tests.Table.Context,DeleteEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\DeleteEntityTests.cs,RemoveEntityWithNullParameter,The length of the statement  "            mock.Verify(executor => executor.Execute(It.IsAny<Country>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 126.
Long Statement,WindowsAzure.Tests.Table.Context,DeleteEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\DeleteEntityTests.cs,RemoveEntityAsync,The length of the statement  "            mock.Verify(executor => executor.ExecuteWithoutResultAsync(country' TableOperation.Delete' It.IsAny<CancellationToken>())); " is 123.
Long Statement,WindowsAzure.Tests.Table.Context,DeleteEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\DeleteEntityTests.cs,RemoveEntityWithNullParameterAsync,The length of the statement  "            mock.Verify(executor => executor.Execute(It.IsAny<Country>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 126.
Long Statement,WindowsAzure.Tests.Table.Context,UpdateEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\UpdateEntitiesTests.cs,UpdateEntitiesWithNullParameter,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatches(It.IsAny<IEnumerable<Country>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 146.
Long Statement,WindowsAzure.Tests.Table.Context,UpdateEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\UpdateEntitiesTests.cs,UpdateEntitiesAsync,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatchesAsync(countries' TableOperation.Replace' It.IsAny<CancellationToken>())); " is 120.
Long Statement,WindowsAzure.Tests.Table.Context,UpdateEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\UpdateEntitiesTests.cs,UpdateEntitiesWithNullParameterAsync,The length of the statement  "            mock.Verify(executor => executor.ExecuteBatches(It.IsAny<IEnumerable<Country>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 146.
Long Statement,WindowsAzure.Tests.Table.Context,UpdateEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\UpdateEntityTests.cs,UpdateEntityWithNullParameter,The length of the statement  "            mock.Verify(executor => executor.Execute(It.IsAny<Country>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 126.
Long Statement,WindowsAzure.Tests.Table.Context,UpdateEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\UpdateEntityTests.cs,UpdateEntityWithNullParameterAsync,The length of the statement  "            mock.Verify(executor => executor.Execute(It.IsAny<Country>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Never()); " is 126.
Long Statement,WindowsAzure.Tests.Table.Queryable.Expressions,SerializationExtensionsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Expressions\SerializationExtensionsTests.cs,SerializeDateTimeValueTest,The length of the statement  "            Assert.Equal(result' string.Format("datetime'{0}'"' XmlConvert.ToString(value' XmlDateTimeSerializationMode.RoundtripKind))); " is 125.
Long Statement,WindowsAzure.Tests.Table.Queryable.Expressions,SerializationExtensionsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Expressions\SerializationExtensionsTests.cs,SerializeDateTimeOffsetValueTest,The length of the statement  "            Assert.Equal(result' string.Format("datetime'{0}'"' XmlConvert.ToString(value.DateTime' XmlDateTimeSerializationMode.RoundtripKind))); " is 134.
Long Statement,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultAfterWhereWithMultipleResults,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => result = tableSet.Where(p => p.Population > 20000000).SingleOrDefault()); " is 120.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ContainsTests.cs,UseContainsAndEqualityInWhereOnRowKeyTest,The length of the statement  "            Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => list.Contains(p.Name) && p.Continent == "Africa"); " is 124.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ContainsTests.cs,UseContainsAndEqualityInWhereOnRowKeyTest,The length of the statement  "            Assert.Equal("(RowKey eq 'Latvia' or RowKey eq 'Germany') and PartitionKey eq 'Africa'"' translation.TableQuery.FilterString); " is 126.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ContainsTests.cs,UseEqualityAndContainsInWhereOnRowKeyTest,The length of the statement  "            Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => p.Continent == "Africa" && list.Contains(p.Name)); " is 124.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ContainsTests.cs,UseEqualityAndContainsInWhereOnRowKeyTest,The length of the statement  "            Assert.Equal("PartitionKey eq 'Africa' and (RowKey eq 'Latvia' or RowKey eq 'Germany')"' translation.TableQuery.FilterString); " is 126.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ContainsTests.cs,UseNotContainsAndEqualityInWhereOnRowKeyTest,The length of the statement  "            Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => !list.Contains(p.Name) && p.Continent == "Africa"); " is 125.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ContainsTests.cs,UseNotContainsAndEqualityInWhereOnRowKeyTest,The length of the statement  "            Assert.Equal("(RowKey ne 'Latvia' or RowKey ne 'Germany') and PartitionKey eq 'Africa'"' translation.TableQuery.FilterString); " is 126.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ContainsTests.cs,UseGuidContainsInWhereOnRowKeyTest,The length of the statement  "            Assert.Equal("Id eq guid'48ed2917-f7d4-4383-aa29-4062f1296bbc' or Id eq guid'8a024e77-4f06-49d9-9d46-9a0e59d74fcd'"' translation.TableQuery.FilterString); " is 154.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ContainsTests.cs,UseDateTimeContainsInWhereOnRowKeyTest,The length of the statement  "            Assert.Equal("Formed eq datetime'0001-01-01T00:00:00.0000555' or Formed eq datetime'0001-01-01T00:00:00.0000666'"' translation.TableQuery.FilterString); " is 152.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,LinqSelectWithInvalidMethod,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => translator.Translate((MethodCallExpression) query.Expression' translation)); " is 125.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,QueryTranslatorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\QueryTranslatorTests.cs,QueryTranslatorPerformanceMeasurement,The length of the statement  "                "Formed gt datetime'0123-01-01T00:00:00' and ((PresidentsCount lt 10 and (Id eq guid'48ed2917-f7d4-4383-aa29-4062f1296bbc' or Id eq guid'8a024e77-4f06-49d9-9d46-9a0e59d74fcd')) or ((Population lt 10000000L and PresidentsCount gt 10) and IsExists))"' " is 249.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,QueryTranslatorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\QueryTranslatorTests.cs,TranslateExpressionWithInvocations,The length of the statement  "            Assert.Equal("(PartitionKey eq 'Europe' or PartitionKey eq 'South America') and RowKey eq 'Brazil'"' translation.TableQuery.FilterString); " is 138.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,StringCompareTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\StringCompareTests.cs,UseCompareToInWhereOnRowKeyTest,The length of the statement  "            Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => p.Name.CompareTo("F") >= 0 && p.Name.CompareTo("G") <= 0); " is 132.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,StringCompareTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\StringCompareTests.cs,UseCompareInWhereOnRowKeyTest,The length of the statement  "                () => _countries.Where(p => String.Compare(p.Name' "F"' StringComparison.Ordinal) >= 0 && String.Compare(p.Name' "G"' StringComparison.Ordinal) <= 0); " is 150.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,StringCompareTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\StringCompareTests.cs,UseCompareOrdinalInWhereOnRowKeyTest,The length of the statement  "            Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => String.CompareOrdinal(p.Name' "F") >= 0 && String.CompareOrdinal(p.Name' "G") <= 0); " is 158.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,TakeTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\TakeTests.cs,TakeWithInvalidMethod,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => translator.Translate((MethodCallExpression) query.Expression' translation)); " is 125.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,UseWhereOnBytes,The length of the statement  "            Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => p.TopSecretKey == new byte[] {0xff' 0xee' 0xdd}); " is 123.
Long Statement,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,BinaryExpressionWithComplexExpression,The length of the statement  "            Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => Math.Abs(p.Area - Convert.ToDouble(555)) < 0.2); " is 122.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,CreateExecutorWithNullEntityConverterParameter,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => new TableRequestParallelExecutor<Country>(cloudTableMock.Object' null' null)); " is 121.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,CreateExecutorWithNullBatchPartitioner,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' null)); " is 143.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,CreateExecutor,The length of the statement  "            var result = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 135.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithNullEntities,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithNullOperation,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatches,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatches,The length of the statement  "            batchPartitionerMock.Verify(p => p.GetBatches(It.IsAny<IEnumerable<ITableEntity>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Once()); " is 148.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesEvenWhenNotEvaluated,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesEvenWhenNotEvaluated,The length of the statement  "            // We don't evaluate the call as we're not interested in the resulting entities. This should still execute the operations. " is 122.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesAsyncWithNullEntities,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesAsyncWithNullEntities,The length of the statement  "            return Assert.ThrowsAsync<ArgumentNullException>(() => executor.ExecuteBatchesAsync(null' null' CancellationToken.None)); " is 121.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesAsyncWithNullOperation,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesAsyncWithNullOperation,The length of the statement  "            return Assert.ThrowsAsync<ArgumentNullException>(() => executor.ExecuteBatchesAsync(entities' null' CancellationToken.None)); " is 125.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesAsync,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesAsync,The length of the statement  "            batchPartitionerMock.Verify(p => p.GetBatches(It.IsAny<IEnumerable<ITableEntity>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Once()); " is 148.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithoutResultWithNullEntities,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithoutResultWithNullOperation,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithoutResult,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithoutResult,The length of the statement  "            batchPartitionerMock.Verify(p => p.GetBatches(It.IsAny<IEnumerable<ITableEntity>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Once()); " is 148.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithoutResultAsyncWithNullEntities,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithoutResultAsyncWithNullEntities,The length of the statement  "            return Assert.ThrowsAsync<ArgumentNullException>(() => executor.ExecuteBatchesWithoutResultAsync(null' null' CancellationToken.None)); " is 134.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithoutResultAsyncWithNullOperation,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithoutResultAsyncWithNullOperation,The length of the statement  "            return Assert.ThrowsAsync<ArgumentNullException>(() => executor.ExecuteBatchesWithoutResultAsync(entities' null' CancellationToken.None)); " is 138.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithoutResultAsync,The length of the statement  "            var executor = new TableRequestParallelExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithoutResultAsync,The length of the statement  "            batchPartitionerMock.Verify(p => p.GetBatches(It.IsAny<IEnumerable<ITableEntity>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Once()); " is 148.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,PartitionerTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\PartitionerTests.cs,CreateBatchesFromShuffledSequenceWith2PartitionKeys,The length of the statement  "                .Select(p => (ITableEntity) new DynamicTableEntity(string.Format("PK{0}"' p%2)' p.ToString(CultureInfo.InvariantCulture))); " is 123.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,PartitionerTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\PartitionerTests.cs,CreateBatchesFromShuffledSequenceWith2PartitionKeys,The length of the statement  "            var fieldInfo = typeof(TableBatchOperation).GetField("batchPartitionKey"' BindingFlags.NonPublic | BindingFlags.Instance); " is 122.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,CreateExecutorWithNullEntityConverterParameter,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' null' null)); " is 123.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,CreateExecutorWithNullBatchPartitioner,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' null)); " is 145.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,CreateExecutor,The length of the statement  "            var result = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 137.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithNullEntities,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithNullOperation,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatches,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatches,The length of the statement  "            batchPartitionerMock.Verify(p => p.GetBatches(It.IsAny<IEnumerable<ITableEntity>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Once()); " is 148.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesEvenWhenNotEvaluated,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesEvenWhenNotEvaluated,The length of the statement  "            // We don't evaluate the call as we're not interested in the resulting entities. This should still execute the operations. " is 122.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesAsyncWithNullEntities,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesAsyncWithNullEntities,The length of the statement  "            return Assert.ThrowsAsync<ArgumentNullException>(() => executor.ExecuteBatchesAsync(null' null' CancellationToken.None)); " is 121.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesAsyncWithNullOperation,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesAsyncWithNullOperation,The length of the statement  "            return Assert.ThrowsAsync<ArgumentNullException>(() => executor.ExecuteBatchesAsync(entities' null' CancellationToken.None)); " is 125.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesAsync,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesAsync,The length of the statement  "            batchPartitionerMock.Verify(p => p.GetBatches(It.IsAny<IEnumerable<ITableEntity>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Once()); " is 148.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithoutResultWithNullEntities,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithoutResultWithNullOperation,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithoutResult,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithoutResult,The length of the statement  "            batchPartitionerMock.Verify(p => p.GetBatches(It.IsAny<IEnumerable<ITableEntity>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Once()); " is 148.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithoutResultAsyncWithNullEntities,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithoutResultAsyncWithNullEntities,The length of the statement  "            return Assert.ThrowsAsync<ArgumentNullException>(() => executor.ExecuteBatchesWithoutResultAsync(null' null' CancellationToken.None)); " is 134.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithoutResultAsyncWithNullOperation,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithoutResultAsyncWithNullOperation,The length of the statement  "            return Assert.ThrowsAsync<ArgumentNullException>(() => executor.ExecuteBatchesWithoutResultAsync(entities' null' CancellationToken.None)); " is 138.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithoutResultAsync,The length of the statement  "            var executor = new TableRequestSequentialExecutor<Country>(cloudTableMock.Object' entityConverterMock.Object' batchPartitionerMock.Object); " is 139.
Long Statement,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithoutResultAsync,The length of the statement  "            batchPartitionerMock.Verify(p => p.GetBatches(It.IsAny<IEnumerable<ITableEntity>>()' It.IsAny<Func<ITableEntity' TableOperation>>())' Times.Once()); " is 148.
Complex Conditional,WindowsAzure.Tests.Common,TestBase,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\TestBase.cs,TestBase,The conditional expression  "xName != null && !string.IsNullOrEmpty(xName.Value) &&                      xKey != null && !string.IsNullOrEmpty(xKey.Value)"  is complex.
Empty Catch Block,WindowsAzure.Tests.Table.Context,AddEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddEntitiesTests.cs,AddEntitiesWithNullParameterAsync,The method has an empty catch block.
Empty Catch Block,WindowsAzure.Tests.Table.Context,AddEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddEntityTests.cs,AddEntityWithNullParameterAsync,The method has an empty catch block.
Empty Catch Block,WindowsAzure.Tests.Table.Context,AddOrMergeEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrMergeEntitiesTests.cs,AddOrMergeEntitiesWithNullParameterAsync,The method has an empty catch block.
Empty Catch Block,WindowsAzure.Tests.Table.Context,AddOrMergeEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrMergeEntityTests.cs,AddOrMergeEntityWithNullParameterAsync,The method has an empty catch block.
Empty Catch Block,WindowsAzure.Tests.Table.Context,AddOrUpdateEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrUpdateEntitiesTests.cs,AddOrUpdateEntitiesWithNullParameterAsync,The method has an empty catch block.
Empty Catch Block,WindowsAzure.Tests.Table.Context,AddOrUpdateEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\AddOrUpdateEntityTests.cs,AddOrUpdateEntityWithNullParameterAsync,The method has an empty catch block.
Empty Catch Block,WindowsAzure.Tests.Table.Context,DeleteEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\DeleteEntitiesTests.cs,RemoveEntitiesWithNullParameterAsync,The method has an empty catch block.
Empty Catch Block,WindowsAzure.Tests.Table.Context,DeleteEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\DeleteEntityTests.cs,RemoveEntityWithNullParameterAsync,The method has an empty catch block.
Empty Catch Block,WindowsAzure.Tests.Table.Context,UpdateEntitiesTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\UpdateEntitiesTests.cs,UpdateEntitiesWithNullParameterAsync,The method has an empty catch block.
Empty Catch Block,WindowsAzure.Tests.Table.Context,UpdateEntityTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\UpdateEntityTests.cs,UpdateEntityWithNullParameterAsync,The method has an empty catch block.
Magic Number,WindowsAzure.Tests.Common,MocksFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\MocksFactory.cs,GetTableBatchPartitionerMock,The following statement contains a magic number: const int batchCount = 100;
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountryDynamicTableEntity,The following statement contains a magic number: return new DynamicTableEntity              {                    PartitionKey = "Europe"'                  RowKey = "Spain"'                  Properties = new Dictionary<string' EntityProperty>()                      {                          {"Area"' new EntityProperty(505992.0)}'                          {"TopSecretKey"' new EntityProperty(new byte[] { 0xaa' 0xbb' 0xcc })}'                          {"Formed"' new EntityProperty(new DateTime(1812' 1' 1))}'                          {"Id"' new EntityProperty(Guid.NewGuid())}'                          {"IsExists"' new EntityProperty(true)}'                          {"Population"' new EntityProperty(47190493L)}'                          {"PresidentsCount"' new EntityProperty(8)}                      }              };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountryDynamicTableEntity,The following statement contains a magic number: return new DynamicTableEntity              {                    PartitionKey = "Europe"'                  RowKey = "Spain"'                  Properties = new Dictionary<string' EntityProperty>()                      {                          {"Area"' new EntityProperty(505992.0)}'                          {"TopSecretKey"' new EntityProperty(new byte[] { 0xaa' 0xbb' 0xcc })}'                          {"Formed"' new EntityProperty(new DateTime(1812' 1' 1))}'                          {"Id"' new EntityProperty(Guid.NewGuid())}'                          {"IsExists"' new EntityProperty(true)}'                          {"Population"' new EntityProperty(47190493L)}'                          {"PresidentsCount"' new EntityProperty(8)}                      }              };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountryDynamicTableEntity,The following statement contains a magic number: return new DynamicTableEntity              {                    PartitionKey = "Europe"'                  RowKey = "Spain"'                  Properties = new Dictionary<string' EntityProperty>()                      {                          {"Area"' new EntityProperty(505992.0)}'                          {"TopSecretKey"' new EntityProperty(new byte[] { 0xaa' 0xbb' 0xcc })}'                          {"Formed"' new EntityProperty(new DateTime(1812' 1' 1))}'                          {"Id"' new EntityProperty(Guid.NewGuid())}'                          {"IsExists"' new EntityProperty(true)}'                          {"Population"' new EntityProperty(47190493L)}'                          {"PresidentsCount"' new EntityProperty(8)}                      }              };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountryDynamicTableEntity,The following statement contains a magic number: return new DynamicTableEntity              {                    PartitionKey = "Europe"'                  RowKey = "Spain"'                  Properties = new Dictionary<string' EntityProperty>()                      {                          {"Area"' new EntityProperty(505992.0)}'                          {"TopSecretKey"' new EntityProperty(new byte[] { 0xaa' 0xbb' 0xcc })}'                          {"Formed"' new EntityProperty(new DateTime(1812' 1' 1))}'                          {"Id"' new EntityProperty(Guid.NewGuid())}'                          {"IsExists"' new EntityProperty(true)}'                          {"Population"' new EntityProperty(47190493L)}'                          {"PresidentsCount"' new EntityProperty(8)}                      }              };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetAddress,The following statement contains a magic number: return new Address              {                  Country = "Spain"'                  Street = "Alameda Spain"'                  Area = 505992'                  District = "Europe"'                  TopSecretKey = new byte[] { 0xaa' 0xbb' 0xcc }'                  Formed = new DateTime(1812' 1' 1)'                  Id = Guid.NewGuid()'                  IsExists = true'                  PresidentsCount = 8              };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetAddress,The following statement contains a magic number: return new Address              {                  Country = "Spain"'                  Street = "Alameda Spain"'                  Area = 505992'                  District = "Europe"'                  TopSecretKey = new byte[] { 0xaa' 0xbb' 0xcc }'                  Formed = new DateTime(1812' 1' 1)'                  Id = Guid.NewGuid()'                  IsExists = true'                  PresidentsCount = 8              };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetAddress,The following statement contains a magic number: return new Address              {                  Country = "Spain"'                  Street = "Alameda Spain"'                  Area = 505992'                  District = "Europe"'                  TopSecretKey = new byte[] { 0xaa' 0xbb' 0xcc }'                  Formed = new DateTime(1812' 1' 1)'                  Id = Guid.NewGuid()'                  IsExists = true'                  PresidentsCount = 8              };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountry,The following statement contains a magic number: return new Country                  {                      Area = 505992'                      Continent = "Europe"'                      TopSecretKey = new byte[] { 0xaa' 0xbb' 0xcc }'                      Formed = new DateTime(1812' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = "Spain"'                      Population = 47190493'                      PresidentsCount = 8                  };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountry,The following statement contains a magic number: return new Country                  {                      Area = 505992'                      Continent = "Europe"'                      TopSecretKey = new byte[] { 0xaa' 0xbb' 0xcc }'                      Formed = new DateTime(1812' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = "Spain"'                      Population = 47190493'                      PresidentsCount = 8                  };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountry,The following statement contains a magic number: return new Country                  {                      Area = 505992'                      Continent = "Europe"'                      TopSecretKey = new byte[] { 0xaa' 0xbb' 0xcc }'                      Formed = new DateTime(1812' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = "Spain"'                      Population = 47190493'                      PresidentsCount = 8                  };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountry,The following statement contains a magic number: return new Country                  {                      Area = 505992'                      Continent = "Europe"'                      TopSecretKey = new byte[] { 0xaa' 0xbb' 0xcc }'                      Formed = new DateTime(1812' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = "Spain"'                      Population = 47190493'                      PresidentsCount = 8                  };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetTableCountry,The following statement contains a magic number: return new CountryTableEntity              {                  Area = 505992'                  PartitionKey = "Europe"'                  TopSecretKey = new byte[] { 0xaa' 0xbb' 0xcc }'                  Formed = new DateTime(1812' 1' 1)'                  Id = Guid.NewGuid()'                  IsExists = true'                  RowKey = "Spain"'                  Population = 47190493'                  PresidentsCount = 8              };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetTableCountry,The following statement contains a magic number: return new CountryTableEntity              {                  Area = 505992'                  PartitionKey = "Europe"'                  TopSecretKey = new byte[] { 0xaa' 0xbb' 0xcc }'                  Formed = new DateTime(1812' 1' 1)'                  Id = Guid.NewGuid()'                  IsExists = true'                  RowKey = "Spain"'                  Population = 47190493'                  PresidentsCount = 8              };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetTableCountry,The following statement contains a magic number: return new CountryTableEntity              {                  Area = 505992'                  PartitionKey = "Europe"'                  TopSecretKey = new byte[] { 0xaa' 0xbb' 0xcc }'                  Formed = new DateTime(1812' 1' 1)'                  Id = Guid.NewGuid()'                  IsExists = true'                  RowKey = "Spain"'                  Population = 47190493'                  PresidentsCount = 8              };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetTableCountry,The following statement contains a magic number: return new CountryTableEntity              {                  Area = 505992'                  PartitionKey = "Europe"'                  TopSecretKey = new byte[] { 0xaa' 0xbb' 0xcc }'                  Formed = new DateTime(1812' 1' 1)'                  Id = Guid.NewGuid()'                  IsExists = true'                  RowKey = "Spain"'                  Population = 47190493'                  PresidentsCount = 8              };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountries,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = "Spain"'                              Population = 47190493'                              PresidentsCount = 8                          }'                      new Country                          {                              Area = 5059922'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1813' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = "Spain2"'                              Population = 471904932'                              PresidentsCount = 82                          }                  };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountries,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = "Spain"'                              Population = 47190493'                              PresidentsCount = 8                          }'                      new Country                          {                              Area = 5059922'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1813' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = "Spain2"'                              Population = 471904932'                              PresidentsCount = 82                          }                  };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountries,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = "Spain"'                              Population = 47190493'                              PresidentsCount = 8                          }'                      new Country                          {                              Area = 5059922'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1813' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = "Spain2"'                              Population = 471904932'                              PresidentsCount = 82                          }                  };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountries,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = "Spain"'                              Population = 47190493'                              PresidentsCount = 8                          }'                      new Country                          {                              Area = 5059922'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1813' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = "Spain2"'                              Population = 471904932'                              PresidentsCount = 82                          }                  };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountries,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = "Spain"'                              Population = 47190493'                              PresidentsCount = 8                          }'                      new Country                          {                              Area = 5059922'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1813' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = "Spain2"'                              Population = 471904932'                              PresidentsCount = 82                          }                  };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountries,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = "Spain"'                              Population = 47190493'                              PresidentsCount = 8                          }'                      new Country                          {                              Area = 5059922'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1813' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = "Spain2"'                              Population = 471904932'                              PresidentsCount = 82                          }                  };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountries,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = "Spain"'                              Population = 47190493'                              PresidentsCount = 8                          }'                      new Country                          {                              Area = 5059922'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1813' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = "Spain2"'                              Population = 471904932'                              PresidentsCount = 82                          }                  };
Magic Number,WindowsAzure.Tests.Common,ObjectsFactory,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Common\ObjectsFactory.cs,GetCountries,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = "Spain"'                              Population = 47190493'                              PresidentsCount = 8                          }'                      new Country                          {                              Area = 5059922'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1813' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = "Spain2"'                              Population = 471904932'                              PresidentsCount = 82                          }                  };
Magic Number,WindowsAzure.Tests.Samples,Entity,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Samples\Entity.cs,PrivateMethod,The following statement contains a magic number: return 222;
Magic Number,WindowsAzure.Tests.Table.Context,TableContextIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\TableContextIntegrationTests.cs,CreateUpdatedAndDeleteEntities,The following statement contains a magic number: country.Population *= 2;
Magic Number,WindowsAzure.Tests.Table.Context,TableContextIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\TableContextIntegrationTests.cs,CreateUpdatedAndDeleteEntities,The following statement contains a magic number: country.Area *= 1.3;
Magic Number,WindowsAzure.Tests.Table.Context,TableContextIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\TableContextIntegrationTests.cs,CreateUpdatedAndDeleteEntitiesAsync,The following statement contains a magic number: country.Population *= 2;
Magic Number,WindowsAzure.Tests.Table.Context,TableContextIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Context\TableContextIntegrationTests.cs,CreateUpdatedAndDeleteEntitiesAsync,The following statement contains a magic number: country.Area *= 1.3;
Magic Number,WindowsAzure.Tests.Table.EntityConverters,TableEntityConverterTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TableEntityConverterTests.cs,CreateConverter,The following statement contains a magic number: Assert.Equal(2' converter.NameChanges.Count);
Magic Number,WindowsAzure.Tests.Table.EntityConverters,TableEntityConverterTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TableEntityConverterTests.cs,ConvertToTableEntity,The following statement contains a magic number: var country = new Country                  {                      Area = 505992'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1812' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = "Spain"'                      Population = 47190493'                      PresidentsCount = 8                  };
Magic Number,WindowsAzure.Tests.Table.EntityConverters,TableEntityConverterTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TableEntityConverterTests.cs,ConvertToTableEntity,The following statement contains a magic number: var country = new Country                  {                      Area = 505992'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1812' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = "Spain"'                      Population = 47190493'                      PresidentsCount = 8                  };
Magic Number,WindowsAzure.Tests.Table.EntityConverters,TableEntityConverterTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TableEntityConverterTests.cs,ConvertToTableEntity,The following statement contains a magic number: var country = new Country                  {                      Area = 505992'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1812' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = "Spain"'                      Population = 47190493'                      PresidentsCount = 8                  };
Magic Number,WindowsAzure.Tests.Table.EntityConverters,TableEntityConverterTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TableEntityConverterTests.cs,ConvertToTableEntity,The following statement contains a magic number: var country = new Country                  {                      Area = 505992'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1812' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = "Spain"'                      Population = 47190493'                      PresidentsCount = 8                  };
Magic Number,WindowsAzure.Tests.Table.EntityConverters,TableEntityConverterTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TableEntityConverterTests.cs,ConvertToEntity,The following statement contains a magic number: var tableEntity = new DynamicTableEntity                  {                      PartitionKey = "Europe"'                      RowKey = "Spain"'                      Properties = new Dictionary<string' EntityProperty>                          {                              {"Area"' new EntityProperty(505992d)}'                              {                                  "TopSecretKey"'                                  new EntityProperty(new byte[] {0xaa' 0xbb' 0xcc})                              }'                              {"Formed"' new EntityProperty(new DateTime(1812' 1' 1))}'                              {"Id"' new EntityProperty(Guid.NewGuid())}'                              {"IsExists"' new EntityProperty(true)}'                              {"Population"' new EntityProperty(47190493L)}'                              {"PresidentsCount"' new EntityProperty(8)}'                          }                  };
Magic Number,WindowsAzure.Tests.Table.EntityConverters,TableEntityConverterTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TableEntityConverterTests.cs,ConvertToEntity,The following statement contains a magic number: var tableEntity = new DynamicTableEntity                  {                      PartitionKey = "Europe"'                      RowKey = "Spain"'                      Properties = new Dictionary<string' EntityProperty>                          {                              {"Area"' new EntityProperty(505992d)}'                              {                                  "TopSecretKey"'                                  new EntityProperty(new byte[] {0xaa' 0xbb' 0xcc})                              }'                              {"Formed"' new EntityProperty(new DateTime(1812' 1' 1))}'                              {"Id"' new EntityProperty(Guid.NewGuid())}'                              {"IsExists"' new EntityProperty(true)}'                              {"Population"' new EntityProperty(47190493L)}'                              {"PresidentsCount"' new EntityProperty(8)}'                          }                  };
Magic Number,WindowsAzure.Tests.Table.EntityConverters,TableEntityConverterTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TableEntityConverterTests.cs,ConvertToEntity,The following statement contains a magic number: var tableEntity = new DynamicTableEntity                  {                      PartitionKey = "Europe"'                      RowKey = "Spain"'                      Properties = new Dictionary<string' EntityProperty>                          {                              {"Area"' new EntityProperty(505992d)}'                              {                                  "TopSecretKey"'                                  new EntityProperty(new byte[] {0xaa' 0xbb' 0xcc})                              }'                              {"Formed"' new EntityProperty(new DateTime(1812' 1' 1))}'                              {"Id"' new EntityProperty(Guid.NewGuid())}'                              {"IsExists"' new EntityProperty(true)}'                              {"Population"' new EntityProperty(47190493L)}'                              {"PresidentsCount"' new EntityProperty(8)}'                          }                  };
Magic Number,WindowsAzure.Tests.Table.EntityConverters,TableEntityConverterTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TableEntityConverterTests.cs,ConvertToEntity,The following statement contains a magic number: var tableEntity = new DynamicTableEntity                  {                      PartitionKey = "Europe"'                      RowKey = "Spain"'                      Properties = new Dictionary<string' EntityProperty>                          {                              {"Area"' new EntityProperty(505992d)}'                              {                                  "TopSecretKey"'                                  new EntityProperty(new byte[] {0xaa' 0xbb' 0xcc})                              }'                              {"Formed"' new EntityProperty(new DateTime(1812' 1' 1))}'                              {"Id"' new EntityProperty(Guid.NewGuid())}'                              {"IsExists"' new EntityProperty(true)}'                              {"Population"' new EntityProperty(47190493L)}'                              {"PresidentsCount"' new EntityProperty(8)}'                          }                  };
Magic Number,WindowsAzure.Tests.Table.EntityConverters.Properties,RegularPropertyTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\Properties\RegularPropertyTests.cs,GetRegularPropertyValue,The following statement contains a magic number: var entity = new EntityWithFields {Int64 = 22};
Magic Number,WindowsAzure.Tests.Table.EntityConverters.Properties,TimestampPropertyTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\Properties\TimestampPropertyTests.cs,SetTimestampValue,The following statement contains a magic number: var tableEntity = new DynamicTableEntity {Timestamp = new DateTime(1980' 1' 1)};
Magic Number,WindowsAzure.Tests.Table.EntityConverters.Properties,TimestampPropertyTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\Properties\TimestampPropertyTests.cs,GetTimestampValue,The following statement contains a magic number: var entity = new EntityWithFields{ DateTime = new DateTime(1980' 1' 1)};
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,EntityTypeMapTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\EntityTypeMapTests.cs,RegisterClassMap_KeysAreValid,The following statement contains a magic number: Assert.Equal(2' map.NameChanges.Count);
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,EntityTypeMapTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\EntityTypeMapTests.cs,GetEntityTypeData_ValidMap,The following statement contains a magic number: Assert.Equal(2' map.NameChanges.Count);
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,EntityTypeMapTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\EntityTypeMapTests.cs,GetEntityTypeData_ValidMap,The following statement contains a magic number: Assert.Equal(8' entity.Properties.Count);
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,EntityTypeMapTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\EntityTypeMapTests.cs,GetEntityTypeData_IgnorePropertyMap,The following statement contains a magic number: Assert.Equal(2' map.NameChanges.Count);
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,EntityTypeMapTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\EntityTypeMapTests.cs,GetEntityTypeData_IgnorePropertyMap,The following statement contains a magic number: Assert.Equal(8' entity.Properties.Count);
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,EntityTypeMapTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\EntityTypeMapTests.cs,GetEntityTypeData_IgnoreProperty,The following statement contains a magic number: Assert.Equal(2' map.NameChanges.Count);
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,EntityTypeMapTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\EntityTypeMapTests.cs,GetEntityTypeData_IgnoreProperty,The following statement contains a magic number: Assert.Equal(7' entity.Properties.Count);
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,EntityTypeMapTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\EntityTypeMapTests.cs,GetEntityTypeData_IgnoreProperty_EvenWhenUnsupportedType,The following statement contains a magic number: Assert.Equal(2' map.NameChanges.Count);
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorSetDoubleTest,The following statement contains a magic number: var entity = new EntityWithFields { Double = 0.3 };
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorSetDoubleTest,The following statement contains a magic number: const Double newValue = 0.5;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorGetDoubleTest,The following statement contains a magic number: const Double value = 0.3;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorSetNullableDoubleTest,The following statement contains a magic number: var entity = new EntityWithFields { NullableDouble = 0.3 };
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorSetNullableDoubleTest,The following statement contains a magic number: Double? newValue = 0.5;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorGetNullableDoubleTest,The following statement contains a magic number: Double? value = 0.3;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorSetInt32Test,The following statement contains a magic number: var entity = new EntityWithFields { Int32 = 2 };
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorSetInt32Test,The following statement contains a magic number: const Int32 newValue = 5;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorGetInt32Test,The following statement contains a magic number: const Int32 value = 3;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorSetNullableInt32Test,The following statement contains a magic number: Int32? newValue = 5;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorGetNullableInt32Test,The following statement contains a magic number: Int32? value = 3;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorSetInt64Test,The following statement contains a magic number: var entity = new EntityWithFields { Int64 = 2 };
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorSetInt64Test,The following statement contains a magic number: const Int64 newValue = 5;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorGetInt64Test,The following statement contains a magic number: const Int64 value = 3;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorSetNullableInt64Test,The following statement contains a magic number: Int64? newValue = 5;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,FieldValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\FieldValueAccessorTests.cs,FieldValueAccessorGetNullableInt64Test,The following statement contains a magic number: Int64? value = 3;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorSetDoubleTest,The following statement contains a magic number: var entity = new EntityWithProperties { Double = 0.3 };
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorSetDoubleTest,The following statement contains a magic number: const Double newValue = 0.5;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorGetDoubleTest,The following statement contains a magic number: const Double value = 0.3;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorSetNullableDoubleTest,The following statement contains a magic number: var entity = new EntityWithProperties { NullableDouble = 0.3 };
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorSetNullableDoubleTest,The following statement contains a magic number: Double? newValue = 0.5;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorGetNullableDoubleTest,The following statement contains a magic number: Double? value = 0.3;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorSetInt32Test,The following statement contains a magic number: var entity = new EntityWithProperties { Int32 = 2 };
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorSetInt32Test,The following statement contains a magic number: const Int32 newValue = 5;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorGetInt32Test,The following statement contains a magic number: const Int32 value = 3;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorSetNullableInt32Test,The following statement contains a magic number: Int32? newValue = 5;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorGetNullableInt32Test,The following statement contains a magic number: Int32? value = 3;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorSetInt64Test,The following statement contains a magic number: var entity = new EntityWithProperties { Int64 = 2 };
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorSetInt64Test,The following statement contains a magic number: const Int64 newValue = 5;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorGetInt64Test,The following statement contains a magic number: const Int64 value = 3;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorSetNullableInt64Test,The following statement contains a magic number: Int64? newValue = 5;
Magic Number,WindowsAzure.Tests.Table.EntityConverters.TypeData,PropertyValueAccessorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\EntityConverters\TypeData\PropertyValueAccessorTests.cs,PropertyValueAccessorGetNullableInt64Test,The following statement contains a magic number: Int64? value = 3;
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,AsyncQueryExtensionsIntegrationTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,ToListAsync,The following statement contains a magic number: Assert.Equal(entities.Count' 4);
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,ToListAsyncWithPredicate,The following statement contains a magic number: Assert.Equal(entities.Count' 4);
Magic Number,WindowsAzure.Tests.Table.Extensions,AsyncQueryExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\AsyncQueryExtensionsIntegrationTests.cs,TakeAsync,The following statement contains a magic number: const int count = 2;
Magic Number,WindowsAzure.Tests.Table.Extensions,CloudTableClientExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\CloudTableClientExtensionsIntegrationTests.cs,CloudTableClientExtensionsIntegrationTests,The following statement contains a magic number: i < 3
Magic Number,WindowsAzure.Tests.Table.Extensions,CloudTableClientExtensionsIntegrationTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Extensions\CloudTableClientExtensionsIntegrationTests.cs,CloudTableClientGetTwoTablesWithTPrefixTest,The following statement contains a magic number: const int count = 2;
Magic Number,WindowsAzure.Tests.Table.Queryable.Expressions,ConstrantEvaluatorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Expressions\ConstrantEvaluatorTests.cs,ClosureOnSubstringOfLocalVariable,The following statement contains a magic number: const int substringIndex = 7;
Magic Number,WindowsAzure.Tests.Table.Queryable.Expressions,ConstrantEvaluatorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Expressions\ConstrantEvaluatorTests.cs,ClosureOnVariableWithField,The following statement contains a magic number: var user = new Entity {PublicField = 123};
Magic Number,WindowsAzure.Tests.Table.Queryable.Expressions,ConstrantEvaluatorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Expressions\ConstrantEvaluatorTests.cs,MeasureEvaluationTime,The following statement contains a magic number: i < 60000000
Magic Number,WindowsAzure.Tests.Table.Queryable.Expressions,SerializationExtensionsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Expressions\SerializationExtensionsTests.cs,SerializeInt32ValueTest,The following statement contains a magic number: const Int32 value = 555;
Magic Number,WindowsAzure.Tests.Table.Queryable.Expressions,SerializationExtensionsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Expressions\SerializationExtensionsTests.cs,SerializeSingleValueTest,The following statement contains a magic number: const Single value = 0.3f;
Magic Number,WindowsAzure.Tests.Table.Queryable.Expressions,SerializationExtensionsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Expressions\SerializationExtensionsTests.cs,SerializeDoubleValueTest,The following statement contains a magic number: const Double value = 0.3;
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,ContainsTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ContainsTests.cs,QueryWithContains,The following statement contains a magic number: Assert.Equal(2' result.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,ExpressionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,QueryWithContains,The following statement contains a magic number: Assert.Equal(2' result.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,QueryWithContainsAndExists,The following statement contains a magic number: Assert.Equal(2' result.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,QueryWithContainsAndComplexFunction,The following statement contains a magic number: Expression<Func<Country' bool>> exists = x => x.IsExists && x.Population > 1000000;
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ExpressionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ExpressionTests.cs,QueryWithContainsAndComplexFunction,The following statement contains a magic number: Assert.Equal(2' result.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 2345409'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1929' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Yugoslavia'                          Population = 23229846'                          PresidentsCount = 1                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 2345409'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1929' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Yugoslavia'                          Population = 23229846'                          PresidentsCount = 1                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 2345409'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1929' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Yugoslavia'                          Population = 23229846'                          PresidentsCount = 1                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultAfterWhere,The following statement contains a magic number: Country result = tableSet.Where(p => p.Population > 20000000).FirstOrDefault();
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultAfterWhereWithExpression,The following statement contains a magic number: Country result = tableSet.Where(p => p.Population > 20000000).FirstOrDefault(p => p.Population < 30000000);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstOrDefaultTests.cs,FirstOrDefaultAfterWhereWithExpression,The following statement contains a magic number: Country result = tableSet.Where(p => p.Population > 20000000).FirstOrDefault(p => p.Population < 30000000);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 2345409'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1929' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Yugoslavia'                          Population = 23229846'                          PresidentsCount = 1                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 2345409'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1929' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Yugoslavia'                          Population = 23229846'                          PresidentsCount = 1                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 2345409'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1929' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Yugoslavia'                          Population = 23229846'                          PresidentsCount = 1                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstAfterWhere,The following statement contains a magic number: Country result = tableSet.Where(p => p.Population > 20000000).First();
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstAfterWhereWithExpression,The following statement contains a magic number: Country result = tableSet.Where(p => p.Population > 20000000).First(p => p.Population < 30000000);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,FirstTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\FirstTests.cs,FirstAfterWhereWithExpression,The following statement contains a magic number: Country result = tableSet.Where(p => p.Population > 20000000).First(p => p.Population < 30000000);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionWithSync,The following statement contains a magic number: var query = from country in tableSet                          where country.Area > 400000                          select new {country.Continent' country.Name};
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionWithSync,The following statement contains a magic number: Assert.Equal(2' values.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionWithAsync,The following statement contains a magic number: var query = from country in tableSet                          where country.Area > 400000                          select new {country.Continent' country.Name};
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\ProjectionTests.cs,ProjectionWithAsync,The following statement contains a magic number: Assert.Equal(2' values.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,QueryLogEntryTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\QueryLogEntryTests.cs,QueryLogEntryTests,The following statement contains a magic number: i < 3
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,QueryLogEntryTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\QueryLogEntryTests.cs,UseFieldInQueryExpression,The following statement contains a magic number: string message = string.Format(MessageTemplate' 2);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 2345409'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1929' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Yugoslavia'                          Population = 23229846'                          PresidentsCount = 1                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 2345409'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1929' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Yugoslavia'                          Population = 23229846'                          PresidentsCount = 1                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 2345409'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1929' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Yugoslavia'                          Population = 23229846'                          PresidentsCount = 1                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultAfterWhere,The following statement contains a magic number: Country result = tableSet.Where(p => p.Population > 60000000).SingleOrDefault();
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultAfterWhereWithMultipleResults,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => result = tableSet.Where(p => p.Population > 20000000).SingleOrDefault());
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultAfterWhereWithExpression,The following statement contains a magic number: Country result = tableSet.Where(p => p.Population > 20000000).SingleOrDefault(p => p.Population < 30000000);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleOrDefaultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleOrDefaultTests.cs,SingleOrDefaultAfterWhereWithExpression,The following statement contains a magic number: Country result = tableSet.Where(p => p.Population > 20000000).SingleOrDefault(p => p.Population < 30000000);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 2345409'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1929' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Yugoslavia'                          Population = 23229846'                          PresidentsCount = 1                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 2345409'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1929' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Yugoslavia'                          Population = 23229846'                          PresidentsCount = 1                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 2345409'                          Continent = Europe'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1929' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Yugoslavia'                          Population = 23229846'                          PresidentsCount = 1                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleAfterWhere,The following statement contains a magic number: Country result = tableSet.Where(p => p.Population > 60000000).Single();
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleAfterWhereWithMultipleResult,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => result = tableSet.Where(p => p.Population > 20000000).Single());
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleAfterWhereWithExpression,The following statement contains a magic number: Country result = tableSet.Where(p => p.Population > 20000000).Single(p => p.Population < 30000000);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,SingleTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\SingleTests.cs,SingleAfterWhereWithExpression,The following statement contains a magic number: Country result = tableSet.Where(p => p.Population > 20000000).Single(p => p.Population < 30000000);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 357021'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1871' 1' 18)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = Germany'                      Population = 81799600'                      PresidentsCount = 11                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 357021'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1871' 1' 18)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = Germany'                      Population = 81799600'                      PresidentsCount = 11                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 357021'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1871' 1' 18)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = Germany'                      Population = 81799600'                      PresidentsCount = 11                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 357021'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1871' 1' 18)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = Germany'                      Population = 81799600'                      PresidentsCount = 11                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 357021'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1871' 1' 18)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = Germany'                      Population = 81799600'                      PresidentsCount = 11                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 505992'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1812' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = false'                      Name = Spain'                      Population = 47190493'                      PresidentsCount = 8                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 505992'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1812' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = false'                      Name = Spain'                      Population = 47190493'                      PresidentsCount = 8                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 505992'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1812' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = false'                      Name = Spain'                      Population = 47190493'                      PresidentsCount = 8                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 505992'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1812' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = false'                      Name = Spain'                      Population = 47190493'                      PresidentsCount = 8                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 674843'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1792' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = France'                      Population = 65350000'                      PresidentsCount = 24                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 674843'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1792' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = France'                      Population = 65350000'                      PresidentsCount = 24                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 674843'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1792' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = France'                      Population = 65350000'                      PresidentsCount = 24                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 674843'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1792' 1' 1)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = France'                      Population = 65350000'                      PresidentsCount = 24                  });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 338424'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1809' 3' 29)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = Finland'                      Population = 5421827'                      PresidentsCount = 12                  }                  );
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 338424'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1809' 3' 29)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = Finland'                      Population = 5421827'                      PresidentsCount = 12                  }                  );
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 338424'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1809' 3' 29)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = Finland'                      Population = 5421827'                      PresidentsCount = 12                  }                  );
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 338424'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1809' 3' 29)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = Finland'                      Population = 5421827'                      PresidentsCount = 12                  }                  );
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 338424'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1809' 3' 29)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = Finland'                      Population = 5421827'                      PresidentsCount = 12                  }                  );
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,TableQueryProviderTests,The following statement contains a magic number: tableSet.Add(new Country                  {                      Area = 338424'                      Continent = "Europe"'                      TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                      Formed = new DateTime(1809' 3' 29)'                      Id = Guid.NewGuid()'                      IsExists = true'                      Name = Finland'                      Population = 5421827'                      PresidentsCount = 12                  }                  );
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,TableQueryProviderTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\TableQueryProviderTests.cs,CallExecuteMethodOfQueryProviderTest,The following statement contains a magic number: Assert.Equal(3' typedResult.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 357021'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1871' 1' 18)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Germany'                          Population = 81799600'                          PresidentsCount = 11                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 505992'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1812' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = false'                          Name = Spain'                          Population = 47190493'                          PresidentsCount = 8                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 674843'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1792' 1' 1)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = France'                          Population = 65350000'                          PresidentsCount = 24                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,WhereTests,The following statement contains a magic number: tableSet.Add(                  new Country                      {                          Area = 338424'                          Continent = "Europe"'                          TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                          Formed = new DateTime(1809' 3' 29)'                          Id = Guid.NewGuid()'                          IsExists = true'                          Name = Finland'                          Population = 5421827'                          PresidentsCount = 12                      });
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,ComplexExpression,The following statement contains a magic number: const int value = 1800;
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,ComplexExpression,The following statement contains a magic number: IQueryable<Country> query =                  tableSet.Where(                      p => p.Formed > new DateTime(value' 1' 1) &&                           (p.PresidentsCount < 10 ||                            p.Population < 10000000 && p.PresidentsCount > 10 && p.IsExists));
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,ComplexExpression,The following statement contains a magic number: IQueryable<Country> query =                  tableSet.Where(                      p => p.Formed > new DateTime(value' 1' 1) &&                           (p.PresidentsCount < 10 ||                            p.Population < 10000000 && p.PresidentsCount > 10 && p.IsExists));
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,ComplexExpression,The following statement contains a magic number: IQueryable<Country> query =                  tableSet.Where(                      p => p.Formed > new DateTime(value' 1' 1) &&                           (p.PresidentsCount < 10 ||                            p.Population < 10000000 && p.PresidentsCount > 10 && p.IsExists));
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,ComplexExpression,The following statement contains a magic number: Assert.Equal(2' values.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,UseQueryExpressionTwice,The following statement contains a magic number: const int value = 1800;
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,UseQueryExpressionTwice,The following statement contains a magic number: IQueryable<Country> queryTwoEntity =                  tableSet.Where(                      p => p.Formed > new DateTime(value' 1' 1) &&                           (p.PresidentsCount < 10 ||                            p.Population < 10000000 && p.PresidentsCount > 10 && p.IsExists));
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,UseQueryExpressionTwice,The following statement contains a magic number: IQueryable<Country> queryTwoEntity =                  tableSet.Where(                      p => p.Formed > new DateTime(value' 1' 1) &&                           (p.PresidentsCount < 10 ||                            p.Population < 10000000 && p.PresidentsCount > 10 && p.IsExists));
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,UseQueryExpressionTwice,The following statement contains a magic number: IQueryable<Country> queryTwoEntity =                  tableSet.Where(                      p => p.Formed > new DateTime(value' 1' 1) &&                           (p.PresidentsCount < 10 ||                            p.Population < 10000000 && p.PresidentsCount > 10 && p.IsExists));
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,UseQueryExpressionTwice,The following statement contains a magic number: Assert.Equal(2' results.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,UseCombinedClause,The following statement contains a magic number: const int value = 1800;
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,UseCombinedClause,The following statement contains a magic number: IQueryable<Country> queryTwoEntity =                  tableSet.Where(p => p.Formed > new DateTime(value' 1' 1))                          .Where(p => p.Population > 10000000)                          .Where(p => p.PresidentsCount > 10);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,UseCombinedClause,The following statement contains a magic number: IQueryable<Country> queryTwoEntity =                  tableSet.Where(p => p.Formed > new DateTime(value' 1' 1))                          .Where(p => p.Population > 10000000)                          .Where(p => p.PresidentsCount > 10);
Magic Number,WindowsAzure.Tests.Table.Queryable.Integration,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Integration\WhereTests.cs,GetAllEntities,The following statement contains a magic number: Assert.Equal(4' results.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ContainsTests.cs,UseDoubleContainsInWhereOnRowKeyTest,The following statement contains a magic number: var list = new List<double>                  {                      111.11'                      222.22                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ContainsTests.cs,UseDoubleContainsInWhereOnRowKeyTest,The following statement contains a magic number: var list = new List<double>                  {                      111.11'                      222.22                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ContainsTests.cs,UseDateTimeContainsInWhereOnRowKeyTest,The following statement contains a magic number: var list = new List<DateTime>                  {                      DateTime.FromBinary(555)'                      DateTime.FromBinary(666)                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ContainsTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ContainsTests.cs,UseDateTimeContainsInWhereOnRowKeyTest,The following statement contains a magic number: var list = new List<DateTime>                  {                      DateTime.FromBinary(555)'                      DateTime.FromBinary(666)                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,GetList,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 357021'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1871' 1' 18)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = Germany'                              Population = 81799600'                              PresidentsCount = 11                          }'                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = Spain'                              Population = 47190493'                              PresidentsCount = 8                          }                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,GetList,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 357021'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1871' 1' 18)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = Germany'                              Population = 81799600'                              PresidentsCount = 11                          }'                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = Spain'                              Population = 47190493'                              PresidentsCount = 8                          }                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,GetList,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 357021'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1871' 1' 18)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = Germany'                              Population = 81799600'                              PresidentsCount = 11                          }'                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = Spain'                              Population = 47190493'                              PresidentsCount = 8                          }                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,GetList,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 357021'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1871' 1' 18)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = Germany'                              Population = 81799600'                              PresidentsCount = 11                          }'                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = Spain'                              Population = 47190493'                              PresidentsCount = 8                          }                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,GetList,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 357021'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1871' 1' 18)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = Germany'                              Population = 81799600'                              PresidentsCount = 11                          }'                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = Spain'                              Population = 47190493'                              PresidentsCount = 8                          }                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,GetList,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 357021'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1871' 1' 18)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = Germany'                              Population = 81799600'                              PresidentsCount = 11                          }'                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = Spain'                              Population = 47190493'                              PresidentsCount = 8                          }                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,GetList,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 357021'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1871' 1' 18)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = Germany'                              Population = 81799600'                              PresidentsCount = 11                          }'                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = Spain'                              Population = 47190493'                              PresidentsCount = 8                          }                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,GetList,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 357021'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1871' 1' 18)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = Germany'                              Population = 81799600'                              PresidentsCount = 11                          }'                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = Spain'                              Population = 47190493'                              PresidentsCount = 8                          }                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,GetList,The following statement contains a magic number: return new List<Country>                  {                      new Country                          {                              Area = 357021'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1871' 1' 18)'                              Id = Guid.NewGuid()'                              IsExists = true'                              Name = Germany'                              Population = 81799600'                              PresidentsCount = 11                          }'                      new Country                          {                              Area = 505992'                              Continent = "Europe"'                              TopSecretKey = new byte[] {0xaa' 0xbb' 0xcc}'                              Formed = new DateTime(1812' 1' 1)'                              Id = Guid.NewGuid()'                              IsExists = false'                              Name = Spain'                              Population = 47190493'                              PresidentsCount = 8                          }                  };
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,LinqSelectWithProjectionClass,The following statement contains a magic number: Assert.Equal(3' translation.TableQuery.SelectColumns.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,LinqSelectWithPrivateProjectionClass,The following statement contains a magic number: Assert.Equal(2' translation.TableQuery.SelectColumns.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,ProjectionTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\ProjectionTests.cs,LinqSelectWithAnonymousType,The following statement contains a magic number: Assert.Equal(2' translation.TableQuery.SelectColumns.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,QueryTranslatorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\QueryTranslatorTests.cs,TranslateExpressionWithProjections,The following statement contains a magic number: Assert.Equal(2' translation.TableQuery.SelectColumns.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,QueryTranslatorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\QueryTranslatorTests.cs,QueryTranslatorPerformanceMeasurement,The following statement contains a magic number: IQueryable<Country> query = GetQueryable<Country>()                  .Where(                      p => p.Formed > new DateTime(123' 1' 1) &&                           (p.PresidentsCount < 10 && list.Contains(p.Id) ||                            p.Population < 10000000 && p.PresidentsCount > 10 && p.IsExists));
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,QueryTranslatorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\QueryTranslatorTests.cs,QueryTranslatorPerformanceMeasurement,The following statement contains a magic number: IQueryable<Country> query = GetQueryable<Country>()                  .Where(                      p => p.Formed > new DateTime(123' 1' 1) &&                           (p.PresidentsCount < 10 && list.Contains(p.Id) ||                            p.Population < 10000000 && p.PresidentsCount > 10 && p.IsExists));
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,QueryTranslatorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\QueryTranslatorTests.cs,QueryTranslatorPerformanceMeasurement,The following statement contains a magic number: IQueryable<Country> query = GetQueryable<Country>()                  .Where(                      p => p.Formed > new DateTime(123' 1' 1) &&                           (p.PresidentsCount < 10 && list.Contains(p.Id) ||                            p.Population < 10000000 && p.PresidentsCount > 10 && p.IsExists));
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,QueryTranslatorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\QueryTranslatorTests.cs,QueryTranslatorPerformanceMeasurement,The following statement contains a magic number: IQueryable<Country> query = GetQueryable<Country>()                  .Where(                      p => p.Formed > new DateTime(123' 1' 1) &&                           (p.PresidentsCount < 10 && list.Contains(p.Id) ||                            p.Population < 10000000 && p.PresidentsCount > 10 && p.IsExists));
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,QueryTranslatorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\QueryTranslatorTests.cs,TranslateInvalidExpression,The following statement contains a magic number: Expression<Func<double' double>> expression = d => Math.Ceiling(.5);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,TakeTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\TakeTests.cs,TakeOneEntityTest,The following statement contains a magic number: const int count = 435435;
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,TakeTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\TakeTests.cs,TakeOneEntityAfterWhereMethodTest,The following statement contains a magic number: const int count = 555;
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,TranslationResultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\TranslationResultTests.cs,AddTop,The following statement contains a magic number: const int count = 5;
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,TranslationResultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\TranslationResultTests.cs,AddNegativeTop,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => result.AddTop(-2));
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,TranslationResultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\TranslationResultTests.cs,AddColumnTwice,The following statement contains a magic number: Assert.Equal(2' result.TableQuery.SelectColumns.Count);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,TranslationResultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\TranslationResultTests.cs,AddPostProcessing,The following statement contains a magic number: LambdaExpression expression = Expression.Lambda(Expression.Constant(2));
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,TranslationResultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\TranslationResultTests.cs,AddTwoPostProcessing,The following statement contains a magic number: Expression<Func<int>> expression1 = () => 2;
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,TranslationResultTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\TranslationResultTests.cs,AddTwoPostProcessing,The following statement contains a magic number: Expression<Func<int' int>> expression2 = (val) => val + 3;
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,UseWhereOnDouble,The following statement contains a magic number: Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => p.Area < 350000);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,UseWhereOnDateTime,The following statement contains a magic number: Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => p.Formed < new DateTime(1800' 1' 1));
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,UseWhereOnInt64,The following statement contains a magic number: Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => p.Population >= 80000000L);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,UseWhereOnInt32,The following statement contains a magic number: Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => p.PresidentsCount <= 10);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,BinaryExpressionWithExternalMethodCall,The following statement contains a magic number: Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => p.Area == Convert.ToDouble(555));
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,BinaryExpressionWithComplexExpression,The following statement contains a magic number: Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => Math.Abs(p.Area - Convert.ToDouble(555)) < 0.2);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,BinaryExpressionWithComplexExpression,The following statement contains a magic number: Expression<Func<IQueryable<Country>>> query = () => _countries.Where(p => Math.Abs(p.Area - Convert.ToDouble(555)) < 0.2);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,WhereWithInvalidMethod,The following statement contains a magic number: Expression<Func<IQueryable<Country>>> query = () => _countries.Take(2);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,WhereWithNullableDateTime,The following statement contains a magic number: var value = new DateTime(1980' 1' 1);
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,WhereWithNullableInt32,The following statement contains a magic number: const int value = 33;
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,WhereWithNullableInt64,The following statement contains a magic number: const long value = 22L;
Magic Number,WindowsAzure.Tests.Table.Queryable.Methods,WhereTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\Queryable\Methods\WhereTests.cs,WhereWithNullableDouble,The following statement contains a magic number: const double value = .3;
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,ExecutorFactoryTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ExecutorFactoryTests.cs,CreateExecutorWithInvalidMode,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => executor = executorFactory.Create((ExecutionMode) 2));
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatches,The following statement contains a magic number: entityConverterMock.Verify(p => p.GetEntity(It.IsAny<Country>())' Times.Exactly(2));
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesAsync,The following statement contains a magic number: entityConverterMock.Verify(p => p.GetEntity(It.IsAny<Country>())' Times.Exactly(2));
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithoutResult,The following statement contains a magic number: entityConverterMock.Verify(p => p.GetEntity(It.IsAny<Country>())' Times.Exactly(2));
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,ParallelExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\ParallelExecutorTests.cs,ExecuteBatchesWithoutResultAsync,The following statement contains a magic number: entityConverterMock.Verify(p => p.GetEntity(It.IsAny<Country>())' Times.Exactly(2));
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,PartitionerTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\PartitionerTests.cs,CreateBatchesFromSequenceWithSamePartiotionKey,The following statement contains a magic number: const int count = 200;
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,PartitionerTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\PartitionerTests.cs,CreateBatchesFromSequenceWithSamePartiotionKey,The following statement contains a magic number: Assert.Equal(2' batches.Count);
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,PartitionerTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\PartitionerTests.cs,CreateBatchesFromShuffledSequenceWith2PartitionKeys,The following statement contains a magic number: const int count = 300;
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,PartitionerTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\PartitionerTests.cs,CreateBatchesFromShuffledSequenceWith2PartitionKeys,The following statement contains a magic number: IEnumerable<ITableEntity> entities = Enumerable                  .Range(0' count)                  .Select(p => (ITableEntity) new DynamicTableEntity(string.Format("PK{0}"' p%2)' p.ToString(CultureInfo.InvariantCulture)));
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,PartitionerTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\PartitionerTests.cs,CreateBatchesFromShuffledSequenceWith2PartitionKeys,The following statement contains a magic number: Assert.Equal(100' aggregateResult[0].ElementAt(0).count);
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,PartitionerTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\PartitionerTests.cs,CreateBatchesFromShuffledSequenceWith2PartitionKeys,The following statement contains a magic number: Assert.Equal(50' aggregateResult[0].ElementAt(1).count);
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,PartitionerTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\PartitionerTests.cs,CreateBatchesFromShuffledSequenceWith2PartitionKeys,The following statement contains a magic number: Assert.Equal(100' aggregateResult[1].ElementAt(0).count);
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,PartitionerTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\PartitionerTests.cs,CreateBatchesFromShuffledSequenceWith2PartitionKeys,The following statement contains a magic number: Assert.Equal(50' aggregateResult[1].ElementAt(1).count);
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,PartitionerTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\PartitionerTests.cs,CreateBatchesFromSequencWithDifferentPartitionKeys,The following statement contains a magic number: const int count = 200;
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,PartitionerTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\PartitionerTests.cs,CreateBatchesFromSequencWithDifferentPartitionKeys,The following statement contains a magic number: Assert.Equal(200' batches.Count);
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatches,The following statement contains a magic number: entityConverterMock.Verify(p => p.GetEntity(It.IsAny<Country>())' Times.Exactly(2));
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesAsync,The following statement contains a magic number: entityConverterMock.Verify(p => p.GetEntity(It.IsAny<Country>())' Times.Exactly(2));
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithoutResult,The following statement contains a magic number: entityConverterMock.Verify(p => p.GetEntity(It.IsAny<Country>())' Times.Exactly(2));
Magic Number,WindowsAzure.Tests.Table.RequestExecutor,SequentialExecutorTests,D:\research\architectureSmells\repos\dtretyakov_WindowsAzure\WindowsAzure.Tests\Table\RequestExecutor\SequentialExecutorTests.cs,ExecuteBatchesWithoutResultAsync,The following statement contains a magic number: entityConverterMock.Verify(p => p.GetEntity(It.IsAny<Country>())' Times.Exactly(2));
