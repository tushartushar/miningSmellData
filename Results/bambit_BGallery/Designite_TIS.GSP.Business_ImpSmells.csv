Implementation smell,Namespace,Class,File,Method,Description
Long Method,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,RetrieveGallerySettingsFromDataStore,The method has 117 lines of code.
Complex Method,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,Album,Cyclomatic complexity of the method is 12
Complex Method,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,VerifyThumbnailIsInflated,Cyclomatic complexity of the method is 10
Complex Method,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,Sort,Cyclomatic complexity of the method is 8
Complex Method,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,AssignAlbumThumbnail,Cyclomatic complexity of the method is 8
Complex Method,GalleryServerPro.Business,DbManager,C:\repos\bambit_BGallery\TIS.GSP.Business\DbManager.cs,GetCompactAndRepairMessage,Cyclomatic complexity of the method is 8
Complex Method,GalleryServerPro.Business,AlbumSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumSaveBehavior.cs,PersistToFileSystemStore,Cyclomatic complexity of the method is 10
Complex Method,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,PopulateAppSettingsFromDataStore,Cyclomatic complexity of the method is 8
Complex Method,GalleryServerPro.Business,Audio,C:\repos\bambit_BGallery\TIS.GSP.Business\Audio.cs,Audio,Cyclomatic complexity of the method is 9
Complex Method,GalleryServerPro.Business,MediaTemplateCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaTemplateCollection.cs,Find,Cyclomatic complexity of the method is 10
Complex Method,GalleryServerPro.Business,GalleryControlSettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryControlSettings.cs,RetrieveGalleryControlSettingsFromDataStore,Cyclomatic complexity of the method is 16
Complex Method,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,GetAutoRotationFilter,Cyclomatic complexity of the method is 9
Complex Method,GalleryServerPro.Business,License,C:\repos\bambit_BGallery\TIS.GSP.Business\License.cs,Validate,Cyclomatic complexity of the method is 14
Complex Method,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,GenerateAndSaveFile,Cyclomatic complexity of the method is 12
Complex Method,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,RetrieveGallerySettingsFromDataStore,Cyclomatic complexity of the method is 25
Complex Method,GalleryServerPro.Business,ExternalThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ExternalThumbnailCreator.cs,GetGenericThumbnailBitmap,Cyclomatic complexity of the method is 12
Complex Method,GalleryServerPro.Business,ExternalMediaObject,C:\repos\bambit_BGallery\TIS.GSP.Business\ExternalMediaObject.cs,ExternalMediaObject,Cyclomatic complexity of the method is 17
Complex Method,GalleryServerPro.Business,Gallery,C:\repos\bambit_BGallery\TIS.GSP.Business\Gallery.cs,ConfigureGallerySettingsTable,Cyclomatic complexity of the method is 8
Complex Method,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGalleryObjectInstance,Cyclomatic complexity of the method is 11
Complex Method,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,CreateLocalMediaObjectInstance,Cyclomatic complexity of the method is 15
Complex Method,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetMediaObjectFromDto,Cyclomatic complexity of the method is 15
Complex Method,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetMetadataReadWriter,Cyclomatic complexity of the method is 8
Complex Method,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,AddChildObjects,Cyclomatic complexity of the method is 9
Complex Method,GalleryServerPro.Business,GalleryServerRole,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryServerRole.cs,ValidateRoleAdminPermissions,Cyclomatic complexity of the method is 13
Complex Method,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GenerateThumbnailImageUsingImageMagick,Cyclomatic complexity of the method is 8
Complex Method,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GetGenericThumbnailBitmap,Cyclomatic complexity of the method is 15
Complex Method,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GetGenericThumbnailBitmapByFileExtension,Cyclomatic complexity of the method is 31
Complex Method,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidateDirectoryName,Cyclomatic complexity of the method is 9
Complex Method,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidateFileName,Cyclomatic complexity of the method is 10
Complex Method,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,Cyclomatic complexity of the method is 9
Complex Method,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,DetermineMediaObjectType,Cyclomatic complexity of the method is 16
Complex Method,GalleryServerPro.Business,Image,C:\repos\bambit_BGallery\TIS.GSP.Business\Image.cs,Image,Cyclomatic complexity of the method is 11
Complex Method,GalleryServerPro.Business,ImageHelper,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageHelper.cs,CreateResizedBitmap,Cyclomatic complexity of the method is 9
Complex Method,GalleryServerPro.Business,MediaObjectSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaObjectSaveBehavior.cs,Save,Cyclomatic complexity of the method is 9
Complex Method,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,Cyclomatic complexity of the method is 10
Complex Method,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,MoveTo,Cyclomatic complexity of the method is 10
Complex Method,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CalculateNeededRotation,Cyclomatic complexity of the method is 12
Complex Method,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,OnBeforeAddMetaItem,Cyclomatic complexity of the method is 8
Complex Method,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,Cyclomatic complexity of the method is 12
Complex Method,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsAuthenticatedUserAuthorized,Cyclomatic complexity of the method is 43
Complex Method,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,CountFiles,Cyclomatic complexity of the method is 10
Complex Method,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeChildDirectories,Cyclomatic complexity of the method is 8
Complex Method,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeMediaObjectFiles,Cyclomatic complexity of the method is 14
Complex Method,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,DeleteOrphanedThumbnailAndOptimizedImages,Cyclomatic complexity of the method is 17
Complex Method,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,RetrieveFromDataStore,Cyclomatic complexity of the method is 26
Complex Method,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,Save,Cyclomatic complexity of the method is 9
Complex Method,GalleryServerPro.Business,Video,C:\repos\bambit_BGallery\TIS.GSP.Business\Video.cs,Video,Cyclomatic complexity of the method is 11
Complex Method,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,Cyclomatic complexity of the method is 40
Complex Method,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,CreateZipStream,Cyclomatic complexity of the method is 11
Complex Method,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,GetMediaFilePath,Cyclomatic complexity of the method is 10
Complex Method,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,GetMediaFileNameForZip,Cyclomatic complexity of the method is 10
Complex Method,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,VerifyAlbumExistsAndReturnReference,Cyclomatic complexity of the method is 9
Complex Method,GalleryServerPro.Business.Metadata,VideoMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\VideoMetadataReadWriter.cs,GetMetaValue,Cyclomatic complexity of the method is 8
Complex Method,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetMetaValue,Cyclomatic complexity of the method is 56
Complex Method,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetGpsValue,Cyclomatic complexity of the method is 17
Complex Method,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetPropertyItemsUsingFullTrustTechnique,Cyclomatic complexity of the method is 8
Complex Method,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,Cyclomatic complexity of the method is 14
Complex Method,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,SetOrientationMetadata,Cyclomatic complexity of the method is 11
Complex Method,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,TryAlternateMethodsOfPersistingMetadata,Cyclomatic complexity of the method is 13
Complex Method,GalleryServerPro.Business.Metadata,MediaObjectMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MediaObjectMetadataReadWriter.cs,GetMetaValue,Cyclomatic complexity of the method is 12
Complex Method,GalleryServerPro.Business.Metadata,MetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataItem.cs,ExtractPropertyItemValue,Cyclomatic complexity of the method is 18
Long Parameter List,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,Album,The method has 19 parameters.
Long Parameter List,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,Sort,The method has 5 parameters.
Long Parameter List,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,GetChildGalleryObjects,The method has 6 parameters.
Long Parameter List,GalleryServerPro.Business,TagSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\TagSearcher.cs,GetTagsForAlbums,The method has 5 parameters.
Long Parameter List,GalleryServerPro.Business,TagSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\TagSearcher.cs,GetTagsForMediaObjects,The method has 5 parameters.
Long Parameter List,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,FindItemsMatchingTitleOrCaption,The method has 12 parameters.
Long Parameter List,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,FindItemsMatchingKeywords,The method has 12 parameters.
Long Parameter List,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,GetAlbumsIdsHavingTags,The method has 7 parameters.
Long Parameter List,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,GetMediaObjectIdsHavingTags,The method has 7 parameters.
Long Parameter List,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,Save,The method has 19 parameters.
Long Parameter List,GalleryServerPro.Business,Audio,C:\repos\bambit_BGallery\TIS.GSP.Business\Audio.cs,Audio,The method has 23 parameters.
Long Parameter List,GalleryServerPro.Business,ExternalMediaObject,C:\repos\bambit_BGallery\TIS.GSP.Business\ExternalMediaObject.cs,ExternalMediaObject,The method has 16 parameters.
Long Parameter List,GalleryServerPro.Business,Gallery,C:\repos\bambit_BGallery\TIS.GSP.Business\Gallery.cs,ConfigureUiTemplateAlbumTable,The method has 15 parameters.
Long Parameter List,GalleryServerPro.Business,DisplayObject,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObject.cs,DisplayObject,The method has 6 parameters.
Long Parameter List,GalleryServerPro.Business,DisplayObject,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObject.cs,CreateInstance,The method has 6 parameters.
Long Parameter List,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,CreateMetadataItem,The method has 6 parameters.
Long Parameter List,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,CreateGalleryServerRoleInstance,The method has 13 parameters.
Long Parameter List,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,FlattenGallery,The method has 5 parameters.
Long Parameter List,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,AddChildObjects,The method has 6 parameters.
Long Parameter List,GalleryServerPro.Business,GalleryObjectCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectCollection.cs,SortByDateTime,The method has 13 parameters.
Long Parameter List,GalleryServerPro.Business,GalleryObjectCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectCollection.cs,SortByString,The method has 12 parameters.
Long Parameter List,GalleryServerPro.Business,GalleryServerRole,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryServerRole.cs,GalleryServerRole,The method has 13 parameters.
Long Parameter List,GalleryServerPro.Business,GenericMediaObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericMediaObject.cs,GenericMediaObject,The method has 19 parameters.
Long Parameter List,GalleryServerPro.Business,Image,C:\repos\bambit_BGallery\TIS.GSP.Business\Image.cs,Image,The method has 23 parameters.
Long Parameter List,GalleryServerPro.Business,ImageHelper,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageHelper.cs,SaveImageFile,The method has 6 parameters.
Long Parameter List,GalleryServerPro.Business,ImageHelper,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageHelper.cs,CreateResizedBitmap,The method has 5 parameters.
Long Parameter List,GalleryServerPro.Business,UserAccount,C:\repos\bambit_BGallery\TIS.GSP.Business\UserAccount.cs,UserAccount,The method has 18 parameters.
Long Parameter List,GalleryServerPro.Business,MimeType,C:\repos\bambit_BGallery\TIS.GSP.Business\MimeType.cs,MimeType,The method has 7 parameters.
Long Parameter List,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,ThrowIfUserNotAuthorized,The method has 7 parameters.
Long Parameter List,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,The method has 7 parameters.
Long Parameter List,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,The method has 9 parameters.
Long Parameter List,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsAnonymousUserAuthorizedForMultipleSecurityActions,The method has 5 parameters.
Long Parameter List,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeMediaObjectFiles,The method has 5 parameters.
Long Parameter List,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,UpdateStatus,The method has 5 parameters.
Long Parameter List,GalleryServerPro.Business,SynchronizationStatus,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationStatus.cs,SynchronizationStatus,The method has 7 parameters.
Long Parameter List,GalleryServerPro.Business,SynchronizationStatus,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationStatus.cs,Update,The method has 7 parameters.
Long Parameter List,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,Save,The method has 5 parameters.
Long Parameter List,GalleryServerPro.Business,Video,C:\repos\bambit_BGallery\TIS.GSP.Business\Video.cs,Video,The method has 23 parameters.
Long Parameter List,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The method has 6 parameters.
Long Parameter List,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,AddZipEntry,The method has 5 parameters.
Long Parameter List,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,AddFileZipEntry,The method has 5 parameters.
Long Parameter List,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,AddFileZipEntry,The method has 7 parameters.
Long Parameter List,GalleryServerPro.Business.Metadata,MetadataDefinition,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataDefinition.cs,MetadataDefinition,The method has 7 parameters.
Long Parameter List,GalleryServerPro.Business.Metadata,GalleryObjectMetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\GalleryObjectMetadataItem.cs,GalleryObjectMetadataItem,The method has 6 parameters.
Long Identifier,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,Inflate,The length of the parameter existingAlbumThatIsNotInflated is 30.
Long Identifier,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,Inflate,The length of the parameter needToLoadChildAlbumsAndObjects is 31.
Long Identifier,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,AssignAlbumThumbnail,The length of the parameter recursivelyAssignChildrenAlbums is 31.
Long Identifier,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,Save,The length of the parameter allowGalleryAdminToManageUsersAndRoles is 38.
Long Identifier,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,Save,The length of the parameter allowGalleryAdminViewAllUsersAndRoles is 37.
Long Identifier,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,OnMediaConversionCompleteOptimizedCreated,The length of the parameter optFileDifferentThanCreatedFile is 31.
Long Identifier,GalleryServerPro.Business,MediaEncoderSettings,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaEncoderSettings.cs,ShouldValidate,The length of the parameter extensionsNotNeedingValidation is 30.
Long Identifier,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,ValidateVideoThumbnail,The length of the parameter videoThumbnailPositionFallback is 30.
Long Identifier,GalleryServerPro.Business,GalleryObjectCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectCollection.cs,Contains,The length of the parameter newObjectsAndFilepathsAreEqual is 30.
Long Identifier,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidateDirectoryName,The length of the parameter defaultAlbumDirectoryNameLength is 31.
Long Identifier,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidateFileName,The length of the parameter newFilenameWithoutExtensionAndSuffix is 36.
Long Identifier,GalleryServerPro.Business,ImageOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageOptimizedCreator.cs,IsOptimizedImageRequired,The length of the parameter originalExceedsOptimizedDimensionTriggers is 41.
Long Identifier,GalleryServerPro.Business,ImageOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageOptimizedCreator.cs,DoesOriginalExceedOptimizedDimensionTriggers,The length of the parameter isOriginalFileSizeGreaterThanTriggerSize is 40.
Long Identifier,GalleryServerPro.Business,ImageOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageOptimizedCreator.cs,DoesOriginalExceedOptimizedDimensionTriggers,The length of the parameter isOriginalLengthGreaterThanMaxAllowedLength is 43.
Long Identifier,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the parameter doesOptimizedImageExistAndIsDifferentThanOriginalImage is 54.
Long Identifier,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the parameter destOptimizedPathWithoutFilename is 32.
Long Identifier,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the parameter destThumbnailPathWithoutFilename is 32.
Long Identifier,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,MoveTo,The length of the parameter destOptimizedPathWithoutFilename is 32.
Long Identifier,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,MoveTo,The length of the parameter destThumbnailPathWithoutFilename is 32.
Long Identifier,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,The length of the parameter userIsRequestingSysAdminPermission is 34.
Long Identifier,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,The length of the parameter userIsRequestingGalleryAdminPermission is 38.
Long Identifier,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,The length of the parameter isMoreThanOnePermissionRequest is 30.
Long Identifier,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,GetUserAddObjectPermissions,The length of the parameter userCanAddAlbumToAtLeastOneAlbum is 32.
Long Identifier,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,GetUserAddObjectPermissions,The length of the parameter userCanAddMediaObjectToAtLeastOneAlbum is 38.
Long Identifier,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,DoesOriginalExceedOptimizedTriggers,The length of the parameter isOriginalFileSizeGreaterThanTriggerSize is 40.
Long Identifier,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,DoesOriginalExceedOptimizedTriggers,The length of the parameter isOriginalLengthGreaterThanMaxAllowedLength is 43.
Long Identifier,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapMetadata,The length of the parameter firstFrameInDecoderInFirstFrameOfFile is 37.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,VerifyThumbnailIsInflated,The length of the statement  "	System.Diagnostics.Debug.Assert (this._thumbnailMediaObjectId >= 0' String.Format (CultureInfo.CurrentCulture' "Album.Inflate(false) should have set ThumbnailMediaObjectId >= 0. Instead' it is {0}."' this._thumbnailMediaObjectId)); " is 231.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,AddGalleryObject,The length of the statement  "		//System.Diagnostics.Debug.Assert(this._galleryObjects.Count == 0' String.Format(CultureInfo.CurrentCulture' "this._galleryObjects.Count = {0}"' this._galleryObjects.Count)); " is 174.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,RemoveGalleryObject,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.CurrentCulture' Resources.Album_Remove_Ex_Msg' this.Id' galleryObject.Id' galleryObject.Parent.Id)); " is 156.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,Sort,The length of the statement  "		var go = _galleryObjects.FirstOrDefault (g => g.Id == galleryObject.Id && g.GalleryObjectType == galleryObject.GalleryObjectType); " is 130.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,Inflate,The length of the statement  "		System.Diagnostics.Debug.Assert (!existingAlbumThatIsNotInflated || (existingAlbumThatIsNotInflated && ((this.IsInflated) || (!this.HasChanges)))' String.Format (CultureInfo.CurrentCulture' @"Album.Inflate() was invoked on an existing' uninflated album (IsNew = false' IsInflated = false)' " is 289.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,Inflate,The length of the statement  "						which should have triggered the Factory.LoadAlbumInstance() method to set IsInflated=true and HasChanges=false. Instead' this album currently " is 141.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,Inflate,The length of the statement  "		System.Diagnostics.Debug.Assert (inflateChildMediaObjects == this.AreChildrenInflated' String.Format (CultureInfo.CurrentCulture' "The inflateChildren parameter must match the AreChildrenInflated property. inflateChildren={0}; AreChildrenInflated={1}"' inflateChildMediaObjects' this.AreChildrenInflated)); " is 306.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,Inflate,The length of the statement  "		System.Diagnostics.Debug.Assert (this.ThumbnailMediaObjectId > int.MinValue' "The album's ThumbnailMediaObjectId should have been assigned in this method."); " is 157.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,GetChildGalleryObjects,The length of the statement  "		return new GalleryObjectCollection (_galleryObjects.Where (g => (!g.IsPrivate || !excludePrivateObjects) && g.GalleryObjectType != GalleryObjectType.Album)); " is 157.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,GetChildGalleryObjects,The length of the statement  "		return new GalleryObjectCollection (_galleryObjects.Where (g => (!g.IsPrivate || !excludePrivateObjects) && g.GalleryObjectType == GalleryObjectType.Album)); " is 157.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,GetChildGalleryObjects,The length of the statement  "		return new GalleryObjectCollection (_galleryObjects.Where (g => (!g.IsPrivate || !excludePrivateObjects) && g.GalleryObjectType == galleryObjectType)); " is 151.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,MoveTo,The length of the statement  "	// Step 4: Now assign new thumbnails (if needed) to the albums we moved FROM. (The thumbnail for the destination album was updated in  " is 133.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,MoveTo,The length of the statement  "		Album.AssignAlbumThumbnail (Factory.LoadAlbumInstance (albumId' false' true)' false' false' this.LastModifiedByUserName); " is 121.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,GetIdOfFirstMediaObject,The length of the statement  "		if (!mediaObject.IsNew)// We might encounter new' unsaved objects while synchronizing. Need to skip these since their ID=int.MinValue " is 133.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,ValidateDirectoryName,The length of the statement  "		string newDirName = HelperFunctions.ValidateDirectoryName (dirPath' dirName' Factory.LoadGallerySetting (GalleryId).DefaultAlbumDirectoryNameLength); " is 149.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,ValidateDirectoryName,The length of the statement  "		throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "Invalid directory name. The maximum length for a directory name is {0} characters' but one was specified that is {1} characters. More info: album ID = {2}; album title = '{3}'"' GlobalConstants.AlbumDirectoryNameLength' this.DirectoryName.Length' this.Id' this.Title)); " is 342.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,GetDefaultAlbumThumbnail,The length of the statement  "	var albumThumbnail = DisplayObject.CreateInstance (nullGalleryObject' defaultFilename' width' height' DisplayObjectType.Thumbnail' new NullDisplayObjectCreator ()); " is 164.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,SortAsyncBegin,The length of the statement  "		EventController.RecordEvent (String.Format (CultureInfo.CurrentCulture' "INFO: Beginning sort of album {0} ({1}) by property '{2}' (ascending={3}; recursive={4}' replaceChildSortFields={5})."' Id' Title' SortByMetaName' SortAscending' isRecursive' replaceChildSortFields)' EventType.Info' GalleryId' Factory.LoadGallerySettings ()' AppSetting.Instance); " is 353.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,SortAsyncBegin,The length of the statement  "		EventController.RecordEvent (String.Format (CultureInfo.CurrentCulture' "INFO: Successfully finished sorting album {0}."' Id)' EventType.Info' GalleryId' Factory.LoadGallerySettings ()' AppSetting.Instance); " is 207.
Long Statement,GalleryServerPro.Business,Album,C:\repos\bambit_BGallery\TIS.GSP.Business\Album.cs,SortAsyncBegin,The length of the statement  "		EventController.RecordEvent (String.Format (CultureInfo.CurrentCulture' "CANCELLED: The sorting of album '{0}' has been cancelled due to the previously logged error."' Id)' EventType.Info' GalleryId' Factory.LoadGallerySettings ()' AppSetting.Instance); " is 253.
Long Statement,GalleryServerPro.Business,AlbumDeleteBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteBehavior.cs,DeleteAlbumDirectory,The length of the statement  "	string thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (albumPath' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 168.
Long Statement,GalleryServerPro.Business,AlbumDeleteBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteBehavior.cs,DeleteAlbumDirectory,The length of the statement  "	string optimizedPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (albumPath' gallerySetting.FullOptimizedPath' gallerySetting.FullMediaObjectPath); " is 168.
Long Statement,GalleryServerPro.Business,AlbumDeleteBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteBehavior.cs,DeleteRootAlbumDirectory,The length of the statement  "	string thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (albumPath' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 168.
Long Statement,GalleryServerPro.Business,AlbumDeleteBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteBehavior.cs,DeleteRootAlbumDirectory,The length of the statement  "	string optimizedPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (albumPath' gallerySetting.FullOptimizedPath' gallerySetting.FullMediaObjectPath); " is 168.
Long Statement,GalleryServerPro.Business,AlbumDeleteValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteValidator.cs,CheckForUserAlbumConflict,The length of the statement  "		// User album doesn't exist. Record the error and then return because there is no problem with deleting the current album. " is 122.
Long Statement,GalleryServerPro.Business,AlbumDeleteValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteValidator.cs,CheckForUserAlbumConflict,The length of the statement  "		string msg = String.Format (CultureInfo.CurrentCulture' Resources.Error_User_Album_Parent_Invalid_Ex_Msg' galleryDescription' _albumToDelete.Id); " is 145.
Long Statement,GalleryServerPro.Business,AlbumDeleteValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteValidator.cs,CheckForUserAlbumConflict,The length of the statement  "		EventController.RecordError (new WebException (msg' ex)' AppSetting.Instance' _albumToDelete.GalleryId' Factory.LoadGallerySettings ()); " is 136.
Long Statement,GalleryServerPro.Business,AlbumDeleteValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteValidator.cs,GetDefaultGalleryMediaObject,The length of the statement  "		// We should never get here because the calling method should have already verified there is a value' but we'll be extra safe. " is 126.
Long Statement,GalleryServerPro.Business,AlbumDeleteValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteValidator.cs,GetDefaultGalleryMediaObject,The length of the statement  "		string msg = String.Format (CultureInfo.CurrentCulture' Resources.Error_Default_Gallery_Object_MediaObject_Invalid_Ex_Msg' galleryDescription' _albumToDelete.Id); " is 162.
Long Statement,GalleryServerPro.Business,AlbumDeleteValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteValidator.cs,GetDefaultGalleryMediaObject,The length of the statement  "		EventController.RecordError (new BusinessException (msg' ex)' AppSetting.Instance' _albumToDelete.GalleryId' Factory.LoadGallerySettings ()); " is 141.
Long Statement,GalleryServerPro.Business,AlbumDeleteValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteValidator.cs,GetDefaultGalleryAlbum,The length of the statement  "		// We should never get here because the calling method should have already verified there is a value' but we'll be extra safe. " is 126.
Long Statement,GalleryServerPro.Business,AlbumDeleteValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteValidator.cs,GetDefaultGalleryAlbum,The length of the statement  "		string msg = String.Format (CultureInfo.CurrentCulture' Resources.Error_Default_Gallery_Object_Album_Invalid_Ex_Msg' galleryDescription' _albumToDelete.Id); " is 156.
Long Statement,GalleryServerPro.Business,AlbumDeleteValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumDeleteValidator.cs,GetDefaultGalleryAlbum,The length of the statement  "		EventController.RecordError (new BusinessException (msg' ex)' AppSetting.Instance' _albumToDelete.GalleryId' Factory.LoadGallerySettings ()); " is 141.
Long Statement,GalleryServerPro.Business,AlbumProfileCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumProfileCollection.cs,Add,The length of the statement  "		throw new ArgumentNullException ("item"' "Cannot add null to an existing AlbumSortDefinitionCollection. Items.Count = " + Items.Count); " is 135.
Long Statement,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,GenerateJpegFilename,The length of the statement  "	string extension = ((Path.GetExtension (GalleryObject.Original.FileInfo.Name) ?? String.Empty).Equals (".jpeg"' StringComparison.InvariantCultureIgnoreCase) ? ".jpeg" : ".jpg"); " is 177.
Long Statement,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,GenerateImageUsingImageMagick,The length of the statement  "	string tmpImagePath = Path.Combine (AppSetting.Instance.TempUploadDirectory' String.Concat (Guid.NewGuid ().ToString ()' ".jpg")); " is 130.
Long Statement,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,GenerateImageUsingImageMagick,The length of the statement  "			ex.Data.Add ("GSP Info"' String.Format ("This error occurred while trying to process the ImageMagick-generated file {0}. The original file is {1}. The gallery will try to create an image using .NET instead."' tmpImagePath' GalleryObject.Original.FileNamePhysicalPath)); " is 269.
Long Statement,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,GenerateImageUsingWpf,The length of the statement  "		// Technique adapted from http://weblogs.asp.net/bleroy/archive/2009/12/10/resizing-images-from-the-server-using-wpf-wic-instead-of-gdi.aspx " is 140.
Long Statement,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,RotateUsingWpf,The length of the statement  "		var image = new TransformedBitmap (ReadBitmapFrame (stream)' new RotateTransform (GetRotationInDegrees (actualRotation))); " is 122.
Long Statement,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,GenerateImageUsingGdi,The length of the statement  "			newSize = ImageHelper.SaveImageFile (source' newFilePath' System.Drawing.Imaging.ImageFormat.Jpeg' newSize.Width' newSize.Height' jpegQuality); " is 143.
Long Statement,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,FastResize,The length of the statement  "	var target = new TransformedBitmap (photo' new ScaleTransform (width / photo.Width * dpiXFactor' height / photo.Height * dpiYFactor' 0' 0)); " is 140.
Long Statement,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,GetSizeUsingWpf,The length of the statement  "			ex.Data.Add ("SizeMsg"' String.Format ("Unable to get the width and height of media object {0} ({1}). Display Type {2}"' GalleryObject.Id' displayObject.FileNamePhysicalPath' displayObject.DisplayType)); " is 203.
Long Statement,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,AddMetaValuesBackToRotatedImage,The length of the statement  "		tmpImagePath = Path.Combine (AppSetting.Instance.TempUploadDirectory' String.Concat (Guid.NewGuid ().ToString ()' ".jpg")); " is 123.
Long Statement,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,AddMetaValuesBackToRotatedImage,The length of the statement  "		ImageHelper.SaveImageToDisk (targetImage' tmpImagePath' System.Drawing.Imaging.ImageFormat.Jpeg' GallerySettings.OriginalImageJpegQuality); " is 139.
Long Statement,GalleryServerPro.Business,DbManager,C:\repos\bambit_BGallery\TIS.GSP.Business\DbManager.cs,GetCompactAndRepairMessage,The length of the statement  "			msg = String.Concat ("The following error occurred while compacting the database: "' EventController.GetExceptionDetails (ex)); " is 127.
Long Statement,GalleryServerPro.Business,DbManager,C:\repos\bambit_BGallery\TIS.GSP.Business\DbManager.cs,GetCompactAndRepairMessage,The length of the statement  "			msg = String.Concat ("The database was successfully compacted but the following error occurred while checking the database for errors: "' EventController.GetExceptionDetails (ex)); " is 180.
Long Statement,GalleryServerPro.Business,DbManager,C:\repos\bambit_BGallery\TIS.GSP.Business\DbManager.cs,GetCompactAndRepairMessage,The length of the statement  "			msg = String.Concat ("The database was successfully compacted. However' data corruption was found and the following error occurred while attempting to fix the errors: "' EventController.GetExceptionDetails (ex)); " is 212.
Long Statement,GalleryServerPro.Business,DbManager,C:\repos\bambit_BGallery\TIS.GSP.Business\DbManager.cs,GetCompactAndRepairMessage,The length of the statement  "			msg = "The SQL CE database was successfully compacted. Data corruption was found but could not be automatically repaired. Consider using the backup function to back up your data and restore to a new instance of your gallery."; " is 226.
Long Statement,GalleryServerPro.Business,DbManager,C:\repos\bambit_BGallery\TIS.GSP.Business\DbManager.cs,GetCompactAndRepairMessage,The length of the statement  "			throw new BusinessException (String.Format ("An unexpected combination of parameters was passed to GetCompactAndRepairMessage(). ex != null; compactSuccessful={0}; repairNeeded={1}; repairSuccessful={2}"' compactSuccessful' repairNeeded' repairSuccessful)); " is 257.
Long Statement,GalleryServerPro.Business,VideoOriginalCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoOriginalCreator.cs,GenerateAndSaveFile,The length of the statement  "		throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "Cannot rotate video because no file exists at {0}."' filePath)); " is 137.
Long Statement,GalleryServerPro.Business,MediaObjectProfileCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaObjectProfileCollection.cs,Add,The length of the statement  "		throw new ArgumentNullException ("item"' "Cannot add null to an existing MediaObjectProfileCollection. Items.Count = " + Items.Count); " is 134.
Long Statement,GalleryServerPro.Business,TagSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\TagSearcher.cs,Find,The length of the statement  "		throw new InvalidOperationException (string.Format ("The method GalleryObjectSearcher.Find was not designed to handle SearchType={0}. The developer must update this method."' SearchOptions.SearchType)); " is 202.
Long Statement,GalleryServerPro.Business,TagSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\TagSearcher.cs,Validate,The length of the statement  "		throw new ArgumentException ("The SearchType property of the searchOptions parameter must be set to a valid search type."); " is 123.
Long Statement,GalleryServerPro.Business,TagSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\TagSearcher.cs,Validate,The length of the statement  "		throw new ArgumentException ("The Roles property of the searchOptions parameter must be specified when IsUserAuthenticated is true."); " is 134.
Long Statement,GalleryServerPro.Business,TagSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\TagSearcher.cs,Validate,The length of the statement  "		throw new ArgumentException ("Invalid gallery ID. The GalleryId property of the searchOptions parameter must refer to a valid gallery."); " is 137.
Long Statement,GalleryServerPro.Business,TagSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\TagSearcher.cs,GetTagsForAlbums,The length of the statement  "	var qry = repo.Where (m => m.FKGalleryId == SearchOptions.GalleryId && m.FKTagName.Contains (SearchOptions.SearchTerm) && m.Metadata.MetaName == TagName); " is 154.
Long Statement,GalleryServerPro.Business,TagSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\TagSearcher.cs,GetTagsForMediaObjects,The length of the statement  "	var qry = repo.Where (m => m.FKGalleryId == SearchOptions.GalleryId && m.FKTagName.Contains (SearchOptions.SearchTerm) && m.Metadata.MetaName == TagName); " is 154.
Long Statement,GalleryServerPro.Business,TagSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\TagSearcher.cs,GetTags,The length of the statement  "		return repo.Where (t => t.FKGalleryId == SearchOptions.GalleryId && t.Metadata.MetaName == TagName).Select (t => t.Tag.TagName).Distinct (); " is 140.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,Find,The length of the statement  "		throw new InvalidOperationException (string.Format ("The method GalleryObjectSearcher.Find was not designed to handle SearchType={0}. The developer must update this method."' SearchOptions.SearchType)); " is 202.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,FindItemsMatchingTitleOrCaption,The length of the statement  "		qry = SearchOptions.SearchTerms.Aggregate (qry' (current' searchTerm) => current.Where (a => a.FKGalleryId == SearchOptions.GalleryId && a.Metadata.Any (md => metaTagsToSearch.Contains (md.MetaName) && md.Value.Contains (searchTerm)))); " is 236.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,FindItemsMatchingTitleOrCaption,The length of the statement  "		qry = SearchOptions.SearchTerms.Aggregate (qry' (current' searchTerm) => current.Where (mo => mo.Album.FKGalleryId == SearchOptions.GalleryId && mo.Metadata.Any (md => metaTagsToSearch.Contains (md.MetaName) && md.Value.Contains (searchTerm)))); " is 245.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,FindItemsMatchingKeywords,The length of the statement  "		qry = SearchOptions.SearchTerms.Aggregate (qry' (current' searchTerm) => current.Where (a => a.FKGalleryId == SearchOptions.GalleryId && a.Metadata.Any (md => md.Value.Contains (searchTerm)))); " is 193.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,FindItemsMatchingKeywords,The length of the statement  "		qry = SearchOptions.SearchTerms.Aggregate (qry' (current' searchTerm) => current.Where (mo => mo.Album.FKGalleryId == SearchOptions.GalleryId && mo.Metadata.Any (md => md.Value.Contains (searchTerm)))); " is 202.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,Validate,The length of the statement  "		throw new ArgumentException ("The SearchType property of the searchOptions parameter must be set to a valid search type."); " is 123.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,Validate,The length of the statement  "		throw new ArgumentException ("The Roles property of the searchOptions parameter must be specified when IsUserAuthenticated is true."); " is 134.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,Validate,The length of the statement  "		throw new ArgumentException ("Invalid gallery ID. The GalleryId property of the searchOptions parameter must refer to a valid gallery."); " is 137.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,Validate,The length of the statement  "	if ((searchOptions.SearchType == GalleryObjectSearchType.SearchByTag || searchOptions.SearchType == GalleryObjectSearchType.SearchByPeople) && (searchOptions.Tags == null || searchOptions.Tags.Length == 0)) " is 206.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,Validate,The length of the statement  "		throw new ArgumentException ("The Tags property of the searchOptions parameter must be specified when SearchType is SearchByTag or SearchByPeople."); " is 149.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,GetAlbumsIdsHavingTags,The length of the statement  "	var qry = repo.Where (a => a.FKGalleryId == SearchOptions.GalleryId && a.Metadata.Any (md => md.MetaName == TagType && md.MetadataTags.Any (mdt => SearchOptions.Tags.Contains (mdt.FKTagName)))); " is 194.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,CanUserViewAlbum,The length of the statement  "	return SecurityManager.IsUserAuthorized (SecurityActions.ViewAlbumOrMediaObject' SearchOptions.Roles' album.Id' SearchOptions.GalleryId' SearchOptions.IsUserAuthenticated' album.IsPrivate' SecurityActionsOption.RequireOne' album.IsVirtualAlbum); " is 245.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,GetMediaObjectIdsHavingTags,The length of the statement  "	var qry = repo.Where (m => m.Album.FKGalleryId == SearchOptions.GalleryId && m.Metadata.Any (md => md.MetaName == TagType && md.MetadataTags.Any (mdt => SearchOptions.Tags.Contains (mdt.FKTagName)))); " is 200.
Long Statement,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,LoadRootAlbumForUser,The length of the statement  "	// Step 3: Package results into an album container. If there is only one viewable root album' then just create an instance of that album. " is 137.
Long Statement,GalleryServerPro.Business,AlbumSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumSaveBehavior.cs,PersistToFileSystemStore,The length of the statement  "		string thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (album.FullPhysicalPath' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 181.
Long Statement,GalleryServerPro.Business,AlbumSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumSaveBehavior.cs,PersistToFileSystemStore,The length of the statement  "		string optimizedPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (album.FullPhysicalPath' gallerySetting.FullOptimizedPath' gallerySetting.FullMediaObjectPath); " is 181.
Long Statement,GalleryServerPro.Business,AlbumSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumSaveBehavior.cs,PersistToFileSystemStore,The length of the statement  "		// We need to move the directory to its new location or change its name. Verify that the containing directory doesn't already " is 125.
Long Statement,GalleryServerPro.Business,AlbumSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumSaveBehavior.cs,PersistToFileSystemStore,The length of the statement  "		string newDirName = HelperFunctions.ValidateDirectoryName (di.FullName' album.DirectoryName' gallerySetting.DefaultAlbumDirectoryNameLength); " is 141.
Long Statement,GalleryServerPro.Business,AlbumSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumSaveBehavior.cs,PersistToFileSystemStore,The length of the statement  "		string thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (album.FullPhysicalPath' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 181.
Long Statement,GalleryServerPro.Business,AlbumSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumSaveBehavior.cs,PersistToFileSystemStore,The length of the statement  "			string currentThumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (album.FullPhysicalPathOnDisk' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 194.
Long Statement,GalleryServerPro.Business,AlbumSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumSaveBehavior.cs,PersistToFileSystemStore,The length of the statement  "		string optimizedPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (album.FullPhysicalPath' gallerySetting.FullOptimizedPath' gallerySetting.FullMediaObjectPath); " is 181.
Long Statement,GalleryServerPro.Business,AlbumSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\AlbumSaveBehavior.cs,PersistToFileSystemStore,The length of the statement  "			string currentOptimizedPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (album.FullPhysicalPathOnDisk' gallerySetting.FullOptimizedPath' gallerySetting.FullMediaObjectPath); " is 194.
Long Statement,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,Initialize,The length of the statement  "		throw new System.InvalidOperationException ("The AppSetting instance has already been initialized. It cannot be initialized more than once."); " is 142.
Long Statement,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,Initialize,The length of the statement  "		throw new System.ComponentModel.InvalidEnumArgumentException ("Invalid ApplicationTrustLevel value. ApplicationTrustLevel.None is not valid. Use ApplicationTrustLevel.Unknown if the trust level cannot be calculated."); " is 218.
Long Statement,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,Initialize,The length of the statement  "	// Validate the application and gallery settings. This must come after setting _isInitialized to true because the function  " is 122.
Long Statement,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,Initialize,The length of the statement  "	// accesses properties of the AppSetting singleton' which will throw a ApplicationNotInitializedException when a property is  " is 124.
Long Statement,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,PopulateAppSettingsFromDataStore,The length of the statement  "				throw new MissingMemberException (String.Format (CultureInfo.CurrentCulture' "Invalid application setting. An application setting named '{0}' was found in the data store' but no property by that name exists in the class '{1}'. Check the application settings in the data store to ensure they are correct."' appSettingDto.SettingName' asType)); " is 342.
Long Statement,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,PopulateAppSettingsFromDataStore,The length of the statement  "				throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "AppSetting.PopulateAppSettingsFromDataStore is not designed to process a property of type {0} (encountered in AppSetting.{1})"' prop.PropertyType' prop.Name)); " is 242.
Long Statement,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,InitializeDataStore,The length of the statement  "	System.Data.Entity.Database.SetInitializer (new System.Data.Entity.MigrateDatabaseToLatestVersion<GalleryDb' GalleryDbMigrationConfiguration> ()); " is 146.
Long Statement,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,ConfigureTempDirectory,The length of the statement  "		// Clear out all directories and files in the temp directory. If an IOException error occurs' perhaps due to a locked file' " is 123.
Long Statement,GalleryServerPro.Business,Audio,C:\repos\bambit_BGallery\TIS.GSP.Business\Audio.cs,Inflate,The length of the statement  "			throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Audio_Inflate_Ex_Msg' this.IsInflated' this.HasChanges)); " is 147.
Long Statement,GalleryServerPro.Business,Audio,C:\repos\bambit_BGallery\TIS.GSP.Business\Audio.cs,MediaObject_Saved,The length of the statement  "	if (!MediaConversionQueue.Instance.IsWaitingInQueueOrProcessing (this.Id' MediaQueueItemConversionType.CreateOptimized)) { " is 122.
Long Statement,GalleryServerPro.Business,MediaTemplateCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaTemplateCollection.cs,Add,The length of the statement  "		throw new ArgumentNullException ("item"' "Cannot add null to an existing MediaTemplateCollection. Items.Count = " + Items.Count); " is 129.
Long Statement,GalleryServerPro.Business,MediaTemplateCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaTemplateCollection.cs,Find,The length of the statement  "	// If there is only a single item in our collection' there is no need to search' so just return it. This should be the most " is 123.
Long Statement,GalleryServerPro.Business,MediaTemplateCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaTemplateCollection.cs,Find,The length of the statement  "		throw new ArgumentOutOfRangeException ("browserIds"' "The Array parameter \"browserIds\" must have at least one item' but it was passed with 0 items."); " is 152.
Long Statement,GalleryServerPro.Business,MediaTemplateCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaTemplateCollection.cs,Find,The length of the statement  "	// We want to iterate through each browserId' starting with the most specific id and ending with the most general (id="Default"). However' we can't " is 147.
Long Statement,GalleryServerPro.Business,MediaTemplateCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaTemplateCollection.cs,Find,The length of the statement  "	// be sure whether the first or last item has the most specific ID' so we check the first item. If it is "default"' then we loop backwards; " is 139.
Long Statement,GalleryServerPro.Business,AudioOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\AudioOptimizedCreator.cs,RequiresOptimizedAudio,The length of the statement  "	if (MediaConversionQueue.Instance.IsWaitingInQueueOrProcessing (GalleryObject.Id' MediaQueueItemConversionType.CreateOptimized)) { " is 130.
Long Statement,GalleryServerPro.Business,AudioOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\AudioOptimizedCreator.cs,RequiresOptimizedAudio,The length of the statement  "	var optFileSameAsOriginal = String.Equals (GalleryObject.Optimized.FileName' GalleryObject.Original.FileName' StringComparison.OrdinalIgnoreCase); " is 146.
Long Statement,GalleryServerPro.Business,MediaEncoderSettingsCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaEncoderSettingsCollection.cs,Add,The length of the statement  "		throw new ArgumentNullException ("item"' "Cannot add null to an existing MediaEncoderSettingsCollection. Items.Count = " + Items.Count); " is 136.
Long Statement,GalleryServerPro.Business,MediaEncoderSettingsCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaEncoderSettingsCollection.cs,Serialize,The length of the statement  "			throw new BusinessException ("Cannot serialize MediaEncoderSettingsCollection because the underlying collection is not in ascending sequence."); " is 144.
Long Statement,GalleryServerPro.Business,MediaEncoderSettingsCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaEncoderSettingsCollection.cs,Serialize,The length of the statement  "		sb.AppendFormat (CultureInfo.InvariantCulture' "{0}||{1}||{2}~~"' encoderSetting.SourceFileExtension' encoderSetting.DestinationFileExtension' encoderSetting.EncoderArguments); " is 176.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,IsWaitingInQueueOrProcessing,The length of the statement  "	if ((item != null) && item.MediaObjectId == mediaObjectId && (item.ConversionType == conversionType || conversionType == MediaQueueItemConversionType.Unknown)) " is 159.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,HasEncoderSetting,The length of the statement  "	return GetEncoderSettings (mediaObject.Original.MimeType' mediaObject.GalleryId).Select (encoderSetting => !String.IsNullOrWhiteSpace (encoderSetting.EncoderArguments)).FirstOrDefault (); " is 187.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,IsWaitingInQueue,The length of the statement  "	return MediaQueueItemDictionary.Any (mq => mq.Value.MediaObjectId == mediaObjectId && mq.Value.Status == MediaQueueItemStatus.Waiting && (mq.Value.ConversionType == conversionType || conversionType == MediaQueueItemConversionType.Unknown)); " is 240.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,ExecuteMediaConversion,The length of the statement  "		throw new System.ComponentModel.InvalidEnumArgumentException (string.Format ("MediaConversionQueue.ExecuteMediaConversion is not designed to handled the enumeration value {0}. It must be updated."' mqi.ConversionType)); " is 219.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,RotateVideo,The length of the statement  "	const string args = @"-i ""{SourceFilePath}"" -vf ""{AutoRotateFilter}"" -q:a 0 -q:v 0 -acodec copy -metadata:s:v:0 rotate=0 ""{DestinationFilePath}"""; " is 152.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,RotateVideo,The length of the statement  "	var encoderSetting = new MediaEncoderSettings (Path.GetExtension (newFilename)' Path.GetExtension (mediaObject.Original.FileName)' args' 0); " is 140.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,CreateOptimizedMediaObject,The length of the statement  "	string optimizedPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (mediaObject.Original.FileInfo.DirectoryName' gallerySetting.FullOptimizedPath' gallerySetting.FullMediaObjectPath); " is 202.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,CreateOptimizedMediaObject,The length of the statement  "	string newFilename = GenerateNewFilename (optimizedPath' fileNameWithoutExtension' encoderSetting.DestinationFileExtension' gallerySetting.OptimizedFileNamePrefix); " is 164.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,CreateOptimizedMediaObject,The length of the statement  "		string msg = String.Format (CultureInfo.CurrentCulture' "FAILURE: FFmpeg was not able to create file '{0}'."' Path.GetFileName (mediaSettings.FilePathDestination)); " is 164.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,GetEncoderSetting,The length of the statement  "	return encoderSettings.FirstOrDefault (encoderSetting => AttemptedEncoderSettings.All (es => es.Sequence != encoderSetting.Sequence)); " is 134.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,GetEncoderSettings,The length of the statement  "	return Factory.LoadGallerySetting (galleryId).MediaEncoderSettings.Where (es => ((es.SourceFileExtension == mimeType.Extension) || (es.SourceFileExtension == String.Concat ("*"' mimeType.MajorType)))).OrderBy (es => es.Sequence); " is 229.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,OnMediaConversionCompleteOptimizedCreated,The length of the statement  "		string msg = String.Format (CultureInfo.CurrentCulture' "FFmpeg created file '{0}'."' Path.GetFileName (settings.FilePathDestination)); " is 135.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,OnMediaConversionCompleteOptimizedCreated,The length of the statement  "		var optFileDifferentThanOriginal = !String.Equals (mediaObject.Optimized.FileName' mediaObject.Original.FileName' StringComparison.OrdinalIgnoreCase); " is 150.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,OnMediaConversionCompleteOptimizedCreated,The length of the statement  "		var optFileDifferentThanCreatedFile = !String.Equals (mediaObject.Optimized.FileName' Path.GetFileName (settings.FilePathDestination)' StringComparison.OrdinalIgnoreCase); " is 171.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,OnMediaConversionCompleteOptimizedCreated,The length of the statement  "		if (optFileDifferentThanOriginal && optFileDifferentThanCreatedFile && File.Exists (mediaObject.Optimized.FileNamePhysicalPath)) { " is 130.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,OnMediaConversionCompleteVideoRotated,The length of the statement  "		string msg = String.Format (CultureInfo.CurrentCulture' "FFmpeg created file '{0}'."' Path.GetFileName (settings.FilePathDestination)); " is 135.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,OnMediaConversionCompleteVideoRotated,The length of the statement  "		if ((settings.FilePathDestination != mediaObject.Original.FileNamePhysicalPath) && File.Exists (mediaObject.Original.FileNamePhysicalPath)) { " is 141.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,CompleteProcessItem,The length of the statement  "		var fileName = (settings != null && !String.IsNullOrEmpty (settings.FilePathSource) ? Path.GetFileName (settings.FilePathSource) : "<Unknown>"); " is 144.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,RecordEvent,The length of the statement  "	Events.EventController.RecordEvent (msg' EventType.Info' galleryId' Factory.LoadGallerySettings ()' AppSetting.Instance' data); " is 127.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,Reset,The length of the statement  "	foreach (var item in MediaQueueItemDictionary.Where (m => m.Value.Status == MediaQueueItemStatus.Processing).Select (m => m.Value)) { " is 133.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,GetTargetWidth,The length of the statement  "		var width = FFmpeg.ParseSourceVideoWidth (FFmpeg.GetOutput (mediaObject.Original.FileNamePhysicalPath' mediaObject.GalleryId)); " is 127.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,GetTargetWidth,The length of the statement  "		throw new System.ComponentModel.InvalidEnumArgumentException (String.Format ("MediaConversionQueue.GetTargetWidth was not designed to handle the enum value {0}. The function must be updated."' mediaObject.GalleryObjectType)); " is 225.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,GetTargetHeight,The length of the statement  "		var height = FFmpeg.ParseSourceVideoHeight (FFmpeg.GetOutput (mediaObject.Original.FileNamePhysicalPath' mediaObject.GalleryId)); " is 129.
Long Statement,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,GetTargetHeight,The length of the statement  "		throw new System.ComponentModel.InvalidEnumArgumentException (String.Format ("MediaConversionQueue.GetTargetHeight was not designed to handle the enum value {0}. The function must be updated."' mediaObject.GalleryObjectType)); " is 226.
Long Statement,GalleryServerPro.Business,MediaEncoderSettings,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaEncoderSettings.cs,Validate,The length of the statement  "		throw new UnsupportedMediaObjectTypeException (string.Format ("The media encoder setting references a file extension ({0}) not recognized by the application."' SourceFileExtension)); " is 182.
Long Statement,GalleryServerPro.Business,MediaEncoderSettings,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaEncoderSettings.cs,Validate,The length of the statement  "		throw new UnsupportedMediaObjectTypeException (string.Format ("The media encoder setting references a file extension ({0}) not recognized by the application."' DestinationFileExtension)); " is 187.
Long Statement,GalleryServerPro.Business,VideoOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoOptimizedCreator.cs,IsInQueue,The length of the statement  "	return MediaConversionQueue.Instance.IsWaitingInQueueOrProcessing (GalleryObject.Id' MediaQueueItemConversionType.CreateOptimized); " is 131.
Long Statement,GalleryServerPro.Business,VideoOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoOptimizedCreator.cs,IsOptimizedFileMissing,The length of the statement  "	var optFileSameAsOriginal = String.Equals (GalleryObject.Optimized.FileName' GalleryObject.Original.FileName' StringComparison.OrdinalIgnoreCase); " is 146.
Long Statement,GalleryServerPro.Business,UiTemplateCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\UiTemplateCollection.cs,Get,The length of the statement  "		throw new BusinessException (string.Format ("Missing UI template: No template was found in the data store with type '{0}' that applies to album ID {1}. There must be at least one record for this type with the name 'Default' and assigned to the root album. Try recycling the IIS app pool - data validation during app startup may be able to fix this."' templateType' album.Id)); " is 376.
Long Statement,GalleryServerPro.Business,GalleryControlSettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryControlSettings.cs,Delete,The length of the statement  "		bool isNullableGeneric = (prop.PropertyType.IsGenericType && (prop.PropertyType.GetGenericTypeDefinition () == typeof(Nullable<>))); " is 132.
Long Statement,GalleryServerPro.Business,GalleryControlSettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryControlSettings.cs,RetrieveGalleryControlSettingsFromDataStore,The length of the statement  "	// Loop through each gallery control setting and assign to the relevant property. When we encounter a record with a new control ID'  " is 131.
Long Statement,GalleryServerPro.Business,GalleryControlSettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryControlSettings.cs,RetrieveGalleryControlSettingsFromDataStore,The length of the statement  "	// automatically create a new GalleryControlSetting instance and start populating that one. When we are done with the loop we will " is 130.
Long Statement,GalleryServerPro.Business,GalleryControlSettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryControlSettings.cs,RetrieveGalleryControlSettingsFromDataStore,The length of the statement  "				throw new MissingMemberException (String.Format (CultureInfo.CurrentCulture' "Invalid gallery control setting. A gallery control setting named '{0}' was found in the data store' but no property by that name exists in the class '{1}'. Check the gallery control settings in the data store to ensure they are correct."' settingName' gsType)); " is 339.
Long Statement,GalleryServerPro.Business,GalleryControlSettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryControlSettings.cs,RetrieveGalleryControlSettingsFromDataStore,The length of the statement  "				throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GalleryControlSettings.RetrieveGalleryControlSettingsFromDataStore is not designed to process a property of type {0} (encountered in GalleryControlSettings.{1})"' prop.PropertyType' prop.Name)); " is 277.
Long Statement,GalleryServerPro.Business,GalleryControlSettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryControlSettings.cs,AssignViewModeProperty,The length of the statement  "		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GalleryControlSettings.AssignViewModeProperty cannot convert the string {0} to a ViewMode enumeration value. The following values are valid: NotSet' Multiple' Single' SingleRandom"' value)' ex); " is 277.
Long Statement,GalleryServerPro.Business,GalleryControlSettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryControlSettings.cs,AssignSlideShowTypeProperty,The length of the statement  "		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GalleryControlSettings.AssignSlideShowTypeProperty cannot convert the string {0} to a SlideShowType enumeration value. The following values are valid: NotSet' Inline' FullScreen"' value)' ex); " is 275.
Long Statement,GalleryServerPro.Business,GalleryControlSettingsCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryControlSettingsCollection.cs,Add,The length of the statement  "		throw new ArgumentNullException ("item"' "Cannot add null to an existing GalleryControlSettingsCollection. Items.Count = " + Items.Count); " is 138.
Long Statement,GalleryServerPro.Business,ImageMagick,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageMagick.cs,GenerateImage,The length of the statement  "	if ((AppSetting.Instance.AppTrustLevel != ApplicationTrustLevel.Full) || (String.IsNullOrEmpty (AppSetting.Instance.ImageMagickConvertPath))) { " is 143.
Long Statement,GalleryServerPro.Business,ImageMagick,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageMagick.cs,GenerateImage,The length of the statement  "	// Create arguments. The [0] tells it to generate one image from the first page for PDF files (otherwise we get one image for every page) " is 137.
Long Statement,GalleryServerPro.Business,ImageMagick,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageMagick.cs,GenerateImage,The length of the statement  "		var ex = new BusinessException (String.Format ("ImageMagick (convert.exe) threw an error while trying to generate an image for the file {0}."' sourceFilePath)); " is 160.
Long Statement,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,GenerateThumbnail,The length of the statement  "	string videoThumbnailPositionStr = String.Format (CultureInfo.InvariantCulture' "{0:00}:{1:00}:{2:00}"' (int)timeSpan.TotalHours' timeSpan.Minutes' timeSpan.Seconds); " is 166.
Long Statement,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,GenerateThumbnail,The length of the statement  "	string args = String.Format (CultureInfo.InvariantCulture' @"-ss {0} -i ""{1}"" -an -an -r 1 -vframes 1 -y ""{2}"""' videoThumbnailPositionStr' mediaFilePath' thumbnailFilePath); " is 178.
Long Statement,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,CreateMedia,The length of the statement  "		throw new ArgumentNullException ("mediaSettings"' "The EncoderSetting property on the mediaSettings parameter was null."); " is 122.
Long Statement,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ReplaceTokens,The length of the statement  "	encoderArguments = encoderArguments.Replace ("{Width}"' mediaSettings.TargetWidth.ToString (CultureInfo.InvariantCulture)); " is 123.
Long Statement,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ReplaceTokens,The length of the statement  "	encoderArguments = encoderArguments.Replace ("{Height}"' mediaSettings.TargetHeight.ToString (CultureInfo.InvariantCulture)); " is 125.
Long Statement,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ReplaceTokens,The length of the statement  "	encoderArguments = encoderArguments.Replace (AutoRotateFilterName' GetAutoRotationFilter (MediaConversionQueue.Instance.Get (mediaSettings.MediaQueueId).RotationAmount' encoderArguments)); " is 188.
Long Statement,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ReplaceTokens,The length of the statement  "	encoderArguments = encoderArguments.Replace ("{AspectRatio}"' Math.Round (mediaSettings.TargetWidth / (double)mediaSettings.TargetHeight' 2).ToString (CultureInfo.InvariantCulture)); " is 182.
Long Statement,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ReplaceTokens,The length of the statement  "	encoderArguments = encoderArguments.Replace ("{BinPath}"' Path.Combine (AppSetting.Instance.PhysicalApplicationPath' "bin")); " is 125.
Long Statement,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ReplaceTokens,The length of the statement  "	encoderArguments = encoderArguments.Replace ("{GalleryResourcesPath}"' Path.Combine (AppSetting.Instance.PhysicalApplicationPath' AppSetting.Instance.GalleryResourcesPath)); " is 173.
Long Statement,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,Execute,The length of the statement  "		Exception ex = new BusinessException (String.Format (CultureInfo.CurrentCulture' "FFmpeg timed out while processing the video or audio file. Consider increasing the timeout value. It is currently set to {0} milliseconds."' MediaSettings.TimeoutMs)); " is 249.
Long Statement,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,InitializeOutput,The length of the statement  "		_output.AppendLine (String.Format ("{0} => {1}; {2}"' mes.SourceFileExtension' mes.DestinationFileExtension' mes.EncoderArguments)); " is 132.
Long Statement,GalleryServerPro.Business,License,C:\repos\bambit_BGallery\TIS.GSP.Business\License.cs,Validate,The length of the statement  "			KeyInvalidReason = "SQL Server detected. The product key you entered requires the use of SQL CE for the data store. You must switch to SQL CE or' if you wish to continue using SQL Server' purchase an Enterprise license. SQL Server offers faster performance and greater reliability. We highly recommend it."; " is 307.
Long Statement,GalleryServerPro.Business,License,C:\repos\bambit_BGallery\TIS.GSP.Business\License.cs,Validate,The length of the statement  "			LicenseType = (ProductKey.Equals (GlobalConstants.ProductKeyProfessional) ? LicenseLevel.Professional : LicenseLevel.Gpl); " is 122.
Long Statement,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "	string tmpVideoThumbnailPath = Path.Combine (AppSetting.Instance.TempUploadDirectory' String.Concat (Guid.NewGuid ().ToString ()' ".jpg")); " is 139.
Long Statement,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "	FFmpeg.GenerateThumbnail (GalleryObject.Original.FileNamePhysicalPath' tmpVideoThumbnailPath' gallerySetting.VideoThumbnailPosition' GalleryObject.GalleryId); " is 158.
Long Statement,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "		var thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (this.GalleryObject.Original.FileInfo.DirectoryName' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 206.
Long Statement,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "		// FFmpeg successfully created a thumbnail image the same size as the video. Now resize it to the width and height we need. " is 123.
Long Statement,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "			var newSize = CalculateWidthAndHeight (new System.Windows.Size (originalBitmap.Width' originalBitmap.Height)' gallerySetting.MaxThumbnailLength' false); " is 152.
Long Statement,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "			var size = ImageHelper.SaveImageFile (originalBitmap' newFilePath' ImageFormat.Jpeg' newSize.Width' newSize.Height' jpegQuality); " is 129.
Long Statement,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "			// Now delete the thumbnail image created by FFmpeg' but no worries if an error happens. The file is in the temp directory " is 122.
Long Statement,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "			var newSize = CalculateWidthAndHeight (new System.Windows.Size (originalBitmap.Width' originalBitmap.Height)' gallerySetting.MaxThumbnailLength' true); " is 151.
Long Statement,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "			var size = ImageHelper.SaveImageFile (originalBitmap' newFilePath' ImageFormat.Jpeg' newSize.Width' newSize.Height' jpegQuality); " is 129.
Long Statement,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,ValidateVideoThumbnail,The length of the statement  "					FFmpeg.GenerateThumbnail (GalleryObject.Original.FileNamePhysicalPath' tmpVideoThumbnailPath' videoThumbnailPositionFallback' GalleryObject.GalleryId); " is 151.
Long Statement,GalleryServerPro.Business,VideoThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\VideoThumbnailCreator.cs,GenerateNewFilename,The length of the statement  "	string thumbnailFilename = String.Format (CultureInfo.CurrentCulture' "{0}{1}.{2}"' filenamePrefix' nameWithoutExtension' imgFormat.ToString ().ToLower (CultureInfo.CurrentCulture)); " is 182.
Long Statement,GalleryServerPro.Business,MimeTypeCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MimeTypeCollection.cs,Add,The length of the statement  "		throw new ArgumentNullException ("item"' "Cannot add null to an existing MimeTypeCollection. Items.Count = " + Items.Count); " is 124.
Long Statement,GalleryServerPro.Business,UserGalleryProfileCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\UserGalleryProfileCollection.cs,Add,The length of the statement  "		throw new ArgumentNullException ("item"' "Cannot add null to an existing UserGalleryProfileCollection. Items.Count = " + Items.Count); " is 134.
Long Statement,GalleryServerPro.Business,GallerySettingsCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettingsCollection.cs,Add,The length of the statement  "		throw new ArgumentNullException ("item"' "Cannot add null to an existing GallerySettingsCollection. Items.Count = " + Items.Count); " is 131.
Long Statement,GalleryServerPro.Business,GalleryCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryCollection.cs,Add,The length of the statement  "		throw new ArgumentNullException ("item"' "Cannot add null to an existing GalleryCollection. Items.Count = " + Items.Count); " is 123.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,Initialize,The length of the statement  "		throw new InvalidOperationException ("The GallerySetting instance has already been initialized. It cannot be initialized more than once."); " is 139.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,Initialize,The length of the statement  "		// Setting the FullMediaObjectPath property will throw an exception if the directory does not exist or is not writeable. " is 120.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,Initialize,The length of the statement  "		// The property setter for the FullThumbnailPath and FullOptimizedPath properties will throw an exception if the directory  " is 122.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,ValidateSave,The length of the statement  "		throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "This gallery setting container (Gallery ID {0}' {1}) is not updateable."' this.GalleryId' this.GetType ())); " is 181.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,ValidateReadOnlyGallery,The length of the statement  "	if ((mediaObjectPath.Equals (thumbnailPath' StringComparison.OrdinalIgnoreCase)) || (mediaObjectPath.Equals (optimizedPath' StringComparison.OrdinalIgnoreCase))) { " is 163.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,ValidateReadOnlyGallery,The length of the statement  "		throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "Invalid configuration. A read-only gallery requires that the thumbnail and optimized file paths be different than the original media objects path. mediaObjectPath={0}; thumbnailPath={1}; optimizedPath={2}"' mediaObjectPath' thumbnailPath' optimizedPath)); " is 328.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,ValidateReadOnlyGallery,The length of the statement  "		throw new BusinessException ("Invalid configuration. A read-only gallery requires that the automatic renaming of directory names be disabled. Set this property on the Media Objects - General page in the Site admin area' or update it directly in the database (it is the SynchAlbumTitleAndDirectoryName property in the gallery settings table)."); " is 344.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,ValidateReadOnlyGallery,The length of the statement  "		throw new BusinessException ("Invalid configuration. A read-only gallery requires that user albums be disabled. Set this property on the Media Objects - General page in the Site admin area' or update it directly in the database (it is the EnableUserAlbum property in the gallery settings table)."); " is 298.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,RetrieveGallerySettingsFromDataStore,The length of the statement  "	// Loop through each gallery setting and assign to the relevant property. When we encounter a record with a new gallery ID'  " is 123.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,RetrieveGallerySettingsFromDataStore,The length of the statement  "	// automatically create a new GallerySetting instance and start populating that one. When we are done with the loop we will " is 123.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,RetrieveGallerySettingsFromDataStore,The length of the statement  "				// We have encountered settings for a new gallery. Initialize the previous one' then create a new object and add it to our collection. " is 134.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,RetrieveGallerySettingsFromDataStore,The length of the statement  "				gs = new GallerySettings (gallerySettingDto.FKGalleryId' new GalleryRepository ().Where (g => g.GalleryId == dto.FKGalleryId).Select (g => g.IsTemplate).First ()); " is 163.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,RetrieveGallerySettingsFromDataStore,The length of the statement  "				throw new MissingMemberException (String.Format (CultureInfo.CurrentCulture' "Invalid gallery setting. A gallery setting named '{0}' was found in the data store' but no property by that name exists in the class '{1}'. Check the gallery settings in the data store to ensure they are correct."' settingName' gsType)); " is 315.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,RetrieveGallerySettingsFromDataStore,The length of the statement  "				prop.SetValue (gs' HelperFunctions.ToDateTime (gallerySettingDto.SettingValue.Trim ()' "O"' CultureInfo.InvariantCulture)' null); " is 129.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,RetrieveGallerySettingsFromDataStore,The length of the statement  "				throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GallerySettings.RetrieveGallerySettingsFromDataStore is not designed to process a property of type {0} (encountered in GallerySettings.{1})"' prop.PropertyType' prop.Name)); " is 256.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMetadataDisplaySettingsProperty,The length of the statement  "	//		throw new ArgumentOutOfRangeException(String.Format(CultureInfo.CurrentCulture' "GallerySetting.RetrieveGallerySettingsFromDataStore cannot parse the metadata definitions for property {0}. Encountered invalid string: '{1}'"' property.Name' nameValuePair)); " is 260.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMetadataDisplaySettingsProperty,The length of the statement  "	//			metadataItems.Add(new MetadataDefinition((MetadataItemName)metadataDefInt' isVisible' seq' gallerySetting.GalleryId)); " is 123.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMetadataDisplaySettingsProperty,The length of the statement  "	//			throw new ArgumentOutOfRangeException(String.Format(CultureInfo.CurrentCulture' "The integer {0} does not map to a known value of {1}. Details: The function MetadataItemNameEnumHelper.IsValidFormattedMetadataItemName() returned false when evaluating this value. If the enumeration definition has recently changed' this function must be updated to include the change. The MetadataDisplaySettings property in the gallery settings table may need to be manually updated to remove references to this invalid enumeration value."' metadataDefInt' typeof(MetadataItemName))); " is 572.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMetadataDisplaySettingsProperty,The length of the statement  "	//		throw new ArgumentOutOfRangeException(String.Format(CultureInfo.CurrentCulture' "GallerySetting.RetrieveGallerySettingsFromDataStore cannot parse the metadata definitions for property {0}. Encountered invalid string: '{1}'"' property.Name' nameValuePair)); " is 260.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMediaEncoderSettingsProperty,The length of the statement  "	IMediaEncoderSettingsCollection mediaEncoderSettings = (IMediaEncoderSettingsCollection)property.GetValue (gallerySetting' null); " is 129.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMediaEncoderSettingsProperty,The length of the statement  "			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GallerySetting.RetrieveGallerySettingsFromDataStore cannot parse the media encoder definitions for property {0}. Encountered invalid string: '{1}'"' property.Name' mediaEncStr)); " is 261.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMediaEncoderSettingsProperty,The length of the statement  "		mediaEncoderSettings.Add (new MediaEncoderSettings (mediaEncoderItems [0]' mediaEncoderItems [1]' mediaEncoderItems [2]' seq)); " is 127.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMetadataItemNameProperty,The length of the statement  "		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GallerySetting.RetrieveGallerySettingsFromDataStore cannot convert the string {0} to a MetadataItemName enumeration value."' value)' ex); " is 220.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMediaObjectTransitionTypeProperty,The length of the statement  "		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GallerySetting.RetrieveGallerySettingsFromDataStore cannot convert the string {0} to a MediaObjectTransitionType enumeration value. The following values are valid: None' Fade"' value)' ex); " is 272.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignSlideShowTypeProperty,The length of the statement  "		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GallerySettings.AssignSlideShowTypeProperty cannot convert the string {0} to a SlideShowType enumeration value. The following values are valid: NotSet' Inline' FullScreen"' value)' ex); " is 268.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignContentAlignmentProperty,The length of the statement  "		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GallerySetting.RetrieveGallerySettingsFromDataStore cannot convert the string {0} to a ContentAlignment enumeration value. The following values are valid: TopLeft' TopCenter' TopRight' MiddleLeft' MiddleCenter' MiddleRight' BottomLeft' BottomCenter' BottomRight"' value)' ex); " is 359.
Long Statement,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignPagerPositionProperty,The length of the statement  "		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GallerySetting.RetrieveGallerySettingsFromDataStore cannot convert the string {0} to a PagerPosition enumeration value. The following values are valid: Top' Bottom' TopAndBottom"' value)' ex); " is 275.
Long Statement,GalleryServerPro.Business,ExternalThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ExternalThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "		var thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (this.GalleryObject.Parent.FullPhysicalPath' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 198.
Long Statement,GalleryServerPro.Business,ExternalThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ExternalThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "		newFilename = HelperFunctions.ValidateFileName (thumbnailPath' GenerateNewFilename (gallerySetting.ThumbnailFileNamePrefix)); " is 125.
Long Statement,GalleryServerPro.Business,ExternalThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ExternalThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "		var newSize = CalculateWidthAndHeight (new System.Windows.Size (originalBitmap.Width' originalBitmap.Height)' gallerySetting.MaxThumbnailLength' true); " is 151.
Long Statement,GalleryServerPro.Business,ExternalThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ExternalThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "		var size = ImageHelper.SaveImageFile (originalBitmap' newFilePath' ImageFormat.Jpeg' newSize.Width' newSize.Height' jpegQuality); " is 129.
Long Statement,GalleryServerPro.Business,ExternalThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ExternalThumbnailCreator.cs,GenerateNewFilename,The length of the statement  "	return String.Format (CultureInfo.CurrentCulture' "{0}{1}.jpg"' filenamePrefix' GlobalConstants.ExternalMediaObjectFilename); " is 125.
Long Statement,GalleryServerPro.Business,ExternalMediaObject,C:\repos\bambit_BGallery\TIS.GSP.Business\ExternalMediaObject.cs,Inflate,The length of the statement  "			throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.GenericMediaObject_Inflate_Ex_Msg' this.IsInflated' this.HasChanges)); " is 160.
Long Statement,GalleryServerPro.Business,Gallery,C:\repos\bambit_BGallery\TIS.GSP.Business\Gallery.cs,Save,The length of the statement  "				throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "Cannot save gallery: No existing gallery with Gallery ID {0} was found in the database."' GalleryId)); " is 175.
Long Statement,GalleryServerPro.Business,Gallery,C:\repos\bambit_BGallery\TIS.GSP.Business\Gallery.cs,ConfigureUiTemplateTable,The length of the statement  "			if (!repoUiTmpl.Local.Any (ui => ui.TemplateType == uiTmpl.TemplateType && ui.FKGalleryId == GalleryId && ui.Name == uiTmpl.Name)) { " is 132.
Long Statement,GalleryServerPro.Business,Gallery,C:\repos\bambit_BGallery\TIS.GSP.Business\Gallery.cs,ConfigureUiTemplateAlbumTable,The length of the statement  "			var dtos = repoUiTmpl.Where (t => t.FKGalleryId == rootAlbum.FKGalleryId).SelectMany (t => t.TemplateAlbums' (t' tt) => new { " is 125.
Long Statement,GalleryServerPro.Business,Gallery,C:\repos\bambit_BGallery\TIS.GSP.Business\Gallery.cs,ConfigureUiTemplateAlbumTable,The length of the statement  "			}).GroupBy (t => t.TemplateType).Where (t => t.All (ta => ta.FKAlbumId != rootAlbum.AlbumId)).Select (t => t.Key).Union (repoUiTmpl.Where (t => t.FKGalleryId == rootAlbum.FKGalleryId).GroupBy (t => t.TemplateType).Where (t => t.All (t2 => !t2.TemplateAlbums.Any ())).Select (t => t.Key)); " is 288.
Long Statement,GalleryServerPro.Business,Gallery,C:\repos\bambit_BGallery\TIS.GSP.Business\Gallery.cs,ConfigureUiTemplateAlbumTable,The length of the statement  "					FKUiTemplateId = repoUiTmpl.Where (t => t.FKGalleryId == rootAlbum.FKGalleryId && t.TemplateType == dto1 && t.Name.Equals ("default"' StringComparison.OrdinalIgnoreCase)).First ().UiTemplateId' " is 193.
Long Statement,GalleryServerPro.Business,GalleryServerRoleCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryServerRoleCollection.cs,Sort,The length of the statement  "	System.Collections.Generic.List<IGalleryServerRole> galleryServerRoles = (System.Collections.Generic.List<IGalleryServerRole>)Items; " is 132.
Long Statement,GalleryServerPro.Business,GalleryServerRoleCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryServerRoleCollection.cs,GetRoles,The length of the statement  "			throw new InvalidGalleryServerRoleException (String.Format (CultureInfo.CurrentCulture' "Could not find a Gallery Server role named '{0}'. Verify the data table contains a record for this role' and that the cache is being properly managed."' roleName)); " is 253.
Long Statement,GalleryServerPro.Business,GalleryServerRoleCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryServerRoleCollection.cs,GetViewableAlbumIdsForGallery,The length of the statement  "	foreach (var role in Items.Where (role => role.AllowViewAlbumOrMediaObject && role.Galleries.Any (g => g.GalleryId == galleryId))) { " is 132.
Long Statement,GalleryServerPro.Business,DisplayObject,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObject.cs,CreateInstance,The length of the statement  "	return CreateInstance (parent' string.Empty' int.MinValue' int.MinValue' DisplayObjectType.Unknown' new NullObjects.NullDisplayObjectCreator ()); " is 145.
Long Statement,GalleryServerPro.Business,DisplayObject,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObject.cs,CreateInstance,The length of the statement  "	IDisplayObject newDisObject = CreateInstance (parent' string.Empty' int.MinValue' int.MinValue' displayType' new NullObjects.NullDisplayObjectCreator ()); " is 154.
Long Statement,GalleryServerPro.Business,DisplayObject,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObject.cs,CreateInstance,The length of the statement  "		throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "This overload of DisplayObject.CreateInstance can only be called when the displayType parameter is DisplayObjectType.External. Instead' it was {0}."' displayType.ToString ())); " is 249.
Long Statement,GalleryServerPro.Business,DisplayObject,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObject.cs,VerifyObjectIsInflated,The length of the statement  "		System.Diagnostics.Debug.Assert (this._mediaObjectId > int.MinValue' "Inflating the parent of this DisplayObject should cause _mediaObjectId to be populated' but it did not."); " is 176.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGalleryObjectInstance,The length of the statement  "	if ((galleryObjectType == GalleryObjectType.All) || (galleryObjectType == GalleryObjectType.None) || (galleryObjectType == GalleryObjectType.Unknown)) { " is 152.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,CreateMediaObjectInstance,The length of the statement  "		throw new ArgumentException ("The method GalleryServerPro.Business.Factory.CreateMediaObjectInstance was invoked with invalid parameters. The parameters mediaObjectFile and externalHtmlSource cannot both be null or empty. One of these - but not both - must be populated."); " is 273.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,CreateMediaObjectInstance,The length of the statement  "		throw new ArgumentException ("The method GalleryServerPro.Business.Factory.CreateMediaObjectInstance was invoked with invalid parameters. The parameters mediaObjectFile and externalHtmlSource cannot both be specified."); " is 220.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,CreateMediaObjectInstance,The length of the statement  "		throw new ArgumentException ("The method GalleryServerPro.Business.Factory.CreateMediaObjectInstance was invoked with invalid parameters. The parameters mimeTypeCategory must be set to a value other than MimeTypeCategory.NotSet when the externalHtmlSource parameter is specified."); " is 282.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetMediaObjectFromDto,The length of the statement  "		mo = new Image (moDto.MediaObjectId' parentAlbum' moDto.ThumbnailFilename' moDto.ThumbnailWidth' moDto.ThumbnailHeight' moDto.ThumbnailSizeKB' moDto.OptimizedFilename.Trim ()' moDto.OptimizedWidth' moDto.OptimizedHeight' moDto.OptimizedSizeKB' moDto.OriginalFilename.Trim ()' moDto.OriginalWidth' moDto.OriginalHeight' moDto.OriginalSizeKB' moDto.Seq' moDto.CreatedBy.Trim ()' Convert.ToDateTime (moDto.DateAdded' CultureInfo.CurrentCulture)' moDto.LastModifiedBy.Trim ()' HelperFunctions.ToDateTime (moDto.DateLastModified)' moDto.IsPrivate' true' null' moDto.Metadata); " is 571.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetMediaObjectFromDto,The length of the statement  "		mo = new Video (moDto.MediaObjectId' parentAlbum' moDto.ThumbnailFilename' moDto.ThumbnailWidth' moDto.ThumbnailHeight' moDto.ThumbnailSizeKB' moDto.OptimizedFilename.Trim ()' moDto.OptimizedWidth' moDto.OptimizedHeight' moDto.OptimizedSizeKB' moDto.OriginalFilename.Trim ()' moDto.OriginalWidth' moDto.OriginalHeight' moDto.OriginalSizeKB' moDto.Seq' moDto.CreatedBy.Trim ()' Convert.ToDateTime (moDto.DateAdded' CultureInfo.CurrentCulture)' moDto.LastModifiedBy.Trim ()' HelperFunctions.ToDateTime (moDto.DateLastModified)' moDto.IsPrivate' true' null' moDto.Metadata); " is 571.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetMediaObjectFromDto,The length of the statement  "		mo = new Audio (moDto.MediaObjectId' parentAlbum' moDto.ThumbnailFilename' moDto.ThumbnailWidth' moDto.ThumbnailHeight' moDto.ThumbnailSizeKB' moDto.OptimizedFilename.Trim ()' moDto.OptimizedWidth' moDto.OptimizedHeight' moDto.OptimizedSizeKB' moDto.OriginalFilename.Trim ()' moDto.OriginalWidth' moDto.OriginalHeight' moDto.OriginalSizeKB' moDto.Seq' moDto.CreatedBy.Trim ()' Convert.ToDateTime (moDto.DateAdded' CultureInfo.CurrentCulture)' moDto.LastModifiedBy.Trim ()' HelperFunctions.ToDateTime (moDto.DateLastModified)' moDto.IsPrivate' true' null' moDto.Metadata); " is 571.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetMediaObjectFromDto,The length of the statement  "		mo = new ExternalMediaObject (moDto.MediaObjectId' parentAlbum' moDto.ThumbnailFilename' moDto.ThumbnailWidth' moDto.ThumbnailHeight' moDto.ThumbnailSizeKB' moDto.ExternalHtmlSource.Trim ()' MimeTypeEnumHelper.ParseMimeTypeCategory (moDto.ExternalType.Trim ())' moDto.Seq' moDto.CreatedBy.Trim ()' Convert.ToDateTime (moDto.DateAdded' CultureInfo.CurrentCulture)' moDto.LastModifiedBy.Trim ()' HelperFunctions.ToDateTime (moDto.DateLastModified)' moDto.IsPrivate' true' moDto.Metadata); " is 486.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetMediaObjectFromDto,The length of the statement  "		mo = new GenericMediaObject (moDto.MediaObjectId' parentAlbum' moDto.ThumbnailFilename' moDto.ThumbnailWidth' moDto.ThumbnailHeight' moDto.ThumbnailSizeKB' moDto.OriginalFilename.Trim ()' moDto.OriginalWidth' moDto.OriginalHeight' moDto.OriginalSizeKB' moDto.Seq' moDto.CreatedBy.Trim ()' Convert.ToDateTime (moDto.DateAdded' CultureInfo.CurrentCulture)' moDto.LastModifiedBy.Trim ()' HelperFunctions.ToDateTime (moDto.DateLastModified)' moDto.IsPrivate' true' null' moDto.Metadata); " is 483.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetMediaObjectSaveBehavior,The length of the statement  "	Debug.Assert ((!(galleryObject is Album))' "It is invalid to pass an album as a parameter to the GetMediaObjectSaveBehavior() method."); " is 136.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetMediaObjectDeleteBehavior,The length of the statement  "	Debug.Assert ((!(galleryObject is Album))' "It is invalid to pass an album as a parameter to the GetMediaObjectDeleteBehavior() method."); " is 138.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadImageInstance,The length of the statement  "	// The thumbnail is stored in either the album's physical path or an alternate location (if thumbnailPath config setting is specified) . " is 136.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadImageInstance,The length of the statement  "	string thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (albumPhysicalPath' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 176.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadImageInstance,The length of the statement  "	// Calcululate the full file path to the optimized image. If the optimized filename is equal to the original filename' then no " is 126.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadImageInstance,The length of the statement  "	// optimized version exists' and we'll just point to the original. If the names are different' then there is a separate optimized " is 129.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadImageInstance,The length of the statement  "	// image file' and it is stored in either the album's physical path or an alternate location (if optimizedPath config setting is specified). " is 140.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadImageInstance,The length of the statement  "		optimizedPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (albumPhysicalPath' gallerySetting.FullOptimizedPath' gallerySetting.FullMediaObjectPath); " is 169.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadVideoInstance,The length of the statement  "	// The thumbnail is stored in either the album's physical path or an alternate location (if thumbnailPath config setting is specified) . " is 136.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadVideoInstance,The length of the statement  "	string thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (albumPhysicalPath' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 176.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadAudioInstance,The length of the statement  "	// The thumbnail is stored in either the album's physical path or an alternate location (if thumbnailPath config setting is specified) . " is 136.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadAudioInstance,The length of the statement  "	string thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (albumPhysicalPath' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 176.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,CreateGenericObjectInstance,The length of the statement  "	// Create a new generic media object' which will cause a new record to be inserted in the data store when Save() is called. " is 123.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGenericMediaObjectInstance,The length of the statement  "	IGalleryObject retrievedGenericMediaObject = RetrieveMediaObject (genericMediaObject.Id' (IAlbum)genericMediaObject.Parent); " is 124.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGenericMediaObjectInstance,The length of the statement  "	// The thumbnail is stored in either the album's physical path or an alternate location (if thumbnailPath config setting is specified) . " is 136.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGenericMediaObjectInstance,The length of the statement  "	string thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (albumPhysicalPath' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 176.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGenericMediaObjectInstance,The length of the statement  "	genericMediaObject.Thumbnail.FileNamePhysicalPath = Path.Combine (thumbnailPath' genericMediaObject.Thumbnail.FileName); " is 120.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGenericMediaObjectInstance,The length of the statement  "	genericMediaObject.Original.FileNamePhysicalPath = Path.Combine (albumPhysicalPath' genericMediaObject.Original.FileName); " is 122.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,CreateExternalMediaObjectInstance,The length of the statement  "	// Create a new generic media object' which will cause a new record to be inserted in the data store when Save() is called. " is 123.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadExternalMediaObjectInstance,The length of the statement  "	IGalleryObject retrievedExternalMediaObject = RetrieveMediaObject (externalMediaObject.Id' (IAlbum)externalMediaObject.Parent); " is 127.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadExternalMediaObjectInstance,The length of the statement  "	// The thumbnail is stored in either the album's physical path or an alternate location (if thumbnailPath config setting is specified) . " is 136.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadExternalMediaObjectInstance,The length of the statement  "	string thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (albumPhysicalPath' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 176.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadExternalMediaObjectInstance,The length of the statement  "	externalMediaObject.Thumbnail.FileNamePhysicalPath = Path.Combine (thumbnailPath' externalMediaObject.Thumbnail.FileName); " is 122.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadExternalMediaObjectInstance,The length of the statement  "	externalMediaObject.Original.FileNamePhysicalPath = Path.Combine (albumPhysicalPath' externalMediaObject.Original.FileName); " is 124.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadAlbumInstance,The length of the statement  "					var albumCache = (ConcurrentDictionary<int' IAlbum>)HelperFunctions.GetCache (CacheItem.Albums) ?? new ConcurrentDictionary<int' IAlbum> (); " is 140.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadAlbumInstance,The length of the statement  "			Debug.Assert (album.ThumbnailMediaObjectId > Int32.MinValue' "The album's ThumbnailMediaObjectId should have been assigned in this method."); " is 141.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadAlbumInstance,The length of the statement  "		throw new ArgumentException ("Invalid method call. Cannot call LoadAlbumInstance with isWritable and allowMetadataLoading both set to false' since this can cause objects to be stored in the cache with missing metadata."); " is 221.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetMetadataReadWriter,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.InvariantCulture' "Factory.GetMetadataExtractor() does not support gallery objects with type {0}. A developer may need to update this method."' galleryObject.GalleryObjectType)); " is 234.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetAlbumFromDto,The length of the statement  "	IAlbum album = new Album (albumDto.AlbumId' albumDto.FKGalleryId' albumDto.FKAlbumParentId.GetValueOrDefault (0)' albumDto.DirectoryName' albumDto.ThumbnailMediaObjectId' albumDto.SortByMetaName' albumDto.SortAscending' albumDto.Seq' HelperFunctions.ToDateTime (albumDto.DateStart)' HelperFunctions.ToDateTime (albumDto.DateEnd)' albumDto.CreatedBy.Trim ()' HelperFunctions.ToDateTime (albumDto.DateAdded)' albumDto.LastModifiedBy.Trim ()' HelperFunctions.ToDateTime (albumDto.DateLastModified)' albumDto.OwnedBy.Trim ()' albumDto.OwnerRoleName.Trim ()' albumDto.IsPrivate' true' albumDto.Metadata); " is 599.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGalleryObjectMetadataItem,The length of the statement  "	var go = mDto.FKAlbumId.HasValue ? LoadAlbumInstance (mDto.FKAlbumId.Value' false) : LoadMediaObjectInstance (mDto.FKMediaObjectId.GetValueOrDefault (0)); " is 154.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,CreateGalleryServerRoleInstance,The length of the statement  "	return new GalleryServerRole (roleName' allowViewAlbumOrMediaObject' allowViewOriginalImage' allowAddMediaObject' allowAddChildAlbum' allowEditMediaObject' allowEditAlbum' allowDeleteMediaObject' allowDeleteChildAlbum' allowSynchronize' allowAdministerSite' allowAdministerGallery' hideWatermark); " is 297.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGalleryServerRoles,The length of the statement  "	var rolesCache = (ConcurrentDictionary<string' IGalleryServerRoleCollection>)HelperFunctions.GetCache (CacheItem.GalleryServerRoles); " is 133.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGallery,The length of the statement  "		// When another application instance creates a gallery' this function might try to load a gallery that doesn't exist in our " is 123.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGallery,The length of the statement  "		// static variable. Reload all data from the database and try again. Specifically' this can happen when a second DotNetNuke " is 123.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGallery,The length of the statement  "		// portal creates a gallery' which causes one or more roles to be associated with it. If the first portal then loads that role' " is 127.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGallerySetting,The length of the statement  "		throw new ArgumentOutOfRangeException ("galleryId"' String.Format (CultureInfo.CurrentCulture' "The gallery ID must be a valid ID. Instead' the value passed was {0}."' galleryId)); " is 180.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGallerySetting,The length of the statement  "		// can happen when an error occurs during initialization' such as a CannotWriteToDirectoryException occurring when checking " is 123.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGallerySetting,The length of the statement  "			// Need to clear the gallery server roles so that they are reloaded from the data store' which should now include sys admin " is 123.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGallerySetting,The length of the statement  "			throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "Factory.LoadGallerySetting() should have created gallery setting records for gallery {0}' but it has not."' galleryId)); " is 193.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGallerySetting,The length of the statement  "		throw new ArgumentOutOfRangeException ("galleryId"' String.Format (CultureInfo.CurrentCulture' "The gallery ID must be a valid ID. Instead' the value passed was {0}."' galleryId)); " is 180.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,LoadGalleryControlSetting,The length of the statement  "		galleryControlSettings = GalleryControlSettings.RetrieveGalleryControlSettingsFromDataStore ().FindByControlId (controlId); " is 123.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetWatermarkInstance,The length of the statement  "		throw new ArgumentOutOfRangeException ("galleryId"' String.Format (CultureInfo.CurrentCulture' "The gallery ID must be a valid ID. Instead' the value passed was {0}."' galleryId)); " is 180.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetWatermarkInstance,The length of the statement  "				Watermark tempWatermark = AppSetting.Instance.License.IsInReducedFunctionalityMode ? Watermark.GetReducedFunctionalityModeWatermark (galleryId) : Watermark.GetUserSpecifiedWatermark (galleryId); " is 194.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetConnectionStringSettings,The length of the statement  "	return ConfigurationManager.ConnectionStrings.Cast<ConnectionStringSettings> ().First (cnStringObj => cnStringObj.Name == GetConnectionStringName ()); " is 150.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,RetrieveAlbum,The length of the statement  "		//  Trace.WriteLine(String.Format(CultureInfo.CurrentCulture' "Album {0} retrieved from cache. (AreChildrenInflated={1})"' albumId' album.AreChildrenInflated)); " is 160.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,RetrieveAlbum,The length of the statement  "		//  Trace.WriteLine(String.Format(CultureInfo.CurrentCulture' "Album {0} has {1} child objects."' albumId' album.GetChildGalleryObjects().Count)); " is 146.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,RetrieveAlbum,The length of the statement  "		//Trace.WriteLine(String.Format(CultureInfo.CurrentCulture' "Album {0} added to cache. (AreChildrenInflated={1})"' albumId' album.AreChildrenInflated)); " is 152.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,RetrieveMediaObject,The length of the statement  "			// The cache exists' but there is no item matching the desired media object ID. Retrieve from data store and add to cache. " is 122.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetMediaObjectById,The length of the statement  "		return (includeMetadata ? repo.Where (m => m.MediaObjectId == mediaObjectId' m => m.Metadata).FirstOrDefault () : repo.Find (mediaObjectId)); " is 141.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,RetrieveAlbumFromDataStore,The length of the statement  "	Debug.Assert (album.ThumbnailMediaObjectId > Int32.MinValue' "The album's ThumbnailMediaObjectId should have been assigned in this method."); " is 141.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,AddChildObjects,The length of the statement  "		//foreach (MediaObjectDto moDto in GetDataProvider().Album_GetChildMediaObjectsById(album.Id' album.AllowMetadataLoading)) " is 122.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetRolesFromRoleDtos,The length of the statement  "		IGalleryServerRole role = new GalleryServerRole (roleDto.RoleName' roleDto.AllowViewAlbumsAndObjects' roleDto.AllowViewOriginalImage' roleDto.AllowAddMediaObject' roleDto.AllowAddChildAlbum' roleDto.AllowEditMediaObject' roleDto.AllowEditAlbum' roleDto.AllowDeleteMediaObject' roleDto.AllowDeleteChildAlbum' roleDto.AllowSynchronize' roleDto.AllowAdministerSite' roleDto.AllowAdministerGallery' roleDto.HideWatermark); " is 418.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,SyncWithGalleryObjectProperties,The length of the statement  "	if ((md.MetadataItemName == MetadataItemName.Title) && (md.GalleryObject.GalleryObjectType == GalleryObjectType.Album)) { " is 121.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,SyncWithGalleryObjectProperties,The length of the statement  "			// Root albums do not have a directory name that reflects the album's title' so only update this property for non-root albums. " is 126.
Long Statement,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,SyncWithGalleryObjectProperties,The length of the statement  "				album.DirectoryName = HelperFunctions.ValidateDirectoryName (album.Parent.FullPhysicalPath' album.Title' gs.DefaultAlbumDirectoryNameLength); " is 141.
Long Statement,GalleryServerPro.Business,GalleryObjectCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectCollection.cs,Add,The length of the statement  "		throw new ArgumentNullException ("item"' "Cannot add null to an existing GalleryObjectCollection. Items.Count = " + Items.Count); " is 129.
Long Statement,GalleryServerPro.Business,GalleryObjectCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectCollection.cs,SortByDateTime,The length of the statement  "		Key = a.MetadataItems.Where (md => md.MetadataItemName == sortByMetaName).DefaultIfEmpty (GetEmptyMetadataItem (sortByMetaName' a' DateTime.MinValue.ToString (metadataDateTimeFormatString))).First ().Value.ToDateTime (metadataDateTimeFormatString)' " is 248.
Long Statement,GalleryServerPro.Business,GalleryObjectCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectCollection.cs,SortByDateTime,The length of the statement  "		Key = m.MetadataItems.Where (md => md.MetadataItemName == sortByMetaName).DefaultIfEmpty (GetEmptyMetadataItem (sortByMetaName' m' DateTime.MinValue.ToString (metadataDateTimeFormatString))).First ().Value.ToDateTime (metadataDateTimeFormatString)' " is 248.
Long Statement,GalleryServerPro.Business,GalleryObjectCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectCollection.cs,GetEmptyMetadataItem,The length of the statement  "	return new GalleryObjectMetadataItem (int.MinValue' mediaObject' null' value' false' mediaObject.MetaDefinitions.Find (metaName)); " is 130.
Long Statement,GalleryServerPro.Business,GalleryObjectCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectCollection.cs,SortByString,The length of the statement  "	var childAlbums = Items.Values.Where (g => g.GalleryObjectType == GalleryObjectType.Album).OrderBy (g => g.MetadataItems.Where (mi => mi.MetadataItemName == sortByMetaName).Select (mi => mi.Value).Distinct ().FirstOrDefault ()).Select (a => a); " is 244.
Long Statement,GalleryServerPro.Business,GalleryObjectCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectCollection.cs,SortByString,The length of the statement  "	var mediaObjects = Items.Values.Where (g => g.GalleryObjectType != GalleryObjectType.Album).OrderBy (g => g.MetadataItems.Where (mi => mi.MetadataItemName == sortByMetaName).Select (mi => mi.Value).Distinct ().FirstOrDefault ()).Select (mo => mo); " is 247.
Long Statement,GalleryServerPro.Business,GalleryObjectCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectCollection.cs,Contains,The length of the statement  "			throw new BusinessException ("Error in GalleryObjectCollection.Contains method: One of the objects in the Items property is null. Items.Count = " + Items.Count); " is 161.
Long Statement,GalleryServerPro.Business,GalleryObjectCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectCollection.cs,Contains,The length of the statement  "		bool existingObjectsAndEqual = ((galleryObjectIterator.Id > int.MinValue) && (galleryObjectIterator.Id.Equals (item.Id)) && (galleryObjectIterator.GetType () == item.GetType ())); " is 179.
Long Statement,GalleryServerPro.Business,GalleryObjectCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectCollection.cs,Contains,The length of the statement  "		bool newObjectsAndFilepathsAreEqual = ((galleryObjectIterator.IsNew) && (item.IsNew) && (!String.IsNullOrEmpty (galleryObjectIterator.Original.FileNamePhysicalPath)) && (!String.IsNullOrEmpty (item.Original.FileNamePhysicalPath)) && (galleryObjectIterator.Original.FileNamePhysicalPath.Equals (item.Original.FileNamePhysicalPath))); " is 332.
Long Statement,GalleryServerPro.Business,GalleryServerRole,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryServerRole.cs,Copy,The length of the statement  "	IGalleryServerRole role = Factory.CreateGalleryServerRoleInstance (String.Empty' AllowViewAlbumOrMediaObject' AllowViewOriginalImage' AllowAddMediaObject' AllowAddChildAlbum' AllowEditMediaObject' AllowEditAlbum' AllowDeleteMediaObject' AllowDeleteChildAlbum' AllowSynchronize' AllowAdministerSite' AllowAdministerGallery' HideWatermark); " is 338.
Long Statement,GalleryServerPro.Business,GalleryServerRole,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryServerRole.cs,ValidateAdminRoleIntegrity,The length of the statement  "	// Test 2: Since admins always have complete access to all albums in a gallery (and site admins have access to all albums " is 121.
Long Statement,GalleryServerPro.Business,GalleryServerRole,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryServerRole.cs,ValidateAdminRoleIntegrity,The length of the statement  "	// in every gallery)' admin roles should be assigned the root album for each relevant gallery. We verify this by getting the  " is 124.
Long Statement,GalleryServerPro.Business,GalleryServerRole,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryServerRole.cs,ValidateAdminRoleIntegrity,The length of the statement  "	// root album ID for each relevant gallery and then comparing them to the ones assigned to the role. If they are different'  " is 123.
Long Statement,GalleryServerPro.Business,GalleryServerRole,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryServerRole.cs,GetRootAlbumIdsForRole,The length of the statement  "		// Loop through each album ID associated with this role. Add the root album for each to our list' but don't duplicate any. " is 122.
Long Statement,GalleryServerPro.Business,GalleryServerRole,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryServerRole.cs,GetHashCode,The length of the statement  "	return (this.RoleName.GetHashCode () ^ this.AllAlbumIds.GetHashCode () ^ this.AllowAddChildAlbum.GetHashCode () ^ this.AllowAddMediaObject.GetHashCode () ^ this.AllowAdministerSite.GetHashCode () ^ this.AllowDeleteChildAlbum.GetHashCode () ^ this.AllowDeleteMediaObject.GetHashCode () ^ this.AllowEditAlbum.GetHashCode () ^ this.AllowEditMediaObject.GetHashCode () ^ this.AllowSynchronize.GetHashCode () ^ this.AllowViewAlbumOrMediaObject.GetHashCode () ^ this.AllowViewOriginalImage.GetHashCode () ^ this.HideWatermark.GetHashCode () ^ this.AllowAdministerGallery.GetHashCode ()); " is 581.
Long Statement,GalleryServerPro.Business,GenericMediaObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericMediaObject.cs,Inflate,The length of the statement  "			throw new System.InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.GenericMediaObject_Inflate_Ex_Msg' this.IsInflated' this.HasChanges)); " is 167.
Long Statement,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "		var thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (this.GalleryObject.Original.FileInfo.DirectoryName' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 206.
Long Statement,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "	if (Array.IndexOf<string> (gallerySetting.ImageMagickFileTypes' Path.GetExtension (GalleryObject.Original.FileName).ToLowerInvariant ()) >= 0) { " is 144.
Long Statement,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GenerateThumbnailImageUsingImageMagick,The length of the statement  "	string tmpImageThumbnailPath = Path.Combine (AppSetting.Instance.TempUploadDirectory' String.Concat (Guid.NewGuid ().ToString ()' ".jpg")); " is 139.
Long Statement,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GenerateThumbnailImageUsingImageMagick,The length of the statement  "	ImageMagick.GenerateImage (GalleryObject.Original.FileNamePhysicalPath' tmpImageThumbnailPath' GalleryObject.GalleryId); " is 120.
Long Statement,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GenerateThumbnailImageUsingImageMagick,The length of the statement  "				var newSize = CalculateWidthAndHeight (new System.Windows.Size (originalBitmap.Width' originalBitmap.Height)' gallerySetting.MaxThumbnailLength' false); " is 152.
Long Statement,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GenerateThumbnailImageUsingImageMagick,The length of the statement  "				var size = ImageHelper.SaveImageFile (originalBitmap' newFilePath' ImageFormat.Jpeg' newSize.Width' newSize.Height' jpegQuality); " is 129.
Long Statement,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GenerateThumbnailImageUsingImageMagick,The length of the statement  "			ex.Data.Add ("GSP Info"' String.Format ("This error occurred while trying to process the ImageMagick-generated file {0}. The original file is {1}. A generic thumbnail image will be created instead."' tmpImageThumbnailPath' GalleryObject.Original.FileNamePhysicalPath)); " is 269.
Long Statement,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GenerateThumbnailImageUsingImageMagick,The length of the statement  "			// Now delete the thumbnail image created by FFmpeg' but no worries if an error happens. The file is in the temp directory " is 122.
Long Statement,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GenerateGenericThumbnailImage,The length of the statement  "		var newSize = CalculateWidthAndHeight (new System.Windows.Size (originalBitmap.Width' originalBitmap.Height)' gallerySetting.MaxThumbnailLength' true); " is 151.
Long Statement,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GenerateGenericThumbnailImage,The length of the statement  "		var size = ImageHelper.SaveImageFile (originalBitmap' newFilePath' ImageFormat.Jpeg' newSize.Width' newSize.Height' jpegQuality); " is 129.
Long Statement,GalleryServerPro.Business,GenericThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericThumbnailCreator.cs,GenerateNewFilename,The length of the statement  "	string thumbnailFilename = String.Format (CultureInfo.CurrentCulture' "{0}{1}.{2}"' filenamePrefix' nameWithoutExtension' imgFormat.ToString ().ToLower (CultureInfo.CurrentCulture)); " is 182.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidateDirectoryName,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.CurrentCulture' Resources.HelperFunctions_ValidateDirectoryName_Ex_Msg' dirPath' dirName)); " is 147.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidateDirectoryName,The length of the statement  "	// Test 3: If the name ends in a period or space' delete it. This is to handle a 8.3 DOS filename compatibility issue where most/all  " is 132.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidateDirectoryName,The length of the statement  "	// trailing periods and spaces are stripped from file and folder names by Windows' a holdover from the transition from 8.3  " is 122.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidateDirectoryName,The length of the statement  "	// filenames where the dot is not stored but implied. If we did not do this' then Windows would store the directory without " is 123.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidateFileName,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.CurrentCulture' Resources.HelperFunctions_ValidateFileName_Ex_Msg1' dirPath' fileName)); " is 144.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidateFileName,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.CurrentCulture' Resources.HelperFunctions_ValidateFileName_Ex_Msg2' fileName)); " is 135.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The length of the statement  "				throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue)); " is 150.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The length of the statement  "			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a color known to the .NET Framework."' colorValue)); " is 168.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The length of the statement  "		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid color."' colorValue)); " is 146.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,DetermineMediaObjectType,The length of the statement  "				throw new InvalidEnumArgumentException (String.Format (CultureInfo.CurrentCulture' "HelperFunctions.DetermineMediaObjectType() encountered a MimeTypeCategory enumeration it does not recognize. The method may need to be updated. (Unrecognized MimeTypeCategory enumeration: MimeTypeCategory.{0})"' mimeType.TypeCategory)); " is 320.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,CanUserViewAlbum,The length of the statement  "	return SecurityManager.IsUserAuthorized (SecurityActions.ViewAlbumOrMediaObject' roles' album.Id' album.GalleryId' isUserAuthenticated' album.IsPrivate' SecurityActionsOption.RequireOne' album.IsVirtualAlbum); " is 209.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,MapAlbumDirectoryStructureToAlternateDirectory,The length of the statement  "		throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "Expected this.Parent.FullPhysicalPathOnDisk (\"{0}\") to start with \"{1}\"' but it did not."' albumPhysicalPath' fullMediaObjectPath)); " is 209.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,CalculateFullPath,The length of the statement  "	// Delete any leading or trailing slashes' and ensure all slashes are the backward ones (\).  If the user has entered a UNC drive we only remove " is 144.
Long Statement,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidatePhysicalPathExistsAndIsReadable,The length of the statement  "		throw new DirectoryNotFoundException (String.Format (CultureInfo.InvariantCulture' Resources.DirectoryNotFound_Ex_Msg' fullPhysicalPath)); " is 138.
Long Statement,GalleryServerPro.Business,HtmlValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\HtmlValidator.cs,Create,The length of the statement  "	return new HtmlValidator (html' gallerySetting.AllowedHtmlTags' gallerySetting.AllowedHtmlAttributes' gallerySetting.AllowUserEnteredJavascript); " is 145.
Long Statement,GalleryServerPro.Business,HtmlValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\HtmlValidator.cs,Clean,The length of the statement  "		HtmlValidator scrubber = new HtmlValidator (html' gallerySetting.AllowedHtmlTags' gallerySetting.AllowedHtmlAttributes' gallerySetting.AllowUserEnteredJavascript); " is 163.
Long Statement,GalleryServerPro.Business,HtmlValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\HtmlValidator.cs,RemoveInvalidAttributes,The length of the statement  "			if (Array.IndexOf<string> (allowedAttributes' attrNameCaptures [attValuePairIterator].Value.ToLowerInvariant ()) >= 0) { " is 120.
Long Statement,GalleryServerPro.Business,HtmlValidator,C:\repos\bambit_BGallery\TIS.GSP.Business\HtmlValidator.cs,GetAttValuePair,The length of the statement  "	return String.Concat (" "' tagMatch.Groups ["attrname"].Captures [index].Value' "="' beginAttValue' attrValCapture.Value' endAttValue); " is 135.
Long Statement,GalleryServerPro.Business,Image,C:\repos\bambit_BGallery\TIS.GSP.Business\Image.cs,Inflate,The length of the statement  "			throw new System.InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Image_Inflate_Ex_Msg' this.IsInflated' this.HasChanges)); " is 154.
Long Statement,GalleryServerPro.Business,ImageHelper,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageHelper.cs,SaveImageFile,The length of the statement  "	Bitmap destinationBmp = CreateResizedBitmap (sourceBmp' sourceBmp.Size.Width' sourceBmp.Size.Height' newWidth' newHeight); " is 122.
Long Statement,GalleryServerPro.Business,ImageOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageOptimizedCreator.cs,GenerateAndSaveFile,The length of the statement  "		var optimizedPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (this.GalleryObject.Original.FileInfo.DirectoryName' gallerySetting.FullOptimizedPath' gallerySetting.FullMediaObjectPath); " is 206.
Long Statement,GalleryServerPro.Business,ImageOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageOptimizedCreator.cs,GenerateAndSaveFile,The length of the statement  "	if (Array.IndexOf<string> (gallerySetting.ImageMagickFileTypes' Path.GetExtension (GalleryObject.Original.FileName).ToLowerInvariant ()) >= 0) { " is 144.
Long Statement,GalleryServerPro.Business,ImageOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageOptimizedCreator.cs,GenerateAndSaveFile,The length of the statement  "		size = GenerateImageUsingImageMagick (newFilePath' gallerySetting.MaxOptimizedLength' gallerySetting.OptimizedImageJpegQuality); " is 128.
Long Statement,GalleryServerPro.Business,ImageOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageOptimizedCreator.cs,GenerateAndSaveFile,The length of the statement  "		size = GenerateImageUsingDotNet (newFilePath' gallerySetting.MaxOptimizedLength' gallerySetting.OptimizedImageJpegQuality); " is 123.
Long Statement,GalleryServerPro.Business,ImageOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageOptimizedCreator.cs,IsOptimizedImageRequired,The length of the statement  "	return ((optimizedImageMissing || overwriteFlag || rotateIsRequested) && (originalExceedsOptimizedDimensionTriggers || isOriginalNonJpegImage)); " is 144.
Long Statement,GalleryServerPro.Business,ImageOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageOptimizedCreator.cs,DoesOriginalExceedOptimizedDimensionTriggers,The length of the statement  "	bool isOriginalFileSizeGreaterThanTriggerSize = GalleryObject.Original.FileSizeKB > gallerySetting.OptimizedImageTriggerSizeKb; " is 127.
Long Statement,GalleryServerPro.Business,ImageOriginalCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageOriginalCreator.cs,GenerateAndSaveFile,The length of the statement  "		throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "Cannot rotate image because no file exists at {0}."' filePath)); " is 137.
Long Statement,GalleryServerPro.Business,MediaObjectSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaObjectSaveBehavior.cs,Save,The length of the statement  "			Events.EventController.RecordError (ex' AppSetting.Instance' this._galleryObject.GalleryId' Factory.LoadGallerySettings ()); " is 124.
Long Statement,GalleryServerPro.Business,MediaObjectSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaObjectSaveBehavior.cs,Save,The length of the statement  "			Events.EventController.RecordError (ex' AppSetting.Instance' this._galleryObject.GalleryId' Factory.LoadGallerySettings ()); " is 124.
Long Statement,GalleryServerPro.Business,MediaObjectSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaObjectSaveBehavior.cs,Save,The length of the statement  "			Events.EventController.RecordError (ex' AppSetting.Instance' this._galleryObject.GalleryId' Factory.LoadGallerySettings ()); " is 124.
Long Statement,GalleryServerPro.Business,MediaObjectSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaObjectSaveBehavior.cs,SyncFilenameToMetadataFilename,The length of the statement  "			bool optFilenameSameAsOriginal = (this._galleryObject.Original.FileName.Equals (_galleryObject.Optimized.FileName' StringComparison.OrdinalIgnoreCase)); " is 152.
Long Statement,GalleryServerPro.Business,MediaObjectSaveBehavior,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaObjectSaveBehavior.cs,SyncFilenameToMetadataFilename,The length of the statement  "						ex.Data.Add ("Cannot Rename"' String.Format ("Error occurred renaming file {0} to {1} (directory {2})."' Path.GetFileName (prevPath)' Path.GetFileName (this._galleryObject.Original.FileNamePhysicalPath)' Path.GetDirectoryName (prevPath))); " is 239.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,DeleteOriginalFile,The length of the statement  "	if (String.IsNullOrEmpty (Optimized.FileName) || (this.Original.FileName.Equals (this.Optimized.FileName' StringComparison.OrdinalIgnoreCase))) { " is 145.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the statement  "	bool doesOptimizedImageExistAndIsDifferentThanOriginalImage = (!String.IsNullOrEmpty (this.Optimized.FileName) && (this.Optimized.FileName != this.Original.FileName)); " is 167.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the statement  "		goCopy = Factory.CreateMediaObjectInstance (null' destinationAlbum' this.Original.ExternalHtmlSource' this.Original.ExternalType); " is 130.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the statement  "	// FYI: Currently the optimized image is never external (only the original may be)' but we test it anyway for future bullet-proofing. " is 133.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the statement  "	if ((this.Optimized.DisplayType != DisplayObjectType.External) && doesOptimizedImageExistAndIsDifferentThanOriginalImage) { " is 123.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the statement  "		string destOptimizedPathWithoutFilename = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (destPath' gallerySetting.FullOptimizedPath' gallerySetting.FullMediaObjectPath); " is 186.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the statement  "		string destOptimizedFilepath = System.IO.Path.Combine (destOptimizedPathWithoutFilename' HelperFunctions.ValidateFileName (destOptimizedPathWithoutFilename' this.Optimized.FileName)); " is 183.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the statement  "	// FYI: Currently the thumbnail image is never external (only the original may be)' but we test it anyway for future bullet-proofing. " is 133.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the statement  "		string destThumbnailPathWithoutFilename = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (destPath' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 186.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the statement  "		string destThumbnailFilepath = System.IO.Path.Combine (destThumbnailPathWithoutFilename' HelperFunctions.ValidateFileName (destThumbnailPathWithoutFilename' this.Thumbnail.FileName)); " is 183.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CopyTo,The length of the statement  "	if (!String.IsNullOrWhiteSpace (goCopy.Original.FileName) && goCopy.MetadataItems.TryGetMetadataItem (MetadataItemName.FileName' out metaItem)) { " is 145.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,MoveTo,The length of the statement  "		string destOptimizedPathWithoutFilename = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (destPath' gallerySetting.FullOptimizedPath' gallerySetting.FullMediaObjectPath); " is 186.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,MoveTo,The length of the statement  "		destOptimizedFilepath = System.IO.Path.Combine (destOptimizedPathWithoutFilename' HelperFunctions.ValidateFileName (destOptimizedPathWithoutFilename' this.Optimized.FileName)); " is 176.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,MoveTo,The length of the statement  "	string destThumbnailPathWithoutFilename = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (destPath' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 186.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,MoveTo,The length of the statement  "	string destThumbnailFilepath = System.IO.Path.Combine (destThumbnailPathWithoutFilename' HelperFunctions.ValidateFileName (destThumbnailPathWithoutFilename' this.Thumbnail.FileName)); " is 183.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,MoveTo,The length of the statement  "	// Update the FileInfo properties for the original' optimized and thumbnail objects. This is necessary in order to update " is 121.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,MoveTo,The length of the statement  "	// Now assign new thumbnails (if needed) to the albums we moved FROM. (The thumbnail for the destination album was updated in  " is 125.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,MoveTo,The length of the statement  "		Album.AssignAlbumThumbnail (Factory.LoadAlbumInstance (albumId' false' true)' false' false' this.LastModifiedByUserName); " is 121.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,GetOrientation,The length of the statement  "	if (MetadataItems.TryGetMetadataItem (MetadataItemName.Orientation' out orientationMeta) && !orientationMeta.IsDeleted) { " is 121.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CreateMetaItem,The length of the statement  "	return Factory.CreateMetadataItem (int.MinValue' this' (matches.Count == 1 ? rawValue : null)' formattedValue' true' metaDef); " is 126.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,OkToUpdateMetaItemValue,The length of the statement  "	var isAlbumTitleOrCaption = (metaItemSource.GalleryObject.GalleryObjectType == GalleryObjectType.Album) && ((metaItemSource.MetadataItemName == MetadataItemName.Title) || (metaItemSource.MetadataItemName == MetadataItemName.Caption)); " is 234.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,VerifyInstanceIsUpdateable,The length of the statement  "		throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "This gallery object (ID {0}' {1}) is not updateable."' this.Id' this.GetType ())); " is 155.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,ValidateAuditFields,The length of the statement  "		throw new BusinessException ("The property CreatedByUsername must be set to the currently logged on user before this object can be saved."); " is 140.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,ValidateAuditFields,The length of the statement  "		throw new BusinessException ("The property LastModifiedByUsername must be set to the currently logged on user before this object can be saved."); " is 145.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,ValidateAuditFields,The length of the statement  "		throw new BusinessException ("The property DateLastModified must be assigned the current date before this object can be saved."); " is 129.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,ValidateAuditFields,The length of the statement  "	//  String.Format(CultureInfo.CurrentCulture' "Media objects and albums that have been saved to the data store should never have the property DateAdded=MinValue. IsNew={0}; DateAdded={1}"' " is 188.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,ExtractMetaValue,The length of the statement  "	// Since the pattern is built from the enum' we are guaranteed to successfully parse the match' so no need to catch a parse exception. " is 134.
Long Statement,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,ExtractMetaValue,The length of the statement  "			// users). However' the clean method has no knowledge of the current user' so it'll strip HTML whenever HTML is disabled' " is 121.
Long Statement,GalleryServerPro.Business,ImageThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "		var thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (this.GalleryObject.Original.FileInfo.DirectoryName' gallerySetting.FullThumbnailPath' gallerySetting.FullMediaObjectPath); " is 206.
Long Statement,GalleryServerPro.Business,ImageThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "	if (Array.IndexOf<string> (gallerySetting.ImageMagickFileTypes' Path.GetExtension (GalleryObject.Original.FileName).ToLowerInvariant ()) >= 0) { " is 144.
Long Statement,GalleryServerPro.Business,ImageThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "		size = GenerateImageUsingImageMagick (newFilePath' gallerySetting.MaxThumbnailLength' gallerySetting.ThumbnailImageJpegQuality); " is 128.
Long Statement,GalleryServerPro.Business,ImageThumbnailCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageThumbnailCreator.cs,GenerateAndSaveFile,The length of the statement  "		size = GenerateImageUsingDotNet (newFilePath' gallerySetting.MaxThumbnailLength' gallerySetting.ThumbnailImageJpegQuality); " is 123.
Long Statement,GalleryServerPro.Business,UserAccount,C:\repos\bambit_BGallery\TIS.GSP.Business\UserAccount.cs,CopyTo,The length of the statement  "		throw new ArgumentOutOfRangeException ("userAccount"' "The parameter 'userAccount' cannot be cast to an instance of UserAccount."); " is 131.
Long Statement,GalleryServerPro.Business,MimeType,C:\repos\bambit_BGallery\TIS.GSP.Business\MimeType.cs,Copy,The length of the statement  "	IMimeType copy = new MimeType (this.MimeTypeId' this.MimeTypeGalleryId' this.GalleryId' this.Extension' this.FullType' this.BrowserMimeType' this.AllowAddToGallery); " is 165.
Long Statement,GalleryServerPro.Business,MimeType,C:\repos\bambit_BGallery\TIS.GSP.Business\MimeType.cs,Save,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' "Cannot save. This MIME type instance is an application-level MIME type and cannot be persisted to the data store. Only gallery-specific MIME types can be saved. (GalleryId={0}' MimeTypeId={1}' MimeTypeGalleryId={2}' FileExtension={3}"' GalleryId' MimeTypeId' MimeTypeGalleryId' Extension)); " is 371.
Long Statement,GalleryServerPro.Business,MimeType,C:\repos\bambit_BGallery\TIS.GSP.Business\MimeType.cs,ValidateMimeType,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.CurrentCulture' Resources.MimeType_Ctor_Ex_Msg' fullMimeType)' fullMimeType); " is 133.
Long Statement,GalleryServerPro.Business,MimeType,C:\repos\bambit_BGallery\TIS.GSP.Business\MimeType.cs,ValidateMimeType,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.CurrentCulture' Resources.MimeType_Ctor_Ex_Msg' fullMimeType)' fullMimeType); " is 133.
Long Statement,GalleryServerPro.Business,MimeType,C:\repos\bambit_BGallery\TIS.GSP.Business\MimeType.cs,ConfigureMimeTypesForGallery,The length of the statement  "				throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "Could not find a IMimeType with file extension \"{0}\" in the list of base MIME types."' mtgDto.MimeType.FileExtension)); " is 194.
Long Statement,GalleryServerPro.Business,MimeType,C:\repos\bambit_BGallery\TIS.GSP.Business\MimeType.cs,ConfigureMimeTypesForGallery,The length of the statement  "			// Validate the media templates. There may not be any' which is OK (for example' there isn't one defined for 'application/msword'). " is 131.
Long Statement,GalleryServerPro.Business,MimeType,C:\repos\bambit_BGallery\TIS.GSP.Business\MimeType.cs,ConfigureMimeTypesForGallery,The length of the statement  "				throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "No default media template. Could not find a media template for MIME type \"{0}\" or \"{1}\" with browser ID = \"default\"."' mimeType.FullType' String.Concat (mimeType.MajorType' "/*"))); " is 260.
Long Statement,GalleryServerPro.Business,MimeType,C:\repos\bambit_BGallery\TIS.GSP.Business\MimeType.cs,LoadMimeTypesFromDataStore,The length of the statement  "			baseMimeTypes.Add (new MimeType (mimeTypeDto.MimeTypeId' Int32.MinValue' Int32.MinValue' mimeTypeDto.FileExtension.Trim ()' mimeTypeDto.MimeTypeValue.Trim ()' mimeTypeDto.BrowserMimeTypeValue.Trim ()' false)); " is 209.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,ThrowIfUserNotAuthorized,The length of the statement  "	if (!(IsUserAuthorized (securityRequest' roles' albumId' galleryId' isAuthenticated' isPrivateAlbum' SecurityActionsOption.RequireOne' isVirtualAlbum))) { " is 154.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,ThrowIfUserNotAuthorized,The length of the statement  "		throw new Events.CustomExceptions.GallerySecurityException (String.Format (CultureInfo.CurrentCulture' "You do not have permission '{0}' for album ID {1}."' securityRequest.ToString ()' albumId)); " is 196.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,The length of the statement  "	return IsUserAuthorized (securityRequests' roles' albumId' galleryId' isAuthenticated' isPrivateAlbum' SecurityActionsOption.RequireOne' isVirtualAlbum); " is 153.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,The length of the statement  "	var userIsRequestingSysAdminPermission = (securityRequests & SecurityActions.AdministerSite) == SecurityActions.AdministerSite; " is 127.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,The length of the statement  "	var userIsRequestingGalleryAdminPermission = (securityRequests & SecurityActions.AdministerGallery) == SecurityActions.AdministerGallery; " is 137.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,The length of the statement  "			throw new ArgumentOutOfRangeException ("galleryId"' String.Format (CultureInfo.CurrentCulture' "A valid gallery ID must be specified. Instead' the value was {0}."' galleryId)); " is 176.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,The length of the statement  "		// Virtual albums are always allowed' but only for non-admin requests. This feels hacky and non-intuitive; should try to improve someday " is 136.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,The length of the statement  "				// We found a role that provides permission' so no need to check the other roles. Just move on to the next security request. " is 124.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsAnonymousUserAuthorized,The length of the statement  "		return IsAnonymousUserAuthorizedForMultipleSecurityActions (securityRequests' isPrivateAlbum' gallerySettings' secActionsOption); " is 129.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsAnonymousUserAuthorizedForSingleSecurityAction,The length of the statement  "	return (securityRequests == SecurityActions.ViewAlbumOrMediaObject) && !isPrivateAlbum && gallerySettings.AllowAnonymousBrowsing || (securityRequests == SecurityActions.ViewOriginalMediaObject) && !isPrivateAlbum && gallerySettings.AllowAnonymousBrowsing && gallerySettings.EnableAnonymousOriginalMediaObjectDownload; " is 317.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsAuthenticatedUserAuthorized,The length of the statement  "		// 1. The album is the root album and its ID is in the list of targeted albums (Note that we never actually delete the root album. " is 130.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsAuthenticatedUserAuthorized,The length of the statement  "		//    Instead' we delete all objects within the album. But the idea of deleting the top level album to clear out all objects in the " is 131.
Long Statement,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsAuthenticatedUserAuthorized,The length of the statement  "		throw new GalleryServerPro.Events.CustomExceptions.BusinessException (String.Format (CultureInfo.CurrentCulture' "The IsUserAuthorized function is not designed to handle the {0} SecurityActions. It must be updated by a developer."' securityRequest.ToString ())); " is 262.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,Synchronize,The length of the statement  "		// Another sync is in progress. We don't want the generic catch below to change the sync state' so we intercept it here. " is 120.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,Initialize,The length of the statement  "		throw new WebException (String.Format (CultureInfo.CurrentCulture' "The album is not writable (ID {0}' Title='{1}')"' album.Id' album.Title)); " is 142.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,Initialize,The length of the statement  "	_synchStatus.Update (SynchronizationState.NotSet' CountFiles (album.FullPhysicalPathOnDisk)' null' null' null' null' true); " is 123.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeChildDirectories,The length of the statement  "		throw new ArgumentException (String.Format ("Synchronization error. parentAlbum.FullPhysicalPathOnDisk must be equal to parentDirectory.FullName. parentDirectory.FullName='{0}'; parentAlbum.FullPhysicalPathOnDisk='{1}'"' parentDirectory.FullName' parentAlbum.FullPhysicalPathOnDisk)); " is 284.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeChildDirectories,The length of the statement  "			_synchStatus.SkippedMediaObjects.Add (new KeyValuePair<string' string> (subdirectory.FullName.Remove (0' _fullMediaObjectPathLength + 1)' Resources.SynchronizationStatus_Hidden_Directory_Msg)); " is 193.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeMediaObjectFiles,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.CurrentCulture' "Error in SynchronizeMediaObjectFiles(): The full directory path of the parameter 'directory' does not match the directory path of the parameter 'album'. directory.FullName='{0}'; album.FullPhysicalPath='{1}'"' directory.FullName' album.FullPhysicalPath)); " is 328.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeMediaObjectFiles,The length of the statement  "		_synchStatus.SkippedMediaObjects.Add (new KeyValuePair<string' string> (directory.Name' Resources.SynchronizationStatus_Restricted_Directory_Msg)); " is 147.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeMediaObjectFiles,The length of the statement  "			_synchStatus.SkippedMediaObjects.Add (new KeyValuePair<string' string> (file.FullName.Remove (0' _fullMediaObjectPathLength + 1)' Resources.SynchronizationStatus_Hidden_File_Msg)); " is 180.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeMediaObjectFiles,The length of the statement  "			// We have a thumbnail image. If we are storing thumbnails in a different directory' delete the file' but only if the path " is 122.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeMediaObjectFiles,The length of the statement  "			// is writeable. The user may have just specified a new thumbnail path' and we need to delete all the previous thumbnails  " is 121.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeMediaObjectFiles,The length of the statement  "			// We have an optimized image. If we are storing optimized images in a different directory' delete the file' but only if the path " is 129.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeMediaObjectFiles,The length of the statement  "			// is writeable. The user may have just specified a new optimized path' and we need to delete all the previous optimized images  " is 127.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeMediaObjectFiles,The length of the statement  "		var mediaObject = album.GetChildGalleryObjects (GalleryObjectType.MediaObject).FirstOrDefault (mo => mo.Original.FileNamePhysicalPath.Equals (file.FullName' StringComparison.OrdinalIgnoreCase)); " is 194.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,CreateNewMediaObject,The length of the statement  "		_synchStatus.SkippedMediaObjects.Add (new KeyValuePair<string' string> (file.FullName.Remove (0' _fullMediaObjectPathLength + 1)' Resources.SynchronizationStatus_Disabled_File_Type_Msg)); " is 187.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeDirectory,The length of the statement  "		throw new ArgumentException (String.Format ("Error in SynchronizeDirectory(). directory.Parent.FullName='{0}'; parentAlbum.FullPhysicalPathOnDisk='{1}'"' directory.Parent.FullName' parentAlbum.FullPhysicalPathOnDisk.TrimEnd (new char[] { " is 237.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeDirectory,The length of the statement  "	var childAlbum = (IAlbum)parentAlbum.GetChildGalleryObjects (GalleryObjectType.Album).FirstOrDefault (a => a.FullPhysicalPathOnDisk == directory.FullName); " is 155.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,DeleteOrphanedMediaObjectRecords,The length of the statement  "	var orphanMediaObjects = album.GetChildGalleryObjects (GalleryObjectType.MediaObject).Where (mo => !mo.IsSynchronized && mo.GalleryObjectType != GalleryObjectType.External); " is 173.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,DeleteOrphanedThumbnailAndOptimizedImages,The length of the statement  "	string thumbnailPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (album.FullPhysicalPathOnDisk' GallerySettings.FullThumbnailPath' GallerySettings.FullMediaObjectPath); " is 189.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,DeleteOrphanedThumbnailAndOptimizedImages,The length of the statement  "	string optimizedPath = HelperFunctions.MapAlbumDirectoryStructureToAlternateDirectory (album.FullPhysicalPathOnDisk' GallerySettings.FullOptimizedPath' GallerySettings.FullMediaObjectPath); " is 189.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,DeleteOrphanedThumbnailAndOptimizedImages,The length of the statement  "	// The original path may contain thumbnails or optimized images when the thumbnail/optimized path is the same as the original path " is 130.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,DeleteOrphanedThumbnailAndOptimizedImages,The length of the statement  "	if ((GallerySettings.FullThumbnailPath.Equals (GallerySettings.FullMediaObjectPath' StringComparison.OrdinalIgnoreCase)) || (GallerySettings.FullOptimizedPath.Equals (GallerySettings.FullMediaObjectPath' StringComparison.OrdinalIgnoreCase))) { " is 243.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,DeleteOrphanedThumbnailAndOptimizedImages,The length of the statement  "			if ((file.Name.StartsWith (thumbnailPrefix' StringComparison.OrdinalIgnoreCase)) || (file.Name.StartsWith (optimizedPrefix' StringComparison.OrdinalIgnoreCase))) { " is 163.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,DeleteOrphanedThumbnailAndOptimizedImages,The length of the statement  "					if ((mediaObject.Optimized.FileName.Equals (file.Name' StringComparison.OrdinalIgnoreCase)) || (mediaObject.Thumbnail.FileName.Equals (file.Name' StringComparison.OrdinalIgnoreCase))) { " is 185.
Long Statement,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,GetCurrentAndCompleteMediaQueueItems,The length of the statement  "	var queueItems = MediaConversionQueue.Instance.MediaQueueItems.Where (mq => mq.Status == MediaQueueItemStatus.Complete); " is 120.
Long Statement,GalleryServerPro.Business,SynchronizationStatus,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationStatus.cs,Begin,The length of the statement  "		var syncInProgress = (_synchState == SynchronizationState.SynchronizingFiles || _synchState == SynchronizationState.PersistingToDataStore); " is 139.
Long Statement,GalleryServerPro.Business,SynchronizationStatus,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationStatus.cs,Update,The length of the statement  "				throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' Resources.SynchronizationStatus_TotalFileCount_Ex_Msg' totalFileCount.Value)); " is 160.
Long Statement,GalleryServerPro.Business,SynchronizationStatus,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationStatus.cs,Update,The length of the statement  "			if ((currentFileIndex.Value < 0) || ((currentFileIndex.Value > 0) && (currentFileIndex.Value >= this._totalFileCount))) { " is 121.
Long Statement,GalleryServerPro.Business,SynchronizationStatus,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationStatus.cs,Update,The length of the statement  "				throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' Resources.SynchronizationStatus_CurrentFileIndex_Ex_Msg' currentFileIndex.Value' this._totalFileCount)); " is 186.
Long Statement,GalleryServerPro.Business,SynchronizationStatus,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationStatus.cs,Save,The length of the statement  "				if ((sDto.SynchId != SynchId) && ((sDto.SynchState == SynchronizationState.SynchronizingFiles) || (sDto.SynchState == SynchronizationState.PersistingToDataStore))) { " is 165.
Long Statement,GalleryServerPro.Business,SynchronizationStatus,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationStatus.cs,RefreshFromDataStore,The length of the statement  "		//ISynchronizationStatus synchFromDataStore = Factory.GetDataProvider().Synchronize_RetrieveStatus(_galleryId' new Factory()); " is 126.
Long Statement,GalleryServerPro.Business,SynchronizationStatus,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationStatus.cs,GetFromDataStore,The length of the statement  "		return new SynchronizationStatus (galleryId' sDto.SynchId' sDto.SynchState' sDto.TotalFiles' String.Empty' sDto.CurrentFileIndex' String.Empty); " is 144.
Long Statement,GalleryServerPro.Business,UserAccountCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\UserAccountCollection.cs,Add,The length of the statement  "		throw new ArgumentNullException ("item"' "Cannot add null to an existing UserAccountCollection. Items.Count = " + Items.Count); " is 127.
Long Statement,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,RetrieveFromDataStore,The length of the statement  "			// Loop through each user profile setting and assign to the relevant property. When we encounter a record with a new gallery ID'  " is 128.
Long Statement,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,RetrieveFromDataStore,The length of the statement  "			// automatically create a new UserGalleryProfile instance and start populating that one. When we are done with the loop we will " is 127.
Long Statement,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,RetrieveFromDataStore,The length of the statement  "					throw new DataException (String.Format ("It is invalid for the profile setting '{0}' to be associated with a template gallery (Gallery ID {1})."' profileDto.SettingName' profileDto.FKGalleryId)); " is 195.
Long Statement,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,RetrieveFromDataStore,The length of the statement  "				throw new DataException (String.Format ("It is invalid for the profile setting '{0}' to be associated with a non-template gallery (Gallery ID {1})."' profileDto.SettingName' profileDto.FKGalleryId)); " is 199.
Long Statement,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,Save,The length of the statement  "		var pDto = (repo.Where (p => p.UserName == profile.UserName && p.SettingName == ProfileNameAlbumProfiles)).FirstOrDefault (); " is 125.
Long Statement,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,Save,The length of the statement  "		pDto = (repo.Where (p => p.UserName == profile.UserName && p.SettingName == ProfileNameMediaObjectProfiles)).FirstOrDefault (); " is 127.
Long Statement,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,Save,The length of the statement  "			pDto = (repo.Where (p => p.UserName == profile.UserName && p.FKGalleryId == ugp.GalleryId && p.SettingName == ProfileNameEnableUserAlbum)).FirstOrDefault (); " is 157.
Long Statement,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,Save,The length of the statement  "			pDto = (repo.Where (p => p.UserName == profile.UserName && p.FKGalleryId == ugp.GalleryId && p.SettingName == ProfileNameUserAlbumId)).FirstOrDefault (); " is 153.
Long Statement,GalleryServerPro.Business,Video,C:\repos\bambit_BGallery\TIS.GSP.Business\Video.cs,Inflate,The length of the statement  "			throw new System.InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Video_Inflate_Ex_Msg' this.IsInflated' this.HasChanges)); " is 154.
Long Statement,GalleryServerPro.Business,Video,C:\repos\bambit_BGallery\TIS.GSP.Business\Video.cs,MediaObject_Saved,The length of the statement  "	if (!MediaConversionQueue.Instance.IsWaitingInQueueOrProcessing (this.Id' MediaQueueItemConversionType.CreateOptimized)) { " is 122.
Long Statement,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,ApplyImageWatermark,The length of the statement  "		if ((watermarkHeight > (recipientImageHeight - (recipientImageHeight * borderPercent))) || (watermarkWidth > (recipientImageWidth - (recipientImageWidth * borderPercent)))) { " is 174.
Long Statement,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,ApplyImageWatermark,The length of the statement  "		Point watermarkStartingPoint = GetWatermarkStartingPoint ((float)watermarkWidth' (float)watermarkHeight' (float)recipientImageWidth' (float)recipientImageHeight' this.ImageLocation' borderPercent); " is 197.
Long Statement,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,ApplyImageWatermark,The length of the statement  "				grWatermark.DrawImage (watermarkImage' new Rectangle (watermarkStartingPoint.X' watermarkStartingPoint.Y' watermarkWidth' watermarkHeight)' //Set the destination position " is 170.
Long Statement,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkImage,The length of the statement  "		return ImageHelper.CreateResizedBitmap (this.WatermarkImage' watermarkWidth' watermarkHeight' resizedWatermarkWidth' resizedWatermarkHeight); " is 141.
Long Statement,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,ApplyTextWatermark,The length of the statement  "			// impression that the character was not really as tall as the recipient image. 'tis better to let the watermark text be " is 120.
Long Statement,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,ApplyTextWatermark,The length of the statement  "		if ((watermarkSize.Height > (recipientImageHeight - (recipientImageHeight * borderPercent))) || (watermarkSize.Width > (recipientImageWidth - (recipientImageWidth * borderPercent)))) { " is 184.
Long Statement,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,ApplyTextWatermark,The length of the statement  "		Point textStartingPoint = GetWatermarkStartingPoint (watermarkSize.Width' watermarkSize.Height' (float)recipientImageWidth' (float)recipientImageHeight' this.TextLocation' borderPercent); " is 187.
Long Statement,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,ExtractZipFile,The length of the statement  "		throw new InvalidOperationException ("A username was not specified in the ZipUtility constructor. Media objects extracted from a ZIP archive must be associated with a logged on user."); " is 185.
Long Statement,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,AddZipEntry,The length of the statement  "	foreach (IGalleryObject mediaObject in album.GetChildGalleryObjects (GalleryObjectType.MediaObject' !this._isAuthenticated)) { " is 126.
Long Statement,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,AddFileZipEntry,The length of the statement  "		AddFileZipEntry (zos' filePath' fileNameForZip' basePath' (mediaObject is Image)' applyWatermark' mediaObject.GalleryId); " is 121.
Long Statement,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,AddFileZipEntry,The length of the statement  "		throw new ArgumentException ("You must specify a gallery ID when the isImage and applyWatermark parameters are set to true."); " is 126.
Long Statement,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,AddFileZipEntry,The length of the statement  "	// and filePath="C:\Inetpub\wwwroot\galleryserverpro\mediaobjects\Summer 2005\sunsets\desert sunsets\zOpt_sonorandesert.jpg"' " is 125.
Long Statement,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,CreateStream,The length of the statement  "		throw new ArgumentException ("You must specify a gallery ID when the isImage and applyWatermark parameters are set to true."); " is 126.
Long Statement,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,VerifyAlbumExistsAndReturnReference,The length of the statement  "					SecurityManager.ThrowIfUserNotAuthorized (SecurityActions.AddChildAlbum' this._roles' currentAlbum.Id' currentAlbum.GalleryId' this._isAuthenticated' currentAlbum.IsPrivate' currentAlbum.IsVirtualAlbum); " is 203.
Long Statement,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,VerifyAlbumExistsAndReturnReference,The length of the statement  "				SecurityManager.ThrowIfUserNotAuthorized (SecurityActions.AddChildAlbum' this._roles' currentAlbum.Id' currentAlbum.GalleryId' this._isAuthenticated' currentAlbum.IsPrivate' currentAlbum.IsVirtualAlbum); " is 203.
Long Statement,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,VerifyAlbumExistsAndReturnReference,The length of the statement  "				this._albumAndDirectoryNamesLookupTable.Add (Path.Combine (currentAlbum.FullPhysicalPathOnDisk' directoryNameFromZip)' Path.Combine (currentAlbum.FullPhysicalPathOnDisk' newAlbum.DirectoryName)); " is 195.
Long Statement,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,ExtractEmbeddedZipFile,The length of the statement  "		throw new ArgumentException (String.Concat ("The zipFile parameter of the method ExtractEmbeddedZipFile in class ZipUtility must be a ZIP file. Instead' it had the file extension "' Path.GetExtension (zipFile.Name)' ".")); " is 222.
Long Statement,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,DetermineIfWatermarkIsToBeApplied,The length of the statement  "	bool userHasNoWatermarkPermission = SecurityManager.IsUserAuthorized (SecurityActions.HideWatermark' this._roles' album.Id' album.GalleryId' this._isAuthenticated' false' album.IsVirtualAlbum); " is 193.
Long Statement,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,DetermineIfWatermarkIsToBeApplied,The length of the statement  "	if (AppSetting.Instance.License.IsInReducedFunctionalityMode || (applyWatermarkConfig && !userHasNoWatermarkPermission)) { " is 122.
Long Statement,GalleryServerPro.Business.Metadata,VideoMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\VideoMetadataReadWriter.cs,GetWidth,The length of the statement  "	return (width > int.MinValue ? new MetaValue (String.Concat (width' " "' Resources.Metadata_Width_Units)' width.ToString (CultureInfo.InvariantCulture)) : null); " is 161.
Long Statement,GalleryServerPro.Business.Metadata,VideoMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\VideoMetadataReadWriter.cs,GetHeight,The length of the statement  "	return (height > int.MinValue ? new MetaValue (String.Concat (height' " "' Resources.Metadata_Height_Units)' height.ToString (CultureInfo.InvariantCulture)) : null); " is 165.
Long Statement,GalleryServerPro.Business.Metadata,GalleryObjectMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\GalleryObjectMetadataReadWriter.cs,GetMetaValue,The length of the statement  "		return new MetaValue (GalleryObject.DateAdded.ToString (DateTimeFormatString' CultureInfo.InvariantCulture)' GalleryObject.DateAdded.ToString ("O"' CultureInfo.InvariantCulture)); " is 179.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetTitle,The length of the statement  "	return !String.IsNullOrWhiteSpace (title) ? new MetaValue (title' title) : new MetaValue (GalleryObject.Original.FileName); " is 123.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetRating,The length of the statement  "		return (rating > 0 ? new MetaValue (rating.ToString (CultureInfo.InvariantCulture)' rating.ToString (CultureInfo.InvariantCulture)) : null); " is 140.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetExposureCompensation,The length of the statement  "			return new MetaValue (String.Concat (value.ToString ("##0.# "' CultureInfo.InvariantCulture)' Resources.Metadata_ExposureCompensation_Suffix)' value.ToString (CultureInfo.InvariantCulture)); " is 190.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetExposureTime,The length of the statement  "	// If the exposure time is less than this # of seconds' format as fraction (1/350 sec.); otherwise convert to Single (2.35 sec.) " is 128.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetFNumber,The length of the statement  "			return new MetaValue (value.ToString ("f/##0.#"' CultureInfo.InvariantCulture)' value.ToString (CultureInfo.InvariantCulture)); " is 127.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetFocalLength,The length of the statement  "			return new MetaValue (String.Concat (Math.Round (value)' " "' Resources.Metadata_FocalLength_Units)' value.ToString (CultureInfo.InvariantCulture)); " is 148.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetHeight,The length of the statement  "	return (height > 0 ? new MetaValue (String.Concat (height' " "' Resources.Metadata_Height_Units)' height.ToString (CultureInfo.InvariantCulture)) : null); " is 154.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetHorizontalResolution,The length of the statement  "	if ((String.IsNullOrWhiteSpace (resolutionUnit)) && (RawMetadata.TryGetValue (RawMetadataItemName.ResolutionUnit' out rawMdi))) { " is 129.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetLensAperture,The length of the statement  "	if ((String.IsNullOrWhiteSpace (aperture)) && (RawMetadata.TryGetValue (RawMetadataItemName.ExifAperture' out rawMdi))) { " is 121.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetLensAperture,The length of the statement  "	return (!String.IsNullOrWhiteSpace (aperture) ? new MetaValue (aperture' apertureRaw.ToString (CultureInfo.InvariantCulture)) : null); " is 134.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetSubjectDistance,The length of the statement  "			return new MetaValue (String.Concat (distance.ToString ("0.### "' CultureInfo.InvariantCulture)' Resources.Metadata_SubjectDistance_Units)' distance.ToString ("0.### "' CultureInfo.InvariantCulture)); " is 200.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetSubjectDistance,The length of the statement  "				return new MetaValue (String.Format (CultureInfo.CurrentCulture' String.Concat ("{0} "' Resources.Metadata_SubjectDistance_Units)' value)' value); " is 146.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetVerticalResolution,The length of the statement  "	if ((String.IsNullOrWhiteSpace (resolutionUnit)) && (RawMetadata.TryGetValue (RawMetadataItemName.ResolutionUnit' out rawMdi))) { " is 129.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWidth,The length of the statement  "	return (width > 0 ? new MetaValue (String.Concat (width' " "' Resources.Metadata_Width_Units)' width.ToString (CultureInfo.InvariantCulture)) : null); " is 150.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetGpsValue,The length of the statement  "		return (!String.IsNullOrWhiteSpace (GpsLocation.Version) ? new MetaValue (GpsLocation.Version' GpsLocation.Version) : null); " is 124.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetGpsValue,The length of the statement  "		throw new ArgumentException (string.Format ("The function GetGpsValue() expects a GPS-related parameter; instead the value {0} was passed."' metaName)' "metaName"); " is 164.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetIptcValue,The length of the statement  "		iptcValue = WpfMetadata.GetQuery (String.Format (CultureInfo.InvariantCulture' IptcQueryFormatString' IptcQueryParameters [metaName])) as string; " is 145.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetPropertyItemsUsingFullTrustTechnique,The length of the statement  "		throw new InvalidOperationException ("The method MediaObjectMetadataExtractor.GetPropertyItemsUsingFullTrustTechnique can only be called when the application is running under full trust. The application should have already checked for this before calling this method. The developer needs to modify the source code to fix this."); " is 329.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetPropertyItemsUsingFullTrustTechnique,The length of the statement  "					//	ex.Data.Add("Metadata Extraction Error"' String.Format(CultureInfo.CurrentCulture' "Cannot extract metadata from file \"{0}\"."' imageFilePath)); " is 148.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetPropertyItemsUsingFullTrustTechnique,The length of the statement  "			//	ex.Data.Add("Metadata Extraction Error"' String.Format(CultureInfo.CurrentCulture' "Cannot extract metadata from file \"{0}\"."' imageFilePath)); " is 148.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetPropertyItemsUsingLimitedTrustTechnique,The length of the statement  "	// This technique is not as fast as the one in the method GetPropertyItemsUsingFullTrustTechnique() but in works in limited " is 123.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapMetadata,The length of the statement  "	if ((AppSetting.Instance.AppTrustLevel < ApplicationTrustLevel.Full) || (!Factory.LoadGallerySetting (GalleryObject.GalleryId).ExtractMetadataUsingWpf)) { " is 154.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapMetadata,The length of the statement  "	// Do not use the BitmapCacheOption.Default or None option' as it will hold a lock on the file until garbage collection. I discovered " is 133.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapMetadata,The length of the statement  "	// http://www.microsoft.com/communities/newsgroups/en-us/default.aspx?dg=microsoft.public.dotnet.framework&tid=b694ada2-10c4-4999-81f8-97295eb024a9&cat=en_US_a4ab6128-1a11-4169-8005-1d640f3bd725&lang=en&cr=US&sloc=en-us&m=1&p=1 " is 227.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapMetadata,The length of the statement  "	// Also do not use BitmapCacheOption.OnLoad as suggested in the thread' as it causes the memory to not be released until  " is 120.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapMetadata,The length of the statement  "	// Update 2007-08-04: After installing VS 2008 beta 2' which also installs .NET 2.0 SP1' I discovered that OnLoad no longer crashes IIS. " is 136.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapMetadata,The length of the statement  "	// Update 2008-05-19: The Create method doesn't release the file lock when an exception occurs' such as when the file is a WMF. See: " is 132.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapMetadata,The length of the statement  "	// http://www.microsoft.com/communities/newsgroups/en-us/default.aspx?dg=microsoft.public.dotnet.framework&tid=fe3fb82f-0191-40a3-b789-0602cc4445d3&cat=&lang=&cr=&sloc=&p=1 " is 172.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The length of the statement  "				// DO NOT USE: fileBitmapDecoder = BitmapDecoder.Create(new Uri(imageFilePath' UriKind.Absolute)' BitmapCreateOptions.None' BitmapCacheOption.OnLoad); " is 150.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetDatePictureTakenWpf,The length of the statement  "				return new MetaValue (dateTaken.ToString (DateTimeFormatString' CultureInfo.InvariantCulture)' dateTaken.ToString ("O"' CultureInfo.InvariantCulture)); " is 151.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetDatePictureTakenGdi,The length of the statement  "			return new MetaValue (convertedDateTimeValue.ToString (DateTimeFormatString' CultureInfo.InvariantCulture)' convertedDateTimeValue.ToString ("O"' CultureInfo.InvariantCulture)); " is 177.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,PersistMetaValue,The length of the statement  "		EventController.RecordEvent (String.Format ("This version of Gallery Server Pro does not support modifying the meta value {0} in the original file. The request to save or delete the meta value was ignored."' metaName)); " is 219.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,PersistMetaValue,The length of the statement  "			string tmpFilePath = Path.Combine (AppSetting.Instance.TempUploadDirectory' String.Concat (Guid.NewGuid ().ToString ()' ".tmp")); " is 129.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,SetMetadata,The length of the statement  "		throw new InvalidEnumArgumentException (String.Format (CultureInfo.CurrentCulture' "This function is not designed to handle the enumeration value {0}. The function must be updated."' metaName)); " is 194.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,SetOrientationMetadata,The length of the statement  "			if (UInt16.TryParse (orientationMeta.RawValue' out orientationRaw) && MetadataEnumHelper.IsValidOrientation ((Orientation)orientationRaw)) { " is 140.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,SetOrientationMetadata,The length of the statement  "		throw new InvalidEnumArgumentException (String.Format (CultureInfo.CurrentCulture' "This function is not designed to handle the enumeration value {0}. The function must be updated."' persistAction)); " is 199.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,TryAlternateMethodsOfPersistingMetadata,The length of the statement  "	// Adapted from: https://code.google.com/p/flickrmetasync/source/browse/trunk/FlickrMetadataSync/Picture.cs?spec=svn29&r=29 " is 123.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,TryAlternateMethodsOfPersistingMetadata,The length of the statement  "		const BitmapCreateOptions createOptions = BitmapCreateOptions.PreservePixelFormat | BitmapCreateOptions.IgnoreColorProfile; " is 123.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,TryAlternateMethodsOfPersistingMetadata,The length of the statement  "			output.Frames.Add (BitmapFrame.Create (original.Frames [0]' original.Frames [0].Thumbnail' bitmapMetadata' original.Frames [0].ColorContexts)); " is 143.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,TryAlternateMethodsOfPersistingMetadata,The length of the statement  "				output.Frames.Add (BitmapFrame.Create (original.Frames [0]' original.Frames [0].Thumbnail' original.Metadata' original.Frames [0].ColorContexts)); " is 146.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,TryAlternateMethodsOfPersistingMetadata,The length of the statement  "		using (Stream recentlyOutputFile = new FileStream (outputFileName + "tmp"' FileMode.Open' FileAccess.Read' FileShare.Read)) { " is 125.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,TryAlternateMethodsOfPersistingMetadata,The length of the statement  "			const BitmapCreateOptions createOptions = BitmapCreateOptions.PreservePixelFormat | BitmapCreateOptions.IgnoreColorProfile; " is 123.
Long Statement,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,TryAlternateMethodsOfPersistingMetadata,The length of the statement  "				output.Frames.Add (BitmapFrame.Create (original.Frames [0]' original.Frames [0].Thumbnail' bitmapMetadata' original.Frames [0].ColorContexts)); " is 143.
Long Statement,GalleryServerPro.Business.Metadata,MediaObjectMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MediaObjectMetadataReadWriter.cs,GetMetaValue,The length of the statement  "		return new MetaValue (String.Concat (fileSize.ToString ("N0"' CultureInfo.CurrentCulture)' " "' Resources.Metadata_KB)' fileSize.ToString (CultureInfo.InvariantCulture)); " is 170.
Long Statement,GalleryServerPro.Business.Metadata,MediaObjectMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MediaObjectMetadataReadWriter.cs,GetMetaValue,The length of the statement  "		return (fi != null ? new MetaValue (fi.CreationTime.ToString (DateTimeFormatString' CultureInfo.InvariantCulture)' fi.CreationTime.ToString ("O"' CultureInfo.InvariantCulture)) : null); " is 185.
Long Statement,GalleryServerPro.Business.Metadata,MediaObjectMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MediaObjectMetadataReadWriter.cs,GetMetaValue,The length of the statement  "		return (fi != null ? new MetaValue (fi.CreationTimeUtc.ToString (DateTimeFormatString' CultureInfo.InvariantCulture)' fi.CreationTimeUtc.ToString ("O"' CultureInfo.InvariantCulture)) : null); " is 191.
Long Statement,GalleryServerPro.Business.Metadata,MediaObjectMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MediaObjectMetadataReadWriter.cs,GetMetaValue,The length of the statement  "		return (fi != null ? new MetaValue (fi.LastWriteTime.ToString (DateTimeFormatString' CultureInfo.InvariantCulture)' fi.LastWriteTime.ToString ("O"' CultureInfo.InvariantCulture)) : null); " is 187.
Long Statement,GalleryServerPro.Business.Metadata,MediaObjectMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MediaObjectMetadataReadWriter.cs,GetMetaValue,The length of the statement  "		return (fi != null ? new MetaValue (fi.LastWriteTimeUtc.ToString (DateTimeFormatString' CultureInfo.InvariantCulture)' fi.LastWriteTimeUtc.ToString ("O"' CultureInfo.InvariantCulture)) : null); " is 193.
Long Statement,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,IsBelowSeaLevel,The length of the statement  "	object directionObj = GetQuery (bmpMetadata' "System.GPS.AltitudeRef") ?? GetQuery (bmpMetadata' @"/app1/ifd/gps/{ushort=5}"); " is 126.
Long Statement,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetLatitude,The length of the statement  "	string direction = GetQuery (bmpMetadata' "System.GPS.LatitudeRef") as string ?? GetQuery (bmpMetadata' @"/app1/ifd/gps/{ushort=1}") as string; " is 143.
Long Statement,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetLatitude,The length of the statement  "	double[] latitude = GetQuery (bmpMetadata' "System.GPS.Latitude") as double[] ?? ConvertCoordinate (GetQuery (bmpMetadata' @"/app1/ifd/gps/{ushort=2}") as ulong[]); " is 164.
Long Statement,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetLongitude,The length of the statement  "	string direction = GetQuery (bmpMetadata' "System.GPS.LongitudeRef") as string ?? GetQuery (bmpMetadata' @"/app1/ifd/gps/{ushort=3}") as string; " is 144.
Long Statement,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetLongitude,The length of the statement  "	double[] longitude = GetQuery (bmpMetadata' "System.GPS.Longitude") as double[] ?? ConvertCoordinate (GetQuery (bmpMetadata' @"/app1/ifd/gps/{ushort=4}") as ulong[]); " is 166.
Long Statement,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetDestLatitude,The length of the statement  "	string direction = GetQuery (bmpMetadata' "System.GPS.DestLatitudeRef") as string ?? GetQuery (bmpMetadata' @"/app1/ifd/gps/{ushort=19}") as string; " is 148.
Long Statement,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetDestLatitude,The length of the statement  "	double[] latitude = GetQuery (bmpMetadata' "System.GPS.DestLatitude") as double[] ?? ConvertCoordinate (GetQuery (bmpMetadata' @"/app1/ifd/gps/{ushort=20}") as ulong[]); " is 169.
Long Statement,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetDestLongitude,The length of the statement  "	string direction = GetQuery (bmpMetadata' "System.GPS.DestLongitudeRef") as string ?? GetQuery (bmpMetadata' @"/app1/ifd/gps/{ushort=21}") as string; " is 149.
Long Statement,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetDestLongitude,The length of the statement  "	double[] longitude = GetQuery (bmpMetadata' "System.GPS.DestLongitude") as double[] ?? ConvertCoordinate (GetQuery (bmpMetadata' @"/app1/ifd/gps/{ushort=22}") as ulong[]); " is 171.
Long Statement,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetVersion,The length of the statement  "	byte[] versionTokens = GetQuery (bmpMetadata' "System.GPS.VersionID") as byte[] ?? GetQuery (bmpMetadata' @"/app1/ifd/gps/{ushort=0}") as byte[]; " is 145.
Long Statement,GalleryServerPro.Business.Metadata,GpsDistance,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,ToDegreeMinuteSecondString,The length of the statement  "	return String.Format (CultureInfo.InvariantCulture' "{0:F0}°{1:F0}'{2:F2}\" {3}"' (float)Degrees' (float)Minutes' (float)Seconds' Direction); " is 141.
Long Statement,GalleryServerPro.Business.Metadata,MetadataDefinitionCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataDefinitionCollection.cs,Add,The length of the statement  "		throw new ArgumentNullException ("item"' "Cannot add null to an existing MetadataDefinitionCollection. Items.Count = " + Items.Count); " is 134.
Long Statement,GalleryServerPro.Business.Metadata,GalleryObjectMetadataItemCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\GalleryObjectMetadataItemCollection.cs,Contains,The length of the statement  "	foreach (IGalleryObjectMetadataItem metadataItemIterator in (System.Collections.Generic.List<IGalleryObjectMetadataItem>)Items) { " is 129.
Long Statement,GalleryServerPro.Business.Metadata,GalleryObjectMetadataItemCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\GalleryObjectMetadataItemCollection.cs,ApplyDisplayOptions,The length of the statement  "	// We know galleryObjectMetadataItems is actually a List<IGalleryObjectMetadataItem> because we passed it to the constructor. " is 125.
Long Statement,GalleryServerPro.Business.Metadata,GalleryObjectMetadataItemCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\GalleryObjectMetadataItemCollection.cs,TryGetMetadataItem,The length of the statement  "	// We know galleryObjectMetadataItems is actually a List<IGalleryObjectMetadataItem> because we passed it to the constructor. " is 125.
Long Statement,GalleryServerPro.Business.Metadata,GalleryObjectMetadataItemCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\GalleryObjectMetadataItemCollection.cs,GetItemsToSave,The length of the statement  "	// We know galleryObjectMetadataItems is actually a List<IGalleryObjectMetadataItem> because we passed it to the constructor. " is 125.
Long Statement,GalleryServerPro.Business.Metadata,GalleryObjectMetadataItemCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\GalleryObjectMetadataItemCollection.cs,GetVisibleItems,The length of the statement  "	// We know galleryObjectMetadataItems is actually a List<IGalleryObjectMetadataItem> because we passed it to the constructor. " is 125.
Long Statement,GalleryServerPro.Business.Metadata,GalleryObjectMetadataItemCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\GalleryObjectMetadataItemCollection.cs,FromMetaDtos,The length of the statement  "			metadata.Add (Factory.CreateMetadataItem (mDto.MetadataId' galleryObject' mDto.RawValue' mDto.Value.Trim ()' false' metaDefs.Find (mDto.MetaName))); " is 148.
Long Statement,GalleryServerPro.Business.Metadata,GalleryObjectMetadataItemComparer,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\GalleryObjectMetadataItemCollection.cs,Compare,The length of the statement  "			throw new BusinessException (String.Format (CultureInfo.CurrentCulture' "The IMetadataDefinitionCollection instance passed to the GalleryObjectMetadataItemComparer constructor did not have an item corresponding to one of these MetadataItemName enum values: {0}' {1}. This collection should contain an item for every enum value."' x.MetadataItemName' y.MetadataItemName)); " is 371.
Long Statement,GalleryServerPro.Business.Metadata,MetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataItem.cs,ExtractPropertyItemValue,The length of the statement  "		throw new GalleryServerPro.Events.CustomExceptions.BusinessException ("The function GalleryServerPro.Business.Metadata.MetadataItem.ExtractPropertyItemValue() must assign a value other than NotDefined to the field _extractedValueType."); " is 237.
Long Statement,GalleryServerPro.Business.Metadata,MetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataItem.cs,ExtractPropertyValueSignedFraction,The length of the statement  "		// Comment out' since it causes a huge performance hit when synchronizing files that contain this type of metadata item. " is 120.
Long Statement,GalleryServerPro.Business.Metadata,MetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataItem.cs,ExtractPropertyValueSignedFraction,The length of the statement  "		//string msg = String.Format(CultureInfo.CurrentCulture' "Discovered an Exif metadata item named {0} that is of type GalleryServerPro.Business.Fraction[] rather than the usual GalleryServerPro.Business.Fraction. Gallery Server Pro cannot process this metadata and will discard it. One may want to modify Gallery Server Pro to handle this data type."' this.RawMetadataItemName); " is 377.
Long Statement,GalleryServerPro.Business.Metadata,MetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataItem.cs,ExtractPropertyValueUnsignedFraction,The length of the statement  "		// Comment out' since it causes a huge performance hit when synchronizing files that contain this type of metadata item. " is 120.
Long Statement,GalleryServerPro.Business.Metadata,MetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataItem.cs,ExtractPropertyValueUnsignedFraction,The length of the statement  "		//string msg = String.Format(CultureInfo.CurrentCulture' "Discovered an Exif metadata item named {0} that is of type GalleryServerPro.Business.Fraction[] rather than the usual GalleryServerPro.Business.Fraction. Gallery Server Pro cannot process this metadata and will discard it. One may want to modify Gallery Server Pro to handle this data type."' this.RawMetadataItemName); " is 377.
Long Statement,GalleryServerPro.Business.Metadata,MetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataItem.cs,ExtractPropertyValueInt,The length of the statement  "		// Comment out' since it causes a huge performance hit when synchronizing files that contain this type of metadata item. " is 120.
Long Statement,GalleryServerPro.Business.Metadata,MetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataItem.cs,ExtractPropertyValueInt,The length of the statement  "		//string msg = String.Format(CultureInfo.CurrentCulture' "Discovered an Exif metadata item named {0} that is of type System.Int64[] rather than the usual System.Int64. Gallery Server Pro cannot process this metadata and will discard it. One may want to modify Gallery Server Pro to handle this data type."' this.RawMetadataItemName); " is 333.
Long Statement,GalleryServerPro.Business.Metadata,MetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataItem.cs,ExtractPropertyValueUnsignedInt,The length of the statement  "		// Comment out' since it causes a huge performance hit when synchronizing files that contain this type of metadata item. " is 120.
Long Statement,GalleryServerPro.Business.Metadata,MetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataItem.cs,ExtractPropertyValueUnsignedInt,The length of the statement  "		//string msg = String.Format(CultureInfo.CurrentCulture' "Discovered an Exif metadata item named {0} that is of type System.UInt32[] rather than the usual System.UInt32. Gallery Server Pro cannot process this metadata and will discard it. One may want to modify Gallery Server Pro to handle this data type."' this.RawMetadataItemName); " is 335.
Long Statement,GalleryServerPro.Business.Metadata,MetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataItem.cs,ExtractPropertyValueUnsignedShort,The length of the statement  "		// Comment out' since it causes a huge performance hit when synchronizing files that contain this type of metadata item. " is 120.
Long Statement,GalleryServerPro.Business.Metadata,MetadataItem,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MetadataItem.cs,ExtractPropertyValueUnsignedShort,The length of the statement  "		//string msg = String.Format(CultureInfo.CurrentCulture' "Discovered an Exif metadata item named {0} that is of type System.UInt16[] rather than the usual System.UInt16. Gallery Server Pro cannot process this metadata and will discard it. One may want to modify Gallery Server Pro to handle this data type."' this.RawMetadataItemName); " is 335.
Long Statement,GalleryServerPro.Business.NullObjects,NullGalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\NullObjects\NullGalleryObject.cs,CreateMetaItem,The length of the statement  "	return Factory.CreateMetadataItem (int.MinValue' new NullGalleryObject ()' null' String.Empty' false' new Metadata.MetadataDefinition (Metadata.MetadataItemName.AudioBitRate' String.Empty' false' false' false' int.MinValue' String.Empty)); " is 239.
Complex Conditional,GalleryServerPro.Business,GalleryObjectSearcher,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObjectSearcher.cs,Validate,The conditional expression  "(searchOptions.SearchType == GalleryObjectSearchType.SearchByTag || searchOptions.SearchType == GalleryObjectSearchType.SearchByPeople) && (searchOptions.Tags == null || searchOptions.Tags.Length == 0)"  is complex.
Complex Conditional,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,IsWaitingInQueueOrProcessing,The conditional expression  "(item != null) && item.MediaObjectId == mediaObjectId && (item.ConversionType == conversionType || conversionType == MediaQueueItemConversionType.Unknown)"  is complex.
Complex Conditional,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The conditional expression  "(myColor.A == 0) && (myColor.R == 0) && (myColor.G == 0) && (myColor.B == 0)"  is complex.
Complex Conditional,GalleryServerPro.Business,SecurityManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SecurityManager.cs,IsUserAuthorized,The conditional expression  "isAuthenticated && !isVirtualAlbum && ((roles == null) || (roles.Count == 0))"  is complex.
Empty Catch Block,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,CancelIfRequested,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,CancelIfRequested,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business,Factory,C:\repos\bambit_BGallery\TIS.GSP.Business\Factory.cs,GetAlbumIdsForGallery,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidatePhysicalPathExistsAndIsReadWritable,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidateEmailByMailAddressCtor,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business,ImageOptimizedCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageOptimizedCreator.cs,DoesOriginalExceedOptimizedDimensionTriggers,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business,MimeType,C:\repos\bambit_BGallery\TIS.GSP.Business\MimeType.cs,MimeType,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,CountFiles,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,CountFiles,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,CountFiles,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,EvaluateOriginalImage,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,CreateZipStream,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfTitle,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfTitle,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfTitle,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetAuthor,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetAuthor,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetAuthor,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfCameraModel,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfCameraModel,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfCameraModel,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfCameraManufacturer,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfCameraManufacturer,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfCameraManufacturer,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetKeywords,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetKeywords,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetKeywords,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetRating,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetRating,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetRating,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfComment,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfComment,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfComment,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfCopyright,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfCopyright,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfCopyright,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfSubject,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfSubject,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetWpfSubject,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetBitmapDecoder,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,ConvertExifDateTimeToDateTime,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,ConvertExifDateTimeToDateTime,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetDatePictureTakenWpf,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetDatePictureTakenWpf,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetDatePictureTakenWpf,The method has an empty catch block.
Empty Catch Block,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,IsBelowSeaLevel,The method has an empty catch block.
Magic Number,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,GetRotationInDegrees,The following statement contains a magic number: switch (rotation) {  case MediaObjectRotation.Rotate0:  	return 0;  case MediaObjectRotation.Rotate90:  	return 90;  case MediaObjectRotation.Rotate180:  	return 180;  case MediaObjectRotation.Rotate270:  	return 270;  default:  	return 0;  }  
Magic Number,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,GetRotationInDegrees,The following statement contains a magic number: switch (rotation) {  case MediaObjectRotation.Rotate0:  	return 0;  case MediaObjectRotation.Rotate90:  	return 90;  case MediaObjectRotation.Rotate180:  	return 180;  case MediaObjectRotation.Rotate270:  	return 270;  default:  	return 0;  }  
Magic Number,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,GetRotationInDegrees,The following statement contains a magic number: switch (rotation) {  case MediaObjectRotation.Rotate0:  	return 0;  case MediaObjectRotation.Rotate90:  	return 90;  case MediaObjectRotation.Rotate180:  	return 180;  case MediaObjectRotation.Rotate270:  	return 270;  default:  	return 0;  }  
Magic Number,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,GetRotationInDegrees,The following statement contains a magic number: return 90;  
Magic Number,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,GetRotationInDegrees,The following statement contains a magic number: return 180;  
Magic Number,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,GetRotationInDegrees,The following statement contains a magic number: return 270;  
Magic Number,GalleryServerPro.Business,AppSetting,C:\repos\bambit_BGallery\TIS.GSP.Business\AppSetting.cs,GetDotNetFrameworkVersion,The following statement contains a magic number: return new Version (Environment.Version.ToString (2));  
Magic Number,GalleryServerPro.Business,Audio,C:\repos\bambit_BGallery\TIS.GSP.Business\Audio.cs,Audio,The following statement contains a magic number: if (audioFile != null) {  	this.Optimized.FileInfo = audioFile;  	// Will throw InvalidMediaObjectException if the file's directory is not the same as the album's directory.  	this.Original.FileInfo = audioFile;  	// Will throw InvalidMediaObjectException if the file's directory is not the same as the album's directory.  	if (this.Original.MimeType.TypeCategory != MimeTypeCategory.Audio) {  		throw new Events.CustomExceptions.UnsupportedMediaObjectTypeException (this.Original.FileInfo);  	}  	this.Optimized.Width = gallerySetting.DefaultAudioPlayerWidth;  	this.Optimized.Height = gallerySetting.DefaultAudioPlayerHeight;  	this.Original.Width = gallerySetting.DefaultAudioPlayerWidth;  	this.Original.Height = gallerySetting.DefaultAudioPlayerHeight;  	int fileSize = (int)(audioFile.Length / 1024);  	this.Optimized.FileSizeKB = (fileSize < 1 ? 1 : fileSize);  	// Very small files should be 1' not 0.  	this.Original.FileSizeKB = (fileSize < 1 ? 1 : fileSize);  	// Very small files should be 1' not 0.  	if (IsNew) {  		ExtractMetadata ();  	}  }  else {  	this.Original.FileNamePhysicalPath = Path.Combine (parentPhysicalPath' originalFilename);  	this.Original.FileSizeKB = originalSizeKb;  }  
Magic Number,GalleryServerPro.Business,MediaEncoderSettingsCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaEncoderSettingsCollection.cs,Serialize,The following statement contains a magic number: sb.Remove (sb.Length - 2' 2);  
Magic Number,GalleryServerPro.Business,MediaEncoderSettingsCollection,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaEncoderSettingsCollection.cs,Serialize,The following statement contains a magic number: sb.Remove (sb.Length - 2' 2);  
Magic Number,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,RemoveMediaQueueItem,The following statement contains a magic number: if (MediaQueueItemDictionary.TryGetValue (mediaQueueId' out item)) {  	MediaQueueItem currentItem = GetCurrentMediaQueueItem ();  	if ((currentItem != null) && (currentItem.MediaQueueId == mediaQueueId)) {  		CancelTokenSource.Cancel ();  		if (Task != null) {  			Task.Wait (20000);  			// Wait up to 20 seconds  		}  		Instance.Status = MediaQueueStatus.Idle;  	}  	//Factory.GetDataProvider().MediaQueue_Delete(item);  	item.Delete ();  	MediaQueueItemDictionary.TryRemove (mediaQueueId' out item);  }  
Magic Number,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,RemoveMediaQueueItem,The following statement contains a magic number: if ((currentItem != null) && (currentItem.MediaQueueId == mediaQueueId)) {  	CancelTokenSource.Cancel ();  	if (Task != null) {  		Task.Wait (20000);  		// Wait up to 20 seconds  	}  	Instance.Status = MediaQueueStatus.Idle;  }  
Magic Number,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,RemoveMediaQueueItem,The following statement contains a magic number: if (Task != null) {  	Task.Wait (20000);  	// Wait up to 20 seconds  }  
Magic Number,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,RemoveMediaQueueItem,The following statement contains a magic number: Task.Wait (20000);  
Magic Number,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,OnMediaConversionCompleteOptimizedCreated,The following statement contains a magic number: if (settings.FileCreated) {  	string msg = String.Format (CultureInfo.CurrentCulture' "FFmpeg created file '{0}'."' Path.GetFileName (settings.FilePathDestination));  	RecordEvent (msg' settings);  	if (mediaObject.GalleryObjectType == GalleryObjectType.Video) {  		var width = FFmpeg.ParseOutputVideoWidth (settings.FFmpegOutput);  		var height = FFmpeg.ParseOutputVideoHeight (settings.FFmpegOutput);  		if (width > int.MinValue)  			mediaObject.Optimized.Width = width;  		if (height > int.MinValue)  			mediaObject.Optimized.Height = height;  	}  	else {  		mediaObject.Optimized.Width = settings.TargetWidth;  		mediaObject.Optimized.Height = settings.TargetHeight;  	}  	int fileSize = (int)(mediaObject.Optimized.FileInfo.Length / 1024);  	mediaObject.Optimized.FileSizeKB = (fileSize < 1 ? 1 : fileSize);  	// Very small files should be 1' not 0.  	// Step 2: If we already had an optimized file and we just created a second one' delete the first one  	// and rename the new one to match the first one.  	var optFileDifferentThanOriginal = !String.Equals (mediaObject.Optimized.FileName' mediaObject.Original.FileName' StringComparison.OrdinalIgnoreCase);  	var optFileDifferentThanCreatedFile = !String.Equals (mediaObject.Optimized.FileName' Path.GetFileName (settings.FilePathDestination)' StringComparison.OrdinalIgnoreCase);  	if (optFileDifferentThanOriginal && optFileDifferentThanCreatedFile && File.Exists (mediaObject.Optimized.FileNamePhysicalPath)) {  		var curFilePath = mediaObject.Optimized.FileNamePhysicalPath;  		File.Delete (curFilePath);  		File.Move (settings.FilePathDestination' curFilePath);  		settings.FilePathDestination = curFilePath;  	}  	else {  		// We typically get here when the media object is first added.  		mediaObject.Optimized.FileName = Path.GetFileName (settings.FilePathDestination);  		mediaObject.Optimized.FileNamePhysicalPath = settings.FilePathDestination;  	}  }  
Magic Number,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,OnMediaConversionCompleteVideoRotated,The following statement contains a magic number: if (settings.FileCreated) {  	string msg = String.Format (CultureInfo.CurrentCulture' "FFmpeg created file '{0}'."' Path.GetFileName (settings.FilePathDestination));  	RecordEvent (msg' settings);  	// Step 1: Update the width and height of the original video file' if we have that info.  	var originalWidth = FFmpeg.ParseOutputVideoWidth (settings.FFmpegOutput);  	var originalHeight = FFmpeg.ParseOutputVideoHeight (settings.FFmpegOutput);  	if (originalWidth > int.MinValue)  		mediaObject.Original.Width = originalWidth;  	if (originalHeight > int.MinValue)  		mediaObject.Original.Height = originalHeight;  	// Step 2: Delete the original file and rename the new one to match the original.  	if ((settings.FilePathDestination != mediaObject.Original.FileNamePhysicalPath) && File.Exists (mediaObject.Original.FileNamePhysicalPath)) {  		var curFilePath = mediaObject.Original.FileNamePhysicalPath;  		File.Delete (curFilePath);  		File.Move (settings.FilePathDestination' curFilePath);  		settings.FilePathDestination = curFilePath;  	}  	else {  		// I don't expect we'll ever get here' but just to be safe...  		mediaObject.Original.FileName = Path.GetFileName (settings.FilePathDestination);  		mediaObject.Original.FileNamePhysicalPath = settings.FilePathDestination;  	}  	int fileSize = (int)(mediaObject.Original.FileInfo.Length / 1024);  	mediaObject.Original.FileSizeKB = (fileSize < 1 ? 1 : fileSize);  	// Very small files should be 1' not 0.  	RefreshOriginalVideoMetadata (mediaObject);  }  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseSourceVideoHeight,The following statement contains a magic number: if (m.Success) {  	int height;  	if (int.TryParse (m.Groups [2].Value' out height))  		return height;  }  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseSourceVideoHeight,The following statement contains a magic number: if (int.TryParse (m.Groups [2].Value' out height))  	return height;  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseOutputVideoHeight,The following statement contains a magic number: if (m.Success) {  	m = m.NextMatch ();  	int height;  	if (int.TryParse (m.Groups [2].Value' out height))  		return height;  }  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseOutputVideoHeight,The following statement contains a magic number: if (int.TryParse (m.Groups [2].Value' out height))  	return height;  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseOrientation,The following statement contains a magic number: if (m.Success) {  	int rotation;  	if (int.TryParse (m.Groups [1].Value' out rotation)) {  		switch (rotation) {  		case 0:  			return Orientation.Normal;  		case 90:  			return Orientation.Rotated270;  		case 180:  			return Orientation.Rotated180;  		case 270:  			return Orientation.Rotated90;  		}  	}  }  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseOrientation,The following statement contains a magic number: if (m.Success) {  	int rotation;  	if (int.TryParse (m.Groups [1].Value' out rotation)) {  		switch (rotation) {  		case 0:  			return Orientation.Normal;  		case 90:  			return Orientation.Rotated270;  		case 180:  			return Orientation.Rotated180;  		case 270:  			return Orientation.Rotated90;  		}  	}  }  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseOrientation,The following statement contains a magic number: if (m.Success) {  	int rotation;  	if (int.TryParse (m.Groups [1].Value' out rotation)) {  		switch (rotation) {  		case 0:  			return Orientation.Normal;  		case 90:  			return Orientation.Rotated270;  		case 180:  			return Orientation.Rotated180;  		case 270:  			return Orientation.Rotated90;  		}  	}  }  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseOrientation,The following statement contains a magic number: if (int.TryParse (m.Groups [1].Value' out rotation)) {  	switch (rotation) {  	case 0:  		return Orientation.Normal;  	case 90:  		return Orientation.Rotated270;  	case 180:  		return Orientation.Rotated180;  	case 270:  		return Orientation.Rotated90;  	}  }  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseOrientation,The following statement contains a magic number: if (int.TryParse (m.Groups [1].Value' out rotation)) {  	switch (rotation) {  	case 0:  		return Orientation.Normal;  	case 90:  		return Orientation.Rotated270;  	case 180:  		return Orientation.Rotated180;  	case 270:  		return Orientation.Rotated90;  	}  }  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseOrientation,The following statement contains a magic number: if (int.TryParse (m.Groups [1].Value' out rotation)) {  	switch (rotation) {  	case 0:  		return Orientation.Normal;  	case 90:  		return Orientation.Rotated270;  	case 180:  		return Orientation.Rotated180;  	case 270:  		return Orientation.Rotated90;  	}  }  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseOrientation,The following statement contains a magic number: switch (rotation) {  case 0:  	return Orientation.Normal;  case 90:  	return Orientation.Rotated270;  case 180:  	return Orientation.Rotated180;  case 270:  	return Orientation.Rotated90;  }  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseOrientation,The following statement contains a magic number: switch (rotation) {  case 0:  	return Orientation.Normal;  case 90:  	return Orientation.Rotated270;  case 180:  	return Orientation.Rotated180;  case 270:  	return Orientation.Rotated90;  }  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseOrientation,The following statement contains a magic number: switch (rotation) {  case 0:  	return Orientation.Normal;  case 90:  	return Orientation.Rotated270;  case 180:  	return Orientation.Rotated180;  case 270:  	return Orientation.Rotated90;  }  
Magic Number,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ReplaceTokens,The following statement contains a magic number: encoderArguments = encoderArguments.Replace ("{AspectRatio}"' Math.Round (mediaSettings.TargetWidth / (double)mediaSettings.TargetHeight' 2).ToString (CultureInfo.InvariantCulture));  
Magic Number,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMediaEncoderSettingsProperty,The following statement contains a magic number: foreach (string mediaEncStr in mediaEncodings) {  	// Each string item is double-pipe-delimited. Ex: ".avi||.mp4||-i {SourceFilePath} {DestinationFilePath}"  	string[] mediaEncoderItems = mediaEncStr.Split (new[] {  		"||"  	}' 3' StringSplitOptions.None);  	if (mediaEncoderItems.Length != 3) {  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GallerySetting.RetrieveGallerySettingsFromDataStore cannot parse the media encoder definitions for property {0}. Encountered invalid string: '{1}'"' property.Name' mediaEncStr));  	}  	mediaEncoderSettings.Add (new MediaEncoderSettings (mediaEncoderItems [0]' mediaEncoderItems [1]' mediaEncoderItems [2]' seq));  	seq++;  }  
Magic Number,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMediaEncoderSettingsProperty,The following statement contains a magic number: foreach (string mediaEncStr in mediaEncodings) {  	// Each string item is double-pipe-delimited. Ex: ".avi||.mp4||-i {SourceFilePath} {DestinationFilePath}"  	string[] mediaEncoderItems = mediaEncStr.Split (new[] {  		"||"  	}' 3' StringSplitOptions.None);  	if (mediaEncoderItems.Length != 3) {  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GallerySetting.RetrieveGallerySettingsFromDataStore cannot parse the media encoder definitions for property {0}. Encountered invalid string: '{1}'"' property.Name' mediaEncStr));  	}  	mediaEncoderSettings.Add (new MediaEncoderSettings (mediaEncoderItems [0]' mediaEncoderItems [1]' mediaEncoderItems [2]' seq));  	seq++;  }  
Magic Number,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMediaEncoderSettingsProperty,The following statement contains a magic number: foreach (string mediaEncStr in mediaEncodings) {  	// Each string item is double-pipe-delimited. Ex: ".avi||.mp4||-i {SourceFilePath} {DestinationFilePath}"  	string[] mediaEncoderItems = mediaEncStr.Split (new[] {  		"||"  	}' 3' StringSplitOptions.None);  	if (mediaEncoderItems.Length != 3) {  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GallerySetting.RetrieveGallerySettingsFromDataStore cannot parse the media encoder definitions for property {0}. Encountered invalid string: '{1}'"' property.Name' mediaEncStr));  	}  	mediaEncoderSettings.Add (new MediaEncoderSettings (mediaEncoderItems [0]' mediaEncoderItems [1]' mediaEncoderItems [2]' seq));  	seq++;  }  
Magic Number,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMediaEncoderSettingsProperty,The following statement contains a magic number: if (mediaEncoderItems.Length != 3) {  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "GallerySetting.RetrieveGallerySettingsFromDataStore cannot parse the media encoder definitions for property {0}. Encountered invalid string: '{1}'"' property.Name' mediaEncStr));  }  
Magic Number,GalleryServerPro.Business,GallerySettings,C:\repos\bambit_BGallery\TIS.GSP.Business\GallerySettings.cs,AssignMediaEncoderSettingsProperty,The following statement contains a magic number: mediaEncoderSettings.Add (new MediaEncoderSettings (mediaEncoderItems [0]' mediaEncoderItems [1]' mediaEncoderItems [2]' seq));  
Magic Number,GalleryServerPro.Business,GenericMediaObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GenericMediaObject.cs,GenericMediaObject,The following statement contains a magic number: if (file != null) {  	this.Optimized.FileInfo = file;  	// Will throw InvalidMediaObjectException if the file's directory is not the same as the album's directory.  	this.Original.FileInfo = file;  	// Will throw InvalidMediaObjectException if the file's directory is not the same as the album's directory.  	if (this.MimeType.TypeCategory == MimeTypeCategory.Other) {  		// Specify a default width and height for any object other than audio' video' and image. We leave those to their default  		// value of int.MinValue because we do not accurately know their real width and height. For example' a corrupt image file   		// will be rejected by the Image class (an UnsupportedImageTypeException is thrown) and will be routed to this class instead.  		// In this case' we don't know it's real width and height. Similarly' audio and video files are normally handled by the  		// Audio and Video classes. If one of them ends up here' we need to treat it generically and not assign a width and height.  		this.Optimized.Width = gallerySetting.DefaultGenericObjectWidth;  		this.Optimized.Height = gallerySetting.DefaultGenericObjectHeight;  		this.Original.Width = gallerySetting.DefaultGenericObjectWidth;  		this.Original.Height = gallerySetting.DefaultGenericObjectHeight;  	}  	int fileSize = (int)(file.Length / 1024);  	this.Optimized.FileSizeKB = (fileSize < 1 ? 1 : fileSize);  	// Very small files should be 1' not 0.  	this.Original.FileSizeKB = (fileSize < 1 ? 1 : fileSize);  	// Very small files should be 1' not 0.  	if (IsNew) {  		ExtractMetadata ();  	}  	//// Assign the title' resorting to the filename if necessary.  	//if (String.IsNullOrEmpty(title))  	//{  	//	SetTitle();  	//	if (String.IsNullOrEmpty(this.Title))  	//	{  	//		this.Title = file.Name;  	//	}  	//}  }  else {  	this.Original.FileNamePhysicalPath = System.IO.Path.Combine (parentPhysicalPath' originalFilename);  	this.Original.FileSizeKB = originalSizeKb;  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,RemoveInvalidDirectoryNameCharacters,The following statement contains a magic number: invalidChars [invalidChars.Length - 5] = '?';  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,RemoveInvalidDirectoryNameCharacters,The following statement contains a magic number: invalidChars [invalidChars.Length - 4] = '*';  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,RemoveInvalidDirectoryNameCharacters,The following statement contains a magic number: invalidChars [invalidChars.Length - 3] = ':';  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,RemoveInvalidDirectoryNameCharacters,The following statement contains a magic number: invalidChars [invalidChars.Length - 2] = '\\';  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,RemoveInvalidFileNameCharacters,The following statement contains a magic number: invalidChars [invalidChars.Length - 6] = '&';  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,RemoveInvalidFileNameCharacters,The following statement contains a magic number: invalidChars [invalidChars.Length - 5] = '?';  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,RemoveInvalidFileNameCharacters,The following statement contains a magic number: invalidChars [invalidChars.Length - 4] = '*';  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,RemoveInvalidFileNameCharacters,The following statement contains a magic number: invalidChars [invalidChars.Length - 3] = ':';  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,RemoveInvalidFileNameCharacters,The following statement contains a magic number: invalidChars [invalidChars.Length - 2] = '\\';  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (regExHex.IsMatch (colorValue)) {  	// Color is specified as Hex. Parse.  	// If specified in 4-digit shorthand (e.g. #369)' expand to full 7 digits (e.g. #336699).  	if (colorValue.Length == 4) {  		colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  		colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  		colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  	}  	myColor = ColorTranslator.FromHtml (colorValue.ToUpper (CultureInfo.InvariantCulture));  }  else if (regExRgb.IsMatch (colorValue)) {  	// Color is specified as RGB. Parse.  	string colorVal = colorValue;  	// Strip the opening and closing parentheses.  	colorVal = colorVal.TrimStart (new char[] {  		'('  	});  	colorVal = colorVal.TrimEnd (new char[] {  		')'  	});  	// First verify each value is a number from 0-255. (The reg ex matched 0-999).  	string[] rgbStringValues = colorVal.Split (new char[] {  		'''  	});  	// Convert to integers  	int[] rgbValues = new int[3];  	for (int i = 0; i < rgbStringValues.Length; i++) {  		rgbValues [i] = Int32.Parse (rgbStringValues [i]' CultureInfo.InvariantCulture);  		if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  	}  	myColor = Color.FromArgb (rgbValues [0]' rgbValues [1]' rgbValues [2]);  }  else if (regExName.IsMatch (colorValue)) {  	// Color is specified as a name. Parse.  	myColor = Color.FromName (colorValue);  	if ((myColor.A == 0) && (myColor.R == 0) && (myColor.G == 0) && (myColor.B == 0))  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a color known to the .NET Framework."' colorValue));  }  else {  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid color."' colorValue));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (regExHex.IsMatch (colorValue)) {  	// Color is specified as Hex. Parse.  	// If specified in 4-digit shorthand (e.g. #369)' expand to full 7 digits (e.g. #336699).  	if (colorValue.Length == 4) {  		colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  		colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  		colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  	}  	myColor = ColorTranslator.FromHtml (colorValue.ToUpper (CultureInfo.InvariantCulture));  }  else if (regExRgb.IsMatch (colorValue)) {  	// Color is specified as RGB. Parse.  	string colorVal = colorValue;  	// Strip the opening and closing parentheses.  	colorVal = colorVal.TrimStart (new char[] {  		'('  	});  	colorVal = colorVal.TrimEnd (new char[] {  		')'  	});  	// First verify each value is a number from 0-255. (The reg ex matched 0-999).  	string[] rgbStringValues = colorVal.Split (new char[] {  		'''  	});  	// Convert to integers  	int[] rgbValues = new int[3];  	for (int i = 0; i < rgbStringValues.Length; i++) {  		rgbValues [i] = Int32.Parse (rgbStringValues [i]' CultureInfo.InvariantCulture);  		if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  	}  	myColor = Color.FromArgb (rgbValues [0]' rgbValues [1]' rgbValues [2]);  }  else if (regExName.IsMatch (colorValue)) {  	// Color is specified as a name. Parse.  	myColor = Color.FromName (colorValue);  	if ((myColor.A == 0) && (myColor.R == 0) && (myColor.G == 0) && (myColor.B == 0))  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a color known to the .NET Framework."' colorValue));  }  else {  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid color."' colorValue));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (regExHex.IsMatch (colorValue)) {  	// Color is specified as Hex. Parse.  	// If specified in 4-digit shorthand (e.g. #369)' expand to full 7 digits (e.g. #336699).  	if (colorValue.Length == 4) {  		colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  		colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  		colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  	}  	myColor = ColorTranslator.FromHtml (colorValue.ToUpper (CultureInfo.InvariantCulture));  }  else if (regExRgb.IsMatch (colorValue)) {  	// Color is specified as RGB. Parse.  	string colorVal = colorValue;  	// Strip the opening and closing parentheses.  	colorVal = colorVal.TrimStart (new char[] {  		'('  	});  	colorVal = colorVal.TrimEnd (new char[] {  		')'  	});  	// First verify each value is a number from 0-255. (The reg ex matched 0-999).  	string[] rgbStringValues = colorVal.Split (new char[] {  		'''  	});  	// Convert to integers  	int[] rgbValues = new int[3];  	for (int i = 0; i < rgbStringValues.Length; i++) {  		rgbValues [i] = Int32.Parse (rgbStringValues [i]' CultureInfo.InvariantCulture);  		if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  	}  	myColor = Color.FromArgb (rgbValues [0]' rgbValues [1]' rgbValues [2]);  }  else if (regExName.IsMatch (colorValue)) {  	// Color is specified as a name. Parse.  	myColor = Color.FromName (colorValue);  	if ((myColor.A == 0) && (myColor.R == 0) && (myColor.G == 0) && (myColor.B == 0))  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a color known to the .NET Framework."' colorValue));  }  else {  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid color."' colorValue));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (regExHex.IsMatch (colorValue)) {  	// Color is specified as Hex. Parse.  	// If specified in 4-digit shorthand (e.g. #369)' expand to full 7 digits (e.g. #336699).  	if (colorValue.Length == 4) {  		colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  		colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  		colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  	}  	myColor = ColorTranslator.FromHtml (colorValue.ToUpper (CultureInfo.InvariantCulture));  }  else if (regExRgb.IsMatch (colorValue)) {  	// Color is specified as RGB. Parse.  	string colorVal = colorValue;  	// Strip the opening and closing parentheses.  	colorVal = colorVal.TrimStart (new char[] {  		'('  	});  	colorVal = colorVal.TrimEnd (new char[] {  		')'  	});  	// First verify each value is a number from 0-255. (The reg ex matched 0-999).  	string[] rgbStringValues = colorVal.Split (new char[] {  		'''  	});  	// Convert to integers  	int[] rgbValues = new int[3];  	for (int i = 0; i < rgbStringValues.Length; i++) {  		rgbValues [i] = Int32.Parse (rgbStringValues [i]' CultureInfo.InvariantCulture);  		if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  	}  	myColor = Color.FromArgb (rgbValues [0]' rgbValues [1]' rgbValues [2]);  }  else if (regExName.IsMatch (colorValue)) {  	// Color is specified as a name. Parse.  	myColor = Color.FromName (colorValue);  	if ((myColor.A == 0) && (myColor.R == 0) && (myColor.G == 0) && (myColor.B == 0))  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a color known to the .NET Framework."' colorValue));  }  else {  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid color."' colorValue));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (regExHex.IsMatch (colorValue)) {  	// Color is specified as Hex. Parse.  	// If specified in 4-digit shorthand (e.g. #369)' expand to full 7 digits (e.g. #336699).  	if (colorValue.Length == 4) {  		colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  		colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  		colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  	}  	myColor = ColorTranslator.FromHtml (colorValue.ToUpper (CultureInfo.InvariantCulture));  }  else if (regExRgb.IsMatch (colorValue)) {  	// Color is specified as RGB. Parse.  	string colorVal = colorValue;  	// Strip the opening and closing parentheses.  	colorVal = colorVal.TrimStart (new char[] {  		'('  	});  	colorVal = colorVal.TrimEnd (new char[] {  		')'  	});  	// First verify each value is a number from 0-255. (The reg ex matched 0-999).  	string[] rgbStringValues = colorVal.Split (new char[] {  		'''  	});  	// Convert to integers  	int[] rgbValues = new int[3];  	for (int i = 0; i < rgbStringValues.Length; i++) {  		rgbValues [i] = Int32.Parse (rgbStringValues [i]' CultureInfo.InvariantCulture);  		if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  	}  	myColor = Color.FromArgb (rgbValues [0]' rgbValues [1]' rgbValues [2]);  }  else if (regExName.IsMatch (colorValue)) {  	// Color is specified as a name. Parse.  	myColor = Color.FromName (colorValue);  	if ((myColor.A == 0) && (myColor.R == 0) && (myColor.G == 0) && (myColor.B == 0))  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a color known to the .NET Framework."' colorValue));  }  else {  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid color."' colorValue));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (regExHex.IsMatch (colorValue)) {  	// Color is specified as Hex. Parse.  	// If specified in 4-digit shorthand (e.g. #369)' expand to full 7 digits (e.g. #336699).  	if (colorValue.Length == 4) {  		colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  		colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  		colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  	}  	myColor = ColorTranslator.FromHtml (colorValue.ToUpper (CultureInfo.InvariantCulture));  }  else if (regExRgb.IsMatch (colorValue)) {  	// Color is specified as RGB. Parse.  	string colorVal = colorValue;  	// Strip the opening and closing parentheses.  	colorVal = colorVal.TrimStart (new char[] {  		'('  	});  	colorVal = colorVal.TrimEnd (new char[] {  		')'  	});  	// First verify each value is a number from 0-255. (The reg ex matched 0-999).  	string[] rgbStringValues = colorVal.Split (new char[] {  		'''  	});  	// Convert to integers  	int[] rgbValues = new int[3];  	for (int i = 0; i < rgbStringValues.Length; i++) {  		rgbValues [i] = Int32.Parse (rgbStringValues [i]' CultureInfo.InvariantCulture);  		if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  	}  	myColor = Color.FromArgb (rgbValues [0]' rgbValues [1]' rgbValues [2]);  }  else if (regExName.IsMatch (colorValue)) {  	// Color is specified as a name. Parse.  	myColor = Color.FromName (colorValue);  	if ((myColor.A == 0) && (myColor.R == 0) && (myColor.G == 0) && (myColor.B == 0))  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a color known to the .NET Framework."' colorValue));  }  else {  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid color."' colorValue));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (regExHex.IsMatch (colorValue)) {  	// Color is specified as Hex. Parse.  	// If specified in 4-digit shorthand (e.g. #369)' expand to full 7 digits (e.g. #336699).  	if (colorValue.Length == 4) {  		colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  		colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  		colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  	}  	myColor = ColorTranslator.FromHtml (colorValue.ToUpper (CultureInfo.InvariantCulture));  }  else if (regExRgb.IsMatch (colorValue)) {  	// Color is specified as RGB. Parse.  	string colorVal = colorValue;  	// Strip the opening and closing parentheses.  	colorVal = colorVal.TrimStart (new char[] {  		'('  	});  	colorVal = colorVal.TrimEnd (new char[] {  		')'  	});  	// First verify each value is a number from 0-255. (The reg ex matched 0-999).  	string[] rgbStringValues = colorVal.Split (new char[] {  		'''  	});  	// Convert to integers  	int[] rgbValues = new int[3];  	for (int i = 0; i < rgbStringValues.Length; i++) {  		rgbValues [i] = Int32.Parse (rgbStringValues [i]' CultureInfo.InvariantCulture);  		if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  	}  	myColor = Color.FromArgb (rgbValues [0]' rgbValues [1]' rgbValues [2]);  }  else if (regExName.IsMatch (colorValue)) {  	// Color is specified as a name. Parse.  	myColor = Color.FromName (colorValue);  	if ((myColor.A == 0) && (myColor.R == 0) && (myColor.G == 0) && (myColor.B == 0))  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a color known to the .NET Framework."' colorValue));  }  else {  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid color."' colorValue));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (regExHex.IsMatch (colorValue)) {  	// Color is specified as Hex. Parse.  	// If specified in 4-digit shorthand (e.g. #369)' expand to full 7 digits (e.g. #336699).  	if (colorValue.Length == 4) {  		colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  		colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  		colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  	}  	myColor = ColorTranslator.FromHtml (colorValue.ToUpper (CultureInfo.InvariantCulture));  }  else if (regExRgb.IsMatch (colorValue)) {  	// Color is specified as RGB. Parse.  	string colorVal = colorValue;  	// Strip the opening and closing parentheses.  	colorVal = colorVal.TrimStart (new char[] {  		'('  	});  	colorVal = colorVal.TrimEnd (new char[] {  		')'  	});  	// First verify each value is a number from 0-255. (The reg ex matched 0-999).  	string[] rgbStringValues = colorVal.Split (new char[] {  		'''  	});  	// Convert to integers  	int[] rgbValues = new int[3];  	for (int i = 0; i < rgbStringValues.Length; i++) {  		rgbValues [i] = Int32.Parse (rgbStringValues [i]' CultureInfo.InvariantCulture);  		if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  	}  	myColor = Color.FromArgb (rgbValues [0]' rgbValues [1]' rgbValues [2]);  }  else if (regExName.IsMatch (colorValue)) {  	// Color is specified as a name. Parse.  	myColor = Color.FromName (colorValue);  	if ((myColor.A == 0) && (myColor.R == 0) && (myColor.G == 0) && (myColor.B == 0))  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a color known to the .NET Framework."' colorValue));  }  else {  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid color."' colorValue));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (colorValue.Length == 4) {  	colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  	colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  	colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (colorValue.Length == 4) {  	colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  	colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  	colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (colorValue.Length == 4) {  	colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  	colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  	colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (colorValue.Length == 4) {  	colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  	colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  	colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (colorValue.Length == 4) {  	colorValue = colorValue.Insert (1' colorValue.Substring (1' 1));  	colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  	colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: colorValue = colorValue.Insert (3' colorValue.Substring (3' 1));  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: colorValue = colorValue.Insert (5' colorValue.Substring (5' 1));  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (regExRgb.IsMatch (colorValue)) {  	// Color is specified as RGB. Parse.  	string colorVal = colorValue;  	// Strip the opening and closing parentheses.  	colorVal = colorVal.TrimStart (new char[] {  		'('  	});  	colorVal = colorVal.TrimEnd (new char[] {  		')'  	});  	// First verify each value is a number from 0-255. (The reg ex matched 0-999).  	string[] rgbStringValues = colorVal.Split (new char[] {  		'''  	});  	// Convert to integers  	int[] rgbValues = new int[3];  	for (int i = 0; i < rgbStringValues.Length; i++) {  		rgbValues [i] = Int32.Parse (rgbStringValues [i]' CultureInfo.InvariantCulture);  		if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  	}  	myColor = Color.FromArgb (rgbValues [0]' rgbValues [1]' rgbValues [2]);  }  else if (regExName.IsMatch (colorValue)) {  	// Color is specified as a name. Parse.  	myColor = Color.FromName (colorValue);  	if ((myColor.A == 0) && (myColor.R == 0) && (myColor.G == 0) && (myColor.B == 0))  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a color known to the .NET Framework."' colorValue));  }  else {  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid color."' colorValue));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (regExRgb.IsMatch (colorValue)) {  	// Color is specified as RGB. Parse.  	string colorVal = colorValue;  	// Strip the opening and closing parentheses.  	colorVal = colorVal.TrimStart (new char[] {  		'('  	});  	colorVal = colorVal.TrimEnd (new char[] {  		')'  	});  	// First verify each value is a number from 0-255. (The reg ex matched 0-999).  	string[] rgbStringValues = colorVal.Split (new char[] {  		'''  	});  	// Convert to integers  	int[] rgbValues = new int[3];  	for (int i = 0; i < rgbStringValues.Length; i++) {  		rgbValues [i] = Int32.Parse (rgbStringValues [i]' CultureInfo.InvariantCulture);  		if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  	}  	myColor = Color.FromArgb (rgbValues [0]' rgbValues [1]' rgbValues [2]);  }  else if (regExName.IsMatch (colorValue)) {  	// Color is specified as a name. Parse.  	myColor = Color.FromName (colorValue);  	if ((myColor.A == 0) && (myColor.R == 0) && (myColor.G == 0) && (myColor.B == 0))  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a color known to the .NET Framework."' colorValue));  }  else {  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid color."' colorValue));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if (regExRgb.IsMatch (colorValue)) {  	// Color is specified as RGB. Parse.  	string colorVal = colorValue;  	// Strip the opening and closing parentheses.  	colorVal = colorVal.TrimStart (new char[] {  		'('  	});  	colorVal = colorVal.TrimEnd (new char[] {  		')'  	});  	// First verify each value is a number from 0-255. (The reg ex matched 0-999).  	string[] rgbStringValues = colorVal.Split (new char[] {  		'''  	});  	// Convert to integers  	int[] rgbValues = new int[3];  	for (int i = 0; i < rgbStringValues.Length; i++) {  		rgbValues [i] = Int32.Parse (rgbStringValues [i]' CultureInfo.InvariantCulture);  		if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  			throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  	}  	myColor = Color.FromArgb (rgbValues [0]' rgbValues [1]' rgbValues [2]);  }  else if (regExName.IsMatch (colorValue)) {  	// Color is specified as a name. Parse.  	myColor = Color.FromName (colorValue);  	if ((myColor.A == 0) && (myColor.R == 0) && (myColor.G == 0) && (myColor.B == 0))  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a color known to the .NET Framework."' colorValue));  }  else {  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid color."' colorValue));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: for (int i = 0; i < rgbStringValues.Length; i++) {  	rgbValues [i] = Int32.Parse (rgbStringValues [i]' CultureInfo.InvariantCulture);  	if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  		throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: if ((rgbValues [i] < 0) || (rgbValues [i] > 255))  	throw new ArgumentOutOfRangeException (String.Format (CultureInfo.CurrentCulture' "The color {0} does not represent a valid RGB color."' colorValue));  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,GetColor,The following statement contains a magic number: myColor = Color.FromArgb (rgbValues [0]' rgbValues [1]' rgbValues [2]);  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidatePhysicalPathExistsAndIsReadWritable,The following statement contains a magic number: try {  	lock (_fileLock) {  		string uniqueFileName = ValidateFileName (fullPhysicalPath' "_test_file_okay_to_delete.config");  		testFilePath = Path.Combine (fullPhysicalPath' uniqueFileName);  		using (FileStream s = File.Create (testFilePath)) {  			s.WriteByte (42);  		}  		File.Delete (testFilePath);  	}  }  catch (Exception ex) {  	try {  		if (File.Exists (testFilePath)) {  			File.Delete (testFilePath);  			// Clean up by deleting the file we created  		}  	}  	catch {  	}  	throw new CannotWriteToDirectoryException (fullPhysicalPath' ex);  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidatePhysicalPathExistsAndIsReadWritable,The following statement contains a magic number: lock (_fileLock) {  	string uniqueFileName = ValidateFileName (fullPhysicalPath' "_test_file_okay_to_delete.config");  	testFilePath = Path.Combine (fullPhysicalPath' uniqueFileName);  	using (FileStream s = File.Create (testFilePath)) {  		s.WriteByte (42);  	}  	File.Delete (testFilePath);  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidatePhysicalPathExistsAndIsReadWritable,The following statement contains a magic number: using (FileStream s = File.Create (testFilePath)) {  	s.WriteByte (42);  }  
Magic Number,GalleryServerPro.Business,HelperFunctions,C:\repos\bambit_BGallery\TIS.GSP.Business\HelperFunctions.cs,ValidatePhysicalPathExistsAndIsReadWritable,The following statement contains a magic number: s.WriteByte (42);  
Magic Number,GalleryServerPro.Business,Image,C:\repos\bambit_BGallery\TIS.GSP.Business\Image.cs,Image,The following statement contains a magic number: if (imageFile != null) {  	this.Original.FileInfo = imageFile;  	// Will throw InvalidMediaObjectException if the file's directory is not the same as the album's directory.  	if (this.Original.MimeType.TypeCategory != MimeTypeCategory.Image) {  		throw new GalleryServerPro.Events.CustomExceptions.UnsupportedMediaObjectTypeException (this.Original.FileInfo);  	}  	var size = this.Original.GetSize ();  	if (!size.IsEmpty) {  		this.Original.Width = (int)size.Width;  		this.Original.Height = (int)size.Height;  	}  	int fileSize = (int)(imageFile.Length / 1024);  	this.Original.FileSizeKB = (fileSize < 1 ? 1 : fileSize);  	// Very small files should be 1' not 0.  	// Get metadata from the image file.  	if (IsNew) {  		try {  			ExtractMetadata ();  		}  		catch (OutOfMemoryException ex) {  			this.Parent.RemoveGalleryObject (this);  			throw new GalleryServerPro.Events.CustomExceptions.UnsupportedImageTypeException (this' ex);  		}  	}  }  else {  	this.Original.FileNamePhysicalPath = System.IO.Path.Combine (parentPhysicalPath' originalFilename);  	this.Original.FileSizeKB = originalSizeKb;  }  
Magic Number,GalleryServerPro.Business,ImageOriginalCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\ImageOriginalCreator.cs,GenerateAndSaveFile,The following statement contains a magic number: if (rotateResult.Item1 > MediaObjectRotation.Rotate0) {  	if (!rotateResult.Item2.IsEmpty) {  		GalleryObject.Original.Width = (int)rotateResult.Item2.Width;  		GalleryObject.Original.Height = (int)rotateResult.Item2.Height;  	}  	RefreshImageMetadata ();  	int fileSize = (int)(GalleryObject.Original.FileInfo.Length / 1024);  	GalleryObject.Original.FileSizeKB = (fileSize < 1 ? 1 : fileSize);  	// Very small files should be 1' not 0.  }  else {  	// Turns out the file wasn't actually rotated' but we need to remove the orientation flag to prevent the   	// auto-rotate functionality from doing the wrong thing in the future.  	IGalleryObjectMetadataItem metaItem;  	if (GalleryObject.MetadataItems.TryGetMetadataItem (MetadataItemName.Orientation' out metaItem)) {  		metaItem.IsDeleted = true;  		Factory.SaveGalleryObjectMetadataItem (metaItem' GalleryObject.LastModifiedByUserName);  		GalleryObject.MetadataReadWriter.DeleteMetaValue (MetadataItemName.Orientation);  	}  }  
Magic Number,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeMediaObjectFiles,The following statement contains a magic number: foreach (FileInfo file in files) {  	if ((file.Attributes & FileAttributes.Hidden) == FileAttributes.Hidden) {  		_synchStatus.SkippedMediaObjects.Add (new KeyValuePair<string' string> (file.FullName.Remove (0' _fullMediaObjectPathLength + 1)' Resources.SynchronizationStatus_Hidden_File_Msg));  		continue;  	}  	#region Process thumbnail or optimized image  	if (file.Name.StartsWith (_thumbnailPrefix' StringComparison.OrdinalIgnoreCase)) {  		// We have a thumbnail image. If we are storing thumbnails in a different directory' delete the file' but only if the path  		// is writeable. The user may have just specified a new thumbnail path' and we need to delete all the previous thumbnails   		// from their original location.  		if (_thumbnailRootPath != GallerySettings.FullMediaObjectPath && !GallerySettings.MediaObjectPathIsReadOnly) {  			File.Delete (file.FullName);  		}  		continue;  	}  	if (file.Name.StartsWith (_optimizedPrefix' StringComparison.OrdinalIgnoreCase)) {  		// We have an optimized image. If we are storing optimized images in a different directory' delete the file' but only if the path  		// is writeable. The user may have just specified a new optimized path' and we need to delete all the previous optimized images   		// from their original location.  		if (_optimizedRootPath != GallerySettings.FullMediaObjectPath && !GallerySettings.MediaObjectPathIsReadOnly) {  			File.Delete (file.FullName);  		}  		continue;  	}  	#endregion  	// See if this file is an existing media object.  	var mediaObject = album.GetChildGalleryObjects (GalleryObjectType.MediaObject).FirstOrDefault (mo => mo.Original.FileNamePhysicalPath.Equals (file.FullName' StringComparison.OrdinalIgnoreCase));  	if (mediaObject != null) {  		// Found an existing media object matching the file on disk. Update properties' but only if its file extension  		// is enabled. (If this is a media object that had been added to Gallery Server but its file type was   		// subsequently disabled' we do not want to synchronize it - we want its info in the data store to be deleted.)  		if (HelperFunctions.IsFileAuthorizedForAddingToGallery (file.Name' album.GalleryId)) {  			UpdateExistingMediaObject (mediaObject);  		}  	}  	else {  		// No media object exists for this file. Create a new one.  		CreateNewMediaObject (album' file);  	}  	int newFileIndex = _synchStatus.CurrentFileIndex + 1;  	if (newFileIndex < _synchStatus.TotalFileCount) {  		var persistToDatabase = (_synchStatus.CurrentFileIndex % 100) == 0;  		// Save to DB every 100 files  		UpdateStatus (newFileIndex' file.DirectoryName' file.Name' persistToDatabase: persistToDatabase);  	}  	lock (_synchStatus) {  		if (_synchStatus.ShouldTerminate) {  			// Immediately set this property back to false so that we don't trigger this code again' then throw a special exception  			// that will be caught and used to cancel the synch.  			_synchStatus.Update (SynchronizationState.Aborted' null' String.Empty' null' String.Empty' false' true);  			throw new SynchronizationTerminationRequestedException ();  		}  	}  }  
Magic Number,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeMediaObjectFiles,The following statement contains a magic number: if (newFileIndex < _synchStatus.TotalFileCount) {  	var persistToDatabase = (_synchStatus.CurrentFileIndex % 100) == 0;  	// Save to DB every 100 files  	UpdateStatus (newFileIndex' file.DirectoryName' file.Name' persistToDatabase: persistToDatabase);  }  
Magic Number,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,SynchronizeDirectory,The following statement contains a magic number: if ((_synchStatus.CurrentFileIndex - _lastTransactionCommitFileIndex) >= 100) {  	HelperFunctions.CommitTransaction ();  	HelperFunctions.BeginTransaction ();  	_lastTransactionCommitFileIndex = _synchStatus.CurrentFileIndex;  }  
Magic Number,GalleryServerPro.Business,SynchronizationManager,C:\repos\bambit_BGallery\TIS.GSP.Business\SynchronizationManager.cs,EvaluateOriginalImage,The following statement contains a magic number: if (_rebuildThumbnail || _rebuildOptimized) {  	try {  		var size = mediaObject.Original.GetSize ();  		mediaObject.Original.Width = (int)size.Width;  		mediaObject.Original.Height = (int)size.Height;  	}  	catch (UnsupportedImageTypeException) {  	}  	int fileSize = (int)(mediaObject.Original.FileInfo.Length / 1024);  	mediaObject.Original.FileSizeKB = (fileSize < 1 ? 1 : fileSize);  	// Very small files should be 1' not 0.  }  
Magic Number,GalleryServerPro.Business,Video,C:\repos\bambit_BGallery\TIS.GSP.Business\Video.cs,Video,The following statement contains a magic number: if (videoFile != null) {  	this.Optimized.FileInfo = videoFile;  	// Will throw InvalidMediaObjectException if the file's directory is not the same as the album's directory.  	this.Original.FileInfo = videoFile;  	// Will throw InvalidMediaObjectException if the file's directory is not the same as the album's directory.  	if (this.MimeType.TypeCategory != MimeTypeCategory.Video) {  		throw new GalleryServerPro.Events.CustomExceptions.UnsupportedMediaObjectTypeException (this.Original.FileInfo);  	}  	this.Optimized.Width = gallerySetting.DefaultVideoPlayerWidth;  	this.Optimized.Height = gallerySetting.DefaultVideoPlayerHeight;  	this.Original.Width = gallerySetting.DefaultVideoPlayerWidth;  	this.Original.Height = gallerySetting.DefaultVideoPlayerHeight;  	int fileSize = (int)(videoFile.Length / 1024);  	this.Optimized.FileSizeKB = (fileSize < 1 ? 1 : fileSize);  	// Very small files should be 1' not 0.  	this.Original.FileSizeKB = (fileSize < 1 ? 1 : fileSize);  	// Very small files should be 1' not 0.  	if (IsNew) {  		ExtractMetadata ();  		// Grab the width and height that was extracted' if any.  		IGalleryObjectMetadataItem metaItem;  		if (MetadataItems.TryGetMetadataItem (MetadataItemName.Width' out metaItem))  			this.Original.Width = Convert.ToInt32 (metaItem.RawValue);  		if (MetadataItems.TryGetMetadataItem (MetadataItemName.Height' out metaItem))  			this.Original.Height = Convert.ToInt32 (metaItem.RawValue);  	}  }  else {  	this.Original.FileNamePhysicalPath = System.IO.Path.Combine (parentPhysicalPath' originalFilename);  	this.Original.FileSizeKB = originalSizeKb;  }  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetReducedFunctionalityModeWatermark,The following statement contains a magic number: try {  	tempWatermark = new Watermark ();  	tempWatermark.WatermarkText = GalleryServerPro.Business.Properties.Resources.Reduced_Functionality_Mode_Watermark_Text;  	tempWatermark.TextFontName = gallerySetting.WatermarkTextFontName;  	tempWatermark.TextColor = HelperFunctions.GetColor (gallerySetting.WatermarkTextColor);  	tempWatermark.TextHeightPixels = 0;  	tempWatermark.TextWidthPercent = 100;  	tempWatermark.TextOpacityPercent = 100;  	tempWatermark.TextLocation = ContentAlignment.MiddleCenter;  	tempWatermark._watermarkImage = GalleryServerPro.Business.Properties.Resources.GSP_Logo;  	tempWatermark.ImageWidthPercent = 85;  	tempWatermark.ImageOpacityPercent = 50;  	tempWatermark.ImageLocation = ContentAlignment.BottomCenter;  }  catch {  	if (tempWatermark != null)  		tempWatermark.Dispose ();  	throw;  }  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetReducedFunctionalityModeWatermark,The following statement contains a magic number: try {  	tempWatermark = new Watermark ();  	tempWatermark.WatermarkText = GalleryServerPro.Business.Properties.Resources.Reduced_Functionality_Mode_Watermark_Text;  	tempWatermark.TextFontName = gallerySetting.WatermarkTextFontName;  	tempWatermark.TextColor = HelperFunctions.GetColor (gallerySetting.WatermarkTextColor);  	tempWatermark.TextHeightPixels = 0;  	tempWatermark.TextWidthPercent = 100;  	tempWatermark.TextOpacityPercent = 100;  	tempWatermark.TextLocation = ContentAlignment.MiddleCenter;  	tempWatermark._watermarkImage = GalleryServerPro.Business.Properties.Resources.GSP_Logo;  	tempWatermark.ImageWidthPercent = 85;  	tempWatermark.ImageOpacityPercent = 50;  	tempWatermark.ImageLocation = ContentAlignment.BottomCenter;  }  catch {  	if (tempWatermark != null)  		tempWatermark.Dispose ();  	throw;  }  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetReducedFunctionalityModeWatermark,The following statement contains a magic number: try {  	tempWatermark = new Watermark ();  	tempWatermark.WatermarkText = GalleryServerPro.Business.Properties.Resources.Reduced_Functionality_Mode_Watermark_Text;  	tempWatermark.TextFontName = gallerySetting.WatermarkTextFontName;  	tempWatermark.TextColor = HelperFunctions.GetColor (gallerySetting.WatermarkTextColor);  	tempWatermark.TextHeightPixels = 0;  	tempWatermark.TextWidthPercent = 100;  	tempWatermark.TextOpacityPercent = 100;  	tempWatermark.TextLocation = ContentAlignment.MiddleCenter;  	tempWatermark._watermarkImage = GalleryServerPro.Business.Properties.Resources.GSP_Logo;  	tempWatermark.ImageWidthPercent = 85;  	tempWatermark.ImageOpacityPercent = 50;  	tempWatermark.ImageLocation = ContentAlignment.BottomCenter;  }  catch {  	if (tempWatermark != null)  		tempWatermark.Dispose ();  	throw;  }  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetReducedFunctionalityModeWatermark,The following statement contains a magic number: try {  	tempWatermark = new Watermark ();  	tempWatermark.WatermarkText = GalleryServerPro.Business.Properties.Resources.Reduced_Functionality_Mode_Watermark_Text;  	tempWatermark.TextFontName = gallerySetting.WatermarkTextFontName;  	tempWatermark.TextColor = HelperFunctions.GetColor (gallerySetting.WatermarkTextColor);  	tempWatermark.TextHeightPixels = 0;  	tempWatermark.TextWidthPercent = 100;  	tempWatermark.TextOpacityPercent = 100;  	tempWatermark.TextLocation = ContentAlignment.MiddleCenter;  	tempWatermark._watermarkImage = GalleryServerPro.Business.Properties.Resources.GSP_Logo;  	tempWatermark.ImageWidthPercent = 85;  	tempWatermark.ImageOpacityPercent = 50;  	tempWatermark.ImageLocation = ContentAlignment.BottomCenter;  }  catch {  	if (tempWatermark != null)  		tempWatermark.Dispose ();  	throw;  }  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetReducedFunctionalityModeWatermark,The following statement contains a magic number: tempWatermark.TextWidthPercent = 100;  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetReducedFunctionalityModeWatermark,The following statement contains a magic number: tempWatermark.TextOpacityPercent = 100;  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetReducedFunctionalityModeWatermark,The following statement contains a magic number: tempWatermark.ImageWidthPercent = 85;  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetReducedFunctionalityModeWatermark,The following statement contains a magic number: tempWatermark.ImageOpacityPercent = 50;  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkImage,The following statement contains a magic number: if (this.ImageWidthPercent > 0) {  	// We need to resize the watermark image so that its width takes up the specified percentage of  	// the overall width of the recipient image.  	int resizedWatermarkWidth = (int)(recipientImageWidth * (((float)this.ImageWidthPercent) / 100));  	int resizedWatermarkHeight = (resizedWatermarkWidth * watermarkHeight) / watermarkWidth;  	// If the resized height is taller than the recipient image' then readjust the width and height  	// to make the watermark as tall as the recipient image.  	if (resizedWatermarkHeight > recipientImageHeight) {  		resizedWatermarkHeight = recipientImageHeight;  		resizedWatermarkWidth = (watermarkWidth * resizedWatermarkHeight) / watermarkHeight;  	}  	// Get the resized image and assign the width and height vars.  	return ImageHelper.CreateResizedBitmap (this.WatermarkImage' watermarkWidth' watermarkHeight' resizedWatermarkWidth' resizedWatermarkHeight);  }  else {  	return this.WatermarkImage;  }  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The following statement contains a magic number: switch (watermarkLocation) {  case ContentAlignment.TopLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.TopCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.TopRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.MiddleLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.MiddleCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.MiddleRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.BottomLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  case ContentAlignment.BottomCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  case ContentAlignment.BottomRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  default:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  }  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The following statement contains a magic number: switch (watermarkLocation) {  case ContentAlignment.TopLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.TopCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.TopRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.MiddleLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.MiddleCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.MiddleRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.BottomLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  case ContentAlignment.BottomCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  case ContentAlignment.BottomRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  default:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  }  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The following statement contains a magic number: switch (watermarkLocation) {  case ContentAlignment.TopLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.TopCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.TopRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.MiddleLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.MiddleCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.MiddleRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.BottomLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  case ContentAlignment.BottomCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  case ContentAlignment.BottomRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  default:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  }  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The following statement contains a magic number: switch (watermarkLocation) {  case ContentAlignment.TopLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.TopCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.TopRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.MiddleLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.MiddleCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.MiddleRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.BottomLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  case ContentAlignment.BottomCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  case ContentAlignment.BottomRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  default:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  }  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The following statement contains a magic number: switch (watermarkLocation) {  case ContentAlignment.TopLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.TopCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.TopRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.MiddleLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.MiddleCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.MiddleRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.BottomLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  case ContentAlignment.BottomCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  case ContentAlignment.BottomRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  default:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  }  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The following statement contains a magic number: switch (watermarkLocation) {  case ContentAlignment.TopLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.TopCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.TopRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  case ContentAlignment.MiddleLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.MiddleCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.MiddleRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  	break;  case ContentAlignment.BottomLeft:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  case ContentAlignment.BottomCenter:  	startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  case ContentAlignment.BottomRight:  	startingPoint.X = (int)(imageWidth - watermarkWidth - (imageWidth * borderPercent));  	startingPoint.Y = (int)(imageHeight - watermarkHeight - (imageHeight * borderPercent));  	break;  default:  	startingPoint.X = (int)(imageWidth * borderPercent);  	startingPoint.Y = (int)(imageHeight * borderPercent);  	break;  }  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The following statement contains a magic number: startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The following statement contains a magic number: startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The following statement contains a magic number: startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The following statement contains a magic number: startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The following statement contains a magic number: startingPoint.Y = (int)(imageHeight - watermarkHeight) / 2;  
Magic Number,GalleryServerPro.Business,Watermark,C:\repos\bambit_BGallery\TIS.GSP.Business\Watermark.cs,GetWatermarkStartingPoint,The following statement contains a magic number: startingPoint.X = (int)(imageWidth - watermarkWidth) / 2;  
Magic Number,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,ExtractZipFile,The following statement contains a magic number: this._albumAndDirectoryNamesLookupTable = new Hashtable (10);  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetExposureTime,The following statement contains a magic number: if (RawMetadata.TryGetValue (RawMetadataItemName.ExifExposureTime' out rawMdi)) {  	string exposureTime;  	if ((rawMdi.ExtractedValueType == ExtractedValueType.Fraction) && ((Fraction)rawMdi.Value).ToSingle () > numSeconds) {  		exposureTime = Math.Round (((Fraction)rawMdi.Value).ToSingle ()' 2).ToString (CultureInfo.InvariantCulture);  	}  	else {  		exposureTime = rawMdi.Value.ToString ();  	}  	return new MetaValue (String.Concat (exposureTime' " "' Resources.Metadata_ExposureTime_Units)' exposureTime);  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetExposureTime,The following statement contains a magic number: if ((rawMdi.ExtractedValueType == ExtractedValueType.Fraction) && ((Fraction)rawMdi.Value).ToSingle () > numSeconds) {  	exposureTime = Math.Round (((Fraction)rawMdi.Value).ToSingle ()' 2).ToString (CultureInfo.InvariantCulture);  }  else {  	exposureTime = rawMdi.Value.ToString ();  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetExposureTime,The following statement contains a magic number: exposureTime = Math.Round (((Fraction)rawMdi.Value).ToSingle ()' 2).ToString (CultureInfo.InvariantCulture);  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetHorizontalResolution,The following statement contains a magic number: if (RawMetadata.TryGetValue (RawMetadataItemName.XResolution' out rawMdi)) {  	string xResolution;  	if (rawMdi.ExtractedValueType == ExtractedValueType.Fraction) {  		xResolution = Math.Round (((Fraction)rawMdi.Value).ToSingle ()' 2).ToString (CultureInfo.InvariantCulture);  	}  	else {  		xResolution = rawMdi.Value.ToString ();  	}  	return new MetaValue (String.Concat (xResolution' " "' resolutionUnit)' xResolution);  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetHorizontalResolution,The following statement contains a magic number: if (rawMdi.ExtractedValueType == ExtractedValueType.Fraction) {  	xResolution = Math.Round (((Fraction)rawMdi.Value).ToSingle ()' 2).ToString (CultureInfo.InvariantCulture);  }  else {  	xResolution = rawMdi.Value.ToString ();  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetHorizontalResolution,The following statement contains a magic number: xResolution = Math.Round (((Fraction)rawMdi.Value).ToSingle ()' 2).ToString (CultureInfo.InvariantCulture);  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetLensAperture,The following statement contains a magic number: if ((String.IsNullOrWhiteSpace (aperture)) && (RawMetadata.TryGetValue (RawMetadataItemName.ExifAperture' out rawMdi))) {  	if (rawMdi.ExtractedValueType == ExtractedValueType.Fraction) {  		apertureRaw = ((Fraction)rawMdi.Value).ToSingle ();  		var exifFNumber = (float)Math.Round (Math.Pow (Math.Sqrt (2)' apertureRaw)' 1);  		aperture = exifFNumber.ToString ("f/##0.#"' CultureInfo.InvariantCulture);  	}  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetLensAperture,The following statement contains a magic number: if (rawMdi.ExtractedValueType == ExtractedValueType.Fraction) {  	apertureRaw = ((Fraction)rawMdi.Value).ToSingle ();  	var exifFNumber = (float)Math.Round (Math.Pow (Math.Sqrt (2)' apertureRaw)' 1);  	aperture = exifFNumber.ToString ("f/##0.#"' CultureInfo.InvariantCulture);  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetVerticalResolution,The following statement contains a magic number: if (RawMetadata.TryGetValue (RawMetadataItemName.YResolution' out rawMdi)) {  	string yResolution;  	if (rawMdi.ExtractedValueType == ExtractedValueType.Fraction) {  		yResolution = Math.Round (((Fraction)rawMdi.Value).ToSingle ()' 2).ToString (CultureInfo.InvariantCulture);  	}  	else {  		yResolution = rawMdi.Value.ToString ();  	}  	return new MetaValue (String.Concat (yResolution' " "' resolutionUnit)' yResolution);  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetVerticalResolution,The following statement contains a magic number: if (rawMdi.ExtractedValueType == ExtractedValueType.Fraction) {  	yResolution = Math.Round (((Fraction)rawMdi.Value).ToSingle ()' 2).ToString (CultureInfo.InvariantCulture);  }  else {  	yResolution = rawMdi.Value.ToString ();  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,GetVerticalResolution,The following statement contains a magic number: yResolution = Math.Round (((Fraction)rawMdi.Value).ToSingle ()' 2).ToString (CultureInfo.InvariantCulture);  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,ConvertExifDateTimeToDateTime,The following statement contains a magic number: if (ymdhms.Length >= 2) {  	Int32.TryParse (ymdhms [0]' out year);  	Int32.TryParse (ymdhms [1]' out month);  	Int32.TryParse (ymdhms [2]' out day);  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,ConvertExifDateTimeToDateTime,The following statement contains a magic number: if (ymdhms.Length >= 2) {  	Int32.TryParse (ymdhms [0]' out year);  	Int32.TryParse (ymdhms [1]' out month);  	Int32.TryParse (ymdhms [2]' out day);  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,ConvertExifDateTimeToDateTime,The following statement contains a magic number: Int32.TryParse (ymdhms [2]' out day);  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,ConvertExifDateTimeToDateTime,The following statement contains a magic number: if (ymdhms.Length >= 6) {  	// The hour' minute and second will default to 0 if it can't be parsed' which is good.  	Int32.TryParse (ymdhms [3]' out hour);  	Int32.TryParse (ymdhms [4]' out minute);  	Int32.TryParse (ymdhms [5]' out second);  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,ConvertExifDateTimeToDateTime,The following statement contains a magic number: if (ymdhms.Length >= 6) {  	// The hour' minute and second will default to 0 if it can't be parsed' which is good.  	Int32.TryParse (ymdhms [3]' out hour);  	Int32.TryParse (ymdhms [4]' out minute);  	Int32.TryParse (ymdhms [5]' out second);  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,ConvertExifDateTimeToDateTime,The following statement contains a magic number: if (ymdhms.Length >= 6) {  	// The hour' minute and second will default to 0 if it can't be parsed' which is good.  	Int32.TryParse (ymdhms [3]' out hour);  	Int32.TryParse (ymdhms [4]' out minute);  	Int32.TryParse (ymdhms [5]' out second);  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,ConvertExifDateTimeToDateTime,The following statement contains a magic number: if (ymdhms.Length >= 6) {  	// The hour' minute and second will default to 0 if it can't be parsed' which is good.  	Int32.TryParse (ymdhms [3]' out hour);  	Int32.TryParse (ymdhms [4]' out minute);  	Int32.TryParse (ymdhms [5]' out second);  }  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,ConvertExifDateTimeToDateTime,The following statement contains a magic number: Int32.TryParse (ymdhms [3]' out hour);  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,ConvertExifDateTimeToDateTime,The following statement contains a magic number: Int32.TryParse (ymdhms [4]' out minute);  
Magic Number,GalleryServerPro.Business.Metadata,ImageMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\ImageMetadataReadWriter.cs,ConvertExifDateTimeToDateTime,The following statement contains a magic number: Int32.TryParse (ymdhms [5]' out second);  
Magic Number,GalleryServerPro.Business.Metadata,MediaObjectMetadataReadWriter,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\MediaObjectMetadataReadWriter.cs,GetMetaValue,The following statement contains a magic number: switch (metaName) {  case MetadataItemName.Title:  	return new MetaValue (GalleryObject.Original.FileName);  case MetadataItemName.FileName:  	return new MetaValue ((fi != null ? fi.Name : null));  case MetadataItemName.FileNameWithoutExtension:  	return new MetaValue ((fi != null ? Path.GetFileNameWithoutExtension (fi.Name) : null));  case MetadataItemName.FileSizeKb:  	if (fi == null)  		return null;  	int fileSize = (int)(fi.Length / 1024);  	fileSize = (fileSize < 1 ? 1 : fileSize);  	// Very small files should be 1' not 0.  	return new MetaValue (String.Concat (fileSize.ToString ("N0"' CultureInfo.CurrentCulture)' " "' Resources.Metadata_KB)' fileSize.ToString (CultureInfo.InvariantCulture));  case MetadataItemName.DateFileCreated:  	return (fi != null ? new MetaValue (fi.CreationTime.ToString (DateTimeFormatString' CultureInfo.InvariantCulture)' fi.CreationTime.ToString ("O"' CultureInfo.InvariantCulture)) : null);  case MetadataItemName.DateFileCreatedUtc:  	return (fi != null ? new MetaValue (fi.CreationTimeUtc.ToString (DateTimeFormatString' CultureInfo.InvariantCulture)' fi.CreationTimeUtc.ToString ("O"' CultureInfo.InvariantCulture)) : null);  case MetadataItemName.DateFileLastModified:  	return (fi != null ? new MetaValue (fi.LastWriteTime.ToString (DateTimeFormatString' CultureInfo.InvariantCulture)' fi.LastWriteTime.ToString ("O"' CultureInfo.InvariantCulture)) : null);  case MetadataItemName.DateFileLastModifiedUtc:  	return (fi != null ? new MetaValue (fi.LastWriteTimeUtc.ToString (DateTimeFormatString' CultureInfo.InvariantCulture)' fi.LastWriteTimeUtc.ToString ("O"' CultureInfo.InvariantCulture)) : null);  default:  	return base.GetMetaValue (metaName);  }  
Magic Number,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetLatitude,The following statement contains a magic number: if (!String.IsNullOrEmpty (direction) && (latitude != null)) {  	return new GpsDistance (direction' latitude [0]' latitude [1]' latitude [2]);  }  else {  	return null;  }  
Magic Number,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetLatitude,The following statement contains a magic number: return new GpsDistance (direction' latitude [0]' latitude [1]' latitude [2]);  
Magic Number,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetLongitude,The following statement contains a magic number: if (!String.IsNullOrEmpty (direction) && (longitude != null)) {  	return new GpsDistance (direction' longitude [0]' longitude [1]' longitude [2]);  }  else {  	return null;  }  
Magic Number,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetLongitude,The following statement contains a magic number: return new GpsDistance (direction' longitude [0]' longitude [1]' longitude [2]);  
Magic Number,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetDestLatitude,The following statement contains a magic number: if (!String.IsNullOrEmpty (direction) && (latitude != null)) {  	return new GpsDistance (direction' latitude [0]' latitude [1]' latitude [2]);  }  else {  	return null;  }  
Magic Number,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetDestLatitude,The following statement contains a magic number: return new GpsDistance (direction' latitude [0]' latitude [1]' latitude [2]);  
Magic Number,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetDestLongitude,The following statement contains a magic number: if (!String.IsNullOrEmpty (direction) && (longitude != null)) {  	return new GpsDistance (direction' longitude [0]' longitude [1]' longitude [2]);  }  else {  	return null;  }  
Magic Number,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,GetDestLongitude,The following statement contains a magic number: return new GpsDistance (direction' longitude [0]' longitude [1]' longitude [2]);  
Magic Number,GalleryServerPro.Business.Metadata,GpsLocation,C:\repos\bambit_BGallery\TIS.GSP.Business\Metadata\Gps.cs,SplitLongAndDivide,The following statement contains a magic number: if (Math.Abs (dbl2 - 0) < .0001)  	return 0;  
Missing Default,GalleryServerPro.Business,DisplayObjectCreator,C:\repos\bambit_BGallery\TIS.GSP.Business\DisplayObjectCreator.cs,Rotate,The following switch statement is missing a default case: switch (this.GalleryObject.GalleryObjectType) {  case GalleryObjectType.Image:  	return RotateImage (filePath' jpegQuality);  // Rotate videos only when we're dealing with the thumbnail image. Actual video files will be rotated  // in MediaConversionQueue/FFmpeg.  case GalleryObjectType.Video:  	if (this.Parent.DisplayType == DisplayObjectType.Thumbnail) {  		return RotateImage (filePath' jpegQuality);  	}  	break;  }  
Missing Default,GalleryServerPro.Business,MediaConversionQueue,C:\repos\bambit_BGallery\TIS.GSP.Business\MediaConversionQueue.cs,OnMediaConversionComplete,The following switch statement is missing a default case: switch (GetCurrentMediaQueueItem ().ConversionType) {  case MediaQueueItemConversionType.CreateOptimized:  	OnMediaConversionCompleteOptimizedCreated (settings);  	break;  case MediaQueueItemConversionType.RotateVideo:  	OnMediaConversionCompleteVideoRotated (settings);  	break;  }  
Missing Default,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,ParseOrientation,The following switch statement is missing a default case: switch (rotation) {  case 0:  	return Orientation.Normal;  case 90:  	return Orientation.Rotated270;  case 180:  	return Orientation.Rotated180;  case 270:  	return Orientation.Rotated90;  }  
Missing Default,GalleryServerPro.Business,FFmpeg,C:\repos\bambit_BGallery\TIS.GSP.Business\FFmpeg.cs,GetAutoRotationFilter,The following switch statement is missing a default case: switch (rotation) {  case MediaObjectRotation.Rotate90:  	filter = "transpose=clock";  	break;  case MediaObjectRotation.Rotate180:  	filter = "hflip'vflip";  	break;  case MediaObjectRotation.Rotate270:  	filter = "transpose=cclock";  	break;  }  
Missing Default,GalleryServerPro.Business,ExternalMediaObject,C:\repos\bambit_BGallery\TIS.GSP.Business\ExternalMediaObject.cs,ExternalMediaObject,The following switch statement is missing a default case: switch (mimeType) {  case MimeTypeCategory.Audio:  	this.Original.Width = gallerySetting.DefaultAudioPlayerWidth;  	this.Original.Height = gallerySetting.DefaultAudioPlayerHeight;  	break;  case MimeTypeCategory.Video:  	this.Original.Width = gallerySetting.DefaultVideoPlayerWidth;  	this.Original.Height = gallerySetting.DefaultVideoPlayerHeight;  	break;  case MimeTypeCategory.Image:  case MimeTypeCategory.Other:  	this.Original.Width = gallerySetting.DefaultGenericObjectWidth;  	this.Original.Height = gallerySetting.DefaultGenericObjectHeight;  	break;  }  
Missing Default,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CalculateNeededRotation,The following switch statement is missing a default case: switch (fileRotation) {  case Orientation.None:  case Orientation.Normal:  	return userRotation;  case Orientation.Rotated90:  	switch (userRotation) {  	case MediaObjectRotation.Rotate0:  		return MediaObjectRotation.Rotate270;  	case MediaObjectRotation.Rotate90:  		return MediaObjectRotation.Rotate0;  	case MediaObjectRotation.Rotate180:  		return MediaObjectRotation.Rotate90;  	case MediaObjectRotation.Rotate270:  		return MediaObjectRotation.Rotate180;  	}  	break;  case Orientation.Rotated180:  	switch (userRotation) {  	case MediaObjectRotation.Rotate0:  		return MediaObjectRotation.Rotate180;  	case MediaObjectRotation.Rotate90:  		return MediaObjectRotation.Rotate270;  	case MediaObjectRotation.Rotate180:  		return MediaObjectRotation.Rotate0;  	case MediaObjectRotation.Rotate270:  		return MediaObjectRotation.Rotate90;  	}  	break;  case Orientation.Rotated270:  	switch (userRotation) {  	case MediaObjectRotation.Rotate0:  		return MediaObjectRotation.Rotate90;  	case MediaObjectRotation.Rotate90:  		return MediaObjectRotation.Rotate180;  	case MediaObjectRotation.Rotate180:  		return MediaObjectRotation.Rotate270;  	case MediaObjectRotation.Rotate270:  		return MediaObjectRotation.Rotate0;  	}  	break;  }  
Missing Default,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CalculateNeededRotation,The following switch statement is missing a default case: switch (userRotation) {  case MediaObjectRotation.Rotate0:  	return MediaObjectRotation.Rotate270;  case MediaObjectRotation.Rotate90:  	return MediaObjectRotation.Rotate0;  case MediaObjectRotation.Rotate180:  	return MediaObjectRotation.Rotate90;  case MediaObjectRotation.Rotate270:  	return MediaObjectRotation.Rotate180;  }  
Missing Default,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CalculateNeededRotation,The following switch statement is missing a default case: switch (userRotation) {  case MediaObjectRotation.Rotate0:  	return MediaObjectRotation.Rotate180;  case MediaObjectRotation.Rotate90:  	return MediaObjectRotation.Rotate270;  case MediaObjectRotation.Rotate180:  	return MediaObjectRotation.Rotate0;  case MediaObjectRotation.Rotate270:  	return MediaObjectRotation.Rotate90;  }  
Missing Default,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,CalculateNeededRotation,The following switch statement is missing a default case: switch (userRotation) {  case MediaObjectRotation.Rotate0:  	return MediaObjectRotation.Rotate90;  case MediaObjectRotation.Rotate90:  	return MediaObjectRotation.Rotate180;  case MediaObjectRotation.Rotate180:  	return MediaObjectRotation.Rotate270;  case MediaObjectRotation.Rotate270:  	return MediaObjectRotation.Rotate0;  }  
Missing Default,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,GetOrientation,The following switch statement is missing a default case: switch (orientation) {  case Orientation.Rotated90:  case Orientation.Rotated180:  case Orientation.Rotated270:  	return orientation;  }  
Missing Default,GalleryServerPro.Business,GalleryObject,C:\repos\bambit_BGallery\TIS.GSP.Business\GalleryObject.cs,OnBeforeAddMetaItem,The following switch statement is missing a default case: switch (e.MetaItem.MetadataItemName) {  case MetadataItemName.GpsLocationWithMapLink:  	if (MetadataReadWriter.GetMetaValue (MetadataItemName.GpsLocation) == null) {  		e.MetaItem.Value = String.Empty;  	}  	break;  case MetadataItemName.GpsDestLocationWithMapLink:  	if (MetadataReadWriter.GetMetaValue (MetadataItemName.GpsDestLocation) == null) {  		e.MetaItem.Value = String.Empty;  	}  	break;  }  
Missing Default,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,RetrieveFromDataStore,The following switch statement is missing a default case: switch (profileDto.SettingName.Trim ()) {  case ProfileNameEnableUserAlbum:  case ProfileNameUserAlbumId:  	throw new DataException (String.Format ("It is invalid for the profile setting '{0}' to be associated with a template gallery (Gallery ID {1})."' profileDto.SettingName' profileDto.FKGalleryId));  case ProfileNameAlbumProfiles:  	var albumProfiles = JsonConvert.DeserializeObject<List<AlbumProfile>> (profileDto.SettingValue.Trim ());  	if (albumProfiles != null) {  		profile.AlbumProfiles.AddRange (albumProfiles);  	}  	break;  case ProfileNameMediaObjectProfiles:  	var moProfiles = JsonConvert.DeserializeObject<List<MediaObjectProfile>> (profileDto.SettingValue.Trim ());  	if (moProfiles != null) {  		profile.MediaObjectProfiles.AddRange (moProfiles);  	}  	break;  }  
Missing Default,GalleryServerPro.Business,UserProfile,C:\repos\bambit_BGallery\TIS.GSP.Business\UserProfile.cs,RetrieveFromDataStore,The following switch statement is missing a default case: switch (profileDto.SettingName.Trim ()) {  case ProfileNameEnableUserAlbum:  	gs.EnableUserAlbum = Convert.ToBoolean (profileDto.SettingValue.Trim ()' CultureInfo.InvariantCulture);  	break;  case ProfileNameUserAlbumId:  	gs.UserAlbumId = Convert.ToInt32 (profileDto.SettingValue.Trim ()' CultureInfo.InvariantCulture);  	break;  case ProfileNameAlbumProfiles:  case ProfileNameMediaObjectProfiles:  	throw new DataException (String.Format ("It is invalid for the profile setting '{0}' to be associated with a non-template gallery (Gallery ID {1})."' profileDto.SettingName' profileDto.FKGalleryId));  }  
Missing Default,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,GetMediaFilePath,The following switch statement is missing a default case: switch (mediaSize) {  case DisplayObjectType.Thumbnail:  	filePath = mediaObject.Thumbnail.FileNamePhysicalPath;  	break;  case DisplayObjectType.Optimized:  	filePath = mediaObject.Optimized.FileNamePhysicalPath;  	break;  case DisplayObjectType.Original:  	filePath = mediaObject.Original.FileNamePhysicalPath;  	break;  }  
Missing Default,GalleryServerPro.Business,ZipUtility,C:\repos\bambit_BGallery\TIS.GSP.Business\ZipUtility.cs,GetMediaFileNameForZip,The following switch statement is missing a default case: switch (mediaSize) {  case DisplayObjectType.Thumbnail:  	fileName = mediaObject.Thumbnail.FileName.Replace (gallerySetting.ThumbnailFileNamePrefix' String.Empty);  	break;  case DisplayObjectType.Optimized:  	fileName = mediaObject.Optimized.FileName.Replace (gallerySetting.OptimizedFileNamePrefix' String.Empty);  	break;  case DisplayObjectType.Original:  	fileName = mediaObject.Original.FileNamePhysicalPath;  	break;  }  
