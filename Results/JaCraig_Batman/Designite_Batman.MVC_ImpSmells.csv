Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Batman.MVC.Assets,AssetManager,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\Assets\AssetManager.cs,Process,Cyclomatic complexity of the method is 8
Complex Method,Batman.MVC.Assets.Filters,CSSFixImagesAndFonts,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\Assets\Filters\CSSFixImagesAndFonts.cs,Filter,Cyclomatic complexity of the method is 17
Complex Method,Batman.MVC.Assets.Filters,CSSSetupImports,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\Assets\Filters\CSSSetupImports.cs,Filter,Cyclomatic complexity of the method is 10
Complex Method,Batman.MVC.Assets.Filters,JSSetupImports,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\Assets\Filters\JSSetupReferences.cs,Filter,Cyclomatic complexity of the method is 10
Long Statement,Batman.MVC.ActionFilters,AutoRefresh,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\ActionFilters\AutoRefresh.cs,OnActionExecuted,The length of the statement  "            filterContext.HttpContext.Response.AppendHeader("Refresh"' Duration + ";Url=" + filterContext.HttpContext.Server.UrlEncode(URL)); " is 129.
Long Statement,Batman.MVC.ActionFilters,CSRF,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\ActionFilters\CSRF.cs,ShouldValidate,The length of the statement  "            return (string.Compare(Context.HttpContext.Request.HttpMethod' System.Net.WebRequestMethods.Http.Post' StringComparison.OrdinalIgnoreCase) == 0" is 143.
Long Statement,Batman.MVC.Assets,AssetManager,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\Assets\AssetManager.cs,Process,The length of the statement  "                    Files.Add(Asset.Included.Where(x => x.Path.StartsWith("~"' StringComparison.Ordinal) || x.Path.StartsWith("/"' StringComparison.Ordinal)).Select(x => new BundleFile(x.Path' new VirtualFileHack(x.Path)))); " is 204.
Long Statement,Batman.MVC.Assets.Filters,CSSFixImagesAndFonts,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\Assets\Filters\CSSFixImagesAndFonts.cs,Filter,The length of the statement  "                            Asset.Content = Asset.Content.Replace(MatchString' "url(data:" + MIME + ";base64'" + File.ReadBinary().ToString(Base64FormattingOptions.None) + ")"); " is 149.
Long Statement,Batman.MVC.Assets.Filters,CSSFixImagesAndFonts,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\Assets\Filters\CSSFixImagesAndFonts.cs,Filter,The length of the statement  "                                    else if (File.FullName.ToUpperInvariant().EndsWith(".JPG"' StringComparison.Ordinal) || File.FullName.ToUpperInvariant().EndsWith(".JPEG"' StringComparison.Ordinal)) " is 165.
Long Statement,Batman.MVC.BaseClasses,ControllerBase,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\BaseClasses\ControllerBase.cs,Serialize,The length of the statement  "            string ContentType = Request.AcceptTypes.Length > 0 ? Request.AcceptTypes.FirstOrDefault(x => Manager.Serializers.ContainsKey(x)) : ""; " is 135.
Long Statement,Batman.MVC.BaseClasses,ControllerBase,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\BaseClasses\ControllerBase.cs,Serialize,The length of the statement  "                ContentType = Manager.Serializers.FirstOrDefault(x => Request.Path.ToUpperInvariant().EndsWith(x.Value.FileType.ToUpperInvariant()' StringComparison.Ordinal)).Chain(x => x.Key' ""); " is 181.
Long Statement,Batman.Core,AppHelper,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\Startup.cs,PreStart,The length of the statement  "            Logger.LogMessage("Current asset helpers: {0}"' MessageType.Debug' BatComputer.Bootstrapper.Resolve<AssetManager>().ToString()); " is 128.
Long Statement,Batman.Core,AppHelper,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\Startup.cs,PreStart,The length of the statement  "            Logger.LogMessage("Current serializers: {0}"' MessageType.Debug' BatComputer.Bootstrapper.Resolve<SerializationManager>().ToString()); " is 134.
Complex Conditional,Batman.MVC.Assets.Filters,CSSFixImagesAndFonts,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\Assets\Filters\CSSFixImagesAndFonts.cs,Filter,The conditional expression  "File.Extension.ToUpperInvariant() == ".TTF"                              || File.Extension.ToUpperInvariant() == ".OTF"                              || File.Extension.ToUpperInvariant() == ".WOFF"                              || File.Extension.ToUpperInvariant() == ".SVG"                              || File.Extension.ToUpperInvariant() == ".EOT""  is complex.
Empty Catch Block,Batman.MVC.Assets.Filters,CSSFixImagesAndFonts,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\Assets\Filters\CSSFixImagesAndFonts.cs,Filter,The method has an empty catch block.
Empty Catch Block,Batman.MVC.BaseClasses,HttpApplicationBase,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\BaseClasses\HttpApplicationBase.cs,Application_AuthenticateRequest,The method has an empty catch block.
Empty Catch Block,Batman.MVC.BaseClasses,HttpApplicationBase,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\BaseClasses\HttpApplicationBase.cs,Application_BeginRequest,The method has an empty catch block.
Empty Catch Block,Batman.MVC.BaseClasses,HttpApplicationBase,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\BaseClasses\HttpApplicationBase.cs,Application_EndRequest,The method has an empty catch block.
Empty Catch Block,Batman.MVC.BaseClasses,HttpApplicationBase,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\BaseClasses\HttpApplicationBase.cs,Application_Error,The method has an empty catch block.
Missing Default,Batman.MVC.Assets.Filters,CSSFixImagesAndFonts,D:\research\architectureSmells\repos\JaCraig_Batman\Batman.MVC\Assets\Filters\CSSFixImagesAndFonts.cs,Filter,The following switch statement is missing a default case: switch (File.Extension.ToUpperInvariant())                              {                                  case ".WOFF":                                      MIME = "application/x-font-woff";                                      break;                                    case ".OTF":                                      MIME = "application/x-font-opentype";                                      break;                                    case ".TTF":                                      MIME = "application/x-font-ttf";                                      break;                                    case ".SVG":                                      MIME = "image/svg+xml";                                      break;                                    case ".EOT":                                      MIME = "application/vnd.ms-fontobject";                                      break;                              }
