Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Solid.Arduino.Test,MockSerialConnection,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\MockSerialConnection.cs,ReceiveData,The length of the parameter _serialDataReceivedEventArgsConstructor is 39.
Long Identifier,Solid.Arduino.Test,MockSerialConnection,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\MockSerialConnection.cs,,The length of the parameter SerialDataReceivedEventArgsConstructor is 38.
Long Statement,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetFirmware,The length of the statement  "            connection.EnqueueRequestAndResponse(new byte[] { 0xF0' 0x79' 0xF7 }' new byte[] { 0xF0' 0x79' majorVersion' minorVersion }); " is 125.
Long Statement,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetFirmwareAsync,The length of the statement  "            connection.EnqueueRequestAndResponse(new byte[] { 0xF0' 0x79' 0xF7 }' new byte[] { 0xF0' 0x79' majorVersion' minorVersion }); " is 125.
Long Statement,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestFirmware,The length of the statement  "            connection.EnqueueRequestAndResponse(new byte[] { 0xF0' 0x79' 0xF7 }' new byte[] { 0xF0' 0x79' majorVersion' minorVersion }); " is 125.
Long Statement,Solid.Arduino.Test,MockSerialConnection,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\MockSerialConnection.cs,AssertEqualToExpectedRequestByte,The length of the statement  "                throw new InvalidOperationException(string.Format("MOCK VALIDATION: Issued request byte {0:X} not equal to expected request byte {1:X}."' p' _currentRequest[_currentRequestIndex])); " is 181.
Long Statement,Solid.Arduino.Test,MockSerialConnection,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\MockSerialConnection.cs,ReceiveData,The length of the statement  "            var charReceivedEventArgs = (SerialDataReceivedEventArgs)_serialDataReceivedEventArgsConstructor.Invoke(new object[] { SerialData.Chars }); " is 139.
Long Statement,Solid.Arduino.Test,MockSerialConnection,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\MockSerialConnection.cs,ReceiveData,The length of the statement  "                    DataReceived(this' (SerialDataReceivedEventArgs)_serialDataReceivedEventArgsConstructor.Invoke(new object[] { SerialData.Eof })); " is 129.
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,WriteI2C_SlaveAddress_Parameter_Is0,The following statement contains a magic number: session.WriteI2C(0' 255);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,WriteI2C_SlaveAddress_Parameter_Is0x3FF,The following statement contains a magic number: session.WriteI2C(0x3FF' 255);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,WriteI2C_SlaveAddress_Parameter_Is127,The following statement contains a magic number: session.WriteI2C(127' 0x11' 0x22' 0x33' 0x44' 0xFF);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,WriteI2C_Data_Parameter_IsNull,The following statement contains a magic number: session.WriteI2C(130);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,ReadI2CContinous,The following statement contains a magic number: session.ReadI2CContinuous(0x45' 255);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,ReadI2CContinous_WithSlaveRegister,The following statement contains a magic number: session.ReadI2CContinuous(0x45' 0x0607' 255);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReply,The following statement contains a magic number: I2CReply reply = session.GetI2CReply(1' 3);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReply,The following statement contains a magic number: Assert.AreEqual(3' reply.Data.Length);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReply,The following statement contains a magic number: Assert.AreEqual(5' reply.Data[0]);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReply,The following statement contains a magic number: Assert.AreEqual(6' reply.Data[1]);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReply,The following statement contains a magic number: Assert.AreEqual(7' reply.Data[2]);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReply,The following statement contains a magic number: Assert.AreEqual(7' reply.Data[2]);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReply_WithSlaveRegister,The following statement contains a magic number: I2CReply reply = session.GetI2CReply(1' 2' 1);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReply_WithSlaveRegister,The following statement contains a magic number: Assert.AreEqual(2' reply.Register);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReply_WithSlaveRegister,The following statement contains a magic number: Assert.AreEqual(4' reply.Data[0]);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync,The following statement contains a magic number: I2CReply reply = session.GetI2CReplyAsync(127' 2).Result;
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync,The following statement contains a magic number: I2CReply reply = session.GetI2CReplyAsync(127' 2).Result;
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync,The following statement contains a magic number: Assert.AreEqual(127' reply.Address);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync,The following statement contains a magic number: Assert.AreEqual(2' reply.Data.Length);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync,The following statement contains a magic number: Assert.AreEqual(255' reply.Data[0]);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync,The following statement contains a magic number: Assert.AreEqual(254' reply.Data[1]);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync_WithSlaveRegister,The following statement contains a magic number: I2CReply reply = session.GetI2CReplyAsync(127' 260' 2).Result;
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync_WithSlaveRegister,The following statement contains a magic number: I2CReply reply = session.GetI2CReplyAsync(127' 260' 2).Result;
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync_WithSlaveRegister,The following statement contains a magic number: I2CReply reply = session.GetI2CReplyAsync(127' 260' 2).Result;
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync_WithSlaveRegister,The following statement contains a magic number: Assert.AreEqual(127' reply.Address);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync_WithSlaveRegister,The following statement contains a magic number: Assert.AreEqual(260' reply.Register);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync_WithSlaveRegister,The following statement contains a magic number: Assert.AreEqual(2' reply.Data.Length);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync_WithSlaveRegister,The following statement contains a magic number: Assert.AreEqual(255' reply.Data[0]);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,GetI2CReplyAsync_WithSlaveRegister,The following statement contains a magic number: Assert.AreEqual(254' reply.Data[1]);
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,I2CReplyReceived,The following statement contains a magic number: session.I2CReplyReceived += (o' e) =>              {                  Assert.AreEqual(1' e.Value.Address);                  Assert.AreEqual(0' e.Value.Register);                  Assert.AreEqual(3' e.Value.Data.Length);                  Assert.AreEqual(5' e.Value.Data[0]);                  Assert.AreEqual(6' e.Value.Data[1]);                  Assert.AreEqual(7' e.Value.Data[2]);                  eventHits++;              };
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,I2CReplyReceived,The following statement contains a magic number: session.I2CReplyReceived += (o' e) =>              {                  Assert.AreEqual(1' e.Value.Address);                  Assert.AreEqual(0' e.Value.Register);                  Assert.AreEqual(3' e.Value.Data.Length);                  Assert.AreEqual(5' e.Value.Data[0]);                  Assert.AreEqual(6' e.Value.Data[1]);                  Assert.AreEqual(7' e.Value.Data[2]);                  eventHits++;              };
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,I2CReplyReceived,The following statement contains a magic number: session.I2CReplyReceived += (o' e) =>              {                  Assert.AreEqual(1' e.Value.Address);                  Assert.AreEqual(0' e.Value.Register);                  Assert.AreEqual(3' e.Value.Data.Length);                  Assert.AreEqual(5' e.Value.Data[0]);                  Assert.AreEqual(6' e.Value.Data[1]);                  Assert.AreEqual(7' e.Value.Data[2]);                  eventHits++;              };
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,I2CReplyReceived,The following statement contains a magic number: session.I2CReplyReceived += (o' e) =>              {                  Assert.AreEqual(1' e.Value.Address);                  Assert.AreEqual(0' e.Value.Register);                  Assert.AreEqual(3' e.Value.Data.Length);                  Assert.AreEqual(5' e.Value.Data[0]);                  Assert.AreEqual(6' e.Value.Data[1]);                  Assert.AreEqual(7' e.Value.Data[2]);                  eventHits++;              };
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,I2CReplyReceived,The following statement contains a magic number: session.I2CReplyReceived += (o' e) =>              {                  Assert.AreEqual(1' e.Value.Address);                  Assert.AreEqual(0' e.Value.Register);                  Assert.AreEqual(3' e.Value.Data.Length);                  Assert.AreEqual(5' e.Value.Data[0]);                  Assert.AreEqual(6' e.Value.Data[1]);                  Assert.AreEqual(7' e.Value.Data[2]);                  eventHits++;              };
Magic Number,Solid.Arduino.Test,I2CProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\I2cProtocolTester.cs,I2CReplyReceived,The following statement contains a magic number: I2CReply reply = session.GetI2CReply(1' 3);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,ResetBoard,The following statement contains a magic number: connection.EnqueueRequestAndResponse(new byte[] { 0xFF }' new byte[] { 0xF9' 2' 3 });
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,ResetBoard,The following statement contains a magic number: connection.EnqueueRequestAndResponse(new byte[] { 0xFF }' new byte[] { 0xF9' 2' 3 });
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,ResetBoard,The following statement contains a magic number: Assert.AreEqual(2' version.Major);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,ResetBoard,The following statement contains a magic number: Assert.AreEqual(3' version.Minor);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetProtocolVersion,The following statement contains a magic number: connection.EnqueueRequestAndResponse(new byte[] { 0xF9 }' new byte[] { 0xF9' 2' 3 });
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetProtocolVersion,The following statement contains a magic number: connection.EnqueueRequestAndResponse(new byte[] { 0xF9 }' new byte[] { 0xF9' 2' 3 });
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetProtocolVersion,The following statement contains a magic number: Assert.AreEqual(2' version.Major);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetProtocolVersion,The following statement contains a magic number: Assert.AreEqual(3' version.Minor);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetProtocolVersionAsync,The following statement contains a magic number: connection.EnqueueRequestAndResponse(new byte[] { 0xF9 }' new byte[] { 0xF9' 2' 3 });
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetProtocolVersionAsync,The following statement contains a magic number: connection.EnqueueRequestAndResponse(new byte[] { 0xF9 }' new byte[] { 0xF9' 2' 3 });
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetProtocolVersionAsync,The following statement contains a magic number: Assert.AreEqual(2' version.Major);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetProtocolVersionAsync,The following statement contains a magic number: Assert.AreEqual(3' version.Minor);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestProtocolVersion,The following statement contains a magic number: connection.EnqueueRequestAndResponse(new byte[] { 0xF9 }' new byte[] { 0xF9' 2' 3 });
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestProtocolVersion,The following statement contains a magic number: connection.EnqueueRequestAndResponse(new byte[] { 0xF9 }' new byte[] { 0xF9' 2' 3 });
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestProtocolVersion,The following statement contains a magic number: Assert.AreEqual(2' version.Major);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestProtocolVersion,The following statement contains a magic number: Assert.AreEqual(3' version.Minor);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetFirmware,The following statement contains a magic number: const int majorVersion = 3;
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetFirmware,The following statement contains a magic number: const int minorVersion = 7;
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetFirmwareAsync,The following statement contains a magic number: const int majorVersion = 5;
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestFirmware,The following statement contains a magic number: const int majorVersion = 5;
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapability,The following statement contains a magic number: connection.EnqueueResponse(0' 1' 1' 1' 3' 10' 6' 1' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapability,The following statement contains a magic number: connection.EnqueueResponse(0' 1' 1' 1' 3' 10' 6' 1' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapability,The following statement contains a magic number: connection.EnqueueResponse(0' 1' 1' 1' 3' 10' 6' 1' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapability,The following statement contains a magic number: Assert.AreEqual(10' capability.Pins[0].PwmResolution);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: connection.EnqueueResponse(2' 8' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: connection.EnqueueResponse(2' 8' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: connection.EnqueueResponse(1' 1' 3' 7' 4' 7' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: connection.EnqueueResponse(1' 1' 3' 7' 4' 7' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: connection.EnqueueResponse(1' 1' 3' 7' 4' 7' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: connection.EnqueueResponse(1' 1' 3' 7' 4' 7' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(3' capability.Pins.Length);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(8' capability.Pins[0].AnalogResolution);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(2' capability.Pins[2].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(2' capability.Pins[2].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(false' capability.Pins[2].DigitalInput);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(true' capability.Pins[2].DigitalOutput);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(false' capability.Pins[2].Analog);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(0' capability.Pins[2].AnalogResolution);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(true' capability.Pins[2].Pwm);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(7' capability.Pins[2].PwmResolution);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(7' capability.Pins[2].PwmResolution);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(true' capability.Pins[2].Servo);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(7' capability.Pins[2].ServoResolution);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardCapabilityAsync,The following statement contains a magic number: Assert.AreEqual(7' capability.Pins[2].ServoResolution);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestBoardCapability,The following statement contains a magic number: connection.EnqueueResponse(2' 8' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestBoardCapability,The following statement contains a magic number: connection.EnqueueResponse(2' 8' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestBoardCapability,The following statement contains a magic number: connection.EnqueueResponse(0' 127' 1' 127' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestBoardCapability,The following statement contains a magic number: connection.EnqueueResponse(0' 127' 1' 127' 0x7F);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestBoardCapability,The following statement contains a magic number: Assert.AreEqual(2' capability.Pins.Length);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestBoardCapability,The following statement contains a magic number: Assert.AreEqual(8' capability.Pins[0].AnalogResolution);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(7' mapping.PinMappings.Length);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(5' mapping.PinMappings[0].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(6' mapping.PinMappings[1].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(7' mapping.PinMappings[2].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(7' mapping.PinMappings[2].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(2' mapping.PinMappings[2].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(2' mapping.PinMappings[2].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(8' mapping.PinMappings[3].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(8' mapping.PinMappings[3].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(3' mapping.PinMappings[3].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(3' mapping.PinMappings[3].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(9' mapping.PinMappings[4].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(9' mapping.PinMappings[4].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(4' mapping.PinMappings[4].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(4' mapping.PinMappings[4].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(10' mapping.PinMappings[5].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(10' mapping.PinMappings[5].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(5' mapping.PinMappings[5].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(5' mapping.PinMappings[5].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(23' mapping.PinMappings[6].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(23' mapping.PinMappings[6].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(15' mapping.PinMappings[6].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(15' mapping.PinMappings[6].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(6' mapping.PinMappings.Length);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(2' mapping.PinMappings[2].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(2' mapping.PinMappings[2].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(2' mapping.PinMappings[2].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(2' mapping.PinMappings[2].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(3' mapping.PinMappings[3].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(3' mapping.PinMappings[3].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(3' mapping.PinMappings[3].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(3' mapping.PinMappings[3].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(4' mapping.PinMappings[4].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(4' mapping.PinMappings[4].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(4' mapping.PinMappings[4].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(4' mapping.PinMappings[4].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(5' mapping.PinMappings[5].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(5' mapping.PinMappings[5].PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(5' mapping.PinMappings[5].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetBoardAnalogMappingAsync,The following statement contains a magic number: Assert.AreEqual(5' mapping.PinMappings[5].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,RequestBoardAnalogMapping,The following statement contains a magic number: Assert.AreEqual(15' mapping.PinMappings[0].Channel);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetPinState_PinNumber_Argument_Is128,The following statement contains a magic number: PinState state = session.GetPinState(128);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetPinState_PinNumber_Argument_Is0,The following statement contains a magic number: Assert.AreEqual(1023U' state.Value);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetPinState_PinNumber_Argument_Is127_Returned_Pin0,The following statement contains a magic number: PinState state = session.GetPinState(127);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetPinState_PinNumber_Argument_Is127_Returned_Pin0,The following statement contains a magic number: Assert.AreEqual(1023U' state.Value);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetPinState_PinNumber_Argument_Is127,The following statement contains a magic number: PinState state = session.GetPinState(127);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetPinState_PinNumber_Argument_Is127,The following statement contains a magic number: Assert.AreEqual(127' state.PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetPinState_PinNumber_Argument_Is127,The following statement contains a magic number: Assert.AreEqual(256U' state.Value);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetPinStateAsync,The following statement contains a magic number: PinState state = session.GetPinStateAsync(5).Result;
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,GetPinStateAsync,The following statement contains a magic number: Assert.AreEqual(5' state.PinNumber);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,SetDigitalPinMode_PinNumber_Is128,The following statement contains a magic number: session.SetDigitalPinMode(128' PinMode.DigitalInput);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,SetDigitalPinMode_SetPin127ToAnalog,The following statement contains a magic number: session.SetDigitalPinMode(127' PinMode.AnalogInput);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,SetDigitalPin_PinNumber_Argument_Is128,The following statement contains a magic number: session.SetDigitalPin(128' 0);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,SetDigitalPin_Level_Is0_PinNumber_Argument_Is16,The following statement contains a magic number: session.SetDigitalPin(16' 0);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,SetDigitalPin_Level_PinNumber_Argument_Is15,The following statement contains a magic number: session.SetDigitalPin(15' 0);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,SetDigitalPort_Pins_Argument_Is256,The following statement contains a magic number: session.SetDigitalPort(0' 256);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,SetDigitalPort_PortNumber_Is15_Pins_Is255,The following statement contains a magic number: session.SetDigitalPort(15' 255);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,SetDigitalPort_PortNumber_Is15_Pins_Is255,The following statement contains a magic number: session.SetDigitalPort(15' 255);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,SetDigitalReportMode_PortNumber_Is16,The following statement contains a magic number: session.SetDigitalReportMode(16' false);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,SetAnalogReportMode_Channel_Is16,The following statement contains a magic number: session.SetAnalogReportMode(16' false);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,SetAnalogReportMode_Channel_Is15_Disable,The following statement contains a magic number: session.SetAnalogReportMode(15' false);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,AnalogStateReceived_MaxValues,The following statement contains a magic number: session.AnalogStateReceived += (o' e) =>              {                  Assert.AreEqual(15' e.Value.Channel);                  Assert.AreEqual(0x3FFF' e.Value.Level);                  eventHits++;              };
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,DigitalStateReceived_MaxValues,The following statement contains a magic number: session.DigitalStateReceived += (o' e) =>              {                  Assert.AreEqual(15' e.Value.Port);                  Assert.AreEqual(255' e.Value.Pins);                  eventHits++;              };
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,DigitalStateReceived_MaxValues,The following statement contains a magic number: session.DigitalStateReceived += (o' e) =>              {                  Assert.AreEqual(15' e.Value.Port);                  Assert.AreEqual(255' e.Value.Pins);                  eventHits++;              };
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,DigitalStateReceived_MaxValues,The following statement contains a magic number: session.SetDigitalReportMode(15' true);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,TimedoutResponse,The following statement contains a magic number: var session = CreateFirmataSession(connection' 550);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,MixedOrderResponses,The following statement contains a magic number: var session = CreateFirmataSession(connection' 3);
Magic Number,Solid.Arduino.Test,IFirmataProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IFirmataProtocolTester.cs,MixedOrderResponses,The following statement contains a magic number: Assert.AreEqual(3' f.MinorVersion);
Magic Number,Solid.Arduino.Test,IServoProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IServoProtocolTester.cs,ConfigureServo_PinNumber_Is128,The following statement contains a magic number: session.ConfigureServo(128' 0' 0);
Magic Number,Solid.Arduino.Test,IServoProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IServoProtocolTester.cs,ConfigureServo_MaxPulse_Is0x4000,The following statement contains a magic number: session.ConfigureServo(15' 0' 0x4000);
Magic Number,Solid.Arduino.Test,IServoProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IServoProtocolTester.cs,ConfigureServo_MaxPulse_IsNegative,The following statement contains a magic number: session.ConfigureServo(15' 0' -1);
Magic Number,Solid.Arduino.Test,IServoProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IServoProtocolTester.cs,ConfigureServo_MinPulse_EQ_MaxPulse,The following statement contains a magic number: session.ConfigureServo(1' 257' 257);
Magic Number,Solid.Arduino.Test,IServoProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IServoProtocolTester.cs,ConfigureServo_MinPulse_EQ_MaxPulse,The following statement contains a magic number: session.ConfigureServo(1' 257' 257);
Magic Number,Solid.Arduino.Test,IServoProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IServoProtocolTester.cs,ConfigureServo,The following statement contains a magic number: session.ConfigureServo(5' 256' 257);
Magic Number,Solid.Arduino.Test,IServoProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IServoProtocolTester.cs,ConfigureServo,The following statement contains a magic number: session.ConfigureServo(5' 256' 257);
Magic Number,Solid.Arduino.Test,IServoProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IServoProtocolTester.cs,ConfigureServo,The following statement contains a magic number: session.ConfigureServo(5' 256' 257);
Magic Number,Solid.Arduino.Test,IStringProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IStringProtocolTester.cs,ReceivedStringBufferOverflow,The following statement contains a magic number: var t = Task.Run(() =>                  {                      string data = session.Read(1000);                  }              );
Magic Number,Solid.Arduino.Test,IStringProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IStringProtocolTester.cs,ReceivedStringBufferOverflow,The following statement contains a magic number: connection.MockReceiveDelayed(new string('*'' 1000));
Magic Number,Solid.Arduino.Test,IStringProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IStringProtocolTester.cs,RequestBufferOverflow,The following statement contains a magic number: var tasks = new List<Task<string>>(100);
Magic Number,Solid.Arduino.Test,IStringProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IStringProtocolTester.cs,RequestBufferOverflow,The following statement contains a magic number: x < 100
Magic Number,Solid.Arduino.Test,IStringProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IStringProtocolTester.cs,RequestBufferOverflow,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,Solid.Arduino.Test,IStringProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IStringProtocolTester.cs,RequestBufferOverflow,The following statement contains a magic number: connection.MockReceiveDelayed(new string('*'' 100));
Magic Number,Solid.Arduino.Test,IStringProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IStringProtocolTester.cs,Read_StringBlock,The following statement contains a magic number: var t = Task.Run(() =>                  {                      string data = session.Read(6);                      Assert.AreEqual("Hello!"' data);                  }              );
Magic Number,Solid.Arduino.Test,IStringProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IStringProtocolTester.cs,Read_WithTimeout,The following statement contains a magic number: var session = CreateSerialSession(connection' 550);
Magic Number,Solid.Arduino.Test,IStringProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IStringProtocolTester.cs,Read_WithTimeout,The following statement contains a magic number: var t = Task.Run(() =>                  {                      string data = session.Read(6);                      Assert.AreEqual("Hello!"' data);                  }              );
Magic Number,Solid.Arduino.Test,IStringProtocolTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\IStringProtocolTester.cs,ReadAsync_4Characters,The following statement contains a magic number: var t = session.ReadAsync(4);
Magic Number,Solid.Arduino.Test,MockSerialConnection,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\MockSerialConnection.cs,HandleStringResponse,The following statement contains a magic number: System.Threading.Thread.Sleep(3);
Magic Number,Solid.Arduino.Test,MockSerialConnection,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\MockSerialConnection.cs,MockReceiveDelayed,The following statement contains a magic number: System.Threading.Thread.Sleep(20);
Magic Number,Solid.Arduino.Test,MockSerialConnection,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\MockSerialConnection.cs,ReceiveData,The following statement contains a magic number: response[x] == 26
Magic Number,Solid.Arduino.Test,ArduinoSessionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\ArduinoSessionTester.cs,TimeOut_GetAndSet,The following statement contains a magic number: session.TimeOut = 7;
Magic Number,Solid.Arduino.Test,ArduinoSessionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\ArduinoSessionTester.cs,TimeOut_GetAndSet,The following statement contains a magic number: Assert.AreEqual(7' session.TimeOut);
Magic Number,Solid.Arduino.Test,ArduinoSessionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\ArduinoSessionTester.cs,TimeOut_SetNegative,The following statement contains a magic number: session.TimeOut = -2;
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is0,The following statement contains a magic number: Assert.AreEqual(false' state.IsSet(2));
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is0,The following statement contains a magic number: Assert.AreEqual(false' state.IsSet(3));
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is0,The following statement contains a magic number: Assert.AreEqual(false' state.IsSet(4));
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is0,The following statement contains a magic number: Assert.AreEqual(false' state.IsSet(5));
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is0,The following statement contains a magic number: Assert.AreEqual(false' state.IsSet(6));
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is0,The following statement contains a magic number: Assert.AreEqual(false' state.IsSet(7));
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is255,The following statement contains a magic number: var state = new DigitalPortState() { Pins = 255 };
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is255,The following statement contains a magic number: Assert.AreEqual(true' state.IsSet(2));
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is255,The following statement contains a magic number: Assert.AreEqual(true' state.IsSet(3));
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is255,The following statement contains a magic number: Assert.AreEqual(true' state.IsSet(4));
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is255,The following statement contains a magic number: Assert.AreEqual(true' state.IsSet(5));
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is255,The following statement contains a magic number: Assert.AreEqual(true' state.IsSet(6));
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pins_Is255,The following statement contains a magic number: Assert.AreEqual(true' state.IsSet(7));
Magic Number,Solid.Arduino.Test,DigitalPortStateTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\DigitalPortStateTester.cs,IsHigh_Pin_Argument_Is8,The following statement contains a magic number: state.IsSet(8);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,ToBinaryCodedDecimal_AllDigits,The following statement contains a magic number: Assert.AreEqual(5' getal.Length);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,ToBinaryCodedDecimal_AllDigits,The following statement contains a magic number: Assert.AreEqual(0x45' getal[2]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,ToBinaryCodedDecimal_AllDigits,The following statement contains a magic number: Assert.AreEqual(0x67' getal[3]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,ToBinaryCodedDecimal_AllDigits,The following statement contains a magic number: Assert.AreEqual(0x89' getal[4]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,ToBinaryCodedDecimal_AllDigits_LittleEndian,The following statement contains a magic number: Assert.AreEqual(5' getal.Length);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,ToBinaryCodedDecimal_AllDigits_LittleEndian,The following statement contains a magic number: Assert.AreEqual(0x54' getal[2]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,ToBinaryCodedDecimal_AllDigits_LittleEndian,The following statement contains a magic number: Assert.AreEqual(0x32' getal[3]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,ToBinaryCodedDecimal_AllDigits_LittleEndian,The following statement contains a magic number: Assert.AreEqual(0x10' getal[4]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,To14BitIso_SingleCharacter,The following statement contains a magic number: Assert.AreEqual(2' getal.Length);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,To14BitIso_SingleCharacter,The following statement contains a magic number: Assert.AreEqual(65' getal[0]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,To14BitIso_3Characters,The following statement contains a magic number: Assert.AreEqual(6' getal.Length);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,To14BitIso_3Characters,The following statement contains a magic number: Assert.AreEqual(65' getal[0]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,To14BitIso_3Characters,The following statement contains a magic number: Assert.AreEqual(66' getal[2]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,To14BitIso_3Characters,The following statement contains a magic number: Assert.AreEqual(66' getal[2]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,To14BitIso_3Characters,The following statement contains a magic number: Assert.AreEqual(0' getal[3]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,To14BitIso_3Characters,The following statement contains a magic number: Assert.AreEqual(67' getal[4]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,To14BitIso_3Characters,The following statement contains a magic number: Assert.AreEqual(67' getal[4]);
Magic Number,Solid.Arduino.Test,StringExtensionsTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\StringExtensionsTester.cs,To14BitIso_3Characters,The following statement contains a magic number: Assert.AreEqual(0' getal[5]);
Magic Number,Solid.Arduino.Test,SerialConnectionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\SerialConnectionTester.cs,SerialConnection_Constructor_WithoutParameters,The following statement contains a magic number: Assert.AreEqual(100' connection.ReadTimeout);
Magic Number,Solid.Arduino.Test,SerialConnectionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\SerialConnectionTester.cs,SerialConnection_Constructor_WithoutParameters,The following statement contains a magic number: Assert.AreEqual(100' connection.WriteTimeout);
Magic Number,Solid.Arduino.Test,SerialConnectionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\SerialConnectionTester.cs,SerialConnection_Constructor_WithoutParameters,The following statement contains a magic number: Assert.AreEqual(115200' connection.BaudRate);
Magic Number,Solid.Arduino.Test,SerialConnectionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\SerialConnectionTester.cs,SerialConnection_Constructor_WithParameters,The following statement contains a magic number: Assert.AreEqual(100' connection.ReadTimeout);
Magic Number,Solid.Arduino.Test,SerialConnectionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\SerialConnectionTester.cs,SerialConnection_Constructor_WithParameters,The following statement contains a magic number: Assert.AreEqual(100' connection.WriteTimeout);
Magic Number,Solid.Arduino.Test,SerialConnectionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\SerialConnectionTester.cs,SerialConnection_Constructor_WithParameters,The following statement contains a magic number: Assert.AreEqual(115200' connection.BaudRate);
Magic Number,Solid.Arduino.Test,EnhancedSerialConnectionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\EnhancedSerialConnectionTester.cs,EnhancedSerialConnection_Constructor_WithoutParameters,The following statement contains a magic number: Assert.AreEqual(100' connection.ReadTimeout);
Magic Number,Solid.Arduino.Test,EnhancedSerialConnectionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\EnhancedSerialConnectionTester.cs,EnhancedSerialConnection_Constructor_WithoutParameters,The following statement contains a magic number: Assert.AreEqual(100' connection.WriteTimeout);
Magic Number,Solid.Arduino.Test,EnhancedSerialConnectionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\EnhancedSerialConnectionTester.cs,EnhancedSerialConnection_Constructor_WithoutParameters,The following statement contains a magic number: Assert.AreEqual(115200' connection.BaudRate);
Magic Number,Solid.Arduino.Test,EnhancedSerialConnectionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\EnhancedSerialConnectionTester.cs,EnhancedSerialConnection_Constructor_WithParameters,The following statement contains a magic number: Assert.AreEqual(100' connection.ReadTimeout);
Magic Number,Solid.Arduino.Test,EnhancedSerialConnectionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\EnhancedSerialConnectionTester.cs,EnhancedSerialConnection_Constructor_WithParameters,The following statement contains a magic number: Assert.AreEqual(100' connection.WriteTimeout);
Magic Number,Solid.Arduino.Test,EnhancedSerialConnectionTester,D:\research\architectureSmells\repos1\SolidSoils_Arduino\Solid.Arduino.Test\EnhancedSerialConnectionTester.cs,EnhancedSerialConnection_Constructor_WithParameters,The following statement contains a magic number: Assert.AreEqual(115200' connection.BaudRate);
