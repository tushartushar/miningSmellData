Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MefContrib.Web.Mvc,CompositionBootstrapper,C:\repos\MefContrib_MefContrib\src\MefContrib.Web.Mvc\CompositionBootstrapper.cs,Bootstrap,The length of the statement  "            ModelValidatorProviders.Providers.Remove(ModelValidatorProviders.Providers.OfType<DataAnnotationsModelValidatorProvider>().Single()); " is 133.
Long Statement,MefContrib.Web.Mvc,CompositionControllerFactory,C:\repos\MefContrib_MefContrib\src\MefContrib.Web.Mvc\CompositionControllerFactory.cs,CreateAmbiguousControllerException,The length of the statement  "                                        "The request for '{0}' has found the following matching controllers:{2}\r\n\r\nMultiple types were found that match the controller named '{0}'. This can happen if the route that services this request does not specify namespaces to search for a controller that matches the request. If this is the case' register this route by calling an overload of the 'MapRoute' method that takes a 'namespaces' parameter."' " is 410.
Long Statement,MefContrib.Web.Mvc,CompositionControllerFactory,C:\repos\MefContrib_MefContrib\src\MefContrib.Web.Mvc\CompositionControllerFactory.cs,CreateAmbiguousControllerException,The length of the statement  "                                        "The request for '{0}' has found the following matching controllers:{2}\r\n\r\nMultiple types were found that match the controller named '{0}'."' " is 147.
Magic Number,MefContrib.Web.Mvc,CompositionControllerFactory,C:\repos\MefContrib_MefContrib\src\MefContrib.Web.Mvc\CompositionControllerFactory.cs,GetControllerType,The following statement contains a magic number: if (controllerType == null && this.compositionContainerProvider != null &&                  this.compositionContainerProvider.Container != null)              {                  var controllerTypes =                      this.compositionContainerProvider.Container.GetExports<IController>()                          .Where(e => e.Value.GetType().Name.ToLowerInvariant() == controllerName.ToLowerInvariant() + "controller")                          .Select(e => e.Value.GetType()).ToList();                    switch (controllerTypes.Count)                  {                      case 0:                          controllerType = null;                          break;                      case 1:                          controllerType = controllerTypes.First();                          break;                      case 2:                          throw CreateAmbiguousControllerException(requestContext.RouteData.Route' controllerName' controllerTypes);                  }              }
Missing Default,MefContrib.Web.Mvc,CompositionControllerFactory,C:\repos\MefContrib_MefContrib\src\MefContrib.Web.Mvc\CompositionControllerFactory.cs,GetControllerType,The following switch statement is missing a default case: switch (controllerTypes.Count)                  {                      case 0:                          controllerType = null;                          break;                      case 1:                          controllerType = controllerTypes.First();                          break;                      case 2:                          throw CreateAmbiguousControllerException(requestContext.RouteData.Route' controllerName' controllerTypes);                  }
