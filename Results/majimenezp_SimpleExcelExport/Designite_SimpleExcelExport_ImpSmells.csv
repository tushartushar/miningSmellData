Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SimpleExcelExport,ExcelFileCreator,D:\research\architectureSmells\repos\majimenezp_SimpleExcelExport\SimpleExcelExport\ExcelFileCreator.cs,CreateCellWithValue,Cyclomatic complexity of the method is 13
Magic Number,SimpleExcelExport,ExcelFileCreator,D:\research\architectureSmells\repos\majimenezp_SimpleExcelExport\SimpleExcelExport\ExcelFileCreator.cs,CreateHeader,The following statement contains a magic number: currentSheet.SetColumnWidth(columnNumber' (int)((column.ColumnName.Length * 1.5) * 256));
Magic Number,SimpleExcelExport,ExcelFileCreator,D:\research\architectureSmells\repos\majimenezp_SimpleExcelExport\SimpleExcelExport\ExcelFileCreator.cs,CreateHeader,The following statement contains a magic number: currentSheet.SetColumnWidth(columnNumber' (int)((column.ColumnName.Length * 1.5) * 256));
Magic Number,SimpleExcelExport,ExportToExcel,D:\research\architectureSmells\repos\majimenezp_SimpleExcelExport\SimpleExcelExport\ExportToExcel.cs,ProcessColorByRGB,The following statement contains a magic number: int[] vals = new int[3];
Magic Number,SimpleExcelExport,ExportToExcel,D:\research\architectureSmells\repos\majimenezp_SimpleExcelExport\SimpleExcelExport\ExportToExcel.cs,ProcessColorByRGB,The following statement contains a magic number: resultColor = System.Drawing.Color.FromArgb(vals[0]' vals[1]' vals[2]);
Missing Default,SimpleExcelExport,ExcelFileCreator,D:\research\architectureSmells\repos\majimenezp_SimpleExcelExport\SimpleExcelExport\ExcelFileCreator.cs,GetColumnCellType,The following switch statement is missing a default case: switch (type.Name.ToLowerInvariant())             {                 case "string":                     cellType=NPOI.SS.UserModel.CellType.String;                     break;                 case "datetime":                     cellType = NPOI.SS.UserModel.CellType.Numeric;                     break;                 case "int":                 case "int32":                 case "int64":                 case "decimal":                 case "long":                 case "double":                     cellType = NPOI.SS.UserModel.CellType.Numeric;                     break;                 case "boolean":                 case "bool":                     cellType = NPOI.SS.UserModel.CellType.Boolean;                     break;             }
