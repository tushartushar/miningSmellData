Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Aylien.TextApi,Combined,C:\repos\AYLIEN_aylien_textapi_csharp\AylienTextApi\TextApiClient\Endpoints\Combined.cs,populateData,Cyclomatic complexity of the method is 32
Long Parameter List,Aylien.TextApi,Connection,C:\repos\AYLIEN_aylien_textapi_csharp\AylienTextApi\TextApiClient\Connection.cs,compileRequestParams,The method has 5 parameters.
Long Parameter List,Aylien.TextApi,Summarize,C:\repos\AYLIEN_aylien_textapi_csharp\AylienTextApi\TextApiClient\Endpoints\Summarize.cs,call,The method has 6 parameters.
Long Parameter List,Aylien.TextApi,Client,C:\repos\AYLIEN_aylien_textapi_csharp\AylienTextApi\TextApiClient\TextApiClient.cs,Summarize,The method has 6 parameters.
Long Statement,Aylien.TextApi,Connection,C:\repos\AYLIEN_aylien_textapi_csharp\AylienTextApi\TextApiClient\Connection.cs,compileRequestParams,The length of the statement  "		var postData = Parameters.Aggregate (""' (memo' pair) => "&" + pair.First ().Key + "=" + Uri.EscapeDataString (pair.First ().Value) + memo).Substring (1); " is 154.
Long Statement,Aylien.TextApi,Connection,C:\repos\AYLIEN_aylien_textapi_csharp\AylienTextApi\TextApiClient\Connection.cs,compileRequestParams,The length of the statement  "		var query = Parameters.Aggregate (""' (memo' pair) => "&" + pair.First ().Key + "=" + Uri.EscapeDataString (pair.First ().Value) + memo); " is 137.
Magic Number,Aylien.TextApi,Connection,C:\repos\AYLIEN_aylien_textapi_csharp\AylienTextApi\TextApiClient\Connection.cs,compileRequestParams,The following statement contains a magic number: if (configuration.Method == "POST") {  	request = (HttpWebRequest)WebRequest.Create (RequestUri);  	request.Method = configuration.Method;  	request.Headers.Add (Configuration.Headers ["AppKey"]' configuration.AppKey);  	request.Headers.Add (Configuration.Headers ["AppId"]' configuration.AppId);  	request.UserAgent = configuration.UserAgent;  	var postData = Parameters.Aggregate (""' (memo' pair) => "&" + pair.First ().Key + "=" + Uri.EscapeDataString (pair.First ().Value) + memo).Substring (1);  	var data = Encoding.UTF8.GetBytes (postData);  	request.ContentType = "application/x-www-form-urlencoded";  	request.ContentLength = data.Length;  	using (var stream = request.GetRequestStream ()) {  		stream.Write (data' 0' data.Length);  		stream.Close ();  	}  }  else if (configuration.Method == "GET") {  	var query = Parameters.Aggregate (""' (memo' pair) => "&" + pair.First ().Key + "=" + Uri.EscapeDataString (pair.First ().Value) + memo);  	if (query != null && query.Length > 2)  		query = query.Substring (1);  	if (Parameters.Count > 0)  		request = (HttpWebRequest)WebRequest.Create (RequestUri + "?" + query);  	else  		request = (HttpWebRequest)WebRequest.Create (RequestUri);  	request.Method = configuration.Method;  	request.Headers.Add (Configuration.Headers ["AppKey"]' configuration.AppKey);  	request.Headers.Add (Configuration.Headers ["AppId"]' configuration.AppId);  	request.UserAgent = configuration.UserAgent;  }  else {  	throw new ArgumentException ("Method should be GET or POST.");  }  
Magic Number,Aylien.TextApi,Connection,C:\repos\AYLIEN_aylien_textapi_csharp\AylienTextApi\TextApiClient\Connection.cs,compileRequestParams,The following statement contains a magic number: if (configuration.Method == "GET") {  	var query = Parameters.Aggregate (""' (memo' pair) => "&" + pair.First ().Key + "=" + Uri.EscapeDataString (pair.First ().Value) + memo);  	if (query != null && query.Length > 2)  		query = query.Substring (1);  	if (Parameters.Count > 0)  		request = (HttpWebRequest)WebRequest.Create (RequestUri + "?" + query);  	else  		request = (HttpWebRequest)WebRequest.Create (RequestUri);  	request.Method = configuration.Method;  	request.Headers.Add (Configuration.Headers ["AppKey"]' configuration.AppKey);  	request.Headers.Add (Configuration.Headers ["AppId"]' configuration.AppId);  	request.UserAgent = configuration.UserAgent;  }  else {  	throw new ArgumentException ("Method should be GET or POST.");  }  
Magic Number,Aylien.TextApi,Connection,C:\repos\AYLIEN_aylien_textapi_csharp\AylienTextApi\TextApiClient\Connection.cs,compileRequestParams,The following statement contains a magic number: if (query != null && query.Length > 2)  	query = query.Substring (1);  
Missing Default,Aylien.TextApi,Combined,C:\repos\AYLIEN_aylien_textapi_csharp\AylienTextApi\TextApiClient\Endpoints\Combined.cs,populateData,The following switch statement is missing a default case: switch (item.Endpoint) {  case "classify":  	Classify = JsonConvert.DeserializeObject<Classify> (item.Result.ToString ());  	Classify.Text = Text;  	break;  case "concepts":  	Concepts = JsonConvert.DeserializeObject<Concepts> (item.Result.ToString ());  	Concepts.Text = Text;  	break;  case "entities":  	Entities = JsonConvert.DeserializeObject<Entities> (item.Result.ToString ());  	Entities.Text = Text;  	break;  case "extract":  	Extract = JsonConvert.DeserializeObject<Extract> (item.Result.ToString ());  	break;  case "hashtags":  	Hashtags = JsonConvert.DeserializeObject<Hashtags> (item.Result.ToString ());  	Hashtags.Text = Text;  	break;  case "language":  	Language = JsonConvert.DeserializeObject<Language> (item.Result.ToString ());  	Language.Text = Text;  	break;  case "sentiment":  	Sentiment = JsonConvert.DeserializeObject<Sentiment> (item.Result.ToString ());  	Sentiment.Text = Text;  	break;  case "summarize":  	Summarize = JsonConvert.DeserializeObject<Summarize> (item.Result.ToString ());  	Summarize.Text = Text;  	break;  }  
