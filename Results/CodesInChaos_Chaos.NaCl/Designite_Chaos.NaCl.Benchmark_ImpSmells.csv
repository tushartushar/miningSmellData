Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The length of the statement  "	Console.WriteLine ("{0} us / {1} per second / {2} cycles"' Math.Round (average90 * 1E6' 2)' Math.Round (1 / average90)' Math.Round (average90 * Cpu.CpuFreq * 1E6)); " is 164.
Long Statement,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The length of the statement  "	Console.WriteLine ("Average {0} us' Median {1} us' min {2}' max {3}"' Math.Round (average * 1E6' 2)' Math.Round (median * 1E6' 2)' Math.Round (min * 1E6' 2)' Math.Round (max * 1E6' 2)); " is 185.
Long Statement,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The length of the statement  "	Console.WriteLine ("80% within ±{0}% average {1} | 50% within ±{2}% average {3}"' Math.Round (relativeDelta90 * 100' 2)' Math.Round (average90 * 1E6' 2)' Math.Round (relativeDelta75 * 100' 2)' Math.Round (average75 * 1E6' 2)); " is 226.
Long Statement,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Main,The length of the statement  "		Benchmark ("XSalsa20Poly1305 Encrypt"' () => XSalsa20Poly1305.Encrypt (new ArraySegment<byte> (ciphertext)' new ArraySegment<byte> (message)' new ArraySegment<byte> (key)' new ArraySegment<byte> (nonce))' n' size); " is 214.
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("{0} us / {1} per second / {2} cycles"' Math.Round (average90 * 1E6' 2)' Math.Round (1 / average90)' Math.Round (average90 * Cpu.CpuFreq * 1E6));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("{0} us / {1} per second / {2} cycles"' Math.Round (average90 * 1E6' 2)' Math.Round (1 / average90)' Math.Round (average90 * Cpu.CpuFreq * 1E6));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("{0} us / {1} per second / {2} cycles"' Math.Round (average90 * 1E6' 2)' Math.Round (1 / average90)' Math.Round (average90 * Cpu.CpuFreq * 1E6));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("Average {0} us' Median {1} us' min {2}' max {3}"' Math.Round (average * 1E6' 2)' Math.Round (median * 1E6' 2)' Math.Round (min * 1E6' 2)' Math.Round (max * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("Average {0} us' Median {1} us' min {2}' max {3}"' Math.Round (average * 1E6' 2)' Math.Round (median * 1E6' 2)' Math.Round (min * 1E6' 2)' Math.Round (max * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("Average {0} us' Median {1} us' min {2}' max {3}"' Math.Round (average * 1E6' 2)' Math.Round (median * 1E6' 2)' Math.Round (min * 1E6' 2)' Math.Round (max * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("Average {0} us' Median {1} us' min {2}' max {3}"' Math.Round (average * 1E6' 2)' Math.Round (median * 1E6' 2)' Math.Round (min * 1E6' 2)' Math.Round (max * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("Average {0} us' Median {1} us' min {2}' max {3}"' Math.Round (average * 1E6' 2)' Math.Round (median * 1E6' 2)' Math.Round (min * 1E6' 2)' Math.Round (max * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("Average {0} us' Median {1} us' min {2}' max {3}"' Math.Round (average * 1E6' 2)' Math.Round (median * 1E6' 2)' Math.Round (min * 1E6' 2)' Math.Round (max * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("Average {0} us' Median {1} us' min {2}' max {3}"' Math.Round (average * 1E6' 2)' Math.Round (median * 1E6' 2)' Math.Round (min * 1E6' 2)' Math.Round (max * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("Average {0} us' Median {1} us' min {2}' max {3}"' Math.Round (average * 1E6' 2)' Math.Round (median * 1E6' 2)' Math.Round (min * 1E6' 2)' Math.Round (max * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("80% within ±{0}% average {1} | 50% within ±{2}% average {3}"' Math.Round (relativeDelta90 * 100' 2)' Math.Round (average90 * 1E6' 2)' Math.Round (relativeDelta75 * 100' 2)' Math.Round (average75 * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("80% within ±{0}% average {1} | 50% within ±{2}% average {3}"' Math.Round (relativeDelta90 * 100' 2)' Math.Round (average90 * 1E6' 2)' Math.Round (relativeDelta75 * 100' 2)' Math.Round (average75 * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("80% within ±{0}% average {1} | 50% within ±{2}% average {3}"' Math.Round (relativeDelta90 * 100' 2)' Math.Round (average90 * 1E6' 2)' Math.Round (relativeDelta75 * 100' 2)' Math.Round (average75 * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("80% within ±{0}% average {1} | 50% within ±{2}% average {3}"' Math.Round (relativeDelta90 * 100' 2)' Math.Round (average90 * 1E6' 2)' Math.Round (relativeDelta75 * 100' 2)' Math.Round (average75 * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("80% within ±{0}% average {1} | 50% within ±{2}% average {3}"' Math.Round (relativeDelta90 * 100' 2)' Math.Round (average90 * 1E6' 2)' Math.Round (relativeDelta75 * 100' 2)' Math.Round (average75 * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("80% within ±{0}% average {1} | 50% within ±{2}% average {3}"' Math.Round (relativeDelta90 * 100' 2)' Math.Round (average90 * 1E6' 2)' Math.Round (relativeDelta75 * 100' 2)' Math.Round (average75 * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("80% within ±{0}% average {1} | 50% within ±{2}% average {3}"' Math.Round (relativeDelta90 * 100' 2)' Math.Round (average90 * 1E6' 2)' Math.Round (relativeDelta75 * 100' 2)' Math.Round (average75 * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("80% within ±{0}% average {1} | 50% within ±{2}% average {3}"' Math.Round (relativeDelta90 * 100' 2)' Math.Round (average90 * 1E6' 2)' Math.Round (relativeDelta75 * 100' 2)' Math.Round (average75 * 1E6' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: if (bytes > 0) {  	double bytesPerSecond = bytes / average90;  	double cyclesPerByte = (Cpu.CpuFreq * 1E6) / bytesPerSecond;  	Console.WriteLine ("{0} MB/s / {1} cycles/byte"' Math.Round (bytesPerSecond / 1E6' 2)' Math.Round (cyclesPerByte' 2));  }  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: if (bytes > 0) {  	double bytesPerSecond = bytes / average90;  	double cyclesPerByte = (Cpu.CpuFreq * 1E6) / bytesPerSecond;  	Console.WriteLine ("{0} MB/s / {1} cycles/byte"' Math.Round (bytesPerSecond / 1E6' 2)' Math.Round (cyclesPerByte' 2));  }  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: if (bytes > 0) {  	double bytesPerSecond = bytes / average90;  	double cyclesPerByte = (Cpu.CpuFreq * 1E6) / bytesPerSecond;  	Console.WriteLine ("{0} MB/s / {1} cycles/byte"' Math.Round (bytesPerSecond / 1E6' 2)' Math.Round (cyclesPerByte' 2));  }  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: if (bytes > 0) {  	double bytesPerSecond = bytes / average90;  	double cyclesPerByte = (Cpu.CpuFreq * 1E6) / bytesPerSecond;  	Console.WriteLine ("{0} MB/s / {1} cycles/byte"' Math.Round (bytesPerSecond / 1E6' 2)' Math.Round (cyclesPerByte' 2));  }  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("{0} MB/s / {1} cycles/byte"' Math.Round (bytesPerSecond / 1E6' 2)' Math.Round (cyclesPerByte' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("{0} MB/s / {1} cycles/byte"' Math.Round (bytesPerSecond / 1E6' 2)' Math.Round (cyclesPerByte' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Benchmark,The following statement contains a magic number: Console.WriteLine ("{0} MB/s / {1} cycles/byte"' Math.Round (bytesPerSecond / 1E6' 2)' Math.Round (cyclesPerByte' 2));  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Main,The following statement contains a magic number: Console.WriteLine ("Architecture: {0} bit"' IntPtr.Size * 8);  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Main,The following statement contains a magic number: foreach (var size in new[] {  	1'  	128 * 1024  }) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.WriteLine ("=== Symmetric ({0}) ==="' SizeToString (size));  	var message = new byte[size];  	var ciphertext = new byte[message.Length + 16];  	var key = new byte[32];  	var nonce = new byte[24];  	Benchmark ("HSalsa20Core"' () => HSalsa20Core (size)' n' size);  	Benchmark ("XSalsa20Poly1305 Encrypt"' () => XSalsa20Poly1305.Encrypt (new ArraySegment<byte> (ciphertext)' new ArraySegment<byte> (message)' new ArraySegment<byte> (key)' new ArraySegment<byte> (nonce))' n' size);  	Benchmark ("SHA512Managed"' () => new SHA512Managed ().ComputeHash (message)' n' size);  	Benchmark ("SHA512Cng"' () => new SHA512Cng ().ComputeHash (message)' n' size);  	Benchmark ("SHA512CSP"' () => new SHA512CryptoServiceProvider ().ComputeHash (message)' n' size);  	Benchmark ("SHA512Chaos"' () => Sha512.Hash (message)' n' size);  }  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Main,The following statement contains a magic number: foreach (var size in new[] {  	1'  	128 * 1024  }) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.WriteLine ("=== Symmetric ({0}) ==="' SizeToString (size));  	var message = new byte[size];  	var ciphertext = new byte[message.Length + 16];  	var key = new byte[32];  	var nonce = new byte[24];  	Benchmark ("HSalsa20Core"' () => HSalsa20Core (size)' n' size);  	Benchmark ("XSalsa20Poly1305 Encrypt"' () => XSalsa20Poly1305.Encrypt (new ArraySegment<byte> (ciphertext)' new ArraySegment<byte> (message)' new ArraySegment<byte> (key)' new ArraySegment<byte> (nonce))' n' size);  	Benchmark ("SHA512Managed"' () => new SHA512Managed ().ComputeHash (message)' n' size);  	Benchmark ("SHA512Cng"' () => new SHA512Cng ().ComputeHash (message)' n' size);  	Benchmark ("SHA512CSP"' () => new SHA512CryptoServiceProvider ().ComputeHash (message)' n' size);  	Benchmark ("SHA512Chaos"' () => Sha512.Hash (message)' n' size);  }  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Main,The following statement contains a magic number: foreach (var size in new[] {  	1'  	128 * 1024  }) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.WriteLine ("=== Symmetric ({0}) ==="' SizeToString (size));  	var message = new byte[size];  	var ciphertext = new byte[message.Length + 16];  	var key = new byte[32];  	var nonce = new byte[24];  	Benchmark ("HSalsa20Core"' () => HSalsa20Core (size)' n' size);  	Benchmark ("XSalsa20Poly1305 Encrypt"' () => XSalsa20Poly1305.Encrypt (new ArraySegment<byte> (ciphertext)' new ArraySegment<byte> (message)' new ArraySegment<byte> (key)' new ArraySegment<byte> (nonce))' n' size);  	Benchmark ("SHA512Managed"' () => new SHA512Managed ().ComputeHash (message)' n' size);  	Benchmark ("SHA512Cng"' () => new SHA512Cng ().ComputeHash (message)' n' size);  	Benchmark ("SHA512CSP"' () => new SHA512CryptoServiceProvider ().ComputeHash (message)' n' size);  	Benchmark ("SHA512Chaos"' () => Sha512.Hash (message)' n' size);  }  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Main,The following statement contains a magic number: foreach (var size in new[] {  	1'  	128 * 1024  }) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.WriteLine ("=== Symmetric ({0}) ==="' SizeToString (size));  	var message = new byte[size];  	var ciphertext = new byte[message.Length + 16];  	var key = new byte[32];  	var nonce = new byte[24];  	Benchmark ("HSalsa20Core"' () => HSalsa20Core (size)' n' size);  	Benchmark ("XSalsa20Poly1305 Encrypt"' () => XSalsa20Poly1305.Encrypt (new ArraySegment<byte> (ciphertext)' new ArraySegment<byte> (message)' new ArraySegment<byte> (key)' new ArraySegment<byte> (nonce))' n' size);  	Benchmark ("SHA512Managed"' () => new SHA512Managed ().ComputeHash (message)' n' size);  	Benchmark ("SHA512Cng"' () => new SHA512Cng ().ComputeHash (message)' n' size);  	Benchmark ("SHA512CSP"' () => new SHA512CryptoServiceProvider ().ComputeHash (message)' n' size);  	Benchmark ("SHA512Chaos"' () => Sha512.Hash (message)' n' size);  }  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,Main,The following statement contains a magic number: foreach (var size in new[] {  	1'  	128 * 1024  }) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.WriteLine ("=== Symmetric ({0}) ==="' SizeToString (size));  	var message = new byte[size];  	var ciphertext = new byte[message.Length + 16];  	var key = new byte[32];  	var nonce = new byte[24];  	Benchmark ("HSalsa20Core"' () => HSalsa20Core (size)' n' size);  	Benchmark ("XSalsa20Poly1305 Encrypt"' () => XSalsa20Poly1305.Encrypt (new ArraySegment<byte> (ciphertext)' new ArraySegment<byte> (message)' new ArraySegment<byte> (key)' new ArraySegment<byte> (nonce))' n' size);  	Benchmark ("SHA512Managed"' () => new SHA512Managed ().ComputeHash (message)' n' size);  	Benchmark ("SHA512Cng"' () => new SHA512Cng ().ComputeHash (message)' n' size);  	Benchmark ("SHA512CSP"' () => new SHA512CryptoServiceProvider ().ComputeHash (message)' n' size);  	Benchmark ("SHA512Chaos"' () => Sha512.Hash (message)' n' size);  }  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,SizeToString,The following statement contains a magic number: if (size > 2048)  	return String.Format ("{0} KiB"' size / 1024);  else  	return String.Format ("{0} B"' size);  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,SizeToString,The following statement contains a magic number: if (size > 2048)  	return String.Format ("{0} KiB"' size / 1024);  else  	return String.Format ("{0} B"' size);  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,SizeToString,The following statement contains a magic number: return String.Format ("{0} KiB"' size / 1024);  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,HSalsa20Core,The following statement contains a magic number: for (int i = 0; i < (size + 63) / 64; i++) {  	SalsaCore.HSalsa (out state' ref state' 20);  }  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,HSalsa20Core,The following statement contains a magic number: for (int i = 0; i < (size + 63) / 64; i++) {  	SalsaCore.HSalsa (out state' ref state' 20);  }  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,HSalsa20Core,The following statement contains a magic number: for (int i = 0; i < (size + 63) / 64; i++) {  	SalsaCore.HSalsa (out state' ref state' 20);  }  
Magic Number,Chaos.NaCl.Benchmark,BenchmarkProgram,F:\newReposMay17\CodesInChaos_Chaos.NaCl\Chaos.NaCl.Benchmark\BenchmarkProgram.cs,HSalsa20Core,The following statement contains a magic number: SalsaCore.HSalsa (out state' ref state' 20);  
