Implementation smell,Namespace,Class,File,Method,Description
Long Statement,GameOfDeath,GameCoordinator,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\GameCoordinator.cs,DisplayIntroLogo,The length of the statement  "	var introLogo = new FadeSprite (ContentLoader.Load<Material> ("MaterialGameLogo")' Rectangle.FromCenter (Vector2D.Half' new Size (0.33f' 0.24f))' 5.0f); " is 152.
Long Statement,GameOfDeath,RabbitGrid,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\RabbitGrid.cs,CalculatePositionOfMatrixRabbit,The length of the statement  "	return new Vector2D (rectInViewport.Left + x * rectInViewport.Width / width' rectInViewport.Top + y * rectInViewport.Height / height); " is 134.
Long Statement,GameOfDeath,RabbitGrid,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\RabbitGrid.cs,CheckPopulation,The length of the statement  "	new Sprite (gameOverMaterial' Rectangle.FromCenter (Vector2D.Half' gameOverMaterial.DiffuseMap.PixelSize / UserInterface.QuadraticFullscreenSize)) { " is 148.
Long Statement,GameOfDeath,Rabbit,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\Rabbit.cs,UpdateHealthBar,The length of the statement  "	RabbitHealthBar.DrawArea = Rectangle.FromCenter (Center.X' DrawArea.Top - 0.01f' HealthPercentage * DrawArea.Width * 0.5f' HealthBarHeight); " is 140.
Long Statement,GameOfDeath,GameOfLife,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\GameOfLife.cs,ShouldSurvive,The length of the statement  "	return ActiveCellShouldHaveTwoOrThreeNeighbors (isAlive' neighbours) || ResurrectDeadCellWithExactlyThreeNeighbors (isAlive' neighbours); " is 137.
Long Statement,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,AddUIBottom,The length of the statement  "	bottomBorder = new Sprite (bottomMaterial' new Rectangle (viewport.Left' viewport.Bottom - bottomHeight' viewport.Width' bottomHeight)) { " is 137.
Long Statement,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,AddUILeft,The length of the statement  "	leftBorder = new Sprite (leftMaterial' new Rectangle (viewport.Left' viewport.Top + topHeight' leftWidth' viewport.Height - (bottomHeight + topHeight))) { " is 154.
Long Statement,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,AddUIRight,The length of the statement  "	rightBorder = new Sprite (rightMaterial' new Rectangle (viewport.Right - rightWidth' viewport.Top + topHeight' rightWidth' viewport.Height - (bottomHeight + topHeight))) { " is 171.
Long Statement,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,AddScoreBoard,The length of the statement  "	bodyCountRabbit = new Sprite (ContentLoader.Load<Material> ("MaterialDeadRabbit")' new Rectangle (viewport.TopRight + DeadRabbitOffset' DeadRabbitSize)) { " is 154.
Long Statement,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,CreateIcons,The length of the statement  "		icons [index] = new Button (GetIconTheme ((ItemType)index)' Rectangle.FromCenter (0.39f + index * 0.08f' ScreenSpace.Current.Top + 0.04f' 0.07f' 0.08f)); " is 153.
Long Statement,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,HandleItemInGame,The length of the statement  "	if (position.X < ScreenSpace.Current.Viewport.Left + leftWidth || position.X > ScreenSpace.Current.Viewport.Right - rightWidth || position.Y < ScreenSpace.Current.Viewport.Top + topHeight || position.Y > ScreenSpace.Current.Viewport.Bottom - bottomHeight) " is 255.
Long Statement,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,RecalculateOnSizeChange,The length of the statement  "	leftBorder.DrawArea = new Rectangle (viewport.Left' viewport.Top + topHeight' leftWidth' viewport.Height - (bottomHeight + topHeight)); " is 135.
Long Statement,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,RecalculateOnSizeChange,The length of the statement  "	rightBorder.DrawArea = new Rectangle (viewport.Right - rightWidth' viewport.Top + topHeight' rightWidth' viewport.Height - (bottomHeight + topHeight)); " is 151.
Long Statement,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,RecalculateOnSizeChange,The length of the statement  "	MoneyText.DrawArea = new Rectangle (new Vector2D (viewport.Left + MoneyOffset.X' viewport.Top + MoneyOffset.Y)' new Size (0.2f' 0.03f)); " is 136.
Long Statement,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,UpdateDisplayedItemPosition,The length of the statement  "	if (position.X < ScreenSpace.Current.Viewport.Left + leftWidth || position.X > ScreenSpace.Current.Viewport.Right - rightWidth || position.Y < ScreenSpace.Current.Viewport.Top + topHeight || position.Y > ScreenSpace.Current.Viewport.Bottom - bottomHeight) " is 255.
Complex Conditional,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,HandleItemInGame,The conditional expression  "position.X < ScreenSpace.Current.Viewport.Left + leftWidth || position.X > ScreenSpace.Current.Viewport.Right - rightWidth || position.Y < ScreenSpace.Current.Viewport.Top + topHeight || position.Y > ScreenSpace.Current.Viewport.Bottom - bottomHeight"  is complex.
Complex Conditional,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,UpdateDisplayedItemPosition,The conditional expression  "position.X < ScreenSpace.Current.Viewport.Left + leftWidth || position.X > ScreenSpace.Current.Viewport.Right - rightWidth || position.Y < ScreenSpace.Current.Viewport.Top + topHeight || position.Y > ScreenSpace.Current.Viewport.Bottom - bottomHeight"  is complex.
Magic Number,GameOfDeath,GameCoordinator,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\GameCoordinator.cs,GameCoordinator,The following statement contains a magic number: rabbitMatrix = new RabbitGrid (20' 12' new Rectangle (ScreenSpace.Current.Left + 0.05f' ScreenSpace.Current.Top + 0.1f' ScreenSpace.Current.Viewport.Width - 0.1f' ScreenSpace.Current.Viewport.Height - 0.15f));  
Magic Number,GameOfDeath,GameCoordinator,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\GameCoordinator.cs,GameCoordinator,The following statement contains a magic number: rabbitMatrix = new RabbitGrid (20' 12' new Rectangle (ScreenSpace.Current.Left + 0.05f' ScreenSpace.Current.Top + 0.1f' ScreenSpace.Current.Viewport.Width - 0.1f' ScreenSpace.Current.Viewport.Height - 0.15f));  
Magic Number,GameOfDeath,GameCoordinator,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\GameCoordinator.cs,GameCoordinator,The following statement contains a magic number: userInterface.Money = 50;  
Magic Number,GameOfDeath,RabbitGrid,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\RabbitGrid.cs,RandomlySpawn,The following statement contains a magic number: if (x + 1 < width && Randomizer.Current.Get (0' 2) == 1)  	base [x + 1' y] = true;  
Magic Number,GameOfDeath,RabbitGrid,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\RabbitGrid.cs,RandomlySpawn,The following statement contains a magic number: if (y + 1 < height && Randomizer.Current.Get (0' 2) == 1)  	base [x' y + 1] = true;  
Magic Number,GameOfDeath,GameOfLife,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\GameOfLife.cs,ActiveCellShouldHaveTwoOrThreeNeighbors,The following statement contains a magic number: return isAlive && (neighbours == 2 || neighbours == 3);  
Magic Number,GameOfDeath,GameOfLife,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\GameOfLife.cs,ActiveCellShouldHaveTwoOrThreeNeighbors,The following statement contains a magic number: return isAlive && (neighbours == 2 || neighbours == 3);  
Magic Number,GameOfDeath,GameOfLife,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\GameOfLife.cs,ResurrectDeadCellWithExactlyThreeNeighbors,The following statement contains a magic number: return !isAlive && neighbours == 3;  
Magic Number,GameOfDeath,GameOfLife,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\GameOfLife.cs,Randomize,The following statement contains a magic number: for (int x = 0; x < width; x++)  	for (int y = 0; y < height; y++)  		CurrentWorld [x' y] = Randomizer.Current.Get (0' 3) == 1;  
Magic Number,GameOfDeath,GameOfLife,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\GameOfLife.cs,Randomize,The following statement contains a magic number: for (int y = 0; y < height; y++)  	CurrentWorld [x' y] = Randomizer.Current.Get (0' 3) == 1;  
Magic Number,GameOfDeath,GameOfLife,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\GameOfLife.cs,Randomize,The following statement contains a magic number: CurrentWorld [x' y] = Randomizer.Current.Get (0' 3) == 1;  
Magic Number,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,AddScoreBoard,The following statement contains a magic number: bodyCountRabbit = new Sprite (ContentLoader.Load<Material> ("MaterialDeadRabbit")' new Rectangle (viewport.TopRight + DeadRabbitOffset' DeadRabbitSize)) {  	RenderLayer = (int)RenderLayers.Gui + 2  };  
Magic Number,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,AddScoreBoard,The following statement contains a magic number: MoneyText = new FontText (Font.Default' "$0"' new Rectangle (viewport.TopLeft + MoneyOffset' new Size (0.2f' 0.03f))) {  	RenderLayer = (int)RenderLayers.Gui + 2'  	Color = Color.Black  };  
Magic Number,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,AddScoreBoard,The following statement contains a magic number: KillText = new FontText (Font.Default' "0"' new Rectangle (viewport.TopRight + KillOffset' new Size (0.1f' 0.03f))) {  	RenderLayer = (int)RenderLayers.Gui + 2'  	Color = Color.Black  };  
Magic Number,GameOfDeath.Items,Mallet,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\Items\Mallet.cs,CreateEffect,The following statement contains a magic number: Rotation = -60;  
Missing Default,GameOfDeath,UserInterface,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Samples\GameOfDeath\UserInterface.cs,GetIconTheme,The following switch statement is missing a default case: switch (type) {  case ItemType.Mallet:  	return new Theme {  		Button = ContentLoader.Load<Material> ("MaterialIconMallet")'  		ButtonMouseover = ContentLoader.Load<Material> ("MaterialIconMallet")'  		ButtonPressed = ContentLoader.Load<Material> ("MaterialIconMallet")  	};  case ItemType.Fire:  	return new Theme {  		Button = ContentLoader.Load<Material> ("MaterialIconFire")'  		ButtonMouseover = ContentLoader.Load<Material> ("MaterialIconFire")'  		ButtonPressed = ContentLoader.Load<Material> ("MaterialIconFire")  	};  case ItemType.Toxic:  	return new Theme {  		Button = ContentLoader.Load<Material> ("MaterialIconToxic")'  		ButtonMouseover = ContentLoader.Load<Material> ("MaterialIconToxic")'  		ButtonPressed = ContentLoader.Load<Material> ("MaterialIconToxic")  	};  case ItemType.Atomic:  	return new Theme {  		Button = ContentLoader.Load<Material> ("MaterialIconAtomic")'  		ButtonMouseover = ContentLoader.Load<Material> ("MaterialIconAtomic")'  		ButtonPressed = ContentLoader.Load<Material> ("MaterialIconAtomic")  	};  }  
