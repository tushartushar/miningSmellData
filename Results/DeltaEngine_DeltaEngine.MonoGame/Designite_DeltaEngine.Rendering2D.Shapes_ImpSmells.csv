Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DeltaEngine.Rendering2D.Shapes,Grid2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\Grid2D.cs,CreateHorizontalLines,The length of the statement  "		lines.Add (new Line2D (offset + new Vector2D (-halfGridSize.Width' y) * gridScale' offset + new Vector2D (halfGridSize.Width' y) * gridScale' Color.White)); " is 156.
Long Statement,DeltaEngine.Rendering2D.Shapes,Grid2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\Grid2D.cs,CreateVerticalLines,The length of the statement  "		lines.Add (new Line2D (offset + new Vector2D (x' -halfGridSize.Height) * gridScale' offset + new Vector2D (x' halfGridSize.Height) * gridScale' Color.White)); " is 158.
Long Statement,DeltaEngine.Rendering2D.Shapes,ClippedLine,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\ClippedLine.cs,InclusiveContains,The length of the statement  "	return point.X >= clippingBounds.Left && point.X <= clippingBounds.Right && point.Y >= clippingBounds.Top && point.Y <= clippingBounds.Bottom; " is 142.
Long Statement,DeltaEngine.Rendering2D.Shapes,Line2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\Line2D.cs,UpdatePointsAfterDrawAreaChanges,The length of the statement  "		var relativePosition = new Vector2D ((points [i].X - lastDrawArea.Left) / lastDrawArea.Width' (points [i].Y - lastDrawArea.Top) / lastDrawArea.Height); " is 151.
Long Statement,DeltaEngine.Rendering2D.Shapes,Line2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\Line2D.cs,UpdatePointsAfterDrawAreaChanges,The length of the statement  "		points [i] = new Vector2D (drawArea.Left + relativePosition.X * drawArea.Width' drawArea.Top + relativePosition.Y * drawArea.Height); " is 133.
Long Statement,DeltaEngine.Rendering2D.Shapes,Polygon2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\Polygon2D.cs,UpdatePointsAfterDrawAreaChanges,The length of the statement  "		var relativePosition = new Vector2D ((points [i].X - lastDrawArea.Left) / lastDrawArea.Width' (points [i].Y - lastDrawArea.Top) / lastDrawArea.Height); " is 151.
Long Statement,DeltaEngine.Rendering2D.Shapes,Polygon2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\Polygon2D.cs,UpdatePointsAfterDrawAreaChanges,The length of the statement  "		points [i] = new Vector2D (drawArea.Left + relativePosition.X * drawArea.Width' drawArea.Top + relativePosition.Y * drawArea.Height); " is 133.
Magic Number,DeltaEngine.Rendering2D.Shapes,GradientRectRenderer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\GradientRectRenderer.cs,AddToBatch,The following statement contains a magic number: vertices [2] = new VertexPosition2DColor (ScreenSpace.Current.ToPixelSpaceRounded (entity.Points [2])' finalColor);  
Magic Number,DeltaEngine.Rendering2D.Shapes,GradientRectRenderer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\GradientRectRenderer.cs,AddToBatch,The following statement contains a magic number: vertices [2] = new VertexPosition2DColor (ScreenSpace.Current.ToPixelSpaceRounded (entity.Points [2])' finalColor);  
Magic Number,DeltaEngine.Rendering2D.Shapes,GradientRectRenderer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\GradientRectRenderer.cs,AddToBatch,The following statement contains a magic number: vertices [3] = new VertexPosition2DColor (ScreenSpace.Current.ToPixelSpaceRounded (entity.Points [3])' startColor);  
Magic Number,DeltaEngine.Rendering2D.Shapes,GradientRectRenderer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\GradientRectRenderer.cs,AddToBatch,The following statement contains a magic number: vertices [3] = new VertexPosition2DColor (ScreenSpace.Current.ToPixelSpaceRounded (entity.Points [3])' startColor);  
Magic Number,DeltaEngine.Rendering2D.Shapes,Grid2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\Grid2D.cs,Grid2D,The following statement contains a magic number: halfGridSize = dimension / 2;  
Magic Number,DeltaEngine.Rendering2D.Shapes,ClippedLine,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\ClippedLine.cs,UpdateIntersects,The following statement contains a magic number: intersects [2] = Intersects (clippingBounds.TopLeft' clippingBounds.TopRight);  
Magic Number,DeltaEngine.Rendering2D.Shapes,ClippedLine,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\ClippedLine.cs,UpdateIntersects,The following statement contains a magic number: intersects [3] = Intersects (clippingBounds.BottomLeft' clippingBounds.BottomRight);  
Magic Number,DeltaEngine.Rendering2D.Shapes,ClippedLine,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\ClippedLine.cs,GetClosestIntersectTo,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	if (intersects [i] != null)  		UpdateClosestIntersect (point' (Vector2D)intersects [i]);  
Magic Number,DeltaEngine.Rendering2D.Shapes,DrawPolygon2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\DrawPolygon2D.cs,AddToBatch,The following statement contains a magic number: if (points.Count < 3)  	return;  
Magic Number,DeltaEngine.Rendering2D.Shapes,DrawPolygon2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\DrawPolygon2D.cs,ResizeVertices,The following statement contains a magic number: vertices = new VertexPosition2DColor[vertices.Length * 2];  
Magic Number,DeltaEngine.Rendering2D.Shapes,DrawPolygon2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\DrawPolygon2D.cs,ResizeVertices,The following statement contains a magic number: indices = new short[vertices.Length * 3];  
Magic Number,DeltaEngine.Rendering2D.Shapes,DrawPolygon2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\DrawPolygon2D.cs,BuildIndices,The following statement contains a magic number: for (int num = 0; num < numberOfPoints - 2; num++) {  	indices [numberOfIndicesUsed++] = (short)offset;  	indices [numberOfIndicesUsed++] = (short)(offset + num + 1);  	indices [numberOfIndicesUsed++] = (short)(offset + num + 2);  }  
Magic Number,DeltaEngine.Rendering2D.Shapes,DrawPolygon2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\DrawPolygon2D.cs,BuildIndices,The following statement contains a magic number: for (int num = 0; num < numberOfPoints - 2; num++) {  	indices [numberOfIndicesUsed++] = (short)offset;  	indices [numberOfIndicesUsed++] = (short)(offset + num + 1);  	indices [numberOfIndicesUsed++] = (short)(offset + num + 2);  }  
Magic Number,DeltaEngine.Rendering2D.Shapes,DrawPolygon2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\DrawPolygon2D.cs,BuildIndices,The following statement contains a magic number: indices [numberOfIndicesUsed++] = (short)(offset + num + 2);  
Magic Number,DeltaEngine.Rendering2D.Shapes,Triangle2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\Triangle2D.cs,Triangle2D,The following statement contains a magic number: if (components.Length != 6)  	throw new InvalidNumberOfComponents ();  
Magic Number,DeltaEngine.Rendering2D.Shapes,Triangle2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\Triangle2D.cs,Triangle2D,The following statement contains a magic number: Corner2 = new Vector2D (components [2]' components [3]);  
Magic Number,DeltaEngine.Rendering2D.Shapes,Triangle2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\Triangle2D.cs,Triangle2D,The following statement contains a magic number: Corner2 = new Vector2D (components [2]' components [3]);  
Magic Number,DeltaEngine.Rendering2D.Shapes,Triangle2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\Triangle2D.cs,Triangle2D,The following statement contains a magic number: Corner3 = new Vector2D (components [4]' components [5]);  
Magic Number,DeltaEngine.Rendering2D.Shapes,Triangle2D,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Rendering2D\Shapes\Triangle2D.cs,Triangle2D,The following statement contains a magic number: Corner3 = new Vector2D (components [4]' components [5]);  
