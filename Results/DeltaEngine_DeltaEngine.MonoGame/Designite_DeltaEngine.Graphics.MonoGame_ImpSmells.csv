Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DeltaEngine.Graphics.MonoGame,XnaVertexFormat,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaVertexFormat.cs,ConvertVertexType,Cyclomatic complexity of the method is 13
Complex Method,DeltaEngine.Graphics.MonoGame,XnaVertexFormat,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaVertexFormat.cs,ConvertVertexUsage,Cyclomatic complexity of the method is 13
Long Parameter List,DeltaEngine.Graphics.MonoGame,XnaCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaCircularBuffer.cs,AddDataNative,The method has 5 parameters.
Long Statement,DeltaEngine.Graphics.MonoGame,XnaShader,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaShader.cs,SetSunLight,The length of the statement  "	device.ShaderEffect.DirectionalLight0.DiffuseColor = new Vector3 (light.Color.RedValue' light.Color.GreenValue' light.Color.BlueValue); " is 135.
Long Statement,DeltaEngine.Graphics.MonoGame,XnaShader,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaShader.cs,SetSunLight,The length of the statement  "	device.ShaderEffect.DirectionalLight0.Direction = new Vector3 (-light.Direction.X' -light.Direction.Y' -light.Direction.Z); " is 123.
Long Statement,DeltaEngine.Graphics.MonoGame,XnaShader,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaShader.cs,ApplyFogSettings,The length of the statement  "	device.ShaderEffect.FogColor = new Vector3 (fogSettings.FogColor.RedValue' fogSettings.FogColor.GreenValue' fogSettings.FogColor.BlueValue); " is 140.
Long Statement,DeltaEngine.Graphics.MonoGame,XnaCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaCircularBuffer.cs,CreateNative,The length of the statement  "	nativeVertexBuffer = new DynamicVertexBuffer (nativeDevice' (shader as XnaShader).XnaVertexDeclaration' maxNumberOfVertices' BufferUsage.WriteOnly); " is 148.
Long Statement,DeltaEngine.Graphics.MonoGame,XnaCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaCircularBuffer.cs,CreateNative,The length of the statement  "	nativeIndexBuffer = new DynamicIndexBuffer (nativeDevice' IndexElementSize.SixteenBits' maxNumberOfIndices' BufferUsage.WriteOnly); " is 131.
Long Statement,DeltaEngine.Graphics.MonoGame,XnaCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaCircularBuffer.cs,DrawChunk,The length of the statement  "		nativeDevice.DrawIndexedPrimitives (PrimitiveType.TriangleList' 0' chunk.FirstVertexOffsetInBytes / vertexSize' chunk.NumberOfVertices' chunk.FirstIndexOffsetInBytes / 2' chunk.NumberOfIndices / 3); " is 198.
Long Statement,DeltaEngine.Graphics.MonoGame,XnaCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaCircularBuffer.cs,DrawChunk,The length of the statement  "		nativeDevice.DrawPrimitives (PrimitiveType.LineList' chunk.FirstVertexOffsetInBytes / vertexSize' chunk.NumberOfVertices / 2); " is 126.
Long Statement,DeltaEngine.Graphics.MonoGame,XnaGeometry,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaGeometry.cs,CreateBuffers,The length of the statement  "	indexBuffer = new DynamicIndexBuffer (nativeDevice' IndexElementSize.SixteenBits' NumberOfIndices' BufferUsage.WriteOnly); " is 122.
Long Statement,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,CreateDeviceManager,The length of the statement  "		SupportedOrientations = DisplayOrientation.Portrait | DisplayOrientation.LandscapeLeft | DisplayOrientation.LandscapeRight' " is 123.
Long Statement,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,SetModelViewProjectionMatrixFor2D,The length of the statement  "	ShaderEffect.View = XnaMatrix.CreateOrthographicOffCenter (pixelSpaceViewport.Left + Offset' pixelSpaceViewport.Right + Offset' pixelSpaceViewport.Bottom + Offset' pixelSpaceViewport.Top + Offset' 0' 1); " is 203.
Long Statement,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaSamplerState,The length of the statement  "	return texture.DisableLinearFiltering ? (texture.AllowTiling ? SamplerState.PointWrap : SamplerState.PointClamp) : (texture.AllowTiling ? SamplerState.LinearWrap : SamplerState.LinearClamp); " is 190.
Magic Number,DeltaEngine.Graphics.MonoGame,XnaCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaCircularBuffer.cs,DrawChunk,The following statement contains a magic number: if (UsesIndexBuffer) {  	if (chunk.Texture != null)  		(device as XnaDevice).SetDiffuseTexture (chunk.Texture);  	nativeDevice.DrawIndexedPrimitives (PrimitiveType.TriangleList' 0' chunk.FirstVertexOffsetInBytes / vertexSize' chunk.NumberOfVertices' chunk.FirstIndexOffsetInBytes / 2' chunk.NumberOfIndices / 3);  }  else  	nativeDevice.DrawPrimitives (PrimitiveType.LineList' chunk.FirstVertexOffsetInBytes / vertexSize' chunk.NumberOfVertices / 2);  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaCircularBuffer.cs,DrawChunk,The following statement contains a magic number: if (UsesIndexBuffer) {  	if (chunk.Texture != null)  		(device as XnaDevice).SetDiffuseTexture (chunk.Texture);  	nativeDevice.DrawIndexedPrimitives (PrimitiveType.TriangleList' 0' chunk.FirstVertexOffsetInBytes / vertexSize' chunk.NumberOfVertices' chunk.FirstIndexOffsetInBytes / 2' chunk.NumberOfIndices / 3);  }  else  	nativeDevice.DrawPrimitives (PrimitiveType.LineList' chunk.FirstVertexOffsetInBytes / vertexSize' chunk.NumberOfVertices / 2);  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaCircularBuffer.cs,DrawChunk,The following statement contains a magic number: if (UsesIndexBuffer) {  	if (chunk.Texture != null)  		(device as XnaDevice).SetDiffuseTexture (chunk.Texture);  	nativeDevice.DrawIndexedPrimitives (PrimitiveType.TriangleList' 0' chunk.FirstVertexOffsetInBytes / vertexSize' chunk.NumberOfVertices' chunk.FirstIndexOffsetInBytes / 2' chunk.NumberOfIndices / 3);  }  else  	nativeDevice.DrawPrimitives (PrimitiveType.LineList' chunk.FirstVertexOffsetInBytes / vertexSize' chunk.NumberOfVertices / 2);  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaCircularBuffer.cs,DrawChunk,The following statement contains a magic number: nativeDevice.DrawIndexedPrimitives (PrimitiveType.TriangleList' 0' chunk.FirstVertexOffsetInBytes / vertexSize' chunk.NumberOfVertices' chunk.FirstIndexOffsetInBytes / 2' chunk.NumberOfIndices / 3);  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaCircularBuffer.cs,DrawChunk,The following statement contains a magic number: nativeDevice.DrawIndexedPrimitives (PrimitiveType.TriangleList' 0' chunk.FirstVertexOffsetInBytes / vertexSize' chunk.NumberOfVertices' chunk.FirstIndexOffsetInBytes / 2' chunk.NumberOfIndices / 3);  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaCircularBuffer.cs,DrawChunk,The following statement contains a magic number: nativeDevice.DrawPrimitives (PrimitiveType.LineList' chunk.FirstVertexOffsetInBytes / vertexSize' chunk.NumberOfVertices / 2);  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaGeometry,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaGeometry.cs,Draw,The following statement contains a magic number: nativeDevice.DrawIndexedPrimitives (PrimitiveType.TriangleList' 0' 0' NumberOfVertices' 0' NumberOfIndices / 3);  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaImage,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaImage.cs,FillRgbaData,The following statement contains a magic number: if (PixelSize.Width * PixelSize.Height * 4 != rgbaColors.Length)  	throw new InvalidNumberOfBytes (PixelSize);  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M13 = matrix [2];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M14 = matrix [3];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M21 = matrix [4];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M22 = matrix [5];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M23 = matrix [6];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M24 = matrix [7];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M31 = matrix [8];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M32 = matrix [9];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M33 = matrix [10];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M34 = matrix [11];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M41 = matrix [12];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M42 = matrix [13];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M43 = matrix [14];  
Magic Number,DeltaEngine.Graphics.MonoGame,XnaDevice,C:\repos\DeltaEngine_DeltaEngine.MonoGame\Graphics\MonoGame\XnaDevice.cs,GetXnaMatrix,The following statement contains a magic number: m.M44 = matrix [15];  
