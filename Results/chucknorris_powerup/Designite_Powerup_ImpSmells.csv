Implementation smell,Namespace,Class,File,Method,Description
Long Method,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The method has 108 lines of code.
Complex Method,Powerup.Commandline.Options,Option,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,Option,Cyclomatic complexity of the method is 8
Complex Method,Powerup.Commandline.Options,Option,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 10
Complex Method,Powerup.Commandline.Options,Option,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,AddSeparators,Cyclomatic complexity of the method is 8
Complex Method,Powerup.Commandline.Options,ArgumentSource,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,GetArguments,Cyclomatic complexity of the method is 9
Complex Method,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,WriteOptionDescriptions,Cyclomatic complexity of the method is 9
Complex Method,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Complex Method,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,GetDescription,Cyclomatic complexity of the method is 12
Long Parameter List,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Long Parameter List,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,WriteDescription,The method has 5 parameters. Parameters: o' value' prefix' firstWidth' remWidth
Long Statement,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The length of the statement  "                        "IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID('[' + @TableSchema + '].[' + @TableName + ']') AND UPPER(name) = UPPER(@Name))"); " is 148.
Complex Conditional,Powerup.Commandline.Options,Option,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,Option,The conditional expression  "Array.IndexOf(names' "<>") >= 0 &&                      ((names.Length == 1 && this.type != OptionValueType.None) ||                       (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n[n.Length - 1] == '+' || n[n.Length - 1] == '-') &&                      Contains((rn = n.Substring(0' n.Length - 1)))"  is complex.
Magic Number,Powerup,Application,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Application.cs,BuildEntities,The following statement contains a magic number: _sqlObject.Add(type.MakeSqlObject(con.Database'                                                                    reader[1].ToString()'                                                                    reader[0].ToString()'                                                                    (int)reader[2]));
Magic Number,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption(prototype' description' 2'                      delegate(OptionValueCollection v) { action(v[0]' v[1]); });
Magic Number,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription(o' p.Description' ""' 80' 80);
Magic Number,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription(o' p.Description' ""' 80' 80);
Magic Number,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription(o' p.Description' new string(' '' OptionWidth + 2)'                          Description_FirstWidth' Description_RemWidth);
Magic Number,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription(o' s.Description' new string(' '' OptionWidth + 2)'                          Description_FirstWidth' Description_RemWidth);
Magic Number,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The following statement contains a magic number: cmd.Parameters.Add("@NAME"' SqlDbType.NVarChar' 128);
Magic Number,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The following statement contains a magic number: var tbl = new SysTable                              {                                  Name = reader[3].ToString()'                                  Schema = reader[4].ToString()                              };
Magic Number,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The following statement contains a magic number: var tbl = new SysTable                              {                                  Name = reader[3].ToString()'                                  Schema = reader[4].ToString()                              };
Magic Number,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The following statement contains a magic number: index = new SysIndex                              {                                  Id = Convert.ToInt32(reader[0])'                                  Name = reader[1].ToString()'                                  Table = tbl'                                  Type = reader[7].ToString()'                                  IsUnique = Convert.ToBoolean(reader[6])'                                  HasFilter = Convert.ToBoolean(reader[8])'                                  FilterDefinition = Convert.ToString(reader[9])                              };
Magic Number,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The following statement contains a magic number: index = new SysIndex                              {                                  Id = Convert.ToInt32(reader[0])'                                  Name = reader[1].ToString()'                                  Table = tbl'                                  Type = reader[7].ToString()'                                  IsUnique = Convert.ToBoolean(reader[6])'                                  HasFilter = Convert.ToBoolean(reader[8])'                                  FilterDefinition = Convert.ToString(reader[9])                              };
Magic Number,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The following statement contains a magic number: index = new SysIndex                              {                                  Id = Convert.ToInt32(reader[0])'                                  Name = reader[1].ToString()'                                  Table = tbl'                                  Type = reader[7].ToString()'                                  IsUnique = Convert.ToBoolean(reader[6])'                                  HasFilter = Convert.ToBoolean(reader[8])'                                  FilterDefinition = Convert.ToString(reader[9])                              };
Magic Number,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The following statement contains a magic number: index = new SysIndex                              {                                  Id = Convert.ToInt32(reader[0])'                                  Name = reader[1].ToString()'                                  Table = tbl'                                  Type = reader[7].ToString()'                                  IsUnique = Convert.ToBoolean(reader[6])'                                  HasFilter = Convert.ToBoolean(reader[8])'                                  FilterDefinition = Convert.ToString(reader[9])                              };
Magic Number,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The following statement contains a magic number: index.Columns.Add(new SysIndexColumn                          {                              Id = Convert.ToInt32(reader[5])'                              Name = Convert.ToString(reader[2])'                              IsDescending = Convert.ToBoolean(reader[10])'                              IsIncluded = Convert.ToBoolean(reader[11])'                          });
Magic Number,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The following statement contains a magic number: index.Columns.Add(new SysIndexColumn                          {                              Id = Convert.ToInt32(reader[5])'                              Name = Convert.ToString(reader[2])'                              IsDescending = Convert.ToBoolean(reader[10])'                              IsIncluded = Convert.ToBoolean(reader[11])'                          });
Magic Number,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The following statement contains a magic number: index.Columns.Add(new SysIndexColumn                          {                              Id = Convert.ToInt32(reader[5])'                              Name = Convert.ToString(reader[2])'                              IsDescending = Convert.ToBoolean(reader[10])'                              IsIncluded = Convert.ToBoolean(reader[11])'                          });
Magic Number,Powerup.SqlQueries,IndexQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\IndexQuery.cs,AddCode,The following statement contains a magic number: index.Columns.Add(new SysIndexColumn                          {                              Id = Convert.ToInt32(reader[5])'                              Name = Convert.ToString(reader[2])'                              IsDescending = Convert.ToBoolean(reader[10])'                              IsIncluded = Convert.ToBoolean(reader[11])'                          });
Magic Number,Powerup.SqlQueries,SequenceQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\SequenceQuery.cs,AddCode,The following statement contains a magic number: cmd.Parameters.Add("@NAME"' SqlDbType.NVarChar' 128);
Magic Number,Powerup.SqlQueries,SequenceQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\SequenceQuery.cs,AddCode,The following statement contains a magic number: sequence = new SysSequence                              {                                  Name = $"{reader[0]}"'                                  UserTypeId = $"{reader[1]}"'                                  Cache = (bool)reader[2]'                                  Cycle = (bool)reader[3]'                                  Increment = Convert.ToInt32(reader[4])'                                  MaxValue = reader[5].ToString()'                                  MinValue = reader[6].ToString()'                                  StartWith = Convert.ToInt32(reader[7])                              };
Magic Number,Powerup.SqlQueries,SequenceQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\SequenceQuery.cs,AddCode,The following statement contains a magic number: sequence = new SysSequence                              {                                  Name = $"{reader[0]}"'                                  UserTypeId = $"{reader[1]}"'                                  Cache = (bool)reader[2]'                                  Cycle = (bool)reader[3]'                                  Increment = Convert.ToInt32(reader[4])'                                  MaxValue = reader[5].ToString()'                                  MinValue = reader[6].ToString()'                                  StartWith = Convert.ToInt32(reader[7])                              };
Magic Number,Powerup.SqlQueries,SequenceQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\SequenceQuery.cs,AddCode,The following statement contains a magic number: sequence = new SysSequence                              {                                  Name = $"{reader[0]}"'                                  UserTypeId = $"{reader[1]}"'                                  Cache = (bool)reader[2]'                                  Cycle = (bool)reader[3]'                                  Increment = Convert.ToInt32(reader[4])'                                  MaxValue = reader[5].ToString()'                                  MinValue = reader[6].ToString()'                                  StartWith = Convert.ToInt32(reader[7])                              };
Magic Number,Powerup.SqlQueries,SequenceQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\SequenceQuery.cs,AddCode,The following statement contains a magic number: sequence = new SysSequence                              {                                  Name = $"{reader[0]}"'                                  UserTypeId = $"{reader[1]}"'                                  Cache = (bool)reader[2]'                                  Cycle = (bool)reader[3]'                                  Increment = Convert.ToInt32(reader[4])'                                  MaxValue = reader[5].ToString()'                                  MinValue = reader[6].ToString()'                                  StartWith = Convert.ToInt32(reader[7])                              };
Magic Number,Powerup.SqlQueries,SequenceQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\SequenceQuery.cs,AddCode,The following statement contains a magic number: sequence = new SysSequence                              {                                  Name = $"{reader[0]}"'                                  UserTypeId = $"{reader[1]}"'                                  Cache = (bool)reader[2]'                                  Cycle = (bool)reader[3]'                                  Increment = Convert.ToInt32(reader[4])'                                  MaxValue = reader[5].ToString()'                                  MinValue = reader[6].ToString()'                                  StartWith = Convert.ToInt32(reader[7])                              };
Magic Number,Powerup.SqlQueries,SequenceQuery,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\SqlQueries\SequenceQuery.cs,AddCode,The following statement contains a magic number: sequence = new SysSequence                              {                                  Name = $"{reader[0]}"'                                  UserTypeId = $"{reader[1]}"'                                  Cache = (bool)reader[2]'                                  Cycle = (bool)reader[3]'                                  Increment = Convert.ToInt32(reader[4])'                                  MaxValue = reader[5].ToString()'                                  MinValue = reader[6].ToString()'                                  StartWith = Convert.ToInt32(reader[7])                              };
Missing Default,Powerup.Commandline.Options,OptionSet,D:\research\architectureSmells\repos\chucknorris_powerup\src\Powerup\Commandline.Options\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType)                  {                      case OptionValueType.None:                          c.OptionValues.Add(n);                          c.Option.Invoke(c);                          break;                      case OptionValueType.Optional:                      case OptionValueType.Required:                          ParseValue(v' c);                          break;                  }
