Implementation smell,Namespace,Class,File,Method,Description
Long Method,HiSystems.Interpreter,Tokenizer,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Tokenizer.cs,Parse,The method has 113 lines of code.
Complex Method,HiSystems.Interpreter,Engine,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Engine.cs,TranslateTokens,Cyclomatic complexity of the method is 11
Complex Method,HiSystems.Interpreter,Engine,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Engine.cs,TranslateTokensToOperations,Cyclomatic complexity of the method is 10
Complex Method,HiSystems.Interpreter,Tokenizer,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Tokenizer.cs,Parse,Cyclomatic complexity of the method is 17
Long Statement,HiSystems.Interpreter,Function,D:\research\architectureSmells\repos\hisystems_Interpreter\Functions\Function.cs,EnsureArgumentCountIs,The length of the statement  "                throw new InvalidOperationException(String.Format("{0} has been supplied {1} arguments' but expects {2} arguments"' this.Name' arguments.Length' expectedArgumentCount)); " is 169.
Long Statement,HiSystems.Interpreter,Function,D:\research\architectureSmells\repos\hisystems_Interpreter\Functions\Function.cs,EnsureArgumentCountIsAtLeast,The length of the statement  "                throw new InvalidOperationException(String.Format("{0} has been supplied {1} arguments' but expects at least {2} arguments"' this.Name' arguments.Length' minimumArgumentCount)); " is 177.
Long Statement,HiSystems.Interpreter,Function,D:\research\architectureSmells\repos\hisystems_Interpreter\Functions\Function.cs,EnsureArgumentCountIsBetween,The length of the statement  "                throw new InvalidOperationException(String.Format("{0} has been supplied {1} arguments' but expects at most {2} arguments"' this.Name' arguments.Length' maximumArgumentCount)); " is 176.
Long Statement,HiSystems.Interpreter,Function,D:\research\architectureSmells\repos\hisystems_Interpreter\Functions\Function.cs,GetTransformedArgumentArray,The length of the statement  "            var transformedArray = CastArgumentToType<Array>(transformedArgument' argumentIndex).Select(construct => construct.Transform()); " is 128.
Long Statement,HiSystems.Interpreter,Function,D:\research\architectureSmells\repos\hisystems_Interpreter\Functions\Function.cs,GetTransformedArgumentArray,The length of the statement  "                throw new InvalidOperationException(String.Format("{0} argument {1} does not contain only {2} values and cannot be used with the {3} function"' argument.ToString()' argumentIndex + 1' typeof(T).Name' this.Name)); " is 212.
Long Statement,HiSystems.Interpreter,Function,D:\research\architectureSmells\repos\hisystems_Interpreter\Functions\Function.cs,CastArgumentToType,The length of the statement  "                throw new InvalidOperationException(String.Format("Argument {1}: {0} is not of type {2} and cannot be used with the {3} function"' argument.ToString()' argumentIndex + 1' typeof(T).Name' this.Name)); " is 199.
Long Statement,HiSystems.Interpreter,Engine,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Engine.cs,SetExpressionPrecedenceFromOperators,The length of the statement  "                    expression.Precedence += allOperators.Where(item => item.Operation == ((OperatorToken)token).Value).Single().Precedence; " is 120.
Long Statement,HiSystems.Interpreter,Engine,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Engine.cs,GetFunctionArguments,The length of the statement  "                throw new InvalidOperationException(String.Format("{0} arguments; first token should be '(' not '{1}'"' functionName' tokensEnum.Current.Value)); " is 145.
Long Statement,HiSystems.Interpreter,Engine,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Engine.cs,GetFunctionArguments,The length of the statement  "            else if (tokensEnum.Current.Type == TokenType.LeftParenthesis && tokensEnum.CanPeek && tokensEnum.Peek.Type == TokenType.RightParenthesis) " is 138.
Long Statement,HiSystems.Interpreter,Engine,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Engine.cs,GetFunctionArguments,The length of the statement  "                tokensEnum.MoveNext();      // consume the left parenthesis token and point it to the right parenthesis token - i.e. the end of the function " is 140.
Long Statement,HiSystems.Interpreter,Engine,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Engine.cs,GetFunctionArguments,The length of the statement  "                    arguments.Add(GetConstructFromTokens(GetFunctionArgumentTokens(functionName' tokensEnum' currentVariables)' currentVariables)); " is 127.
Long Statement,HiSystems.Interpreter,Engine,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Engine.cs,GetFunctionArgumentTokens,The length of the statement  "                throw new InvalidOperationException(String.Format("{0} is missing a terminating argument character; ''' or ')'"' functionName)); " is 128.
Long Statement,HiSystems.Interpreter,Tokenizer,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Tokenizer.cs,Parse,The length of the statement  "            var identifierCharacters = new[] { '_'' 'A'' 'B'' 'C'' 'D'' 'E'' 'F'' 'G'' 'H'' 'I'' 'J'' 'K'' 'L'' 'M'' 'N'' 'O'' 'P'' 'Q'' 'R'' 'S'' 'T'' 'U'' 'V'' 'W'' 'X'' 'Y'' 'Z'' 'a'' 'b'' 'c'' 'd'' 'e'' 'f'' 'g'' 'h'' 'i'' 'j'' 'k'' 'l'' 'm'' 'n'' 'o'' 'p'' 'q'' 'r'' 's'' 't'' 'u'' 'v'' 'w'' 'x'' 'y'' 'z' }; " is 301.
Long Statement,HiSystems.Interpreter,Tokenizer,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Tokenizer.cs,Parse,The length of the statement  "            var identifierSecondaryCharacters = new[] { '0'' '1'' '2'' '3'' '4'' '5'' '6'' '7'' '8'' '9' };     // other characters that can be used as identifiers - but cannot be a starting character " is 188.
Long Statement,HiSystems.Interpreter,Tokenizer,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Tokenizer.cs,Parse,The length of the statement  "                isNumericNegative = character == NumericNegative && expressionEnumerator.CanPeek && numericCharacters.Contains(expressionEnumerator.Peek); " is 138.
Long Statement,HiSystems.Interpreter,Tokenizer,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Tokenizer.cs,Parse,The length of the statement  "                else if (identifierCharacters.Contains(character) || (currentTokenType == TokenType.Identifier && identifierSecondaryCharacters.Contains(character))) " is 149.
Long Statement,HiSystems.Interpreter,Operator,D:\research\architectureSmells\repos\hisystems_Interpreter\Operators\Operator.cs,CastConstructToType,The length of the statement  "                throw new InvalidOperationException(String.Format("{0} construct is not of type {1} and cannot be used with the {2} operator"' construct.ToString()' typeof(T).Name' this.Token)); " is 178.
Long Statement,HiSystems.Interpreter,AddOperator,D:\research\architectureSmells\repos\hisystems_Interpreter\Operators\AddOperator.cs,Execute,The length of the statement  "                throw new InvalidOperationException(String.Format("Add operator requires arguments of type Number' DateTime or Text. Argument types are {0} {1}."' argument1Transformed.GetType().Name' argument2Transformed.GetType().Name)); " is 222.
Long Statement,HiSystems.Interpreter,GreaterThanOperator,D:\research\architectureSmells\repos\hisystems_Interpreter\Operators\GreaterThanOperator.cs,Execute,The length of the statement  "                throw new InvalidOperationException(String.Format("Greater than operator requires arguments of type Number or DateTime. Argument types are {0} {1}."' argument1Transformed.GetType().Name' argument2Transformed.GetType().Name)); " is 225.
Long Statement,HiSystems.Interpreter,GreaterThanOrEqualToOperator,D:\research\architectureSmells\repos\hisystems_Interpreter\Operators\GreaterThanOrEqualToOperator.cs,Execute,The length of the statement  "                throw new InvalidOperationException(String.Format("Greater than or equal to operator requires arguments of type Number or DateTime. Argument types are {0} {1}."' argument1Transformed.GetType().Name' argument2Transformed.GetType().Name)); " is 237.
Long Statement,HiSystems.Interpreter,LessThanOperator,D:\research\architectureSmells\repos\hisystems_Interpreter\Operators\LessThanOperator.cs,Execute,The length of the statement  "                throw new InvalidOperationException(String.Format("Less than operator requires arguments of type Number or DateTime. Argument types are {0} {1}."' argument1Transformed.GetType().Name' argument2Transformed.GetType().Name)); " is 222.
Long Statement,HiSystems.Interpreter,LessThanOrEqualToOperator,D:\research\architectureSmells\repos\hisystems_Interpreter\Operators\LessThanOrEqualToOperator.cs,Execute,The length of the statement  "                throw new InvalidOperationException(String.Format("Less than or equal to operator requires arguments of type Number or DateTime. Argument types are {0} {1}."' argument1Transformed.GetType().Name' argument2Transformed.GetType().Name)); " is 234.
Long Statement,HiSystems.Interpreter,SubtractOperator,D:\research\architectureSmells\repos\hisystems_Interpreter\Operators\SubtractOperator.cs,Execute,The length of the statement  "                throw new InvalidOperationException(String.Format("Subtract operator requires arguments of type Number or DateTime. Argument types are {0} {1}."' argument1Transformed.GetType().Name' argument2Transformed.GetType().Name)); " is 221.
Long Statement,HiSystems.Interpreter,FunctionOperation,D:\research\architectureSmells\repos\hisystems_Interpreter\Constructs\FunctionOperation.cs,Transform,The length of the statement  "            // Sometimes it is necessary that the arguments are not translated' for example by functions that interpret variables as meaning something else. " is 144.
Long Statement,HiSystems.Interpreter,Expression,D:\research\architectureSmells\repos\hisystems_Interpreter\Engine\Expression.cs,Execute,The length of the statement  "                throw new InvalidCastException(String.Format("Return value from '{0}' is of type {1}' not of type {2}"' this.expression' result.GetType().Name' typeof(T).Name)); " is 161.
Long Statement,HiSystems.Interpreter,EqualToOperator,D:\research\architectureSmells\repos\hisystems_Interpreter\Operators\EqualToOperator.cs,Execute,The length of the statement  "                throw new InvalidOperationException(String.Format("Equality operator requires arguments of type Number' DateTime or Boolean. Argument types are {0} {1}."' argument1Transformed.GetType().Name' argument2Transformed.GetType().Name)); " is 230.
Magic Number,HiSystems.Interpreter,If,D:\research\architectureSmells\repos\hisystems_Interpreter\Functions\If.cs,Execute,The following statement contains a magic number: base.EnsureArgumentCountIs(arguments' 3);
Magic Number,HiSystems.Interpreter,Format,D:\research\architectureSmells\repos\hisystems_Interpreter\Functions\Format.cs,Execute,The following statement contains a magic number: base.EnsureArgumentCountIsBetween(arguments' 1' 2);
