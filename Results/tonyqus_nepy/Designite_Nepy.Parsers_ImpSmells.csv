Implementation smell,Namespace,Class,File,Method,Description
Long Method,Nepy.Parsers,SimChineseDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\SimChineseDateTimeParser.cs,Parse,The method has 120 lines of code.
Long Method,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The method has 190 lines of code.
Complex Method,Nepy.Parsers,USAddressParser,C:\repos\tonyqus_nepy\Nepy.Parsers\USAddressParser.cs,GetNormalizedValueForField,Cyclomatic complexity of the method is 19
Complex Method,Nepy.Parsers,SimChineseDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\SimChineseDateTimeParser.cs,Parse,Cyclomatic complexity of the method is 19
Complex Method,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,Cyclomatic complexity of the method is 54
Complex Method,Nepy.Parsers,SimChinesePronounParser,C:\repos\tonyqus_nepy\Nepy.Parsers\SimChinesePronounParser.cs,Parse,Cyclomatic complexity of the method is 18
Long Statement,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CreateRegexes,The length of the statement  "	unitsFromMatch = new Regex (string.Format (CultureInfo.CurrentCulture' @"(\d+) ({0})(?:s|) (\w+) "' units)' RegexOptions.IgnoreCase); " is 133.
Long Statement,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CreateRegexes,The length of the statement  "	nextLastUnit = new Regex (string.Format (CultureInfo.CurrentCulture' @"^(next|last) ({0})"' units)' RegexOptions.IgnoreCase); " is 125.
Long Statement,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,ParseString,The length of the statement  "	return CheckNextLastIndicator (dateString' dateBase) ?? CheckUnitsFromMatch (dateString' dateBase) ?? CheckEntireStringIsDay (dateString' dateBase) ?? CheckFirstWordIsDay (dateString' dateBase) ?? CheckEntireStringIsMonth (dateString' dateBase) ?? CheckFirstWordIsMonth (dateString' dateBase) ?? CheckSpecificDayNames (dateString' dateBase) ?? CheckDayNumeric (dateString' dateBase) ?? CheckForActualDateTime (dateString' dateBase) ?? dateBase; " is 444.
Long Statement,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckForActualDateTime,The length of the statement  "		return new DateTime (dateBase.Year' directParse.Month' directParse.Day' directParse.Hour' directParse.Minute' directParse.Second); " is 130.
Long Statement,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckUnitsFromMatch,The length of the statement  "		return dateBase.AddDays (DaysFromUnits (unitsMatch.Groups [2].Value' multiplier' unitsMatch.Groups [3].Value' dateBase)); " is 121.
Long Statement,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckFirstWordIsMonth,The length of the statement  "		return ParseRelative (CheckEntireStringIsMonth (dateString.GetWord (1)' dateBase).Value' dateString.Substring (dateString.GetWord (1).Length + 1)); " is 147.
Long Statement,Nepy.Parsers,USAddressParser,C:\repos\tonyqus_nepy\Nepy.Parsers\USAddressParser.cs,InitializeRegex,The length of the statement  "	var rangedSecondaryUnitPattern = @"(?<SECONDARYUNIT>" + string.Join ("|"' rangedSecondaryUnits.Keys.ToArray ()) + @")(?![a-z])"; " is 128.
Long Statement,Nepy.Parsers,USAddressParser,C:\repos\tonyqus_nepy\Nepy.Parsers\USAddressParser.cs,InitializeRegex,The length of the statement  "	addressRegex = new Regex (addressPattern' RegexOptions.Compiled | RegexOptions.Singleline | RegexOptions.IgnorePatternWhitespace); " is 130.
Long Statement,Nepy.Parsers,USAddressParser,C:\repos\tonyqus_nepy\Nepy.Parsers\USAddressParser.cs,Normalize,The length of the statement  "	if (extracted.ContainsKey ("SECONDARYNUMBER") && (!extracted.ContainsKey ("SECONDARYUNIT") || string.IsNullOrEmpty (extracted ["SECONDARYUNIT"]))) { " is 148.
Long Statement,Nepy.Parsers,SimChinesePronounParser,C:\repos\tonyqus_nepy\Nepy.Parsers\SimChinesePronounParser.cs,Parse,The length of the statement  "	else if (chars [i] == '你' || chars [i] == '我' || chars [i] == '他' || chars [i] == '它' || chars [i] == '她' || chars [i] == '咱') { " is 128.
Long Statement,Nepy.Parsers,SimChineseQuantityParser,C:\repos\tonyqus_nepy\Nepy.Parsers\SimChineseQuantityParser.cs,Parse,The length of the statement  "	while ((NumeralUtil.IsArabicNumeral (ch) || NumeralUtil.IsChineseNumeralChars (ch) || ch == '.') && i + 1 < _text.Length) { " is 123.
Complex Conditional,Nepy.Parsers,SimChineseDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\SimChineseDateTimeParser.cs,Parse,The conditional expression  "ch == '大' || ch == '前' || ch == '昨' || ch == '明' || ch == '今' || ch == '后' || ch == '去'"  is complex.
Complex Conditional,Nepy.Parsers,SimChineseDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\SimChineseDateTimeParser.cs,Parse,The conditional expression  "prevCh == '前' || prevCh == '昨' || prevCh == '明' || prevCh == '今' || prevCh == '后'"  is complex.
Complex Conditional,Nepy.Parsers,SimChineseDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\SimChineseDateTimeParser.cs,Parse,The conditional expression  "prevCh == '去' || prevCh == '前' || prevCh == '今' || prevCh == '后'"  is complex.
Complex Conditional,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsAllowedChar,The conditional expression  "ch == '（' || ch == '(' || ch == ')' || ch == '）'"  is complex.
Complex Conditional,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsAllowedChar,The conditional expression  "ch == 'e' || ch == 'x' || ch == 't' || ch == '.'"  is complex.
Complex Conditional,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsChineseMobilePrefix,The conditional expression  "chars [1] == '8' && (chars [2] == '1' || chars [2] == '3' || chars [2] == '4')"  is complex.
Complex Conditional,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The conditional expression  "segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted"  is complex.
Complex Conditional,Nepy.Parsers,SimChinesePronounParser,C:\repos\tonyqus_nepy\Nepy.Parsers\SimChinesePronounParser.cs,Parse,The conditional expression  "chars [i] == '你' || chars [i] == '我' || chars [i] == '他' || chars [i] == '它' || chars [i] == '她' || chars [i] == '咱'"  is complex.
Complex Conditional,Nepy.Parsers,SimChinesePronounParser,C:\repos\tonyqus_nepy\Nepy.Parsers\SimChinesePronounParser.cs,Parse,The conditional expression  "chars [i] == '谁' || chars [i] == '朕' || chars [i] == '此' || chars [i] == '彼'"  is complex.
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CreateWordToNumberList,The following statement contains a magic number: wordsToNumbers.Add ("two"' 2);  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CreateWordToNumberList,The following statement contains a magic number: wordsToNumbers.Add ("second"' 2);  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CreateWordToNumberList,The following statement contains a magic number: wordsToNumbers.Add ("three"' 3);  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CreateWordToNumberList,The following statement contains a magic number: wordsToNumbers.Add ("third"' 3);  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CreateWordToNumberList,The following statement contains a magic number: wordsToNumbers.Add ("fourth"' 4);  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CreateWordToNumberList,The following statement contains a magic number: wordsToNumbers.Add ("four"' 4);  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CreateWordToNumberList,The following statement contains a magic number: wordsToNumbers.Add ("five"' 5);  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CreateWordToNumberList,The following statement contains a magic number: wordsToNumbers.Add ("fifth"' 4);  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckNextLastIndicator,The following statement contains a magic number: if (match.Success) {  	bool isNext = match.Groups [1].Value.Equals ("next");  	string unit = match.Groups [2].Value;  	if (StringIsDayOfTheWeek (unit)) {  		return ParseRelative (dateBase' dateString.Substring (5)).AddWeeks (isNext ? 1 : -1);  	}  	if (unit.Equals ("month")) {  		return isNext ? dateBase.Next (DateUnit.Month) : dateBase.Last (DateUnit.Month);  	}  	if (allMonthNames.Contains (unit' StringComparer.CurrentCultureIgnoreCase)) {  		return ParseRelative (dateBase' unit).AddYears (1);  	}  }  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckNextLastIndicator,The following statement contains a magic number: if (match.Success) {  	bool isNext = match.Groups [1].Value.Equals ("next");  	string unit = match.Groups [2].Value;  	if (StringIsDayOfTheWeek (unit)) {  		return ParseRelative (dateBase' dateString.Substring (5)).AddWeeks (isNext ? 1 : -1);  	}  	if (unit.Equals ("month")) {  		return isNext ? dateBase.Next (DateUnit.Month) : dateBase.Last (DateUnit.Month);  	}  	if (allMonthNames.Contains (unit' StringComparer.CurrentCultureIgnoreCase)) {  		return ParseRelative (dateBase' unit).AddYears (1);  	}  }  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckNextLastIndicator,The following statement contains a magic number: if (StringIsDayOfTheWeek (unit)) {  	return ParseRelative (dateBase' dateString.Substring (5)).AddWeeks (isNext ? 1 : -1);  }  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckNextLastIndicator,The following statement contains a magic number: return ParseRelative (dateBase' dateString.Substring (5)).AddWeeks (isNext ? 1 : -1);  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckUnitsFromMatch,The following statement contains a magic number: if (unitsMatch.Success) {  	int multiplier = Int32.Parse (unitsMatch.Groups [1].Value' CultureInfo.InvariantCulture);  	dateBase = ParseRelative (dateBase' unitsFromMatch.Replace (dateString' ""' 1));  	return dateBase.AddDays (DaysFromUnits (unitsMatch.Groups [2].Value' multiplier' unitsMatch.Groups [3].Value' dateBase));  }  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckUnitsFromMatch,The following statement contains a magic number: if (unitsMatch.Success) {  	int multiplier = Int32.Parse (unitsMatch.Groups [1].Value' CultureInfo.InvariantCulture);  	dateBase = ParseRelative (dateBase' unitsFromMatch.Replace (dateString' ""' 1));  	return dateBase.AddDays (DaysFromUnits (unitsMatch.Groups [2].Value' multiplier' unitsMatch.Groups [3].Value' dateBase));  }  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckUnitsFromMatch,The following statement contains a magic number: return dateBase.AddDays (DaysFromUnits (unitsMatch.Groups [2].Value' multiplier' unitsMatch.Groups [3].Value' dateBase));  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckUnitsFromMatch,The following statement contains a magic number: return dateBase.AddDays (DaysFromUnits (unitsMatch.Groups [2].Value' multiplier' unitsMatch.Groups [3].Value' dateBase));  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckFirstWordIsDay,The following statement contains a magic number: if (StringIsDayOfTheWeek (dateString.GetWord (1))) {  	return ParseRelative (dateBase' dateString.GetStringAfterWord (2)).Next (StringToDayOfWeek (dateString.GetWord (1)));  }  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckFirstWordIsDay,The following statement contains a magic number: return ParseRelative (dateBase' dateString.GetStringAfterWord (2)).Next (StringToDayOfWeek (dateString.GetWord (1)));  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckSpecificDayNames,The following statement contains a magic number: switch (dateString) {  case "tomorrow":  	return dateBase.AddDays (1);  case "yesterday":  	return dateBase.AddDays (-1);  case "today":  	return dateBase;  case "day after tomorrow":  	return dateBase.AddDays (2);  }  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckSpecificDayNames,The following statement contains a magic number: return dateBase.AddDays (2);  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,GetDayOfWeek,The following statement contains a magic number: for (int i = 0; i < dayNames.Count; i++) {  	if (dateString.Equals (dayNames [i].ToLowerInvariant ())) {  		return (DayOfWeek)(i % 7);  	}  }  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,GetDayOfWeek,The following statement contains a magic number: if (dateString.Equals (dayNames [i].ToLowerInvariant ())) {  	return (DayOfWeek)(i % 7);  }  
Magic Number,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,GetDayOfWeek,The following statement contains a magic number: return (DayOfWeek)(i % 7);  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsValidCountryCodes,The following statement contains a magic number: if (code.Length > 3)  	return false;  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsChineseMobilePrefix,The following statement contains a magic number: if (chars.Length < 3)  	throw new ArgumentException ("To determine mobile prefix' the text length must be longer than 3");  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsChineseMobilePrefix,The following statement contains a magic number: if (pattern == ParserPattern.China) {  	if (chars [0] != '1')  		return false;  	if (chars [1] != '3' && chars [1] != '8' && chars [1] != '5')  		//前缀必须是13' 15' 18  		return false;  	if (chars [1] == '5' && chars [2] == '4')  		//联通或电信 除154外  		return false;  	if (chars [1] == '8' && (chars [2] == '1' || chars [2] == '3' || chars [2] == '4'))  		//网通前缀: 189' 188' 180' 185' 186' 187  		return false;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsChineseMobilePrefix,The following statement contains a magic number: if (pattern == ParserPattern.China) {  	if (chars [0] != '1')  		return false;  	if (chars [1] != '3' && chars [1] != '8' && chars [1] != '5')  		//前缀必须是13' 15' 18  		return false;  	if (chars [1] == '5' && chars [2] == '4')  		//联通或电信 除154外  		return false;  	if (chars [1] == '8' && (chars [2] == '1' || chars [2] == '3' || chars [2] == '4'))  		//网通前缀: 189' 188' 180' 185' 186' 187  		return false;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsChineseMobilePrefix,The following statement contains a magic number: if (pattern == ParserPattern.China) {  	if (chars [0] != '1')  		return false;  	if (chars [1] != '3' && chars [1] != '8' && chars [1] != '5')  		//前缀必须是13' 15' 18  		return false;  	if (chars [1] == '5' && chars [2] == '4')  		//联通或电信 除154外  		return false;  	if (chars [1] == '8' && (chars [2] == '1' || chars [2] == '3' || chars [2] == '4'))  		//网通前缀: 189' 188' 180' 185' 186' 187  		return false;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsChineseMobilePrefix,The following statement contains a magic number: if (pattern == ParserPattern.China) {  	if (chars [0] != '1')  		return false;  	if (chars [1] != '3' && chars [1] != '8' && chars [1] != '5')  		//前缀必须是13' 15' 18  		return false;  	if (chars [1] == '5' && chars [2] == '4')  		//联通或电信 除154外  		return false;  	if (chars [1] == '8' && (chars [2] == '1' || chars [2] == '3' || chars [2] == '4'))  		//网通前缀: 189' 188' 180' 185' 186' 187  		return false;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsChineseMobilePrefix,The following statement contains a magic number: if (chars [1] == '5' && chars [2] == '4')  	//联通或电信 除154外  	return false;  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsChineseMobilePrefix,The following statement contains a magic number: if (chars [1] == '8' && (chars [2] == '1' || chars [2] == '3' || chars [2] == '4'))  	//网通前缀: 189' 188' 180' 185' 186' 187  	return false;  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsChineseMobilePrefix,The following statement contains a magic number: if (chars [1] == '8' && (chars [2] == '1' || chars [2] == '3' || chars [2] == '4'))  	//网通前缀: 189' 188' 180' 185' 186' 187  	return false;  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsChineseMobilePrefix,The following statement contains a magic number: if (chars [1] == '8' && (chars [2] == '1' || chars [2] == '3' || chars [2] == '4'))  	//网通前缀: 189' 188' 180' 185' 186' 187  	return false;  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsMobileNo,The following statement contains a magic number: if (pattern == ParserPattern.China) {  	if (chars.Length != 11)  		return false;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,IsMobileNo,The following statement contains a magic number: if (chars.Length != 11)  	return false;  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,AssignPhoneMain,The following statement contains a magic number: if (phone.Main == null) {  	phone.Main = segment.ToString ();  }  else if (phone.Main.Length < 5) {  	phone.Main += separator + segment.ToString ();  	bSeparatorLen = 1;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,AssignPhoneMain,The following statement contains a magic number: if (phone.Main.Length < 5) {  	phone.Main += separator + segment.ToString ();  	bSeparatorLen = 1;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,AssignPhoneMain,The following statement contains a magic number: if (IsMobileNo (phone.Main' _pattern)) {  	phone.IsMobile = true;  }  else {  	//非手机号码，8位  	if (_pattern == ParserPattern.China && phone.Main.Length > 8 + bSeparatorLen) {  		phone.Main = null;  	}  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,AssignPhoneMain,The following statement contains a magic number: if (_pattern == ParserPattern.China && phone.Main.Length > 8 + bSeparatorLen) {  	phone.Main = null;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (allowedString.Length < 3 || allowedString.Length == 4)  	return prc;  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (allowedString.Length < 3 || allowedString.Length == 4)  	return prc;  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (_pattern == ParserPattern.China) {  	while (i < allowedString.Length) {  		ch = allowedString [i];  		if (ch == '(') {  			bNumberInBrace = true;  			bCountryCodeStarted = false;  			whole.Append (ch);  		}  		else if (NumeralUtil.IsArabicNumeral (ch)) {  			if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  				bAreaCodeStarted = true;  			segment.Append (ch);  			whole.Append (ch);  		}  		else if (ch == ')' && bNumberInBrace) {  			if (bCountryCodeStarted) {  				if (segment.Length > 0)  					phone.CountryCode = segment.ToString ();  				bCountryCodeStarted = false;  			}  			if (bAreaCodeStarted) {  				if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  					//城市代码以0开头，最多4个数字；不以0开头，三个数字  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			whole.Append (ch);  			segment = new StringBuilder ();  			bNumberInBrace = false;  		}  		else if (ch == ' ') {  			if (bCountryCodeStarted) {  				if (segment.Length > 0)  					phone.CountryCode = segment.ToString ();  				bCountryCodeStarted = false;  			}  			else if (bAreaCodeStarted) {  				if (segment.Length > 0)  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			else if (segment.Length > 0) {  				AssignPhoneMain (segment' phone);  			}  			segment = new StringBuilder ();  			bCountryCodeStarted = false;  			whole.Append (ch);  		}  		else if (ch == '-' || ch == '#') {  			if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  				phone.AreaCode = segment.ToString ();  			}  			else if (segment.Length > 0) {  				AssignPhoneMain (segment' phone);  				bExtStarted = true;  			}  			segment = new StringBuilder ();  			whole.Append (ch);  		}  		else if (ch == '+') {  			whole.Append (ch);  			bCountryCodeStarted = true;  		}  		i++;  	}  	if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		if (bExtStarted) {  			phone.Extension = segment.ToString ();  			bExtStarted = false;  		}  	}  }  else if (_pattern == ParserPattern.NorthAmerica) {  	while (i < allowedString.Length) {  		ch = allowedString [i];  		if (NumeralUtil.IsArabicNumeral (ch)) {  			whole.Append (ch);  			segment.Append (ch);  		}  		else if (ch == ' ') {  			whole.Append (ch);  		}  		else if (ch == '(') {  			bAreaCodeStarted = true;  			whole.Append (ch);  		}  		else if (ch == ')') {  			if (bAreaCodeStarted) {  				if (segment.Length > 0)  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			segment = new StringBuilder ();  			whole.Append (ch);  		}  		else if (ch == '-') {  			if (bCountryCodeStarted) {  				if (segment.Length > 0)  					phone.CountryCode = segment.ToString ();  				bCountryCodeStarted = false;  				bAreaCodeStarted = true;  			}  			else if (bAreaCodeStarted) {  				if (segment.Length > 0)  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			else if (segment.Length > 0) {  				AssignPhoneMain (segment' phone);  			}  			whole.Append (ch);  			segment = new StringBuilder ();  		}  		else if (ch == '+') {  			bCountryCodeStarted = true;  			whole.Append (ch);  		}  		else if (ch == '.') {  			if (segment.ToString () != "ext")  				break;  			whole.Append ("ext.");  		}  		else if (ch == 'e' || ch == 'x' || ch == 't') {  			segment.Append (ch);  		}  		i++;  	}  	if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		if (bExtStarted) {  			phone.Extension = segment.ToString ();  			bExtStarted = false;  		}  	}  }  else {  	throw new NotImplementedException ("Phone No. in " + _pattern.ToString () + " is not implemented in the parser.");  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (_pattern == ParserPattern.China) {  	while (i < allowedString.Length) {  		ch = allowedString [i];  		if (ch == '(') {  			bNumberInBrace = true;  			bCountryCodeStarted = false;  			whole.Append (ch);  		}  		else if (NumeralUtil.IsArabicNumeral (ch)) {  			if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  				bAreaCodeStarted = true;  			segment.Append (ch);  			whole.Append (ch);  		}  		else if (ch == ')' && bNumberInBrace) {  			if (bCountryCodeStarted) {  				if (segment.Length > 0)  					phone.CountryCode = segment.ToString ();  				bCountryCodeStarted = false;  			}  			if (bAreaCodeStarted) {  				if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  					//城市代码以0开头，最多4个数字；不以0开头，三个数字  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			whole.Append (ch);  			segment = new StringBuilder ();  			bNumberInBrace = false;  		}  		else if (ch == ' ') {  			if (bCountryCodeStarted) {  				if (segment.Length > 0)  					phone.CountryCode = segment.ToString ();  				bCountryCodeStarted = false;  			}  			else if (bAreaCodeStarted) {  				if (segment.Length > 0)  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			else if (segment.Length > 0) {  				AssignPhoneMain (segment' phone);  			}  			segment = new StringBuilder ();  			bCountryCodeStarted = false;  			whole.Append (ch);  		}  		else if (ch == '-' || ch == '#') {  			if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  				phone.AreaCode = segment.ToString ();  			}  			else if (segment.Length > 0) {  				AssignPhoneMain (segment' phone);  				bExtStarted = true;  			}  			segment = new StringBuilder ();  			whole.Append (ch);  		}  		else if (ch == '+') {  			whole.Append (ch);  			bCountryCodeStarted = true;  		}  		i++;  	}  	if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		if (bExtStarted) {  			phone.Extension = segment.ToString ();  			bExtStarted = false;  		}  	}  }  else if (_pattern == ParserPattern.NorthAmerica) {  	while (i < allowedString.Length) {  		ch = allowedString [i];  		if (NumeralUtil.IsArabicNumeral (ch)) {  			whole.Append (ch);  			segment.Append (ch);  		}  		else if (ch == ' ') {  			whole.Append (ch);  		}  		else if (ch == '(') {  			bAreaCodeStarted = true;  			whole.Append (ch);  		}  		else if (ch == ')') {  			if (bAreaCodeStarted) {  				if (segment.Length > 0)  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			segment = new StringBuilder ();  			whole.Append (ch);  		}  		else if (ch == '-') {  			if (bCountryCodeStarted) {  				if (segment.Length > 0)  					phone.CountryCode = segment.ToString ();  				bCountryCodeStarted = false;  				bAreaCodeStarted = true;  			}  			else if (bAreaCodeStarted) {  				if (segment.Length > 0)  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			else if (segment.Length > 0) {  				AssignPhoneMain (segment' phone);  			}  			whole.Append (ch);  			segment = new StringBuilder ();  		}  		else if (ch == '+') {  			bCountryCodeStarted = true;  			whole.Append (ch);  		}  		else if (ch == '.') {  			if (segment.ToString () != "ext")  				break;  			whole.Append ("ext.");  		}  		else if (ch == 'e' || ch == 'x' || ch == 't') {  			segment.Append (ch);  		}  		i++;  	}  	if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		if (bExtStarted) {  			phone.Extension = segment.ToString ();  			bExtStarted = false;  		}  	}  }  else {  	throw new NotImplementedException ("Phone No. in " + _pattern.ToString () + " is not implemented in the parser.");  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (_pattern == ParserPattern.China) {  	while (i < allowedString.Length) {  		ch = allowedString [i];  		if (ch == '(') {  			bNumberInBrace = true;  			bCountryCodeStarted = false;  			whole.Append (ch);  		}  		else if (NumeralUtil.IsArabicNumeral (ch)) {  			if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  				bAreaCodeStarted = true;  			segment.Append (ch);  			whole.Append (ch);  		}  		else if (ch == ')' && bNumberInBrace) {  			if (bCountryCodeStarted) {  				if (segment.Length > 0)  					phone.CountryCode = segment.ToString ();  				bCountryCodeStarted = false;  			}  			if (bAreaCodeStarted) {  				if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  					//城市代码以0开头，最多4个数字；不以0开头，三个数字  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			whole.Append (ch);  			segment = new StringBuilder ();  			bNumberInBrace = false;  		}  		else if (ch == ' ') {  			if (bCountryCodeStarted) {  				if (segment.Length > 0)  					phone.CountryCode = segment.ToString ();  				bCountryCodeStarted = false;  			}  			else if (bAreaCodeStarted) {  				if (segment.Length > 0)  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			else if (segment.Length > 0) {  				AssignPhoneMain (segment' phone);  			}  			segment = new StringBuilder ();  			bCountryCodeStarted = false;  			whole.Append (ch);  		}  		else if (ch == '-' || ch == '#') {  			if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  				phone.AreaCode = segment.ToString ();  			}  			else if (segment.Length > 0) {  				AssignPhoneMain (segment' phone);  				bExtStarted = true;  			}  			segment = new StringBuilder ();  			whole.Append (ch);  		}  		else if (ch == '+') {  			whole.Append (ch);  			bCountryCodeStarted = true;  		}  		i++;  	}  	if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		if (bExtStarted) {  			phone.Extension = segment.ToString ();  			bExtStarted = false;  		}  	}  }  else if (_pattern == ParserPattern.NorthAmerica) {  	while (i < allowedString.Length) {  		ch = allowedString [i];  		if (NumeralUtil.IsArabicNumeral (ch)) {  			whole.Append (ch);  			segment.Append (ch);  		}  		else if (ch == ' ') {  			whole.Append (ch);  		}  		else if (ch == '(') {  			bAreaCodeStarted = true;  			whole.Append (ch);  		}  		else if (ch == ')') {  			if (bAreaCodeStarted) {  				if (segment.Length > 0)  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			segment = new StringBuilder ();  			whole.Append (ch);  		}  		else if (ch == '-') {  			if (bCountryCodeStarted) {  				if (segment.Length > 0)  					phone.CountryCode = segment.ToString ();  				bCountryCodeStarted = false;  				bAreaCodeStarted = true;  			}  			else if (bAreaCodeStarted) {  				if (segment.Length > 0)  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			else if (segment.Length > 0) {  				AssignPhoneMain (segment' phone);  			}  			whole.Append (ch);  			segment = new StringBuilder ();  		}  		else if (ch == '+') {  			bCountryCodeStarted = true;  			whole.Append (ch);  		}  		else if (ch == '.') {  			if (segment.ToString () != "ext")  				break;  			whole.Append ("ext.");  		}  		else if (ch == 'e' || ch == 'x' || ch == 't') {  			segment.Append (ch);  		}  		i++;  	}  	if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		if (bExtStarted) {  			phone.Extension = segment.ToString ();  			bExtStarted = false;  		}  	}  }  else {  	throw new NotImplementedException ("Phone No. in " + _pattern.ToString () + " is not implemented in the parser.");  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (_pattern == ParserPattern.China) {  	while (i < allowedString.Length) {  		ch = allowedString [i];  		if (ch == '(') {  			bNumberInBrace = true;  			bCountryCodeStarted = false;  			whole.Append (ch);  		}  		else if (NumeralUtil.IsArabicNumeral (ch)) {  			if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  				bAreaCodeStarted = true;  			segment.Append (ch);  			whole.Append (ch);  		}  		else if (ch == ')' && bNumberInBrace) {  			if (bCountryCodeStarted) {  				if (segment.Length > 0)  					phone.CountryCode = segment.ToString ();  				bCountryCodeStarted = false;  			}  			if (bAreaCodeStarted) {  				if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  					//城市代码以0开头，最多4个数字；不以0开头，三个数字  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			whole.Append (ch);  			segment = new StringBuilder ();  			bNumberInBrace = false;  		}  		else if (ch == ' ') {  			if (bCountryCodeStarted) {  				if (segment.Length > 0)  					phone.CountryCode = segment.ToString ();  				bCountryCodeStarted = false;  			}  			else if (bAreaCodeStarted) {  				if (segment.Length > 0)  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			else if (segment.Length > 0) {  				AssignPhoneMain (segment' phone);  			}  			segment = new StringBuilder ();  			bCountryCodeStarted = false;  			whole.Append (ch);  		}  		else if (ch == '-' || ch == '#') {  			if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  				phone.AreaCode = segment.ToString ();  			}  			else if (segment.Length > 0) {  				AssignPhoneMain (segment' phone);  				bExtStarted = true;  			}  			segment = new StringBuilder ();  			whole.Append (ch);  		}  		else if (ch == '+') {  			whole.Append (ch);  			bCountryCodeStarted = true;  		}  		i++;  	}  	if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		if (bExtStarted) {  			phone.Extension = segment.ToString ();  			bExtStarted = false;  		}  	}  }  else if (_pattern == ParserPattern.NorthAmerica) {  	while (i < allowedString.Length) {  		ch = allowedString [i];  		if (NumeralUtil.IsArabicNumeral (ch)) {  			whole.Append (ch);  			segment.Append (ch);  		}  		else if (ch == ' ') {  			whole.Append (ch);  		}  		else if (ch == '(') {  			bAreaCodeStarted = true;  			whole.Append (ch);  		}  		else if (ch == ')') {  			if (bAreaCodeStarted) {  				if (segment.Length > 0)  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			segment = new StringBuilder ();  			whole.Append (ch);  		}  		else if (ch == '-') {  			if (bCountryCodeStarted) {  				if (segment.Length > 0)  					phone.CountryCode = segment.ToString ();  				bCountryCodeStarted = false;  				bAreaCodeStarted = true;  			}  			else if (bAreaCodeStarted) {  				if (segment.Length > 0)  					phone.AreaCode = segment.ToString ();  				bAreaCodeStarted = false;  			}  			else if (segment.Length > 0) {  				AssignPhoneMain (segment' phone);  			}  			whole.Append (ch);  			segment = new StringBuilder ();  		}  		else if (ch == '+') {  			bCountryCodeStarted = true;  			whole.Append (ch);  		}  		else if (ch == '.') {  			if (segment.ToString () != "ext")  				break;  			whole.Append ("ext.");  		}  		else if (ch == 'e' || ch == 'x' || ch == 't') {  			segment.Append (ch);  		}  		i++;  	}  	if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		if (bExtStarted) {  			phone.Extension = segment.ToString ();  			bExtStarted = false;  		}  	}  }  else {  	throw new NotImplementedException ("Phone No. in " + _pattern.ToString () + " is not implemented in the parser.");  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: while (i < allowedString.Length) {  	ch = allowedString [i];  	if (ch == '(') {  		bNumberInBrace = true;  		bCountryCodeStarted = false;  		whole.Append (ch);  	}  	else if (NumeralUtil.IsArabicNumeral (ch)) {  		if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  			bAreaCodeStarted = true;  		segment.Append (ch);  		whole.Append (ch);  	}  	else if (ch == ')' && bNumberInBrace) {  		if (bCountryCodeStarted) {  			if (segment.Length > 0)  				phone.CountryCode = segment.ToString ();  			bCountryCodeStarted = false;  		}  		if (bAreaCodeStarted) {  			if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  				//城市代码以0开头，最多4个数字；不以0开头，三个数字  				phone.AreaCode = segment.ToString ();  			bAreaCodeStarted = false;  		}  		whole.Append (ch);  		segment = new StringBuilder ();  		bNumberInBrace = false;  	}  	else if (ch == ' ') {  		if (bCountryCodeStarted) {  			if (segment.Length > 0)  				phone.CountryCode = segment.ToString ();  			bCountryCodeStarted = false;  		}  		else if (bAreaCodeStarted) {  			if (segment.Length > 0)  				phone.AreaCode = segment.ToString ();  			bAreaCodeStarted = false;  		}  		else if (segment.Length > 0) {  			AssignPhoneMain (segment' phone);  		}  		segment = new StringBuilder ();  		bCountryCodeStarted = false;  		whole.Append (ch);  	}  	else if (ch == '-' || ch == '#') {  		if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  			phone.AreaCode = segment.ToString ();  		}  		else if (segment.Length > 0) {  			AssignPhoneMain (segment' phone);  			bExtStarted = true;  		}  		segment = new StringBuilder ();  		whole.Append (ch);  	}  	else if (ch == '+') {  		whole.Append (ch);  		bCountryCodeStarted = true;  	}  	i++;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: while (i < allowedString.Length) {  	ch = allowedString [i];  	if (ch == '(') {  		bNumberInBrace = true;  		bCountryCodeStarted = false;  		whole.Append (ch);  	}  	else if (NumeralUtil.IsArabicNumeral (ch)) {  		if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  			bAreaCodeStarted = true;  		segment.Append (ch);  		whole.Append (ch);  	}  	else if (ch == ')' && bNumberInBrace) {  		if (bCountryCodeStarted) {  			if (segment.Length > 0)  				phone.CountryCode = segment.ToString ();  			bCountryCodeStarted = false;  		}  		if (bAreaCodeStarted) {  			if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  				//城市代码以0开头，最多4个数字；不以0开头，三个数字  				phone.AreaCode = segment.ToString ();  			bAreaCodeStarted = false;  		}  		whole.Append (ch);  		segment = new StringBuilder ();  		bNumberInBrace = false;  	}  	else if (ch == ' ') {  		if (bCountryCodeStarted) {  			if (segment.Length > 0)  				phone.CountryCode = segment.ToString ();  			bCountryCodeStarted = false;  		}  		else if (bAreaCodeStarted) {  			if (segment.Length > 0)  				phone.AreaCode = segment.ToString ();  			bAreaCodeStarted = false;  		}  		else if (segment.Length > 0) {  			AssignPhoneMain (segment' phone);  		}  		segment = new StringBuilder ();  		bCountryCodeStarted = false;  		whole.Append (ch);  	}  	else if (ch == '-' || ch == '#') {  		if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  			phone.AreaCode = segment.ToString ();  		}  		else if (segment.Length > 0) {  			AssignPhoneMain (segment' phone);  			bExtStarted = true;  		}  		segment = new StringBuilder ();  		whole.Append (ch);  	}  	else if (ch == '+') {  		whole.Append (ch);  		bCountryCodeStarted = true;  	}  	i++;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: while (i < allowedString.Length) {  	ch = allowedString [i];  	if (ch == '(') {  		bNumberInBrace = true;  		bCountryCodeStarted = false;  		whole.Append (ch);  	}  	else if (NumeralUtil.IsArabicNumeral (ch)) {  		if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  			bAreaCodeStarted = true;  		segment.Append (ch);  		whole.Append (ch);  	}  	else if (ch == ')' && bNumberInBrace) {  		if (bCountryCodeStarted) {  			if (segment.Length > 0)  				phone.CountryCode = segment.ToString ();  			bCountryCodeStarted = false;  		}  		if (bAreaCodeStarted) {  			if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  				//城市代码以0开头，最多4个数字；不以0开头，三个数字  				phone.AreaCode = segment.ToString ();  			bAreaCodeStarted = false;  		}  		whole.Append (ch);  		segment = new StringBuilder ();  		bNumberInBrace = false;  	}  	else if (ch == ' ') {  		if (bCountryCodeStarted) {  			if (segment.Length > 0)  				phone.CountryCode = segment.ToString ();  			bCountryCodeStarted = false;  		}  		else if (bAreaCodeStarted) {  			if (segment.Length > 0)  				phone.AreaCode = segment.ToString ();  			bAreaCodeStarted = false;  		}  		else if (segment.Length > 0) {  			AssignPhoneMain (segment' phone);  		}  		segment = new StringBuilder ();  		bCountryCodeStarted = false;  		whole.Append (ch);  	}  	else if (ch == '-' || ch == '#') {  		if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  			phone.AreaCode = segment.ToString ();  		}  		else if (segment.Length > 0) {  			AssignPhoneMain (segment' phone);  			bExtStarted = true;  		}  		segment = new StringBuilder ();  		whole.Append (ch);  	}  	else if (ch == '+') {  		whole.Append (ch);  		bCountryCodeStarted = true;  	}  	i++;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: while (i < allowedString.Length) {  	ch = allowedString [i];  	if (ch == '(') {  		bNumberInBrace = true;  		bCountryCodeStarted = false;  		whole.Append (ch);  	}  	else if (NumeralUtil.IsArabicNumeral (ch)) {  		if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  			bAreaCodeStarted = true;  		segment.Append (ch);  		whole.Append (ch);  	}  	else if (ch == ')' && bNumberInBrace) {  		if (bCountryCodeStarted) {  			if (segment.Length > 0)  				phone.CountryCode = segment.ToString ();  			bCountryCodeStarted = false;  		}  		if (bAreaCodeStarted) {  			if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  				//城市代码以0开头，最多4个数字；不以0开头，三个数字  				phone.AreaCode = segment.ToString ();  			bAreaCodeStarted = false;  		}  		whole.Append (ch);  		segment = new StringBuilder ();  		bNumberInBrace = false;  	}  	else if (ch == ' ') {  		if (bCountryCodeStarted) {  			if (segment.Length > 0)  				phone.CountryCode = segment.ToString ();  			bCountryCodeStarted = false;  		}  		else if (bAreaCodeStarted) {  			if (segment.Length > 0)  				phone.AreaCode = segment.ToString ();  			bAreaCodeStarted = false;  		}  		else if (segment.Length > 0) {  			AssignPhoneMain (segment' phone);  		}  		segment = new StringBuilder ();  		bCountryCodeStarted = false;  		whole.Append (ch);  	}  	else if (ch == '-' || ch == '#') {  		if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  			phone.AreaCode = segment.ToString ();  		}  		else if (segment.Length > 0) {  			AssignPhoneMain (segment' phone);  			bExtStarted = true;  		}  		segment = new StringBuilder ();  		whole.Append (ch);  	}  	else if (ch == '+') {  		whole.Append (ch);  		bCountryCodeStarted = true;  	}  	i++;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (ch == '(') {  	bNumberInBrace = true;  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (NumeralUtil.IsArabicNumeral (ch)) {  	if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  		bAreaCodeStarted = true;  	segment.Append (ch);  	whole.Append (ch);  }  else if (ch == ')' && bNumberInBrace) {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	if (bAreaCodeStarted) {  		if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  			//城市代码以0开头，最多4个数字；不以0开头，三个数字  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	whole.Append (ch);  	segment = new StringBuilder ();  	bNumberInBrace = false;  }  else if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (ch == '(') {  	bNumberInBrace = true;  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (NumeralUtil.IsArabicNumeral (ch)) {  	if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  		bAreaCodeStarted = true;  	segment.Append (ch);  	whole.Append (ch);  }  else if (ch == ')' && bNumberInBrace) {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	if (bAreaCodeStarted) {  		if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  			//城市代码以0开头，最多4个数字；不以0开头，三个数字  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	whole.Append (ch);  	segment = new StringBuilder ();  	bNumberInBrace = false;  }  else if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (ch == '(') {  	bNumberInBrace = true;  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (NumeralUtil.IsArabicNumeral (ch)) {  	if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  		bAreaCodeStarted = true;  	segment.Append (ch);  	whole.Append (ch);  }  else if (ch == ')' && bNumberInBrace) {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	if (bAreaCodeStarted) {  		if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  			//城市代码以0开头，最多4个数字；不以0开头，三个数字  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	whole.Append (ch);  	segment = new StringBuilder ();  	bNumberInBrace = false;  }  else if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (ch == '(') {  	bNumberInBrace = true;  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (NumeralUtil.IsArabicNumeral (ch)) {  	if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  		bAreaCodeStarted = true;  	segment.Append (ch);  	whole.Append (ch);  }  else if (ch == ')' && bNumberInBrace) {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	if (bAreaCodeStarted) {  		if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  			//城市代码以0开头，最多4个数字；不以0开头，三个数字  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	whole.Append (ch);  	segment = new StringBuilder ();  	bNumberInBrace = false;  }  else if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (NumeralUtil.IsArabicNumeral (ch)) {  	if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  		bAreaCodeStarted = true;  	segment.Append (ch);  	whole.Append (ch);  }  else if (ch == ')' && bNumberInBrace) {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	if (bAreaCodeStarted) {  		if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  			//城市代码以0开头，最多4个数字；不以0开头，三个数字  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	whole.Append (ch);  	segment = new StringBuilder ();  	bNumberInBrace = false;  }  else if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (NumeralUtil.IsArabicNumeral (ch)) {  	if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  		bAreaCodeStarted = true;  	segment.Append (ch);  	whole.Append (ch);  }  else if (ch == ')' && bNumberInBrace) {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	if (bAreaCodeStarted) {  		if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  			//城市代码以0开头，最多4个数字；不以0开头，三个数字  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	whole.Append (ch);  	segment = new StringBuilder ();  	bNumberInBrace = false;  }  else if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (NumeralUtil.IsArabicNumeral (ch)) {  	if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  		bAreaCodeStarted = true;  	segment.Append (ch);  	whole.Append (ch);  }  else if (ch == ')' && bNumberInBrace) {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	if (bAreaCodeStarted) {  		if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  			//城市代码以0开头，最多4个数字；不以0开头，三个数字  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	whole.Append (ch);  	segment = new StringBuilder ();  	bNumberInBrace = false;  }  else if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (NumeralUtil.IsArabicNumeral (ch)) {  	if (segment.Length == 0 && !bAreaCodeStarted && phone.AreaCode == null && !bCountryCodeStarted)  		bAreaCodeStarted = true;  	segment.Append (ch);  	whole.Append (ch);  }  else if (ch == ')' && bNumberInBrace) {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	if (bAreaCodeStarted) {  		if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  			//城市代码以0开头，最多4个数字；不以0开头，三个数字  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	whole.Append (ch);  	segment = new StringBuilder ();  	bNumberInBrace = false;  }  else if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (ch == ')' && bNumberInBrace) {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	if (bAreaCodeStarted) {  		if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  			//城市代码以0开头，最多4个数字；不以0开头，三个数字  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	whole.Append (ch);  	segment = new StringBuilder ();  	bNumberInBrace = false;  }  else if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (ch == ')' && bNumberInBrace) {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	if (bAreaCodeStarted) {  		if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  			//城市代码以0开头，最多4个数字；不以0开头，三个数字  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	whole.Append (ch);  	segment = new StringBuilder ();  	bNumberInBrace = false;  }  else if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (ch == ')' && bNumberInBrace) {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	if (bAreaCodeStarted) {  		if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  			//城市代码以0开头，最多4个数字；不以0开头，三个数字  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	whole.Append (ch);  	segment = new StringBuilder ();  	bNumberInBrace = false;  }  else if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (ch == ')' && bNumberInBrace) {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	if (bAreaCodeStarted) {  		if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  			//城市代码以0开头，最多4个数字；不以0开头，三个数字  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	whole.Append (ch);  	segment = new StringBuilder ();  	bNumberInBrace = false;  }  else if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (bAreaCodeStarted) {  	if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  		//城市代码以0开头，最多4个数字；不以0开头，三个数字  		phone.AreaCode = segment.ToString ();  	bAreaCodeStarted = false;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (bAreaCodeStarted) {  	if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  		//城市代码以0开头，最多4个数字；不以0开头，三个数字  		phone.AreaCode = segment.ToString ();  	bAreaCodeStarted = false;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  	//城市代码以0开头，最多4个数字；不以0开头，三个数字  	phone.AreaCode = segment.ToString ();  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (segment.Length > 0 && (segment [0] == '0' ? segment.Length <= 4 : segment.Length <= 3))  	//城市代码以0开头，最多4个数字；不以0开头，三个数字  	phone.AreaCode = segment.ToString ();  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (ch == ' ') {  	if (bCountryCodeStarted) {  		if (segment.Length > 0)  			phone.CountryCode = segment.ToString ();  		bCountryCodeStarted = false;  	}  	else if (bAreaCodeStarted) {  		if (segment.Length > 0)  			phone.AreaCode = segment.ToString ();  		bAreaCodeStarted = false;  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  	}  	segment = new StringBuilder ();  	bCountryCodeStarted = false;  	whole.Append (ch);  }  else if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (ch == '-' || ch == '#') {  	if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  		phone.AreaCode = segment.ToString ();  	}  	else if (segment.Length > 0) {  		AssignPhoneMain (segment' phone);  		bExtStarted = true;  	}  	segment = new StringBuilder ();  	whole.Append (ch);  }  else if (ch == '+') {  	whole.Append (ch);  	bCountryCodeStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  	phone.AreaCode = segment.ToString ();  }  else if (segment.Length > 0) {  	AssignPhoneMain (segment' phone);  	bExtStarted = true;  }  
Magic Number,Nepy.Parsers,PhoneNoParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PhoneNoParser.cs,Parse,The following statement contains a magic number: if (segment [0] == '0' && (segment.Length == 3 || segment.Length == 4)) {  	phone.AreaCode = segment.ToString ();  }  else if (segment.Length > 0) {  	AssignPhoneMain (segment' phone);  	bExtStarted = true;  }  
Magic Number,Nepy.Parsers,PostalCodeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PostalCodeParser.cs,Parse,The following statement contains a magic number: if (_format == ParserPattern.China) {  	if (source.Length != 6)  		return prc;  }  else if (_format == ParserPattern.NorthAmerica) {  	if (source.Length != 5)  		return prc;  }  
Magic Number,Nepy.Parsers,PostalCodeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PostalCodeParser.cs,Parse,The following statement contains a magic number: if (_format == ParserPattern.China) {  	if (source.Length != 6)  		return prc;  }  else if (_format == ParserPattern.NorthAmerica) {  	if (source.Length != 5)  		return prc;  }  
Magic Number,Nepy.Parsers,PostalCodeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PostalCodeParser.cs,Parse,The following statement contains a magic number: if (source.Length != 6)  	return prc;  
Magic Number,Nepy.Parsers,PostalCodeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PostalCodeParser.cs,Parse,The following statement contains a magic number: if (_format == ParserPattern.NorthAmerica) {  	if (source.Length != 5)  		return prc;  }  
Magic Number,Nepy.Parsers,PostalCodeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\PostalCodeParser.cs,Parse,The following statement contains a magic number: if (source.Length != 5)  	return prc;  
Missing Default,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,StripOrConvertThis,The following switch statement is missing a default case: switch (unit) {  case "month":  	return thisWithUnits.Replace (dateString' dateBase.ToString ("MMMM"' dateTimeFormat));  case "week":  	return thisWithUnits.Replace (dateString' dateBase.This (DateUnit.Week).ToString ());  }  
Missing Default,Nepy.Parsers,EnglishDateTimeParser,C:\repos\tonyqus_nepy\Nepy.Parsers\EnglishDateTimeParser.cs,CheckSpecificDayNames,The following switch statement is missing a default case: switch (dateString) {  case "tomorrow":  	return dateBase.AddDays (1);  case "yesterday":  	return dateBase.AddDays (-1);  case "today":  	return dateBase;  case "day after tomorrow":  	return dateBase.AddDays (2);  }  
