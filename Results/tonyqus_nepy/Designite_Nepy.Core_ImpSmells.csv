Implementation smell,Namespace,Class,File,Method,Description
Long Method,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The method has 104 lines of code.
Complex Method,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,Cyclomatic complexity of the method is 19
Complex Method,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,PhraseChineseNumeral,Cyclomatic complexity of the method is 9
Complex Method,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,ConvertCJKToArabic,Cyclomatic complexity of the method is 58
Long Parameter List,DateTimeExtensions,TimeExtensions,C:\repos\tonyqus_nepy\Nepy.Core\DateTimeExtensions\TimeExtensions.cs,SetTime,The method has 5 parameters.
Long Statement,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,IsWesternPunctuation,The length of the statement  "	return ch == '\'' || ch == '\"' || ch == '?' || ch == '.' || ch == ':' || ch == ''' || ch == ';' || ch == '(' || ch == ')' || ch == '[' || ch == ']' || ch == '{' || ch == '}' || ch == '!' || ch == '/' || ch == '«' || ch == '»' || ch == '-' || ch == '—' || ch == '–' || ch == '"' || ch == '\'' || ch == '$'; " is 306.
Long Statement,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,IsChinesePunctuation,The length of the statement  "	return ch == '，' || ch == '。' || ch == '：' || ch == '？' || ch == '；' || ch == '“' || ch == '”' || ch == '‘' || ch == '’' || ch == '「' || ch == '」' || ch == '﹁' || ch == '﹂' || ch == '『' || ch == '』' || ch == '、' || ch == '·' || ch == '《' || ch == '》' || ch == '…' || ch == '—' || ch == '～' || ch == '（' || ch == '）'; " is 316.
Long Statement,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,IsJapanesePunctuation,The length of the statement  "	return ch == '。' || ch == '、' || ch == '：' || ch == '！' || ch == '？' || ch == '〜' || ch == '『' || ch == '』' || ch == '「' || ch == '」' || ch == '〽' || ch == '‥' || ch == '…' || ch == '（' || ch == '）' || ch == '｛' || ch == '｝' || ch == '［' || ch == '］' || ch == '【' || ch == '】'; " is 277.
Long Statement,Nepy.Core,DateRange,C:\repos\tonyqus_nepy\Nepy.Core\Entities\DateRange.cs,Intersects,The length of the statement  "	if ((this.startDate.HasValue && other.EndDate.HasValue && other.EndDate.Value < this.startDate.Value) || (this.endDate.HasValue && other.StartDate.HasValue && other.StartDate.Value > this.endDate.Value) || (other.StartDate.HasValue && this.endDate.HasValue && this.endDate.Value < other.StartDate.Value) || (other.EndDate.HasValue && this.startDate.HasValue && this.startDate.Value > other.EndDate.Value)) { " is 407.
Long Statement,Nepy.Core,Address,C:\repos\tonyqus_nepy\Nepy.Core\Entities\Address.cs,ToString,The length of the statement  "	return string.Format (CultureInfo.InvariantCulture' "{0}; {1}' {2}  {3}"' this.StreetLine' this.City' this.State' this.Zip); " is 124.
Complex Conditional,Nepy.Core,DateRange,C:\repos\tonyqus_nepy\Nepy.Core\Entities\DateRange.cs,Intersects,The conditional expression  "(this.startDate.HasValue && other.EndDate.HasValue && other.EndDate.Value < this.startDate.Value) || (this.endDate.HasValue && other.StartDate.HasValue && other.StartDate.Value > this.endDate.Value) || (other.StartDate.HasValue && this.endDate.HasValue && this.endDate.Value < other.StartDate.Value) || (other.EndDate.HasValue && this.startDate.HasValue && this.startDate.Value > other.EndDate.Value)"  is complex.
Complex Conditional,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The conditional expression  "ch0 != 'o' && ch0 != 't' && ch0 != 'f' && ch0 != 's' && ch0 != 'e' && ch0 != 'n' && ch0 != 'b' && ch0 != 'm'"  is complex.
Complex Conditional,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The conditional expression  "text.Length == 3 && (text == "one" || text == "two" || text == "ten" || text == "six")"  is complex.
Complex Conditional,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The conditional expression  "text.Length == 4 && (text == "four" || text == "five" || text == "nine")"  is complex.
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,IsSpaceLetter,The following statement contains a magic number: return input == 8 || input == 9 || input == 10 || input == 13 || input == 32 || input == 160;  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,IsSpaceLetter,The following statement contains a magic number: return input == 8 || input == 9 || input == 10 || input == 13 || input == 32 || input == 160;  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,IsSpaceLetter,The following statement contains a magic number: return input == 8 || input == 9 || input == 10 || input == 13 || input == 32 || input == 160;  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,IsSpaceLetter,The following statement contains a magic number: return input == 8 || input == 9 || input == 10 || input == 13 || input == 32 || input == 160;  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,IsSpaceLetter,The following statement contains a magic number: return input == 8 || input == 9 || input == 10 || input == 13 || input == 32 || input == 160;  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,IsSpaceLetter,The following statement contains a magic number: return input == 8 || input == 9 || input == 10 || input == 13 || input == 32 || input == 160;  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: if (input == 12288) {  	input = (char)32;  }  else if (input > 65280 && input < 65375) {  	input = (char)(input - 65248);  }  else if (input >= 'A' && input <= 'Z') {  	input = (char)((int)input + 32);  }  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: if (input == 12288) {  	input = (char)32;  }  else if (input > 65280 && input < 65375) {  	input = (char)(input - 65248);  }  else if (input >= 'A' && input <= 'Z') {  	input = (char)((int)input + 32);  }  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: if (input == 12288) {  	input = (char)32;  }  else if (input > 65280 && input < 65375) {  	input = (char)(input - 65248);  }  else if (input >= 'A' && input <= 'Z') {  	input = (char)((int)input + 32);  }  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: if (input == 12288) {  	input = (char)32;  }  else if (input > 65280 && input < 65375) {  	input = (char)(input - 65248);  }  else if (input >= 'A' && input <= 'Z') {  	input = (char)((int)input + 32);  }  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: if (input == 12288) {  	input = (char)32;  }  else if (input > 65280 && input < 65375) {  	input = (char)(input - 65248);  }  else if (input >= 'A' && input <= 'Z') {  	input = (char)((int)input + 32);  }  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: if (input == 12288) {  	input = (char)32;  }  else if (input > 65280 && input < 65375) {  	input = (char)(input - 65248);  }  else if (input >= 'A' && input <= 'Z') {  	input = (char)((int)input + 32);  }  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: input = (char)32;  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: if (input > 65280 && input < 65375) {  	input = (char)(input - 65248);  }  else if (input >= 'A' && input <= 'Z') {  	input = (char)((int)input + 32);  }  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: if (input > 65280 && input < 65375) {  	input = (char)(input - 65248);  }  else if (input >= 'A' && input <= 'Z') {  	input = (char)((int)input + 32);  }  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: if (input > 65280 && input < 65375) {  	input = (char)(input - 65248);  }  else if (input >= 'A' && input <= 'Z') {  	input = (char)((int)input + 32);  }  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: if (input > 65280 && input < 65375) {  	input = (char)(input - 65248);  }  else if (input >= 'A' && input <= 'Z') {  	input = (char)((int)input + 32);  }  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: input = (char)(input - 65248);  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: if (input >= 'A' && input <= 'Z') {  	input = (char)((int)input + 32);  }  
Magic Number,Nepy.Core,CharacterUtil,C:\repos\tonyqus_nepy\Nepy.Core\CharacterUtil.cs,Regularize,The following statement contains a magic number: input = (char)((int)input + 32);  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	char ch = text [i];  	if (NumeralUtil.IsArabicNumeral (ch)) {  		sbDateText.Append (ch);  		strLen++;  	}  	else if (ch == '年') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '日') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('d'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '月') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '分') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('m'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '秒') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('s'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '点') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('h'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '/') {  		if (strLen == 4) {  			sbPatternText.Append (GeneratePatternText ('y'' strLen));  		}  		else if (strLen == 2) {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  		sbPatternText.Append (ch);  		sbDateText.Append (ch);  		strLen = 0;  	}  	else if (ch == ' ') {  		if (strLen == 2) {  			if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  				sbPatternText.Append (GeneratePatternText ('d'' strLen));  			}  			else {  				sbPatternText.Append (GeneratePatternText ('M'' strLen));  			}  		}  		continue;  	}  	else {  		if (sbDateText.Length == 0) {  			sbText.Append (ch);  			strLen = 0;  			continue;  		}  		DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  		if (dt != null) {  			sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  		}  		else {  			sbText.AppendFormat ("[{0}]"' errText);  		}  		//clear the string builder  		sbDateText = new StringBuilder ();  		sbPatternText = new StringBuilder ();  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	char ch = text [i];  	if (NumeralUtil.IsArabicNumeral (ch)) {  		sbDateText.Append (ch);  		strLen++;  	}  	else if (ch == '年') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '日') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('d'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '月') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '分') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('m'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '秒') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('s'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '点') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('h'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '/') {  		if (strLen == 4) {  			sbPatternText.Append (GeneratePatternText ('y'' strLen));  		}  		else if (strLen == 2) {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  		sbPatternText.Append (ch);  		sbDateText.Append (ch);  		strLen = 0;  	}  	else if (ch == ' ') {  		if (strLen == 2) {  			if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  				sbPatternText.Append (GeneratePatternText ('d'' strLen));  			}  			else {  				sbPatternText.Append (GeneratePatternText ('M'' strLen));  			}  		}  		continue;  	}  	else {  		if (sbDateText.Length == 0) {  			sbText.Append (ch);  			strLen = 0;  			continue;  		}  		DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  		if (dt != null) {  			sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  		}  		else {  			sbText.AppendFormat ("[{0}]"' errText);  		}  		//clear the string builder  		sbDateText = new StringBuilder ();  		sbPatternText = new StringBuilder ();  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	char ch = text [i];  	if (NumeralUtil.IsArabicNumeral (ch)) {  		sbDateText.Append (ch);  		strLen++;  	}  	else if (ch == '年') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '日') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('d'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '月') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '分') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('m'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '秒') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('s'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '点') {  		sbDateText.Append (ch);  		sbPatternText.Append (GeneratePatternText ('h'' strLen));  		sbPatternText.Append (ch);  		strLen = 0;  	}  	else if (ch == '/') {  		if (strLen == 4) {  			sbPatternText.Append (GeneratePatternText ('y'' strLen));  		}  		else if (strLen == 2) {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  		sbPatternText.Append (ch);  		sbDateText.Append (ch);  		strLen = 0;  	}  	else if (ch == ' ') {  		if (strLen == 2) {  			if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  				sbPatternText.Append (GeneratePatternText ('d'' strLen));  			}  			else {  				sbPatternText.Append (GeneratePatternText ('M'' strLen));  			}  		}  		continue;  	}  	else {  		if (sbDateText.Length == 0) {  			sbText.Append (ch);  			strLen = 0;  			continue;  		}  		DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  		if (dt != null) {  			sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  		}  		else {  			sbText.AppendFormat ("[{0}]"' errText);  		}  		//clear the string builder  		sbDateText = new StringBuilder ();  		sbPatternText = new StringBuilder ();  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (NumeralUtil.IsArabicNumeral (ch)) {  	sbDateText.Append (ch);  	strLen++;  }  else if (ch == '年') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('y'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '日') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('d'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '月') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (NumeralUtil.IsArabicNumeral (ch)) {  	sbDateText.Append (ch);  	strLen++;  }  else if (ch == '年') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('y'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '日') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('d'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '月') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (NumeralUtil.IsArabicNumeral (ch)) {  	sbDateText.Append (ch);  	strLen++;  }  else if (ch == '年') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('y'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '日') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('d'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '月') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '年') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('y'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '日') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('d'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '月') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '年') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('y'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '日') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('d'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '月') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '年') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('y'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '日') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('d'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '月') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '日') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('d'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '月') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '日') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('d'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '月') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '日') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('d'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '月') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '月') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '月') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '月') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '分') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('m'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '秒') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('s'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '点') {  	sbDateText.Append (ch);  	sbPatternText.Append (GeneratePatternText ('h'' strLen));  	sbPatternText.Append (ch);  	strLen = 0;  }  else if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == '/') {  	if (strLen == 4) {  		sbPatternText.Append (GeneratePatternText ('y'' strLen));  	}  	else if (strLen == 2) {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  	sbPatternText.Append (ch);  	sbDateText.Append (ch);  	strLen = 0;  }  else if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (strLen == 4) {  	sbPatternText.Append (GeneratePatternText ('y'' strLen));  }  else if (strLen == 2) {  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (strLen == 4) {  	sbPatternText.Append (GeneratePatternText ('y'' strLen));  }  else if (strLen == 2) {  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (strLen == 2) {  	sbPatternText.Append (GeneratePatternText ('M'' strLen));  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (ch == ' ') {  	if (strLen == 2) {  		if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  			sbPatternText.Append (GeneratePatternText ('d'' strLen));  		}  		else {  			sbPatternText.Append (GeneratePatternText ('M'' strLen));  		}  	}  	continue;  }  else {  	if (sbDateText.Length == 0) {  		sbText.Append (ch);  		strLen = 0;  		continue;  	}  	DateTime? dt = ParseDate (sbDateText.ToString ()' sbPatternText.ToString ());  	if (dt != null) {  		sbText.AppendFormat (formatPattern == null ? "[{0}]" : "[{0:" + formatPattern + "}]"' dt);  	}  	else {  		sbText.AppendFormat ("[{0}]"' errText);  	}  	//clear the string builder  	sbDateText = new StringBuilder ();  	sbPatternText = new StringBuilder ();  	sbText.Append (ch);  	strLen = 0;  	continue;  }  
Magic Number,Nepy.Core,DateUtil,C:\repos\tonyqus_nepy\Nepy.Core\DateUtil.cs,ConvertChineseText2DateText,The following statement contains a magic number: if (strLen == 2) {  	if (sbPatternText.ToString ().IndexOf ('M') >= 0) {  		sbPatternText.Append (GeneratePatternText ('d'' strLen));  	}  	else {  		sbPatternText.Append (GeneratePatternText ('M'' strLen));  	}  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length < 3 || text.Length > 8)  	return false;  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length < 3 || text.Length > 8)  	return false;  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 3 && (text == "one" || text == "two" || text == "ten" || text == "six")) {  	return true;  }  else if (text.Length == 4 && (text == "four" || text == "five" || text == "nine")) {  	return true;  }  else if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 3 && (text == "one" || text == "two" || text == "ten" || text == "six")) {  	return true;  }  else if (text.Length == 4 && (text == "four" || text == "five" || text == "nine")) {  	return true;  }  else if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 3 && (text == "one" || text == "two" || text == "ten" || text == "six")) {  	return true;  }  else if (text.Length == 4 && (text == "four" || text == "five" || text == "nine")) {  	return true;  }  else if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 3 && (text == "one" || text == "two" || text == "ten" || text == "six")) {  	return true;  }  else if (text.Length == 4 && (text == "four" || text == "five" || text == "nine")) {  	return true;  }  else if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 3 && (text == "one" || text == "two" || text == "ten" || text == "six")) {  	return true;  }  else if (text.Length == 4 && (text == "four" || text == "five" || text == "nine")) {  	return true;  }  else if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 3 && (text == "one" || text == "two" || text == "ten" || text == "six")) {  	return true;  }  else if (text.Length == 4 && (text == "four" || text == "five" || text == "nine")) {  	return true;  }  else if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 4 && (text == "four" || text == "five" || text == "nine")) {  	return true;  }  else if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 4 && (text == "four" || text == "five" || text == "nine")) {  	return true;  }  else if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 4 && (text == "four" || text == "five" || text == "nine")) {  	return true;  }  else if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 4 && (text == "four" || text == "five" || text == "nine")) {  	return true;  }  else if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 4 && (text == "four" || text == "five" || text == "nine")) {  	return true;  }  else if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 5 && (text == "three" || text == "eight")) {  	return true;  }  else if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 6 && text == "steven") {  	return true;  }  else if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 7 && (text == "billion" || text == "million")) {  	return true;  }  else if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,IsEnglishNumeral,The following statement contains a magic number: if (text.Length == 8 && text == "thousand") {  	return true;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,PhraseChineseNumeral,The following statement contains a magic number: for (int j = 0; j < text.Length; j++) {  	char ch = text [j];  	if (ch == '负') {  		x = x * -1;  		continue;  	}  	bool handled = false;  	for (int k = 0; k < chnGenText.Length; k++) {  		if (ch == chnGenText [k] || (k < chnRMBText.Length && ch == chnRMBText [k])) {  			if (isPrevNumeral)  				t = t * 10 + k;  			else  				t = k;  			handled = true;  			isPrevNumeral = true;  			break;  		}  	}  	if (handled)  		continue;  	for (int k = 0; k < chnGenDigit.Length; k++) {  		if (ch == chnGenDigit [k] || ch == chnRMBDigit [k]) {  			sum = sum + t * Math.Pow (10' k + 1);  			t = 0;  			isPrevNumeral = false;  			break;  		}  	}  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,PhraseChineseNumeral,The following statement contains a magic number: for (int j = 0; j < text.Length; j++) {  	char ch = text [j];  	if (ch == '负') {  		x = x * -1;  		continue;  	}  	bool handled = false;  	for (int k = 0; k < chnGenText.Length; k++) {  		if (ch == chnGenText [k] || (k < chnRMBText.Length && ch == chnRMBText [k])) {  			if (isPrevNumeral)  				t = t * 10 + k;  			else  				t = k;  			handled = true;  			isPrevNumeral = true;  			break;  		}  	}  	if (handled)  		continue;  	for (int k = 0; k < chnGenDigit.Length; k++) {  		if (ch == chnGenDigit [k] || ch == chnRMBDigit [k]) {  			sum = sum + t * Math.Pow (10' k + 1);  			t = 0;  			isPrevNumeral = false;  			break;  		}  	}  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,PhraseChineseNumeral,The following statement contains a magic number: for (int k = 0; k < chnGenText.Length; k++) {  	if (ch == chnGenText [k] || (k < chnRMBText.Length && ch == chnRMBText [k])) {  		if (isPrevNumeral)  			t = t * 10 + k;  		else  			t = k;  		handled = true;  		isPrevNumeral = true;  		break;  	}  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,PhraseChineseNumeral,The following statement contains a magic number: if (ch == chnGenText [k] || (k < chnRMBText.Length && ch == chnRMBText [k])) {  	if (isPrevNumeral)  		t = t * 10 + k;  	else  		t = k;  	handled = true;  	isPrevNumeral = true;  	break;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,PhraseChineseNumeral,The following statement contains a magic number: if (isPrevNumeral)  	t = t * 10 + k;  else  	t = k;  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,PhraseChineseNumeral,The following statement contains a magic number: t = t * 10 + k;  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,PhraseChineseNumeral,The following statement contains a magic number: for (int k = 0; k < chnGenDigit.Length; k++) {  	if (ch == chnGenDigit [k] || ch == chnRMBDigit [k]) {  		sum = sum + t * Math.Pow (10' k + 1);  		t = 0;  		isPrevNumeral = false;  		break;  	}  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,PhraseChineseNumeral,The following statement contains a magic number: if (ch == chnGenDigit [k] || ch == chnRMBDigit [k]) {  	sum = sum + t * Math.Pow (10' k + 1);  	t = 0;  	isPrevNumeral = false;  	break;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,PhraseChineseNumeral,The following statement contains a magic number: sum = sum + t * Math.Pow (10' k + 1);  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,ConvertCJKToArabic,The following statement contains a magic number: switch (ch) {  case '0':  case '零':  case '〇':  case '영':  	return '0';  case '1':  case '一':  case '壹':  case '일':  	return '1';  case '2':  case '二':  case '两':  case '俩':  case '貳':  case '이':  	return '2';  case '3':  case '三':  case '叁':  case '삼':  	return '3';  case '4':  case '四':  case '肆':  case '사':  	return '4';  case '5':  case '五':  case '伍':  case '오':  	return '5';  case '6':  case '六':  case '陸':  case '육':  	return '6';  case '7':  case '柒':  case '七':  case '칠':  	return '7';  case '8':  case '捌':  case '八':  case '팔':  	return '8';  case '9':  case '九':  case '玖':  case '구':  	return '9';  case '十':  case '什':  case '십':  	return 10;  case '百':  case '佰':  case '백':  	return 100;  case '千':  case '仟':  case '천':  	return 1000;  case '万':  case '萬':  case '만':  	return 10000;  case '亿':  case '億':  case '억':  	return 100000000;  //case '兆':  //case '조':  //    return 1000000000000;  default:  	return -1;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,ConvertCJKToArabic,The following statement contains a magic number: switch (ch) {  case '0':  case '零':  case '〇':  case '영':  	return '0';  case '1':  case '一':  case '壹':  case '일':  	return '1';  case '2':  case '二':  case '两':  case '俩':  case '貳':  case '이':  	return '2';  case '3':  case '三':  case '叁':  case '삼':  	return '3';  case '4':  case '四':  case '肆':  case '사':  	return '4';  case '5':  case '五':  case '伍':  case '오':  	return '5';  case '6':  case '六':  case '陸':  case '육':  	return '6';  case '7':  case '柒':  case '七':  case '칠':  	return '7';  case '8':  case '捌':  case '八':  case '팔':  	return '8';  case '9':  case '九':  case '玖':  case '구':  	return '9';  case '十':  case '什':  case '십':  	return 10;  case '百':  case '佰':  case '백':  	return 100;  case '千':  case '仟':  case '천':  	return 1000;  case '万':  case '萬':  case '만':  	return 10000;  case '亿':  case '億':  case '억':  	return 100000000;  //case '兆':  //case '조':  //    return 1000000000000;  default:  	return -1;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,ConvertCJKToArabic,The following statement contains a magic number: switch (ch) {  case '0':  case '零':  case '〇':  case '영':  	return '0';  case '1':  case '一':  case '壹':  case '일':  	return '1';  case '2':  case '二':  case '两':  case '俩':  case '貳':  case '이':  	return '2';  case '3':  case '三':  case '叁':  case '삼':  	return '3';  case '4':  case '四':  case '肆':  case '사':  	return '4';  case '5':  case '五':  case '伍':  case '오':  	return '5';  case '6':  case '六':  case '陸':  case '육':  	return '6';  case '7':  case '柒':  case '七':  case '칠':  	return '7';  case '8':  case '捌':  case '八':  case '팔':  	return '8';  case '9':  case '九':  case '玖':  case '구':  	return '9';  case '十':  case '什':  case '십':  	return 10;  case '百':  case '佰':  case '백':  	return 100;  case '千':  case '仟':  case '천':  	return 1000;  case '万':  case '萬':  case '만':  	return 10000;  case '亿':  case '億':  case '억':  	return 100000000;  //case '兆':  //case '조':  //    return 1000000000000;  default:  	return -1;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,ConvertCJKToArabic,The following statement contains a magic number: switch (ch) {  case '0':  case '零':  case '〇':  case '영':  	return '0';  case '1':  case '一':  case '壹':  case '일':  	return '1';  case '2':  case '二':  case '两':  case '俩':  case '貳':  case '이':  	return '2';  case '3':  case '三':  case '叁':  case '삼':  	return '3';  case '4':  case '四':  case '肆':  case '사':  	return '4';  case '5':  case '五':  case '伍':  case '오':  	return '5';  case '6':  case '六':  case '陸':  case '육':  	return '6';  case '7':  case '柒':  case '七':  case '칠':  	return '7';  case '8':  case '捌':  case '八':  case '팔':  	return '8';  case '9':  case '九':  case '玖':  case '구':  	return '9';  case '十':  case '什':  case '십':  	return 10;  case '百':  case '佰':  case '백':  	return 100;  case '千':  case '仟':  case '천':  	return 1000;  case '万':  case '萬':  case '만':  	return 10000;  case '亿':  case '億':  case '억':  	return 100000000;  //case '兆':  //case '조':  //    return 1000000000000;  default:  	return -1;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,ConvertCJKToArabic,The following statement contains a magic number: switch (ch) {  case '0':  case '零':  case '〇':  case '영':  	return '0';  case '1':  case '一':  case '壹':  case '일':  	return '1';  case '2':  case '二':  case '两':  case '俩':  case '貳':  case '이':  	return '2';  case '3':  case '三':  case '叁':  case '삼':  	return '3';  case '4':  case '四':  case '肆':  case '사':  	return '4';  case '5':  case '五':  case '伍':  case '오':  	return '5';  case '6':  case '六':  case '陸':  case '육':  	return '6';  case '7':  case '柒':  case '七':  case '칠':  	return '7';  case '8':  case '捌':  case '八':  case '팔':  	return '8';  case '9':  case '九':  case '玖':  case '구':  	return '9';  case '十':  case '什':  case '십':  	return 10;  case '百':  case '佰':  case '백':  	return 100;  case '千':  case '仟':  case '천':  	return 1000;  case '万':  case '萬':  case '만':  	return 10000;  case '亿':  case '億':  case '억':  	return 100000000;  //case '兆':  //case '조':  //    return 1000000000000;  default:  	return -1;  }  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,ConvertCJKToArabic,The following statement contains a magic number: return 10;  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,ConvertCJKToArabic,The following statement contains a magic number: return 100;  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,ConvertCJKToArabic,The following statement contains a magic number: return 1000;  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,ConvertCJKToArabic,The following statement contains a magic number: return 10000;  
Magic Number,Nepy.Core,NumeralUtil,C:\repos\tonyqus_nepy\Nepy.Core\NumeralUtil.cs,ConvertCJKToArabic,The following statement contains a magic number: return 100000000;  
Magic Number,Nepy.Core,UnicodeBlock,C:\repos\tonyqus_nepy\Nepy.Core\UnicodeBlock.cs,Of,The following statement contains a magic number: current = top / 2;  
Magic Number,Nepy.Core,UnicodeBlock,C:\repos\tonyqus_nepy\Nepy.Core\UnicodeBlock.cs,Of,The following statement contains a magic number: while (top - bottom > 1) {  	if (codePoint >= blockStarts [current]) {  		bottom = current;  	}  	else {  		top = current;  	}  	current = (top + bottom) / 2;  }  
Magic Number,Nepy.Core,UnicodeBlock,C:\repos\tonyqus_nepy\Nepy.Core\UnicodeBlock.cs,Of,The following statement contains a magic number: current = (top + bottom) / 2;  
Magic Number,Nepy.Core,Utility,C:\repos\tonyqus_nepy\Nepy.Core\Utility.cs,DetectBOM,The following statement contains a magic number: if (file.Length < 3) {  	throw new InvalidDataException ("The length of file is less than 3 bytes");  }  
Magic Number,Nepy.Core,Utility,C:\repos\tonyqus_nepy\Nepy.Core\Utility.cs,DetectBOM,The following statement contains a magic number: beginBytes [2] = (byte)file.ReadByte ();  
Magic Number,Nepy.Core,Utility,C:\repos\tonyqus_nepy\Nepy.Core\Utility.cs,DetectBOM,The following statement contains a magic number: if (beginBytes [0] == 0xFF && beginBytes [1] == 0xFE) {  	file.Position = 2;  	return Encoding.Unicode;  }  
Magic Number,Nepy.Core,Utility,C:\repos\tonyqus_nepy\Nepy.Core\Utility.cs,DetectBOM,The following statement contains a magic number: file.Position = 2;  
Magic Number,Nepy.Core,Utility,C:\repos\tonyqus_nepy\Nepy.Core\Utility.cs,DetectBOM,The following statement contains a magic number: if (beginBytes [0] == 0xFE && beginBytes [1] == 0xFF) {  	file.Position = 2;  	return Encoding.BigEndianUnicode;  }  
Magic Number,Nepy.Core,Utility,C:\repos\tonyqus_nepy\Nepy.Core\Utility.cs,DetectBOM,The following statement contains a magic number: file.Position = 2;  
Magic Number,Nepy.Core,Utility,C:\repos\tonyqus_nepy\Nepy.Core\Utility.cs,DetectBOM,The following statement contains a magic number: if (beginBytes [0] == 0xEF && beginBytes [1] == 0xBB && beginBytes [2] == 0xBF) {  	file.Position = 3;  	return Encoding.UTF8;  }  
Magic Number,Nepy.Core,Utility,C:\repos\tonyqus_nepy\Nepy.Core\Utility.cs,DetectBOM,The following statement contains a magic number: if (beginBytes [0] == 0xEF && beginBytes [1] == 0xBB && beginBytes [2] == 0xBF) {  	file.Position = 3;  	return Encoding.UTF8;  }  
Magic Number,Nepy.Core,Utility,C:\repos\tonyqus_nepy\Nepy.Core\Utility.cs,DetectBOM,The following statement contains a magic number: file.Position = 3;  
Magic Number,DateTimeExtensions,DayExtensions,C:\repos\tonyqus_nepy\Nepy.Core\DateTimeExtensions\DayExtensions.cs,Next,The following statement contains a magic number: if (offsetDays <= 0) {  	offsetDays += 7;  }  
Magic Number,DateTimeExtensions,DayExtensions,C:\repos\tonyqus_nepy\Nepy.Core\DateTimeExtensions\DayExtensions.cs,Next,The following statement contains a magic number: offsetDays += 7;  
Magic Number,DateTimeExtensions,DayExtensions,C:\repos\tonyqus_nepy\Nepy.Core\DateTimeExtensions\DayExtensions.cs,Last,The following statement contains a magic number: switch (dateUnit) {  case DateUnit.Day:  	return current.AddDays (-1);  case DateUnit.Week:  	return current.AddDays (-14).Next (CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek);  case DateUnit.Month:  	return current.First ().AddDays (-1).First ();  case DateUnit.Year:  	return new DateTime (current.Year - 1' 1' 1);  }  
Magic Number,DateTimeExtensions,DayExtensions,C:\repos\tonyqus_nepy\Nepy.Core\DateTimeExtensions\DayExtensions.cs,Last,The following statement contains a magic number: return current.AddDays (-14).Next (CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek);  
Magic Number,DateTimeExtensions,DayExtensions,C:\repos\tonyqus_nepy\Nepy.Core\DateTimeExtensions\DayExtensions.cs,AddWeeks,The following statement contains a magic number: return current.AddDays (weeks * 7);  
Missing Default,DateTimeExtensions,DayExtensions,C:\repos\tonyqus_nepy\Nepy.Core\DateTimeExtensions\DayExtensions.cs,Next,The following switch statement is missing a default case: switch (dateUnit) {  case DateUnit.Day:  	return current.AddDays (1);  case DateUnit.Week:  	return current.Next (CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek);  case DateUnit.Month:  	return current.Last ().AddDays (1);  case DateUnit.Year:  	return new DateTime (current.Year + 1' 1' 1);  }  
Missing Default,DateTimeExtensions,DayExtensions,C:\repos\tonyqus_nepy\Nepy.Core\DateTimeExtensions\DayExtensions.cs,Last,The following switch statement is missing a default case: switch (dateUnit) {  case DateUnit.Day:  	return current.AddDays (-1);  case DateUnit.Week:  	return current.AddDays (-14).Next (CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek);  case DateUnit.Month:  	return current.First ().AddDays (-1).First ();  case DateUnit.Year:  	return new DateTime (current.Year - 1' 1' 1);  }  
Missing Default,DateTimeExtensions,DayExtensions,C:\repos\tonyqus_nepy\Nepy.Core\DateTimeExtensions\DayExtensions.cs,This,The following switch statement is missing a default case: switch (dateUnit) {  case DateUnit.Day:  	return current.Midnight ();  case DateUnit.Week:  	return current.AddWeeks (-1).Next (CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek);  case DateUnit.Month:  	return current.First ();  case DateUnit.Year:  	return new DateTime (current.Year' 1' 1);  }  
