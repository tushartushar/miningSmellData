Implementation smell,Namespace,Class,File,Method,Description
Long Method,TagLib,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\File.cs,Insert,The method has 103 lines of code.
Long Method,TagLib.Id3v2,FrameFactory,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameFactory.cs,CreateFrame,The method has 147 lines of code.
Long Method,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The method has 106 lines of code.
Long Method,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The method has 186 lines of code.
Long Method,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The method has 109 lines of code.
Long Method,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,ReadWriteSegment,The method has 111 lines of code.
Long Method,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The method has 128 lines of code.
Long Method,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The method has 171 lines of code.
Complex Method,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,Cyclomatic complexity of the method is 17
Complex Method,TagLib.Ape,Item,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Item.cs,Render,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Asf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\File.cs,ReadObject,Cyclomatic complexity of the method is 8
Complex Method,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,Find,Cyclomatic complexity of the method is 13
Complex Method,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,RFind,Cyclomatic complexity of the method is 11
Complex Method,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,StringTypeToEncoding,Cyclomatic complexity of the method is 8
Complex Method,TagLib,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\File.cs,Find,Cyclomatic complexity of the method is 8
Complex Method,TagLib,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\File.cs,Insert,Cyclomatic complexity of the method is 9
Complex Method,TagLib,PictureLazy,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\PictureLazy.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,TagLib,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tag.cs,CopyTo,Cyclomatic complexity of the method is 26
Complex Method,TagLib.Flac,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\File.cs,Save,Cyclomatic complexity of the method is 9
Complex Method,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,Cyclomatic complexity of the method is 9
Complex Method,TagLib.Id3v2,Frame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frame.cs,Render,Cyclomatic complexity of the method is 11
Complex Method,TagLib.Id3v2,Frame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frame.cs,FieldData,Cyclomatic complexity of the method is 11
Complex Method,TagLib.Id3v2,FrameFactory,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameFactory.cs,CreateFrame,Cyclomatic complexity of the method is 29
Complex Method,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,Cyclomatic complexity of the method is 10
Complex Method,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,ConvertId,Cyclomatic complexity of the method is 11
Complex Method,TagLib.Id3v2,AttachmentFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\AttachmentFrame.cs,ParseRawData,Cyclomatic complexity of the method is 10
Complex Method,TagLib.Id3v2,AttachmentFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\AttachmentFrame.cs,RenderFields,Cyclomatic complexity of the method is 9
Complex Method,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,GetPreferred,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,ParseRawData,Cyclomatic complexity of the method is 12
Complex Method,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,RenderFields,Cyclomatic complexity of the method is 13
Complex Method,TagLib.Id3v2,UrlLinkFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\UrlLinkFrame.cs,ParseRawData,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,Cyclomatic complexity of the method is 9
Complex Method,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,SetTextFrame,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Render,Cyclomatic complexity of the method is 14
Complex Method,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,Cyclomatic complexity of the method is 19
Complex Method,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,CopyTo,Cyclomatic complexity of the method is 10
Complex Method,TagLib.IFD.Entries,UserCommentIFDEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\Entries\UserCommentIFDEntry.cs,UserCommentIFDEntry,Cyclomatic complexity of the method is 8
Complex Method,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,Cyclomatic complexity of the method is 41
Complex Method,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,FixupDirectory,Cyclomatic complexity of the method is 10
Complex Method,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,Cyclomatic complexity of the method is 12
Complex Method,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseIFDEntry,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Image,CombinedImageTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Image\CombinedImageTag.cs,AddTag,Cyclomatic complexity of the method is 11
Complex Method,TagLib.Image,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Image\File.cs,GetTag,Cyclomatic complexity of the method is 9
Complex Method,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadMetadata,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadDQTSegment,Cyclomatic complexity of the method is 9
Complex Method,TagLib.Matroska,EBMLelement,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLElement.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,Read,Cyclomatic complexity of the method is 13
Complex Method,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,ReadWriteSegment,Cyclomatic complexity of the method is 34
Complex Method,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,ReadCreateSegmentInfo,Cyclomatic complexity of the method is 15
Complex Method,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,ReadSegments,Cyclomatic complexity of the method is 10
Complex Method,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,ReadSeekHead,Cyclomatic complexity of the method is 12
Complex Method,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,ReadTargets,Cyclomatic complexity of the method is 11
Complex Method,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,ReadSimpleTag,Cyclomatic complexity of the method is 14
Complex Method,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,ReadAttachedFile,Cyclomatic complexity of the method is 9
Complex Method,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,WriteSegment,Cyclomatic complexity of the method is 11
Complex Method,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,WriteEBML,Cyclomatic complexity of the method is 11
Complex Method,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,UpdateSegmentsMergeVoids,Cyclomatic complexity of the method is 15
Complex Method,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,CreateTags,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Matroska,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tag.cs,Remove,Cyclomatic complexity of the method is 10
Complex Method,TagLib.Matroska,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tag.cs,Set,Cyclomatic complexity of the method is 11
Complex Method,TagLib.Matroska,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tag.cs,Set,Cyclomatic complexity of the method is 12
Complex Method,TagLib.Matroska,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tag.cs,Get,Cyclomatic complexity of the method is 10
Complex Method,TagLib.Matroska,Tags,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tags.cs,InsertItem,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Matroska,Track,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Track.cs,Track,Cyclomatic complexity of the method is 11
Complex Method,TagLib.Matroska,VideoTrack,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\VideoTrack.cs,VideoTrack,Cyclomatic complexity of the method is 13
Complex Method,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv8Properties,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,Cyclomatic complexity of the method is 16
Complex Method,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,Cyclomatic complexity of the method is 14
Complex Method,TagLib.Mpeg4,BoxFactory,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxFactory.cs,CreateBox,Cyclomatic complexity of the method is 21
Complex Method,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Mpeg4,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\File.cs,Save,Cyclomatic complexity of the method is 10
Complex Method,TagLib.Mpeg4,FileParser,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\FileParser.cs,ParseTagAndProperties,Cyclomatic complexity of the method is 10
Complex Method,TagLib.Ogg,Bitstream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Bitstream.cs,ReadPage,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Ogg,Page,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Page.cs,OverwriteSequenceNumbers,Cyclomatic complexity of the method is 10
Complex Method,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Ogg,Paginator,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Paginator.cs,Paginate,Cyclomatic complexity of the method is 9
Complex Method,TagLib.Riff,AviHeaderList,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeaderList,Cyclomatic complexity of the method is 9
Complex Method,TagLib.Riff,AviStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,ParseStreamList,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Save,Cyclomatic complexity of the method is 11
Complex Method,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,GetTag,Cyclomatic complexity of the method is 8
Complex Method,TagLib.Xmp,XmpNode,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Xmp\XmpNode.cs,RenderInto,Cyclomatic complexity of the method is 14
Complex Method,TagLib.Xmp,XmpTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Xmp\XmpTag.cs,ParseNodeElement,Cyclomatic complexity of the method is 12
Complex Method,TagLib.Xmp,XmpTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Xmp\XmpTag.cs,ParsePropertyElement,Cyclomatic complexity of the method is 15
Complex Method,TagLib.Xmp,XmpTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Xmp\XmpTag.cs,ParseResourcePropertyElement,Cyclomatic complexity of the method is 9
Complex Method,TagLib.Xmp,XmpTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Xmp\XmpTag.cs,ParseEmptyPropertyElement,Cyclomatic complexity of the method is 8
Long Parameter List,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,AudioHeader,The method has 5 parameters. Parameters: channels' bitrate' samplerate' numberofsamples' numberofframes
Long Parameter List,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Read,The method has 5 parameters. Parameters: read_tags' style' aiff_size' tag_start' tag_end
Long Parameter List,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Read,The method has 5 parameters. Parameters: read_tags' style' dsf_size' tag_start' tag_end
Long Parameter List,TagLib.Id3v2,FrameFactory,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameFactory.cs,CreateFrame,The method has 5 parameters. Parameters: data' file' offset' version' alreadyUnsynched
Long Parameter List,TagLib.Id3v2,AttachmentFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\AttachmentFrame.cs,AttachmentFrame,The method has 5 parameters. Parameters: abstraction' offset' size' header' version
Long Parameter List,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,Get,The method has 5 parameters. Parameters: tag' description' language' type' create
Long Parameter List,TagLib.Id3v2,UserTextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Get,The method has 5 parameters. Parameters: tag' description' type' create' caseSensitive
Long Parameter List,TagLib.IFD.Entries,MakernoteIFDEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\Entries\MakernoteIFDEntry.cs,MakernoteIFDEntry,The method has 7 parameters. Parameters: tag' structure' makernoteType' prefix' ifdOffset' absoluteOffset' is_bigendian
Long Parameter List,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,IFDReader,The method has 6 parameters. Parameters: file' is_bigendian' structure' base_offset' ifd_offset' max_offset
Long Parameter List,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The method has 6 parameters. Parameters: tag' type' count' baseOffset' offsetData' maxOffset
Long Parameter List,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The method has 5 parameters. Parameters: tag' type' count' baseOffset' offset
Long Parameter List,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseIFDEntry,The method has 5 parameters. Parameters: tag' type' count' baseOffset' offset
Long Parameter List,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateSubIFDReader,The method has 6 parameters. Parameters: file' isBigendian' structure' baseOffset' offset' maxOffset
Long Parameter List,TagLib.IFD,IFDRenderer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDRenderer.cs,RenderEntry,The method has 5 parameters. Parameters: entry_data' tag' type' count' offset
Long Parameter List,TagLib.IFD.Makernotes,Nikon3MakernoteReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\Makernotes\Nikon3MakernoteReader.cs,Nikon3MakernoteReader,The method has 6 parameters. Parameters: file' is_bigendian' structure' base_offset' ifd_offset' max_offset
Long Parameter List,TagLib.IFD.Makernotes,Nikon3MakernoteReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\Makernotes\Nikon3MakernoteReader.cs,ParseIFDEntry,The method has 5 parameters. Parameters: tag' type' count' base_offset' offset
Long Parameter List,TagLib.Mpeg4,BoxFactory,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxFactory.cs,CreateBox,The method has 5 parameters. Parameters: file' header' parent' handler' index
Long Parameter List,TagLib.Mpeg4,BoxFactory,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxFactory.cs,CreateBox,The method has 5 parameters. Parameters: file' position' parent' handler' index
Long Parameter List,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The method has 5 parameters. Parameters: read_tags' style' riff_size' tag_start' tag_end
Long Parameter List,TagLib.Tiff,BaseTiffFile,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\BaseTiffFile.cs,CreateIFDReader,The method has 6 parameters. Parameters: file' is_bigendian' structure' base_offset' ifd_offset' max_offset
Long Parameter List,TagLib.Tiff.Rw2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Rw2\File.cs,CreateIFDReader,The method has 6 parameters. Parameters: file' is_bigendian' structure' base_offset' ifd_offset' max_offset
Long Parameter List,TagLib.Tiff.Rw2,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Rw2\IFDReader.cs,IFDReader,The method has 6 parameters. Parameters: file' is_bigendian' structure' base_offset' ifd_offset' max_offset
Long Parameter List,TagLib.Tiff.Rw2,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Rw2\IFDReader.cs,ParseIFDEntry,The method has 5 parameters. Parameters: tag' type' count' base_offset' offset
Long Identifier,TagLib.Asf,Guid,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\Guid.cs,,The length of the parameter AsfExtendedContentDescriptionObject is 35.
Long Identifier,TagLib.Jpeg,Table,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\Table.cs,,The length of the parameter StandardChrominanceQuantization is 31.
Long Identifier,TagLib.Ogg,Bitstream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Bitstream.cs,,The length of the parameter first_absolute_granular_position is 32.
Long Statement,TagLib.Flac,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\File.cs,ReadStart,The length of the statement  "			var blocks = ReadBlocks (ref start' out var end' BlockMode.Whitelist' BlockType.StreamInfo' BlockType.XiphComment' BlockType.Picture);" is 134.
Long Statement,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Clone,The length of the statement  "			var frame = (this is UserTextInformationFrame) ? new UserTextInformationFrame (null' encoding) : new TextInformationFrame (FrameId' encoding);" is 142.
Long Statement,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,FixupDirectory,The length of the statement  "				directory.Add (strip_offsets_tag' new StripOffsetsIFDEntry (strip_offsets_tag' strip_offsets' strip_byte_counts' file));" is 120.
Long Statement,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The length of the statement  "						var reader = new Nikon3MakernoteReader (file' makernote_endian' ifd_structure' makernote_offset + 10' 8' max_offset - offset - 10);" is 131.
Long Statement,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The length of the statement  "						return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Nikon3' header.Mid (0' 18)' 8' false' makernote_endian);" is 120.
Long Statement,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,WriteSegment,The length of the statement  "				segm_list[0] = new EBMLreader (ebml_segm' ebml_segm.DataOffset' MatroskaID.Void' (ulong)((long)segm_list[0].Size - poffset));" is 125.
Long Statement,TagLib.Matroska,Tags,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tags.cs,InsertItem,The length of the statement  "			if (index < 0 || index >= Count || this[index].TargetTypeValue < tag.TargetTypeValue || (index + 1 < Count && this[index + 1].TargetTypeValue > tag.TargetTypeValue)) {" is 167.
Long Statement,TagLib.Mpeg4,FileParser,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\FileParser.cs,ParseTagAndProperties,The length of the statement  "					ParseTagAndProperties (header.HeaderSize + position' header.TotalBoxSize + position' handler' AddParent (parents' header));" is 123.
Long Statement,TagLib.Mpeg4,FileParser,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\FileParser.cs,ParseTagAndProperties,The length of the statement  "					ParseTagAndProperties (header.HeaderSize + position' header.TotalBoxSize + position' handler' AddParent (parents' header));" is 123.
Long Statement,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadzTXtChunk,The length of the statement  "			if (keyword == "xmp" || rawProfile != null && string.Compare (rawProfile.Name' "xmp"' StringComparison.InvariantCultureIgnoreCase) == 0) {" is 138.
Complex Conditional,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ContainsAt,The conditional expression  "patternLength > data.Count || 				offset >= data.Count || 				patternOffset >= pattern.Count || 				patternLength <= 0 || offset < 0"  is complex.
Complex Conditional,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromStream,The conditional expression  "(bytes_read == stream.Length && stream.Length > 0) || 					(n < read_size && stream.Length <= 0)"  is complex.
Complex Conditional,TagLib,Genres,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Genres.cs,StringToByte,The conditional expression  "text != null && text.Length > 2 && text[0] == '(' 				&& (last_pos = text.IndexOf (')')) != -1 				&& byte.TryParse (text.Substring (1' last_pos - 1)' out var value)"  is complex.
Complex Conditional,TagLib,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Picture.cs,GetExtensionFromData,The conditional expression  "data[0] == 0xFF && data[1] == 0xD8 && data[2] == 0xFF && data[3] == 0xE0"  is complex.
Complex Conditional,TagLib.Flac,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\File.cs,Save,The conditional expression  "block.Type != BlockType.StreamInfo && 						block.Type != BlockType.XiphComment && 						block.Type != BlockType.Picture && 						block.Type != BlockType.Padding"  is complex.
Complex Conditional,TagLib.Flac,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\File.cs,ReadBlocks,The conditional expression  "(mode == BlockMode.Whitelist && found) || 					(mode == BlockMode.Blacklist && !found)"  is complex.
Complex Conditional,TagLib.Id3v2,FrameFactory,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameFactory.cs,CreateFrame,The conditional expression  "(c < 'A' || c > 'Z') && 					(c < '0' || c > '9')"  is complex.
Complex Conditional,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,ConvertId,The conditional expression  "!toVersion && (id == FrameType.EQUA || 				id == FrameType.RVAD || id == FrameType.TRDA || 				id == FrameType.TSIZ)"  is complex.
Complex Conditional,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,ConvertId,The conditional expression  "(id.Count != 4 && version > 2) || (id.Count != 3 && version == 2)"  is complex.
Complex Conditional,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,Get,The conditional expression  "lyr.Description == description && 					(language == null || 						language == lyr.Language) && 					type == lyr.Type"  is complex.
Complex Conditional,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,ParseRawData,The conditional expression  "FrameId == FrameType.TCOM || 					FrameId == FrameType.TEXT || 					FrameId == FrameType.TMCL || 					FrameId == FrameType.TOLY || 					FrameId == FrameType.TOPE || 					FrameId == FrameType.TSOC || 					FrameId == FrameType.TSOP || 					FrameId == FrameType.TSO2 || 					FrameId == FrameType.TPE1 || 					FrameId == FrameType.TPE2 || 					FrameId == FrameType.TPE3 || 					FrameId == FrameType.TPE4"  is complex.
Complex Conditional,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The conditional expression  "data == null &&  				(fullTagUnsynch ||  				header.TagSize < 1024 ||  				(style & ReadStyle.PictureLazy) == 0 ||  				(header.Flags & HeaderFlags.ExtendedHeader) != 0)"  is complex.
Complex Conditional,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,CreateSeekHead,The conditional expression  "segm.ID != MatroskaID.Void 					&& segm.ID != MatroskaID.CRC32 					&& (segm.ID != MatroskaID.Cluster || refCluster)"  is complex.
Complex Conditional,TagLib.Matroska,UIDElement,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\IUIDElement.cs,UIDElement,The conditional expression  "type == MatroskaID.TagTrackUID    			|| type == MatroskaID.TagEditionUID    			|| type == MatroskaID.TagChapterUID    			|| type == MatroskaID.TagAttachmentUID"  is complex.
Complex Conditional,TagLib.Matroska,Tags,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tags.cs,InsertItem,The conditional expression  "index < 0 || index >= Count || this[index].TargetTypeValue < tag.TargetTypeValue || (index + 1 < Count && this[index + 1].TargetTypeValue > tag.TargetTypeValue)"  is complex.
Complex Conditional,TagLib.Mpeg4,AppleTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\AppleTag.cs,DataBoxes,The conditional expression  "mean_box == null || name_box == null || 					mean_box.Text != mean || 					name_box.Text != name"  is complex.
Complex Conditional,TagLib.Mpeg4,AppleTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\AppleTag.cs,GetDashAtoms,The conditional expression  "mean_box == null || name_box == null || 					mean_box.Text != meanstring || 					!name_box.Text.Equals (namestring' StringComparison.OrdinalIgnoreCase)"  is complex.
Complex Conditional,TagLib.Mpeg4,AppleTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\AppleTag.cs,GetParentDashBox,The conditional expression  "mean_box == null || name_box == null || 					mean_box.Text != meanstring || 					name_box.Text != namestring"  is complex.
Complex Conditional,TagLib.Mpeg4,FileParser,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\FileParser.cs,ParseBoxHeaders,The conditional expression  "header.BoxType == BoxType.Mdia || 					header.BoxType == BoxType.Minf || 					header.BoxType == BoxType.Stbl || 					header.BoxType == BoxType.Trak"  is complex.
Complex Conditional,TagLib.Mpeg4,FileParser,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\FileParser.cs,ParseTag,The conditional expression  "header.BoxType == BoxType.Mdia || 					header.BoxType == BoxType.Minf || 					header.BoxType == BoxType.Stbl || 					header.BoxType == BoxType.Trak"  is complex.
Complex Conditional,TagLib.Mpeg4,FileParser,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\FileParser.cs,ParseTagAndProperties,The conditional expression  "type == BoxType.Mdia || 					type == BoxType.Minf || 					type == BoxType.Stbl || 					type == BoxType.Trak"  is complex.
Complex Conditional,TagLib.Mpeg4,FileParser,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\FileParser.cs,ParseChunkOffsets,The conditional expression  "header.BoxType == BoxType.Moov || 					header.BoxType == BoxType.Mdia || 					header.BoxType == BoxType.Minf || 					header.BoxType == BoxType.Stbl || 					header.BoxType == BoxType.Trak"  is complex.
Complex Conditional,TagLib.Xmp,XmpNode,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Xmp\XmpNode.cs,XmpNode,The conditional expression  "ns != string.Empty && ns != XmpTag.XML_NS && !ns.EndsWith ("/") && !ns.EndsWith ("#")"  is complex.
Empty Catch Block,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The method has an empty catch block.
Empty Catch Block,TagLib.Ape,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Tag.cs,Parse,The method has an empty catch block.
Empty Catch Block,TagLib.Audible,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Audible\Tag.cs,Parse,The method has an empty catch block.
Empty Catch Block,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Render,The method has an empty catch block.
Empty Catch Block,TagLib.IFD,IFDStructure,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDStructure.cs,GetDateTimeValue,The method has an empty catch block.
Empty Catch Block,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadSegmentSize,The method has an empty catch block.
Empty Catch Block,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,Find,The method has an empty catch block.
Empty Catch Block,TagLib.NonContainer,EndTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\NonContainer\EndTag.cs,ReadTag,The method has an empty catch block.
Empty Catch Block,TagLib.NonContainer,EndTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\NonContainer\EndTag.cs,ReadTagInfo,The method has an empty catch block.
Empty Catch Block,TagLib.NonContainer,StartTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\NonContainer\StartTag.cs,ReadTagInfo,The method has an empty catch block.
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,SetStreamLength,The following statement contains a magic number: duration = TimeSpan.FromSeconds (stream_length * 8.0 / audiobitrate);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: ByteVector buffer = file.ReadBlock (3);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: buffer.Count < 3
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: file.Seek (position + 3);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: buffer = buffer.Mid (buffer.Count - 3);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: BitStream bits = new BitStream (buffer.Mid (i' 7).Data);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: bits.ReadInt32 (12);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: bits.ReadInt32 (2);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: bits.ReadInt32 (2);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: int samplerateindex = bits.ReadInt32 (4);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: int channelconfigindex = bits.ReadInt32 (3);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: bits.ReadInt32 (4);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: long framelength = bits.ReadInt32 (13);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: framelength < 7
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: bits.ReadInt32 (11);
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: int numberofframes = bits.ReadInt32 (2) + 1;
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: long numberofsamples = numberofframes * 1024;
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: long bitrate = framelength * 8 * samplerate / numberofsamples;
Magic Number,TagLib.Aac,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\AudioHeader.cs,Find,The following statement contains a magic number: i < buffer.Count - 3 && 					(length < 0 || position + i < end)
Magic Number,TagLib.Aac,BitStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\BitStream.cs,BitStream,The following statement contains a magic number: Debug.Assert (buffer.Length == 7' "buffer.Length == 7"' "buffer size invalid");
Magic Number,TagLib.Aac,BitStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\BitStream.cs,BitStream,The following statement contains a magic number: buffer.Length != 7
Magic Number,TagLib.Aac,BitStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\BitStream.cs,BitStream,The following statement contains a magic number: bits = new BitArray (buffer.Length * 8);
Magic Number,TagLib.Aac,BitStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\BitStream.cs,BitStream,The following statement contains a magic number: bits[i * 8 + y] = ((buffer[i] & (1 << (7 - y))) > 0);
Magic Number,TagLib.Aac,BitStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\BitStream.cs,BitStream,The following statement contains a magic number: bits[i * 8 + y] = ((buffer[i] & (1 << (7 - y))) > 0);
Magic Number,TagLib.Aac,BitStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\BitStream.cs,BitStream,The following statement contains a magic number: y < 8
Magic Number,TagLib.Aac,BitStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\BitStream.cs,ReadInt32,The following statement contains a magic number: Debug.Assert (numberOfBits <= 32' "numberOfBits <= 32");
Magic Number,TagLib.Aac,BitStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aac\BitStream.cs,ReadInt32,The following statement contains a magic number: numberOfBits > 32
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Save,The following statement contains a magic number: tag_data.Count % 2 == 1
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Save,The following statement contains a magic number: tag_data.Count > 10
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Save,The following statement contains a magic number: tag_start < 12 || tag_end < tag_start
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Save,The following statement contains a magic number: int length = (int)(tag_end - tag_start + 8);
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Save,The following statement contains a magic number: length -= 16;
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Save,The following statement contains a magic number: Insert (ByteVector.FromUInt ((uint)(aiff_size + data.Count - length)' true)' 4' 4);
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Save,The following statement contains a magic number: Insert (ByteVector.FromUInt ((uint)(aiff_size + data.Count - length)' true)' 4' 4);
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,GetTag,The following statement contains a magic number: switch (type) { 			case TagTypes.Id3v2: 				if (tag == null && create) { 					tag = new Id3v2.Tag { 						Version = 2 					}; 				}  				id32_tag = tag; 				break; 			}
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,FindChunk,The following statement contains a magic number: ByteVector chunkHeader = ReadBlock (4);
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,FindChunk,The following statement contains a magic number: return Tell - 4;
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Read,The following statement contains a magic number: ReadBlock (4) != FileIdentifier
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Read,The following statement contains a magic number: aiff_size = ReadBlock (4).ToUInt (true);
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Read,The following statement contains a magic number: ReadBlock (4) != AIFFFormType
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Read,The following statement contains a magic number: Seek (sound_chunk_pos + 4);
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Read,The following statement contains a magic number: tag = new Id3v2.Tag (this' id3_chunk_pos + 8' style);
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Read,The following statement contains a magic number: Seek (id3_chunk_pos + 4);
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Read,The following statement contains a magic number: uint tag_size = ReadBlock (4).ToUInt (true) + 8;
Magic Number,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,Read,The following statement contains a magic number: uint tag_size = ReadBlock (4).ToUInt (true) + 8;
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: channels = data.Mid (8' 2).ToUShort (true);
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: channels = data.Mid (8' 2).ToUShort (true);
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: total_frames = data.Mid (10' 4).ToULong (true);
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: total_frames = data.Mid (10' 4).ToULong (true);
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: bits_per_sample = data.Mid (14' 2).ToUShort (true);
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: bits_per_sample = data.Mid (14' 2).ToUShort (true);
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: ByteVector sample_rate_indicator = data.Mid (17' 1);
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: ulong sample_rate_tmp = data.Mid (18' 2).ToULong (true);
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: ulong sample_rate_tmp = data.Mid (18' 2).ToULong (true);
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: sample_rate = 44100;
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following statement contains a magic number: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Magic Number,TagLib.Ape,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Footer.cs,Footer,The following statement contains a magic number: version = data.Mid (8' 4).ToUInt (false);
Magic Number,TagLib.Ape,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Footer.cs,Footer,The following statement contains a magic number: version = data.Mid (8' 4).ToUInt (false);
Magic Number,TagLib.Ape,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Footer.cs,Footer,The following statement contains a magic number: TagSize = data.Mid (12' 4).ToUInt (false);
Magic Number,TagLib.Ape,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Footer.cs,Footer,The following statement contains a magic number: TagSize = data.Mid (12' 4).ToUInt (false);
Magic Number,TagLib.Ape,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Footer.cs,Footer,The following statement contains a magic number: ItemCount = data.Mid (16' 4).ToUInt (false);
Magic Number,TagLib.Ape,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Footer.cs,Footer,The following statement contains a magic number: ItemCount = data.Mid (16' 4).ToUInt (false);
Magic Number,TagLib.Ape,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Footer.cs,Footer,The following statement contains a magic number: Flags = (FooterFlags)data.Mid (20' 4).ToUInt (false);
Magic Number,TagLib.Ape,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Footer.cs,Footer,The following statement contains a magic number: Flags = (FooterFlags)data.Mid (20' 4).ToUInt (false);
Magic Number,TagLib.Ape,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Footer.cs,Render,The following statement contains a magic number: var v = new ByteVector {  				// add the file identifier -- "APETAGEX" 				FileIdentifier'  				// add the version number -- we always render a 2.000 				// tag regardless of what the tag originally was. 				ByteVector.FromUInt (2000' false)'  				// add the tag size 				ByteVector.FromUInt (TagSize' false)'  				// add the item count 				ByteVector.FromUInt (ItemCount' false) 			};
Magic Number,TagLib.Ape,Item,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Item.cs,Parse,The following statement contains a magic number: data.Count < offset + 11
Magic Number,TagLib.Ape,Item,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Item.cs,Parse,The following statement contains a magic number: uint value_length = data.Mid (offset' 4).ToUInt (false);
Magic Number,TagLib.Ape,Item,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Item.cs,Parse,The following statement contains a magic number: uint flags = data.Mid (offset + 4' 4).ToUInt (false);
Magic Number,TagLib.Ape,Item,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Item.cs,Parse,The following statement contains a magic number: uint flags = data.Mid (offset + 4' 4).ToUInt (false);
Magic Number,TagLib.Ape,Item,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Item.cs,Parse,The following statement contains a magic number: Type = (ItemType)((flags >> 1) & 3);
Magic Number,TagLib.Ape,Item,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Item.cs,Parse,The following statement contains a magic number: int pos = data.Find (ByteVector.TextDelimiter (StringType.UTF8)' offset + 8);
Magic Number,TagLib.Ape,Item,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Item.cs,Parse,The following statement contains a magic number: Key = data.ToString (StringType.UTF8' offset + 8' pos - offset - 8);
Magic Number,TagLib.Ape,Item,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Item.cs,Parse,The following statement contains a magic number: Key = data.ToString (StringType.UTF8' offset + 8' pos - offset - 8);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: version = data.Mid (4' 2).ToUShort (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: version = data.Mid (4' 2).ToUShort (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: Compression = (CompressionLevel)data.Mid (52' 2) 				.ToUShort (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: Compression = (CompressionLevel)data.Mid (52' 2) 				.ToUShort (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: blocks_per_frame = data.Mid (56' 4).ToUInt (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: blocks_per_frame = data.Mid (56' 4).ToUInt (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: final_frame_blocks = data.Mid (60' 4).ToUInt (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: final_frame_blocks = data.Mid (60' 4).ToUInt (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: total_frames = data.Mid (64' 4).ToUInt (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: total_frames = data.Mid (64' 4).ToUInt (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: bits_per_sample = data.Mid (68' 2).ToUShort (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: bits_per_sample = data.Mid (68' 2).ToUShort (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: channels = data.Mid (70' 2).ToUShort (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: channels = data.Mid (70' 2).ToUShort (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: sample_rate = data.Mid (72' 4).ToUInt (false);
Magic Number,TagLib.Ape,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\StreamHeader.cs,StreamHeader,The following statement contains a magic number: sample_rate = data.Mid (72' 4).ToUInt (false);
Magic Number,TagLib.Ape,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Tag.cs,Parse,The following statement contains a magic number: i < footer.ItemCount && pos <= data.Count - 11
Magic Number,TagLib.Ape,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ape\Tag.cs,GetItemAsUInt32,The following statement contains a magic number: string[] values = text.Split (new [] { '/' }' index + 2);
Magic Number,TagLib.Asf,ContentDescriptionObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\ContentDescriptionObject.cs,ContentDescriptionObject,The following statement contains a magic number: OriginalSize < 34
Magic Number,TagLib.Asf,ExtendedContentDescriptionObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\ExtendedContentDescriptionObject.cs,ExtendedContentDescriptionObject,The following statement contains a magic number: OriginalSize < 26
Magic Number,TagLib.Asf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\File.cs,ReadWord,The following statement contains a magic number: return ReadBlock (2).ToUShort (false);
Magic Number,TagLib.Asf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\File.cs,ReadDWord,The following statement contains a magic number: return ReadBlock (4).ToUInt (false);
Magic Number,TagLib.Asf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\File.cs,ReadQWord,The following statement contains a magic number: return ReadBlock (8).ToULong (false);
Magic Number,TagLib.Asf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\File.cs,ReadGuid,The following statement contains a magic number: return new System.Guid (ReadBlock (16).Data);
Magic Number,TagLib.Asf,FilePropertiesObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\FilePropertiesObject.cs,FilePropertiesObject,The following statement contains a magic number: OriginalSize < 104
Magic Number,TagLib.Asf,HeaderExtensionObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\HeaderExtensionObject.cs,HeaderExtensionObject,The following statement contains a magic number: file.ReadWord () != 6
Magic Number,TagLib.Asf,HeaderExtensionObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\HeaderExtensionObject.cs,HeaderExtensionObject,The following statement contains a magic number: position += 0x170 / 8;
Magic Number,TagLib.Asf,HeaderExtensionObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\HeaderExtensionObject.cs,Render,The following statement contains a magic number: output.Insert (0' RenderWord (6));
Magic Number,TagLib.Asf,HeaderObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\HeaderObject.cs,HeaderObject,The following statement contains a magic number: OriginalSize < 26
Magic Number,TagLib.Asf,HeaderObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\HeaderObject.cs,HeaderObject,The following statement contains a magic number: reserved = file.ReadBlock (2);
Magic Number,TagLib.Asf,HeaderObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\HeaderObject.cs,Render,The following statement contains a magic number: long size_diff = (long)output.Count + 30 - 				(long)OriginalSize;
Magic Number,TagLib.Asf,HeaderObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\HeaderObject.cs,Render,The following statement contains a magic number: var obj = new PaddingObject ((uint)(size_diff > 0 ? 4096 : -size_diff));
Magic Number,TagLib.Asf,MetadataLibraryObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\MetadataLibraryObject.cs,MetadataLibraryObject,The following statement contains a magic number: OriginalSize < 26
Magic Number,TagLib.Asf,Object,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\Object.cs,Object,The following statement contains a magic number: position < 0 || 				position > file.Length - 24
Magic Number,TagLib.Asf,Object,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\Object.cs,Render,The following statement contains a magic number: ulong length = (ulong)((data != null ? data.Count : 0) + 24);
Magic Number,TagLib.Asf,PaddingObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\PaddingObject.cs,PaddingObject,The following statement contains a magic number: OriginalSize < 24
Magic Number,TagLib.Asf,PaddingObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\PaddingObject.cs,Render,The following statement contains a magic number: return Render (new ByteVector ((int)(Size - 24)));
Magic Number,TagLib.Asf,StreamPropertiesObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\StreamPropertiesObject.cs,StreamPropertiesObject,The following statement contains a magic number: OriginalSize < 78
Magic Number,TagLib.Asf,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\Tag.cs,PictureFromData,The following statement contains a magic number: data.Count < 9
Magic Number,TagLib.Asf,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\Tag.cs,PictureFromData,The following statement contains a magic number: int size = (int)data.Mid (offset' 4).ToUInt (false);
Magic Number,TagLib.Asf,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\Tag.cs,PictureFromData,The following statement contains a magic number: offset += 4;
Magic Number,TagLib.Asf,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\Tag.cs,PictureFromData,The following statement contains a magic number: int found = data.Find (ByteVector.TextDelimiter (StringType.UTF16LE)' offset' 2);
Magic Number,TagLib.Asf,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\Tag.cs,PictureFromData,The following statement contains a magic number: offset = found + 2;
Magic Number,TagLib.Asf,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\Tag.cs,PictureFromData,The following statement contains a magic number: found = data.Find (ByteVector.TextDelimiter (StringType.UTF16LE)' offset' 2);
Magic Number,TagLib.Asf,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\Tag.cs,PictureFromData,The following statement contains a magic number: offset = found + 2;
Magic Number,TagLib.Asf,UnknownObject,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Asf\UnknownObject.cs,UnknownObject,The following statement contains a magic number: Data = file.ReadBlock ((int)(OriginalSize - 24));
Magic Number,TagLib.Audible,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Audible\File.cs,File,The following statement contains a magic number: int tagLen = ((int)ReadBlock (4).ToUInt (true)) - TagBlockOffset;
Magic Number,TagLib.Audible,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Audible\Tag.cs,Parse,The following statement contains a magic number: data.RemoveRange (0' 4);
Magic Number,TagLib.Audible,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Audible\Tag.cs,Parse,The following statement contains a magic number: data.RemoveRange (0' 4);
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,Find,The following statement contains a magic number: int[] last_occurrence = new int[256];
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,Find,The following statement contains a magic number: i < 256
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,RFind,The following statement contains a magic number: int[] first_occurrence = new int[256];
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,RFind,The following statement contains a magic number: i < 256
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToInt,The following statement contains a magic number: int last = Count > 4 ? 3 : Count - 1;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToInt,The following statement contains a magic number: int last = Count > 4 ? 3 : Count - 1;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToInt,The following statement contains a magic number: sum |= this[i] << (offset * 8);
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToUInt,The following statement contains a magic number: int last = Count > 4 ? 3 : Count - 1;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToUInt,The following statement contains a magic number: int last = Count > 4 ? 3 : Count - 1;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToUInt,The following statement contains a magic number: sum |= (uint)this[i] << (offset * 8);
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToShort,The following statement contains a magic number: int last = Count > 2 ? 1 : Count - 1;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToShort,The following statement contains a magic number: sum |= (short)(this[i] << (offset * 8));
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToUShort,The following statement contains a magic number: int last = Count > 2 ? 1 : Count - 1;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToUShort,The following statement contains a magic number: sum |= (ushort)(this[i] << (offset * 8));
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToLong,The following statement contains a magic number: int last = Count > 8 ? 7 : Count - 1;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToLong,The following statement contains a magic number: int last = Count > 8 ? 7 : Count - 1;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToLong,The following statement contains a magic number: sum |= (long)this[i] << (offset * 8);
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToULong,The following statement contains a magic number: int last = Count > 8 ? 7 : Count - 1;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToULong,The following statement contains a magic number: int last = Count > 8 ? 7 : Count - 1;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToULong,The following statement contains a magic number: sum |= (ulong)this[i] << (offset * 8);
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,ToString,The following statement contains a magic number: var bom = type == StringType.UTF16 && 				data.Count - offset > 1 ? Mid (offset' 2) : null;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromInt,The following statement contains a magic number: int offset = mostSignificantByteFirst ? 3 - i : i;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromInt,The following statement contains a magic number: vector.Add ((byte)(value >> (offset * 8) & 0xFF));
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromInt,The following statement contains a magic number: i < 4
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromUInt,The following statement contains a magic number: int offset = mostSignificantByteFirst ? 3 - i : i;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromUInt,The following statement contains a magic number: vector.Add ((byte)(value >> (offset * 8) & 0xFF));
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromUInt,The following statement contains a magic number: i < 4
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromShort,The following statement contains a magic number: vector.Add ((byte)(value >> (offset * 8) & 0xFF));
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromShort,The following statement contains a magic number: i < 2
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromUShort,The following statement contains a magic number: vector.Add ((byte)(value >> (offset * 8) & 0xFF));
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromUShort,The following statement contains a magic number: i < 2
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromLong,The following statement contains a magic number: int offset = mostSignificantByteFirst ? 7 - i : i;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromLong,The following statement contains a magic number: vector.Add ((byte)(value >> (offset * 8) & 0xFF));
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromLong,The following statement contains a magic number: i < 8
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromULong,The following statement contains a magic number: int offset = mostSignificantByteFirst ? 7 - i : i;
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromULong,The following statement contains a magic number: vector.Add ((byte)(value >> (offset * 8) & 0xFF));
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromULong,The following statement contains a magic number: i < 8
Magic Number,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,FromStream,The following statement contains a magic number: byte[] bytes = new byte[4096];
Magic Number,TagLib,Debugger,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Debugger.cs,DumpHex,The following statement contains a magic number: int cols = 16;
Magic Number,TagLib,Genres,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Genres.cs,AudioToIndex,The following statement contains a magic number: return 255;
Magic Number,TagLib,Genres,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Genres.cs,VideoToIndex,The following statement contains a magic number: return 255;
Magic Number,TagLib,Genres,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Genres.cs,StringToByte,The following statement contains a magic number: text != null && text.Length > 2 && text[0] == '(' 				&& (last_pos = text.IndexOf (')')) != -1 				&& byte.TryParse (text.Substring (1' last_pos - 1)' out var value)
Magic Number,TagLib,Genres,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Genres.cs,StringToByte,The following statement contains a magic number: return 255;
Magic Number,TagLib,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Picture.cs,GetExtensionFromData,The following statement contains a magic number: data[1] == 'P' && data[2] == 'N' && data[3] == 'G'
Magic Number,TagLib,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Picture.cs,GetExtensionFromData,The following statement contains a magic number: data[1] == 'P' && data[2] == 'N' && data[3] == 'G'
Magic Number,TagLib,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Picture.cs,GetExtensionFromData,The following statement contains a magic number: data.Count >= 4
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Save,The following statement contains a magic number: Insert (ByteVector.FromULong (0' false)' 20' 8);
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Save,The following statement contains a magic number: Insert (ByteVector.FromULong (0' false)' 20' 8);
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Save,The following statement contains a magic number: Insert (ByteVector.FromULong ((ulong)(length)' false)' 12' 8);
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Save,The following statement contains a magic number: Insert (ByteVector.FromULong ((ulong)(length)' false)' 12' 8);
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,GetTag,The following statement contains a magic number: switch (type) { 			case TagTypes.Id3v2: 				if (tag == null && create) { 					tag = new Id3v2.Tag { 						Version = 2 					}; 				}  				id32_tag = tag; 				break; 			}
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Read,The following statement contains a magic number: ReadBlock (4) != FileIdentifier
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Read,The following statement contains a magic number: Seek (12);
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Read,The following statement contains a magic number: dsf_size = ReadBlock (8).ToUInt (false);
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Read,The following statement contains a magic number: tag_start = (long)ReadBlock (8).ToULong (false);
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Read,The following statement contains a magic number: Seek (tag_start + 6);
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Read,The following statement contains a magic number: uint tag_size = SynchData.ToUInt (ReadBlock (4)) + 10;
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Read,The following statement contains a magic number: uint tag_size = SynchData.ToUInt (ReadBlock (4)) + 10;
Magic Number,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,Read,The following statement contains a magic number: ReadBlock (3) == ID3Identifier
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: version = data.Mid (12' 4).ToUShort (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: version = data.Mid (12' 4).ToUShort (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: format_id = data.Mid (16' 4).ToUShort (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: format_id = data.Mid (16' 4).ToUShort (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: channel_type = data.Mid (20' 4).ToUShort (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: channel_type = data.Mid (20' 4).ToUShort (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: channels = data.Mid (24' 4).ToUShort (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: channels = data.Mid (24' 4).ToUShort (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: sample_rate = data.Mid (28' 4).ToULong (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: sample_rate = data.Mid (28' 4).ToULong (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: bits_per_sample = data.Mid (32' 4).ToUShort (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: bits_per_sample = data.Mid (32' 4).ToUShort (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: sample_count = data.Mid (36' 8).ToULong (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: sample_count = data.Mid (36' 8).ToULong (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: channel_blksize = data.Mid (44' 4).ToUShort (false);
Magic Number,TagLib.Dsf,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\StreamHeader.cs,StreamHeader,The following statement contains a magic number: channel_blksize = data.Mid (44' 4).ToUShort (false);
Magic Number,TagLib.Flac,BlockHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\BlockHeader.cs,BlockHeader,The following statement contains a magic number: BlockSize = data.Mid (1' 3).ToUInt ();
Magic Number,TagLib.Flac,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\File.cs,Save,The following statement contains a magic number: padding_size = 1024 * 4;
Magic Number,TagLib.Flac,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\File.cs,Save,The following statement contains a magic number: padding_size = 1024 * 4;
Magic Number,TagLib.Flac,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\File.cs,ReadBlocks,The following statement contains a magic number: end = start = start_position + 4;
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: data.Count < 32
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: Type = (PictureType)data.Mid (pos' 4).ToUInt ();
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: pos += 4;
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: int mimetype_length = (int)data.Mid (pos' 4).ToUInt ();
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: pos += 4;
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: int description_length = (int)data.Mid (pos' 4) 				.ToUInt ();
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: pos += 4;
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: Width = (int)data.Mid (pos' 4).ToUInt ();
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: pos += 4;
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: Height = (int)data.Mid (pos' 4).ToUInt ();
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: pos += 4;
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: ColorDepth = (int)data.Mid (pos' 4).ToUInt ();
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: pos += 4;
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: IndexedColors = (int)data.Mid (pos' 4).ToUInt ();
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: pos += 4;
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: int data_length = (int)data.Mid (pos' 4).ToUInt ();
Magic Number,TagLib.Flac,Picture,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\Picture.cs,Picture,The following statement contains a magic number: pos += 4;
Magic Number,TagLib.Flac,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\StreamHeader.cs,StreamHeader,The following statement contains a magic number: data.Count < 18
Magic Number,TagLib.Flac,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\StreamHeader.cs,StreamHeader,The following statement contains a magic number: flags = data.Mid (10' 4).ToUInt (true);
Magic Number,TagLib.Flac,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\StreamHeader.cs,StreamHeader,The following statement contains a magic number: flags = data.Mid (10' 4).ToUInt (true);
Magic Number,TagLib.Flac,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\StreamHeader.cs,StreamHeader,The following statement contains a magic number: low_length = data.Mid (14' 4).ToUInt (true);
Magic Number,TagLib.Flac,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\StreamHeader.cs,StreamHeader,The following statement contains a magic number: low_length = data.Mid (14' 4).ToUInt (true);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadHeader,The following statement contains a magic number: ByteVector data = ReadBlock (13);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadHeader,The following statement contains a magic number: data.Count != 13
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadHeader,The following statement contains a magic number: throw new CorruptFileException ( 					$"Expected a GIF signature at start of file' but found: {data.Mid (0' 3)}");
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadHeader,The following statement contains a magic number: data.Mid (0' 3).ToString () != SIGNATURE
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadHeader,The following statement contains a magic number: var read_version = data.Mid (3' 3).ToString ();
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadHeader,The following statement contains a magic number: var read_version = data.Mid (3' 3).ToString ();
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadHeader,The following statement contains a magic number: width = data.Mid (6' 2).ToUShort (false);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadHeader,The following statement contains a magic number: width = data.Mid (6' 2).ToUShort (false);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadHeader,The following statement contains a magic number: height = data.Mid (8' 2).ToUShort (false);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadHeader,The following statement contains a magic number: height = data.Mid (8' 2).ToUShort (false);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadHeader,The following statement contains a magic number: SkipColorTable (data[10]);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadApplicationExtensionBlock,The following statement contains a magic number: ByteVector data = ReadBlock (12);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadApplicationExtensionBlock,The following statement contains a magic number: data.Count != 12
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadApplicationExtensionBlock,The following statement contains a magic number: long xmp_trailer_start = Find (new byte[] { 0x00 }' data_start) - XMP_MAGIC_TRAILER.Length + 2;
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadApplicationExtensionBlock,The following statement contains a magic number: AddMetadataBlock (position - 2' 14 + data_length + XMP_MAGIC_TRAILER.Length);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadApplicationExtensionBlock,The following statement contains a magic number: AddMetadataBlock (position - 2' 14 + data_length + XMP_MAGIC_TRAILER.Length);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadApplicationExtensionBlock,The following statement contains a magic number: data.Mid (1' 8) == XMP_IDENTIFIER && data.Mid (9' 3) == XMP_AUTH_CODE
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadApplicationExtensionBlock,The following statement contains a magic number: data.Mid (1' 8) == XMP_IDENTIFIER && data.Mid (9' 3) == XMP_AUTH_CODE
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadApplicationExtensionBlock,The following statement contains a magic number: data.Mid (1' 8) == XMP_IDENTIFIER && data.Mid (9' 3) == XMP_AUTH_CODE
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadCommentBlock,The following statement contains a magic number: AddMetadataBlock (position - 2' Tell - position + 2);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,ReadCommentBlock,The following statement contains a magic number: AddMetadataBlock (position - 2' Tell - position + 2);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,SkipColorTable,The following statement contains a magic number: int table_size = 3 * (1 << ((packed_data & 0x07) + 1));
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,SkipImage,The following statement contains a magic number: ByteVector data = ReadBlock (9);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,SkipImage,The following statement contains a magic number: data.Count != 9
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,SkipImage,The following statement contains a magic number: SkipColorTable (data[8]);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,SaveMetadata,The following statement contains a magic number: Insert (VERSION_89A' 3' VERSION_89A.Length);
Magic Number,TagLib.Gif,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Gif\File.cs,RenderGifCommentBlock,The following statement contains a magic number: byte block_max = 255;
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Render,The following statement contains a magic number: var data = new ByteVector { 				FileIdentifier' 				DefaultStringHandler.Render (title).Resize (30)' 				DefaultStringHandler.Render (artist).Resize (30)' 				DefaultStringHandler.Render (album).Resize (30)' 				DefaultStringHandler.Render (year).Resize (4)' 				DefaultStringHandler.Render (comment).Resize (28)' 				0' 				track' 				genre 			};
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Render,The following statement contains a magic number: var data = new ByteVector { 				FileIdentifier' 				DefaultStringHandler.Render (title).Resize (30)' 				DefaultStringHandler.Render (artist).Resize (30)' 				DefaultStringHandler.Render (album).Resize (30)' 				DefaultStringHandler.Render (year).Resize (4)' 				DefaultStringHandler.Render (comment).Resize (28)' 				0' 				track' 				genre 			};
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Render,The following statement contains a magic number: var data = new ByteVector { 				FileIdentifier' 				DefaultStringHandler.Render (title).Resize (30)' 				DefaultStringHandler.Render (artist).Resize (30)' 				DefaultStringHandler.Render (album).Resize (30)' 				DefaultStringHandler.Render (year).Resize (4)' 				DefaultStringHandler.Render (comment).Resize (28)' 				0' 				track' 				genre 			};
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Render,The following statement contains a magic number: var data = new ByteVector { 				FileIdentifier' 				DefaultStringHandler.Render (title).Resize (30)' 				DefaultStringHandler.Render (artist).Resize (30)' 				DefaultStringHandler.Render (album).Resize (30)' 				DefaultStringHandler.Render (year).Resize (4)' 				DefaultStringHandler.Render (comment).Resize (28)' 				0' 				track' 				genre 			};
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Render,The following statement contains a magic number: var data = new ByteVector { 				FileIdentifier' 				DefaultStringHandler.Render (title).Resize (30)' 				DefaultStringHandler.Render (artist).Resize (30)' 				DefaultStringHandler.Render (album).Resize (30)' 				DefaultStringHandler.Render (year).Resize (4)' 				DefaultStringHandler.Render (comment).Resize (28)' 				0' 				track' 				genre 			};
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: title = DefaultStringHandler.Parse (data.Mid (3' 30));
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: title = DefaultStringHandler.Parse (data.Mid (3' 30));
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: artist = DefaultStringHandler.Parse (data.Mid (33' 30));
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: artist = DefaultStringHandler.Parse (data.Mid (33' 30));
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: album = DefaultStringHandler.Parse (data.Mid (63' 30));
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: album = DefaultStringHandler.Parse (data.Mid (63' 30));
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: year = DefaultStringHandler.Parse (data.Mid (93' 4));
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: year = DefaultStringHandler.Parse (data.Mid (93' 4));
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: comment = DefaultStringHandler.Parse (data.Mid (97' 28));
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: comment = DefaultStringHandler.Parse (data.Mid (97' 28));
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: track = data[126];
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: data[125] == 0 && data[126] != 0
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: data[125] == 0 && data[126] != 0
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Parse,The following statement contains a magic number: genre = data[127];
Magic Number,TagLib.Id3v1,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v1\Tag.cs,Clear,The following statement contains a magic number: genre = 255;
Magic Number,TagLib.Id3v2,ExtendedHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\ExtendedHeader.cs,Parse,The following statement contains a magic number: size = (version == 3 ? 4u : 0u) + SynchData.ToUInt (data.Mid (0' 4));
Magic Number,TagLib.Id3v2,ExtendedHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\ExtendedHeader.cs,Parse,The following statement contains a magic number: size = (version == 3 ? 4u : 0u) + SynchData.ToUInt (data.Mid (0' 4));
Magic Number,TagLib.Id3v2,ExtendedHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\ExtendedHeader.cs,Parse,The following statement contains a magic number: size = (version == 3 ? 4u : 0u) + SynchData.ToUInt (data.Mid (0' 4));
Magic Number,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,The following statement contains a magic number: major_version = data[3];
Magic Number,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,The following statement contains a magic number: RevisionNumber = data[4];
Magic Number,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,The following statement contains a magic number: flags = (HeaderFlags)data[5];
Magic Number,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,The following statement contains a magic number: major_version == 2 && ((int)flags & 127) != 0
Magic Number,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,The following statement contains a magic number: major_version == 2 && ((int)flags & 127) != 0
Magic Number,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,The following statement contains a magic number: major_version == 3 && ((int)flags & 15) != 0
Magic Number,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,The following statement contains a magic number: major_version == 3 && ((int)flags & 15) != 0
Magic Number,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,The following statement contains a magic number: major_version == 4 && ((int)flags & 7) != 0
Magic Number,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,The following statement contains a magic number: major_version == 4 && ((int)flags & 7) != 0
Magic Number,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,The following statement contains a magic number: i < 10
Magic Number,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,The following statement contains a magic number: TagSize = SynchData.ToUInt (data.Mid (6' 4));
Magic Number,TagLib.Id3v2,Footer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Footer.cs,Footer,The following statement contains a magic number: TagSize = SynchData.ToUInt (data.Mid (6' 4));
Magic Number,TagLib.Id3v2,Frame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frame.cs,Frame,The following statement contains a magic number: data.Count < ((version < 3) ? 3 : 4)
Magic Number,TagLib.Id3v2,Frame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frame.cs,Frame,The following statement contains a magic number: data.Count < ((version < 3) ? 3 : 4)
Magic Number,TagLib.Id3v2,Frame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frame.cs,Frame,The following statement contains a magic number: data.Count < ((version < 3) ? 3 : 4)
Magic Number,TagLib.Id3v2,Frame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frame.cs,Render,The following statement contains a magic number: version < 4
Magic Number,TagLib.Id3v2,Frame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frame.cs,Render,The following statement contains a magic number: version < 3
Magic Number,TagLib.Id3v2,Frame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frame.cs,CorrectEncoding,The following statement contains a magic number: return (version < 4 && type == StringType.UTF8) ? StringType.UTF16 : type;
Magic Number,TagLib.Id3v2,Frame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frame.cs,FieldData,The following statement contains a magic number: data_offset += 4;
Magic Number,TagLib.Id3v2,Frame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frame.cs,FieldData,The following statement contains a magic number: data_length -= 4;
Magic Number,TagLib.Id3v2,Frame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frame.cs,Clone,The following statement contains a magic number: return FrameFactory.CreateFrame (Render (4)' null' ref index' 				4' false);
Magic Number,TagLib.Id3v2,Frame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frame.cs,Clone,The following statement contains a magic number: return FrameFactory.CreateFrame (Render (4)' null' ref index' 				4' false);
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: version < 2 || version > 4
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: version < 2 || version > 4
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: data.Count < (version == 2 ? 3 : 4)
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: data.Count < (version == 2 ? 3 : 4)
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: data.Count < (version == 2 ? 3 : 4)
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,FrameHeader,The following statement contains a magic number: switch (version) { 			case 2: 				// Set the frame ID -- the first three bytes 				frame_id = ConvertId (data.Mid (0' 3)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 6) 					return;  				FrameSize = data.Mid (3' 3).ToUInt (); 				return;  			case 3: 				// Set the frame ID -- the first four bytes 				frame_id = ConvertId (data.Mid (0' 4)' version' false);  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				// Store the flags internally as version 2.4. 				FrameSize = data.Mid (4' 4).ToUInt (); 				flags = (FrameFlags)( 					((data[8] << 7) & 0x7000) | 					((data[9] >> 4) & 0x000C) | 					((data[9] << 1) & 0x0040));  				return;  			case 4: 				// Set the frame ID -- the first four bytes 				frame_id = new ReadOnlyByteVector (data.Mid (0' 4));  				// If the full header information was not passed 				// in' do not continue to the steps to parse the 				// frame size and flags. 				if (data.Count < 10) 					return;  				FrameSize = SynchData.ToUInt (data.Mid (4' 4)); 				flags = (FrameFlags)data.Mid (8' 2).ToUShort ();  				return;  			default: 				throw new CorruptFileException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,Render,The following statement contains a magic number: switch (version) { 			case 2: 				data.Add (id); 				data.Add (ByteVector.FromUInt (FrameSize).Mid (1' 3));  				return data;  			case 3: 				ushort new_flags = (ushort)( 					(((ushort)flags << 1) & 0xE000) | 					(((ushort)flags << 4) & 0x00C0) | 					(((ushort)flags >> 1) & 0x0020));  				data.Add (id); 				data.Add (ByteVector.FromUInt (FrameSize)); 				data.Add (ByteVector.FromUShort (new_flags));  				return data;  			case 4: 				data.Add (id); 				data.Add (SynchData.FromUInt (FrameSize)); 				data.Add (ByteVector.FromUShort ((ushort)flags));  				return data;  			default: 				throw new NotImplementedException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,Render,The following statement contains a magic number: switch (version) { 			case 2: 				data.Add (id); 				data.Add (ByteVector.FromUInt (FrameSize).Mid (1' 3));  				return data;  			case 3: 				ushort new_flags = (ushort)( 					(((ushort)flags << 1) & 0xE000) | 					(((ushort)flags << 4) & 0x00C0) | 					(((ushort)flags >> 1) & 0x0020));  				data.Add (id); 				data.Add (ByteVector.FromUInt (FrameSize)); 				data.Add (ByteVector.FromUShort (new_flags));  				return data;  			case 4: 				data.Add (id); 				data.Add (SynchData.FromUInt (FrameSize)); 				data.Add (ByteVector.FromUShort ((ushort)flags));  				return data;  			default: 				throw new NotImplementedException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,Render,The following statement contains a magic number: switch (version) { 			case 2: 				data.Add (id); 				data.Add (ByteVector.FromUInt (FrameSize).Mid (1' 3));  				return data;  			case 3: 				ushort new_flags = (ushort)( 					(((ushort)flags << 1) & 0xE000) | 					(((ushort)flags << 4) & 0x00C0) | 					(((ushort)flags >> 1) & 0x0020));  				data.Add (id); 				data.Add (ByteVector.FromUInt (FrameSize)); 				data.Add (ByteVector.FromUShort (new_flags));  				return data;  			case 4: 				data.Add (id); 				data.Add (SynchData.FromUInt (FrameSize)); 				data.Add (ByteVector.FromUShort ((ushort)flags));  				return data;  			default: 				throw new NotImplementedException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,Render,The following statement contains a magic number: switch (version) { 			case 2: 				data.Add (id); 				data.Add (ByteVector.FromUInt (FrameSize).Mid (1' 3));  				return data;  			case 3: 				ushort new_flags = (ushort)( 					(((ushort)flags << 1) & 0xE000) | 					(((ushort)flags << 4) & 0x00C0) | 					(((ushort)flags >> 1) & 0x0020));  				data.Add (id); 				data.Add (ByteVector.FromUInt (FrameSize)); 				data.Add (ByteVector.FromUShort (new_flags));  				return data;  			case 4: 				data.Add (id); 				data.Add (SynchData.FromUInt (FrameSize)); 				data.Add (ByteVector.FromUShort ((ushort)flags));  				return data;  			default: 				throw new NotImplementedException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,Render,The following statement contains a magic number: switch (version) { 			case 2: 				data.Add (id); 				data.Add (ByteVector.FromUInt (FrameSize).Mid (1' 3));  				return data;  			case 3: 				ushort new_flags = (ushort)( 					(((ushort)flags << 1) & 0xE000) | 					(((ushort)flags << 4) & 0x00C0) | 					(((ushort)flags >> 1) & 0x0020));  				data.Add (id); 				data.Add (ByteVector.FromUInt (FrameSize)); 				data.Add (ByteVector.FromUShort (new_flags));  				return data;  			case 4: 				data.Add (id); 				data.Add (SynchData.FromUInt (FrameSize)); 				data.Add (ByteVector.FromUShort ((ushort)flags));  				return data;  			default: 				throw new NotImplementedException ("Unsupported tag version."); 			}
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,Size,The following statement contains a magic number: return (uint)(version < 3 ? 6 : 10);
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,Size,The following statement contains a magic number: return (uint)(version < 3 ? 6 : 10);
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,Size,The following statement contains a magic number: return (uint)(version < 3 ? 6 : 10);
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,ConvertId,The following statement contains a magic number: version >= 4
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,ConvertId,The following statement contains a magic number: id == null || version < 2
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,ConvertId,The following statement contains a magic number: version == 2
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,ConvertId,The following statement contains a magic number: version == 3
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,ConvertId,The following statement contains a magic number: (id.Count != 4 && version > 2) || (id.Count != 3 && version == 2)
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,ConvertId,The following statement contains a magic number: (id.Count != 4 && version > 2) || (id.Count != 3 && version == 2)
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,ConvertId,The following statement contains a magic number: (id.Count != 4 && version > 2) || (id.Count != 3 && version == 2)
Magic Number,TagLib.Id3v2,FrameHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\FrameHeader.cs,ConvertId,The following statement contains a magic number: (id.Count != 4 && version > 2) || (id.Count != 3 && version == 2)
Magic Number,TagLib.Id3v2,AttachmentFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\AttachmentFrame.cs,ParseFields,The following statement contains a magic number: data.Count < 5
Magic Number,TagLib.Id3v2,AttachmentFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\AttachmentFrame.cs,ParseRawData,The following statement contains a magic number: raw_version > 2
Magic Number,TagLib.Id3v2,AttachmentFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\AttachmentFrame.cs,RenderFields,The following statement contains a magic number: data.Add (ext != null && ext.Length == 3 ? 						ext.ToUpper () : "XXX");
Magic Number,TagLib.Id3v2,AttachmentFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\AttachmentFrame.cs,RenderFields,The following statement contains a magic number: version == 2
Magic Number,TagLib.Id3v2,CommentsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\CommentsFrame.cs,GetPreferred,The following statement contains a magic number: int value = same_lang ? 2 : same_name ? 1 : 0;
Magic Number,TagLib.Id3v2,CommentsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\CommentsFrame.cs,ParseFields,The following statement contains a magic number: data.Count < 4
Magic Number,TagLib.Id3v2,CommentsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\CommentsFrame.cs,ParseFields,The following statement contains a magic number: language = data.ToString (StringType.Latin1' 1' 3);
Magic Number,TagLib.Id3v2,CommentsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\CommentsFrame.cs,ParseFields,The following statement contains a magic number: string[] split = data.ToStrings (TextEncoding' 4' 3);
Magic Number,TagLib.Id3v2,CommentsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\CommentsFrame.cs,ParseFields,The following statement contains a magic number: string[] split = data.ToStrings (TextEncoding' 4' 3);
Magic Number,TagLib.Id3v2,EventTimeCodesFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\EventTimeCodeFrame.cs,ParseFields,The following statement contains a magic number: var timestampData = new ByteVector (incomingEventsData.Data[i]' 					incomingEventsData.Data[i + 1]' 					incomingEventsData.Data[i + 2]' 					incomingEventsData.Data[i + 3]);
Magic Number,TagLib.Id3v2,EventTimeCodesFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\EventTimeCodeFrame.cs,ParseFields,The following statement contains a magic number: var timestampData = new ByteVector (incomingEventsData.Data[i]' 					incomingEventsData.Data[i + 1]' 					incomingEventsData.Data[i + 2]' 					incomingEventsData.Data[i + 3]);
Magic Number,TagLib.Id3v2,EventTimeCodesFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\EventTimeCodeFrame.cs,ParseFields,The following statement contains a magic number: i += 3;
Magic Number,TagLib.Id3v2,PlayCountFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\PlayCountFrame.cs,RenderFields,The following statement contains a magic number: data.Count > 4 && data[0] == 0
Magic Number,TagLib.Id3v2,PopularimeterFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\PopularimeterFrame.cs,ParseFields,The following statement contains a magic number: index + 2 > data.Count
Magic Number,TagLib.Id3v2,PopularimeterFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\PopularimeterFrame.cs,ParseFields,The following statement contains a magic number: PlayCount = data.Mid (index + 2).ToULong ();
Magic Number,TagLib.Id3v2,PrivateFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\PrivateFrame.cs,ParseFields,The following statement contains a magic number: var l = ByteVectorCollection.Split (data' ByteVector.TextDelimiter (StringType.Latin1)' 1' 2);
Magic Number,TagLib.Id3v2,PrivateFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\PrivateFrame.cs,ParseFields,The following statement contains a magic number: l.Count == 2
Magic Number,TagLib.Id3v2,PrivateFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\PrivateFrame.cs,RenderFields,The following statement contains a magic number: version < 3
Magic Number,TagLib.Id3v2,RelativeVolumeFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\RelativeVolumeFrame.cs,ParseFields,The following statement contains a magic number: channels[type].VolumeAdjustmentIndex = (short)data.Mid (pos' 2).ToUShort ();
Magic Number,TagLib.Id3v2,RelativeVolumeFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\RelativeVolumeFrame.cs,ParseFields,The following statement contains a magic number: pos += 2;
Magic Number,TagLib.Id3v2,RelativeVolumeFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\RelativeVolumeFrame.cs,ParseFields,The following statement contains a magic number: pos <= data.Count - 4
Magic Number,TagLib.Id3v2,RelativeVolumeFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\RelativeVolumeFrame.cs,RenderFields,The following statement contains a magic number: j < 64
Magic Number,TagLib.Id3v2,RelativeVolumeFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\RelativeVolumeFrame.cs,RenderFields,The following statement contains a magic number: data.Add (ByteVector.FromULong (channels[i].PeakVolumeIndex).Mid (8 - BitsToBytes (bits)));
Magic Number,TagLib.Id3v2,RelativeVolumeFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\RelativeVolumeFrame.cs,RenderFields,The following statement contains a magic number: i < 9
Magic Number,TagLib.Id3v2,RelativeVolumeFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\RelativeVolumeFrame.cs,Clone,The following statement contains a magic number: i < 9
Magic Number,TagLib.Id3v2,RelativeVolumeFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\RelativeVolumeFrame.cs,BitsToBytes,The following statement contains a magic number: return i % 8 == 0 ? i / 8 : (i - i % 8) / 8 + 1;
Magic Number,TagLib.Id3v2,RelativeVolumeFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\RelativeVolumeFrame.cs,BitsToBytes,The following statement contains a magic number: return i % 8 == 0 ? i / 8 : (i - i % 8) / 8 + 1;
Magic Number,TagLib.Id3v2,RelativeVolumeFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\RelativeVolumeFrame.cs,BitsToBytes,The following statement contains a magic number: return i % 8 == 0 ? i / 8 : (i - i % 8) / 8 + 1;
Magic Number,TagLib.Id3v2,RelativeVolumeFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\RelativeVolumeFrame.cs,BitsToBytes,The following statement contains a magic number: return i % 8 == 0 ? i / 8 : (i - i % 8) / 8 + 1;
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,GetPreferred,The following statement contains a magic number: value += 4;
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,GetPreferred,The following statement contains a magic number: value += 2;
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,GetPreferred,The following statement contains a magic number: value == 7
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,ParseFields,The following statement contains a magic number: data.Count < 6
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,ParseFields,The following statement contains a magic number: language = data.ToString (StringType.Latin1' 1' 3);
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,ParseFields,The following statement contains a magic number: Format = (TimestampFormat)data[4];
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,ParseFields,The following statement contains a magic number: Type = (SynchedTextType)data[5];
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,ParseFields,The following statement contains a magic number: int delim_index = data.Find (delim' 6' delim.Count);
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,ParseFields,The following statement contains a magic number: Description = data.ToString (TextEncoding' 6' delim_index - 6);
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,ParseFields,The following statement contains a magic number: Description = data.ToString (TextEncoding' 6' delim_index - 6);
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,ParseFields,The following statement contains a magic number: offset + 4 > data.Count
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,ParseFields,The following statement contains a magic number: l.Add (new SynchedText (data.Mid (offset' 4).ToUInt ()' text));
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,ParseFields,The following statement contains a magic number: offset += 4;
Magic Number,TagLib.Id3v2,SynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\SynchronizedLyricsFrame.cs,ParseFields,The following statement contains a magic number: offset + delim.Count + 4 < data.Count
Magic Number,TagLib.Id3v2,TermsOfUseFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TermsOfUseFrame.cs,ParseFields,The following statement contains a magic number: data.Count < 4
Magic Number,TagLib.Id3v2,TermsOfUseFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TermsOfUseFrame.cs,ParseFields,The following statement contains a magic number: language = data.ToString (StringType.Latin1' 1' 3);
Magic Number,TagLib.Id3v2,TermsOfUseFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TermsOfUseFrame.cs,ParseFields,The following statement contains a magic number: Text = data.ToString (TextEncoding' 4' data.Count - 4);
Magic Number,TagLib.Id3v2,TermsOfUseFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TermsOfUseFrame.cs,ParseFields,The following statement contains a magic number: Text = data.ToString (TextEncoding' 4' data.Count - 4);
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: version != 3 || FrameId != FrameType.TDRC
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: text.Length < 10 || text[4] != '-' || text[7] != '-'
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: text.Length < 10 || text[4] != '-' || text[7] != '-'
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: text.Length < 10 || text[4] != '-' || text[7] != '-'
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: f.Text = new [] { text.Substring (0' 4) };
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: f.Text = new [] { 				text.Substring (5' 2) + text.Substring (8' 2) 			};
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: f.Text = new [] { 				text.Substring (5' 2) + text.Substring (8' 2) 			};
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: f.Text = new [] { 				text.Substring (5' 2) + text.Substring (8' 2) 			};
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: f.Text = new [] { 				text.Substring (5' 2) + text.Substring (8' 2) 			};
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: text.Length < 16 || text[10] != 'T' || text[13] != ':'
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: text.Length < 16 || text[10] != 'T' || text[13] != ':'
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: text.Length < 16 || text[10] != 'T' || text[13] != ':'
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: f.Text = new [] { 				text.Substring (11' 2) + text.Substring (14' 2) 			};
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: f.Text = new [] { 				text.Substring (11' 2) + text.Substring (14' 2) 			};
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: f.Text = new [] { 				text.Substring (11' 2) + text.Substring (14' 2) 			};
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Render,The following statement contains a magic number: f.Text = new [] { 				text.Substring (11' 2) + text.Substring (14' 2) 			};
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,Get,The following statement contains a magic number: ident.Count != 4
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,ParseRawData,The following statement contains a magic number: raw_version > 3 || FrameId == FrameType.TXXX
Magic Number,TagLib.Id3v2,TextInformationFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\TextIdentificationFrame.cs,RenderFields,The following statement contains a magic number: version > 3 || txxx
Magic Number,TagLib.Id3v2,UniqueFileIdentifierFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\UniqueFileIdentifierFrame.cs,ParseFields,The following statement contains a magic number: fields.Count != 2
Magic Number,TagLib.Id3v2,UnsynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\UnsynchronisedLyricsFrame.cs,GetPreferred,The following statement contains a magic number: int value = same_lang ? 2 : same_name ? 1 : 0;
Magic Number,TagLib.Id3v2,UnsynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\UnsynchronisedLyricsFrame.cs,ParseFields,The following statement contains a magic number: data.Count < 4
Magic Number,TagLib.Id3v2,UnsynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\UnsynchronisedLyricsFrame.cs,ParseFields,The following statement contains a magic number: language = data.ToString (StringType.Latin1' 1' 3);
Magic Number,TagLib.Id3v2,UnsynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\UnsynchronisedLyricsFrame.cs,ParseFields,The following statement contains a magic number: string[] split = data.ToStrings (TextEncoding' 4' 2);
Magic Number,TagLib.Id3v2,UnsynchronisedLyricsFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\UnsynchronisedLyricsFrame.cs,ParseFields,The following statement contains a magic number: string[] split = data.ToStrings (TextEncoding' 4' 2);
Magic Number,TagLib.Id3v2,UrlLinkFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\UrlLinkFrame.cs,Get,The following statement contains a magic number: ident.Count != 4
Magic Number,TagLib.Id3v2,UrlLinkFrame,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Frames\UrlLinkFrame.cs,RenderFields,The following statement contains a magic number: version > 3 || wxxx
Magic Number,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,The following statement contains a magic number: major_version = data[3];
Magic Number,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,The following statement contains a magic number: RevisionNumber = data[4];
Magic Number,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,The following statement contains a magic number: flags = (HeaderFlags)data[5];
Magic Number,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,The following statement contains a magic number: major_version == 2 && ((int)flags & 127) != 0
Magic Number,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,The following statement contains a magic number: major_version == 2 && ((int)flags & 127) != 0
Magic Number,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,The following statement contains a magic number: major_version == 3 && ((int)flags & 15) != 0
Magic Number,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,The following statement contains a magic number: major_version == 3 && ((int)flags & 15) != 0
Magic Number,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,The following statement contains a magic number: major_version == 4 && ((int)flags & 7) != 0
Magic Number,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,The following statement contains a magic number: major_version == 4 && ((int)flags & 7) != 0
Magic Number,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,The following statement contains a magic number: i < 10
Magic Number,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,The following statement contains a magic number: TagSize = SynchData.ToUInt (data.Mid (6' 4));
Magic Number,TagLib.Id3v2,Header,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Header.cs,Header,The following statement contains a magic number: TagSize = SynchData.ToUInt (data.Mid (6' 4));
Magic Number,TagLib.Id3v2,SynchData,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\SynchData.cs,ToUInt,The following statement contains a magic number: int last = data.Count > 4 ? 3 : data.Count - 1;
Magic Number,TagLib.Id3v2,SynchData,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\SynchData.cs,ToUInt,The following statement contains a magic number: int last = data.Count > 4 ? 3 : data.Count - 1;
Magic Number,TagLib.Id3v2,SynchData,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\SynchData.cs,ToUInt,The following statement contains a magic number: sum |= (uint)(data[i] & 0x7f) 					<< ((last - i) * 7);
Magic Number,TagLib.Id3v2,SynchData,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\SynchData.cs,FromUInt,The following statement contains a magic number: (value >> 28) != 0
Magic Number,TagLib.Id3v2,SynchData,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\SynchData.cs,FromUInt,The following statement contains a magic number: ByteVector v = new ByteVector (4' 0);
Magic Number,TagLib.Id3v2,SynchData,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\SynchData.cs,FromUInt,The following statement contains a magic number: v[i] = (byte)(value >> ((3 - i) * 7) & 0x7f);
Magic Number,TagLib.Id3v2,SynchData,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\SynchData.cs,FromUInt,The following statement contains a magic number: v[i] = (byte)(value >> ((3 - i) * 7) & 0x7f);
Magic Number,TagLib.Id3v2,SynchData,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\SynchData.cs,FromUInt,The following statement contains a magic number: i < 4
Magic Number,TagLib.Id3v2,SynchData,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\SynchData.cs,ResynchByteVector,The following statement contains a magic number: i += data[i] == 0xFF && data[i + 1] == 0 ? 2 : 1;
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,GetFrames,The following statement contains a magic number: ident.Count != 4
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,GetFrames,The following statement contains a magic number: ident.Count != 4
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,RemoveFrames,The following statement contains a magic number: ident.Count != 4
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,SetTextFrame,The following statement contains a magic number: ident.Count != 4
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,SetNumberFrame,The following statement contains a magic number: ident.Count != 4
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Render,The following statement contains a magic number: ret = new string[map.Count * 2];
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Render,The following statement contains a magic number: bool unsynchAtFrameLevel = (header.Flags & HeaderFlags.Unsynchronisation) != 0 && Version >= 4;
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Render,The following statement contains a magic number: bool unsynchAtTagLevel = (header.Flags & HeaderFlags.Unsynchronisation) != 0 && Version < 4;
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Render,The following statement contains a magic number: header.MajorVersion = has_footer ? (byte)4 : Version;
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Render,The following statement contains a magic number: tag_data.Add (new ByteVector ((int) 					((tag_data.Count < header.TagSize) ?  					(header.TagSize - tag_data.Count) : 					1024)));
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: bool fullTagUnsynch = (header.MajorVersion < 4) &&  				(header.Flags & HeaderFlags.Unsynchronisation) != 0;
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: data == null &&  				(fullTagUnsynch ||  				header.TagSize < 1024 ||  				(style & ReadStyle.PictureLazy) == 0 ||  				(header.Flags & HeaderFlags.ExtendedHeader) != 0)
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: header.MajorVersion == 4
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: tdrc == null || tdat == null || tdrc.ToString ().Length > 4
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: year.Length != 4
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: tdrc_text.Append ("-").Append (tdat_text' 0' 2).Append ("-").Append (tdat_text' 2' 2);
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: tdrc_text.Append ("-").Append (tdat_text' 0' 2).Append ("-").Append (tdat_text' 2' 2);
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: tdrc_text.Append ("-").Append (tdat_text' 0' 2).Append ("-").Append (tdat_text' 2' 2);
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: tdrc_text.Append ("T").Append (time_text' 0' 2).Append (":").Append (time_text' 2' 2);
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: tdrc_text.Append ("T").Append (time_text' 0' 2).Append (":").Append (time_text' 2' 2);
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: tdrc_text.Append ("T").Append (time_text' 0' 2).Append (":").Append (time_text' 2' 2);
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: time_text.Length == 4
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,Parse,The following statement contains a magic number: tdat_text.Length == 4
Magic Number,TagLib.Id3v2,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Id3v2\Tag.cs,GetTextAsUInt32,The following statement contains a magic number: string[] values = text.Split (new [] { '/' }' 				index + 2);
Magic Number,TagLib.IFD.Entries,StripOffsetsIFDEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\Entries\StripOffsetsIFDEntry.cs,Render,The following statement contains a magic number: uint data_offset = offset + (uint)(4 * Values.Length);
Magic Number,TagLib.IFD.Entries,StripOffsetsIFDEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\Entries\StripOffsetsIFDEntry.cs,Render,The following statement contains a magic number: data.Count < 4
Magic Number,TagLib.IFD.Entries,UserCommentIFDEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\Entries\UserCommentIFDEntry.cs,UserCommentIFDEntry,The following statement contains a magic number: int term = data.Find ("\0"' 8);
Magic Number,TagLib.IFD.Entries,UserCommentIFDEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\Entries\UserCommentIFDEntry.cs,UserCommentIFDEntry,The following statement contains a magic number: Value = data.ToString (StringType.Latin1' 8' term - 8);
Magic Number,TagLib.IFD.Entries,UserCommentIFDEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\Entries\UserCommentIFDEntry.cs,UserCommentIFDEntry,The following statement contains a magic number: Value = data.ToString (StringType.Latin1' 8' term - 8);
Magic Number,TagLib.IFD.Entries,UserCommentIFDEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\Entries\UserCommentIFDEntry.cs,UserCommentIFDEntry,The following statement contains a magic number: data.StartsWith ((byte)0x00) && data.Count >= 8
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadIFD,The following statement contains a magic number: file.Tell + 12 * entry_count > baseOffset + maxOffset
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadIFD,The following statement contains a magic number: ByteVector entry_datas = file.ReadBlock (12 * entry_count);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadIFD,The following statement contains a magic number: ByteVector entry_data = entry_datas.Mid (i * 12' 12);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadIFD,The following statement contains a magic number: ByteVector entry_data = entry_datas.Mid (i * 12' 12);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadIFD,The following statement contains a magic number: ushort entry_tag = entry_data.Mid (0' 2).ToUShort (is_bigendian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadIFD,The following statement contains a magic number: ushort type = entry_data.Mid (2' 2).ToUShort (is_bigendian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadIFD,The following statement contains a magic number: ushort type = entry_data.Mid (2' 2).ToUShort (is_bigendian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadIFD,The following statement contains a magic number: uint value_count = entry_data.Mid (4' 4).ToUInt (is_bigendian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadIFD,The following statement contains a magic number: uint value_count = entry_data.Mid (4' 4).ToUInt (is_bigendian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadIFD,The following statement contains a magic number: ByteVector offset_data = entry_data.Mid (8' 4);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadIFD,The following statement contains a magic number: ByteVector offset_data = entry_data.Mid (8' 4);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: return new ShortIFDEntry (tag' offsetData.Mid (0' 2).ToUShort (is_bigendian));
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: return new SShortIFDEntry (tag' offsetData.Mid (0' 2).ToUShort (is_bigendian));
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: ushort[] data = new[] { 						offsetData.Mid (0' 2).ToUShort (is_bigendian)' 						offsetData.Mid (2' 2).ToUShort (is_bigendian) 					};
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: ushort[] data = new[] { 						offsetData.Mid (0' 2).ToUShort (is_bigendian)' 						offsetData.Mid (2' 2).ToUShort (is_bigendian) 					};
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: ushort[] data = new[] { 						offsetData.Mid (0' 2).ToUShort (is_bigendian)' 						offsetData.Mid (2' 2).ToUShort (is_bigendian) 					};
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: short[] data = new[] { 						(short) offsetData.Mid (0' 2).ToUShort (is_bigendian)' 						(short) offsetData.Mid (2' 2).ToUShort (is_bigendian) 					};
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: short[] data = new[] { 						(short) offsetData.Mid (0' 2).ToUShort (is_bigendian)' 						(short) offsetData.Mid (2' 2).ToUShort (is_bigendian) 					};
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: short[] data = new[] { 						(short) offsetData.Mid (0' 2).ToUShort (is_bigendian)' 						(short) offsetData.Mid (2' 2).ToUShort (is_bigendian) 					};
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: count == 2
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: count <= 4
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: count > 2
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: count > 4
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,CreateIFDEntry,The following statement contains a magic number: type == 0 || type > 12
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadShort,The following statement contains a magic number: return file.ReadBlock (2).ToShort (is_bigendian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadUShort,The following statement contains a magic number: return file.ReadBlock (2).ToUShort (is_bigendian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadInt,The following statement contains a magic number: return file.ReadBlock (4).ToInt (is_bigendian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ReadUInt,The following statement contains a magic number: return file.ReadBlock (4).ToUInt (is_bigendian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: int header_size = 18;
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: var reader = new IFDReader (file' is_bigendian' ifd_structure' baseOffset' offset + 12' max_offset);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: reader.ReadIFD (baseOffset' offset + 12' max_offset);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Panasonic' PANASONIC_HEADER' 12' true' null);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: var reader = new IFDReader (file' is_bigendian' ifd_structure' baseOffset' offset + 6' max_offset);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: reader.ReadIFD (baseOffset' offset + 6' max_offset);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Pentax' header.Mid (0' 6)' 6' true' null);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Pentax' header.Mid (0' 6)' 6' true' null);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: var reader = new IFDReader (file' is_bigendian' ifd_structure' baseOffset' offset + 8' max_offset);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Olympus1' header.Mid (0' 8)' 8' true' null);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Olympus1' header.Mid (0' 8)' 8' true' null);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: var reader = new IFDReader (file' is_bigendian' ifd_structure' makernote_offset' 12' count);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Olympus2' header.Mid (0' 12)' 12' false' null);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Olympus2' header.Mid (0' 12)' 12' false' null);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: var reader = new IFDReader (file' is_bigendian' ifd_structure' baseOffset' offset + 12' max_offset);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: reader.ReadIFD (baseOffset' offset + 12' max_offset);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Sony' SONY_HEADER' 12' true' null);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: ByteVector endian_bytes = header.Mid (10' 2);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: ByteVector endian_bytes = header.Mid (10' 2);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: ushort magic = header.Mid (12' 2).ToUShort (is_bigendian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: ushort magic = header.Mid (12' 2).ToUShort (is_bigendian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: var reader = new Nikon3MakernoteReader (file' makernote_endian' ifd_structure' makernote_offset + 10' 8' max_offset - offset - 10);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: var reader = new Nikon3MakernoteReader (file' makernote_endian' ifd_structure' makernote_offset + 10' 8' max_offset - offset - 10);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: var reader = new Nikon3MakernoteReader (file' makernote_endian' ifd_structure' makernote_offset + 10' 8' max_offset - offset - 10);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Nikon3' header.Mid (0' 18)' 8' false' makernote_endian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Nikon3' header.Mid (0' 18)' 8' false' makernote_endian);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: magic == 42
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: var reader = new IFDReader (file' is_bigendian' ifd_structure' makernote_offset' 8' count);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Leica' header.Mid (0' 8)' 10' false' null);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseMakernote,The following statement contains a magic number: return new MakernoteIFDEntry (tag' ifd_structure' MakernoteType.Leica' header.Mid (0' 8)' 10' false' null);
Magic Number,TagLib.IFD,IFDReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDReader.cs,ParseIFDEntry,The following statement contains a magic number: count >= 2
Magic Number,TagLib.IFD,IFDRenderer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDRenderer.cs,RenderIFD,The following statement contains a magic number: uint data_offset = ifd_offset + 2 + 12 * (uint)entry_count + 4;
Magic Number,TagLib.IFD,IFDRenderer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDRenderer.cs,RenderIFD,The following statement contains a magic number: uint data_offset = ifd_offset + 2 + 12 * (uint)entry_count + 4;
Magic Number,TagLib.IFD,IFDRenderer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDRenderer.cs,RenderIFD,The following statement contains a magic number: uint data_offset = ifd_offset + 2 + 12 * (uint)entry_count + 4;
Magic Number,TagLib.IFD,IFDRenderer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDRenderer.cs,RenderEntryData,The following statement contains a magic number: data.Count < 4
Magic Number,TagLib.IFD,IFDRenderer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDRenderer.cs,RenderEntryData,The following statement contains a magic number: data.Count <= 4
Magic Number,TagLib.IFD,IFDRenderer,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDRenderer.cs,RenderEntryData,The following statement contains a magic number: data != null && data.Count % 2 != 0
Magic Number,TagLib.IFD,IFDTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDTag.cs,DegreeToRationals,The following statement contains a magic number: angle < 0.0 || angle > 180.0
Magic Number,TagLib.IFD,IFDTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDTag.cs,DegreeToRationals,The following statement contains a magic number: uint min = (uint)((angle - Math.Floor (angle)) * 60.0);
Magic Number,TagLib.IFD,IFDTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDTag.cs,DegreeToRationals,The following statement contains a magic number: uint sec = (uint)((angle - Math.Floor (angle) - (min / 60.0)) * 360000000.0);
Magic Number,TagLib.IFD,IFDTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDTag.cs,DegreeToRationals,The following statement contains a magic number: uint sec = (uint)((angle - Math.Floor (angle) - (min / 60.0)) * 360000000.0);
Magic Number,TagLib.IFD,IFDTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IFD\IFDTag.cs,DegreeToRationals,The following statement contains a magic number: var rationals = new[] { 				new Rational (deg' 1)' 				new Rational (min' 1)' 				new Rational (sec' 100000) 			};
Magic Number,TagLib.IIM,IIMReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IIM\IIMReader.cs,Process,The following statement contains a magic number: switch (Data[i]) { 				case 5: // Object Name 					Tag.Title = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 25: // Keywords 					Tag.AddKeyword (Data.ToString (StringType.Latin1' i + 3' len)); 					break; 				case 80: // By-line 					Tag.Creator = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 116: // Copyright notice 					Tag.Copyright = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 120: // Caption/Abstract 					Tag.Comment = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				}
Magic Number,TagLib.IIM,IIMReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IIM\IIMReader.cs,Process,The following statement contains a magic number: switch (Data[i]) { 				case 5: // Object Name 					Tag.Title = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 25: // Keywords 					Tag.AddKeyword (Data.ToString (StringType.Latin1' i + 3' len)); 					break; 				case 80: // By-line 					Tag.Creator = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 116: // Copyright notice 					Tag.Copyright = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 120: // Caption/Abstract 					Tag.Comment = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				}
Magic Number,TagLib.IIM,IIMReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IIM\IIMReader.cs,Process,The following statement contains a magic number: switch (Data[i]) { 				case 5: // Object Name 					Tag.Title = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 25: // Keywords 					Tag.AddKeyword (Data.ToString (StringType.Latin1' i + 3' len)); 					break; 				case 80: // By-line 					Tag.Creator = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 116: // Copyright notice 					Tag.Copyright = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 120: // Caption/Abstract 					Tag.Comment = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				}
Magic Number,TagLib.IIM,IIMReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IIM\IIMReader.cs,Process,The following statement contains a magic number: switch (Data[i]) { 				case 5: // Object Name 					Tag.Title = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 25: // Keywords 					Tag.AddKeyword (Data.ToString (StringType.Latin1' i + 3' len)); 					break; 				case 80: // By-line 					Tag.Creator = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 116: // Copyright notice 					Tag.Copyright = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 120: // Caption/Abstract 					Tag.Comment = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				}
Magic Number,TagLib.IIM,IIMReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IIM\IIMReader.cs,Process,The following statement contains a magic number: switch (Data[i]) { 				case 5: // Object Name 					Tag.Title = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 25: // Keywords 					Tag.AddKeyword (Data.ToString (StringType.Latin1' i + 3' len)); 					break; 				case 80: // By-line 					Tag.Creator = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 116: // Copyright notice 					Tag.Copyright = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 120: // Caption/Abstract 					Tag.Comment = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				}
Magic Number,TagLib.IIM,IIMReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IIM\IIMReader.cs,Process,The following statement contains a magic number: switch (Data[i]) { 				case 5: // Object Name 					Tag.Title = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 25: // Keywords 					Tag.AddKeyword (Data.ToString (StringType.Latin1' i + 3' len)); 					break; 				case 80: // By-line 					Tag.Creator = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 116: // Copyright notice 					Tag.Copyright = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 120: // Caption/Abstract 					Tag.Comment = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				}
Magic Number,TagLib.IIM,IIMReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IIM\IIMReader.cs,Process,The following statement contains a magic number: switch (Data[i]) { 				case 5: // Object Name 					Tag.Title = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 25: // Keywords 					Tag.AddKeyword (Data.ToString (StringType.Latin1' i + 3' len)); 					break; 				case 80: // By-line 					Tag.Creator = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 116: // Copyright notice 					Tag.Copyright = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 120: // Caption/Abstract 					Tag.Comment = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				}
Magic Number,TagLib.IIM,IIMReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IIM\IIMReader.cs,Process,The following statement contains a magic number: switch (Data[i]) { 				case 5: // Object Name 					Tag.Title = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 25: // Keywords 					Tag.AddKeyword (Data.ToString (StringType.Latin1' i + 3' len)); 					break; 				case 80: // By-line 					Tag.Creator = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 116: // Copyright notice 					Tag.Copyright = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 120: // Caption/Abstract 					Tag.Comment = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				}
Magic Number,TagLib.IIM,IIMReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IIM\IIMReader.cs,Process,The following statement contains a magic number: switch (Data[i]) { 				case 5: // Object Name 					Tag.Title = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 25: // Keywords 					Tag.AddKeyword (Data.ToString (StringType.Latin1' i + 3' len)); 					break; 				case 80: // By-line 					Tag.Creator = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 116: // Copyright notice 					Tag.Copyright = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 120: // Caption/Abstract 					Tag.Comment = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				}
Magic Number,TagLib.IIM,IIMReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IIM\IIMReader.cs,Process,The following statement contains a magic number: switch (Data[i]) { 				case 5: // Object Name 					Tag.Title = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 25: // Keywords 					Tag.AddKeyword (Data.ToString (StringType.Latin1' i + 3' len)); 					break; 				case 80: // By-line 					Tag.Creator = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 116: // Copyright notice 					Tag.Copyright = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 120: // Caption/Abstract 					Tag.Comment = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				}
Magic Number,TagLib.IIM,IIMReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IIM\IIMReader.cs,Process,The following statement contains a magic number: findOffset = i + 3 + len;
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ValidateHeader,The following statement contains a magic number: ByteVector segment = ReadBlock (2);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadSegmentMarker,The following statement contains a magic number: ByteVector segment_header = ReadBlock (2);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadSegmentMarker,The following statement contains a magic number: segment_header.Count != 2
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadSegmentMarker,The following statement contains a magic number: throw new CorruptFileException ("Start of Segment expected at " + (Tell - 2));
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadSegmentSize,The following statement contains a magic number: ByteVector segment_size_bytes = ReadBlock (2);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadSegmentSize,The following statement contains a magic number: segment_size_bytes.Count != 2
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadSegmentSize,The following statement contains a magic number: segment_size < 2
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadMetadata,The following statement contains a magic number: ushort data_size = (ushort)(segment_size - 2);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadJFIFHeader,The following statement contains a magic number: Tell != 6
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadJFIFHeader,The following statement contains a magic number: Seek (2' SeekOrigin.Begin);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadJFIFHeader,The following statement contains a magic number: jfif_header = ReadBlock (length + 2 + 2);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadJFIFHeader,The following statement contains a magic number: jfif_header = ReadBlock (length + 2 + 2);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadJFIFHeader,The following statement contains a magic number: AddMetadataBlock (2' length + 2 + 2);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadJFIFHeader,The following statement contains a magic number: AddMetadataBlock (2' length + 2 + 2);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadJFIFHeader,The following statement contains a magic number: AddMetadataBlock (2' length + 2 + 2);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadJFIFHeader,The following statement contains a magic number: ReadBlock (5).ToString ().Equals ("JFIF\0")
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: int exif_header_length = 14;
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: bool is_bigendian = data.Mid (6' 2).ToString ().Equals ("MM");
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: bool is_bigendian = data.Mid (6' 2).ToString ().Equals ("MM");
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: ushort magic = data.Mid (8' 2).ToUShort (is_bigendian);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: ushort magic = data.Mid (8' 2).ToUShort (is_bigendian);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: magic != 42
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: uint ifd_offset = data.Mid (10' 4).ToUInt (is_bigendian);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: uint ifd_offset = data.Mid (10' 4).ToUInt (is_bigendian);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: var reader = new IFDReader (this' is_bigendian' exif.Structure' position + 6' ifd_offset' (uint)(length - 6));
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: var reader = new IFDReader (this' is_bigendian' exif.Structure' position + 6' ifd_offset' (uint)(length - 6));
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: AddMetadataBlock (position - 4' length + 4);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: AddMetadataBlock (position - 4' length + 4);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: data.Count == exif_header_length 					&& data.Mid (0' 6).ToString ().Equals (EXIF_IDENTIFIER)
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: AddMetadataBlock (position - 4' length + 4);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP1Segment,The following statement contains a magic number: AddMetadataBlock (position - 4' length + 4);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadAPP13Segment,The following statement contains a magic number: lenToSkip = 1 + headerInfoLen + 4;
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,WriteMetadata,The following statement contains a magic number: SaveMetadata (data' 2);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,RenderExifSegment,The following statement contains a magic number: uint first_ifd_offset = 8;
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,RenderExifSegment,The following statement contains a magic number: uint segment_size = (uint)(first_ifd_offset + exif_data.Count + 2 + 6);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,RenderExifSegment,The following statement contains a magic number: uint segment_size = (uint)(first_ifd_offset + exif_data.Count + 2 + 6);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,RenderExifSegment,The following statement contains a magic number: var data = new ByteVector (new byte[] { 0xFF' (byte)Marker.APP1 }) { 				ByteVector.FromUShort ((ushort)segment_size)' 				"Exif\0\0"' 				ByteVector.FromString ("MM"' StringType.Latin1)' 				ByteVector.FromUShort (42)' 				ByteVector.FromUInt (first_ifd_offset)'  				// Add ifd data itself 				exif_data 			};
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,RenderXMPSegment,The following statement contains a magic number: uint segment_size = (uint)(2 + xmp_data.Count);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadCOMSegment,The following statement contains a magic number: AddMetadataBlock (position - 4' length + 4);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadCOMSegment,The following statement contains a magic number: AddMetadataBlock (position - 4' length + 4);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,RenderCOMSegment,The following statement contains a magic number: uint segment_size = (uint)(2 + com_data.Count);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadSOFSegment,The following statement contains a magic number: height = ReadBlock (2).ToUShort ();
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadSOFSegment,The following statement contains a magic number: width = ReadBlock (2).ToUShort ();
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadDQTSegment,The following statement contains a magic number: byte pq = (byte)(pqtq >> 4);
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadDQTSegment,The following statement contains a magic number: ushort val = ReadBlock (pq == 1 ? 2 : 1).ToUShort ();
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadDQTSegment,The following statement contains a magic number: double x = 100.0 * val / table[row * 8 + col];
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadDQTSegment,The following statement contains a magic number: double x = 100.0 * val / table[row * 8 + col];
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadDQTSegment,The following statement contains a magic number: col < 8
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadDQTSegment,The following statement contains a magic number: row < 8
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadDQTSegment,The following statement contains a magic number: cumsf /= 64.0;
Magic Number,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadDQTSegment,The following statement contains a magic number: local_q = 100.0;
Magic Number,TagLib.Matroska,Attachment,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Attachment.cs,SetFilenameFromType,The following statement contains a magic number: ext = "." + MimeType.Substring (6);
Magic Number,TagLib.Matroska,Attachment,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Attachment.cs,SetFilenameFromType,The following statement contains a magic number: ext == null || ext.Length < 2
Magic Number,TagLib.Matroska,EBMLelement,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLElement.cs,IncrementSize,The following statement contains a magic number: !IncSize && DataSizeSize < 8
Magic Number,TagLib.Matroska,EBMLelement,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLElement.cs,EBMLByteSize,The following statement contains a magic number: size_length = 2;
Magic Number,TagLib.Matroska,EBMLelement,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLElement.cs,GetDouble,The following statement contains a magic number: Data.Count == 4
Magic Number,TagLib.Matroska,EBMLelement,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLElement.cs,SetData,The following statement contains a magic number: ByteVector vector = new ByteVector (isLong ? 8 : 4);
Magic Number,TagLib.Matroska,EBMLelement,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLElement.cs,SetData,The following statement contains a magic number: ByteVector vector = new ByteVector (isLong ? 8 : 4);
Magic Number,TagLib.Matroska,EBMLelement,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLElement.cs,SetData,The following statement contains a magic number: data >>= 8;
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,Read,The following statement contains a magic number: id_length <= 4 && (header_byte & mask) == 0
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,Read,The following statement contains a magic number: id_length > 4
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,Read,The following statement contains a magic number: size_length <= 8 && (header_byte & mask) == 0
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,Read,The following statement contains a magic number: size_length > 8
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,WriteDataSize,The following statement contains a magic number: const ulong newsize_length = 8;
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,WriteDataSize,The following statement contains a magic number: ulong mask = 0xFF000000' id_length = 4;
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,WriteDataSize,The following statement contains a magic number: mask >>= 8;
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,WriteDataSize,The following statement contains a magic number: size_length > 8
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,WriteDataSize,The following statement contains a magic number: mask >>= 8;
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,WriteVoid,The following statement contains a magic number: Size < 2
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,WriteVoid,The following statement contains a magic number: vector = new ByteVector (2);
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,WriteVoid,The following statement contains a magic number: datasize = (int)Size - 2;
Magic Number,TagLib.Matroska,EBMLreader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\EBMLreader.cs,WriteVoid,The following statement contains a magic number: Size < 100
Magic Number,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,ReadLeadText,The following statement contains a magic number: const int buffer_size = 64;
Magic Number,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,ReadSegments,The following statement contains a magic number: var segm_list = new List<EBMLreader> (10);
Magic Number,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,ReadSegments,The following statement contains a magic number: switch (matroska_id) { 				case MatroskaID.SeekHead: 					if (allowSeekHead) { 						// Take only the first SeekHead into account 						var ebml_seek = new List<EBMLreader> (10) { child }; 						if (ReadSeekHead (child' ebml_seek)) { 							// Always reference the first element 							if (ebml_seek[0].Offset > element.DataOffset) 								ebml_seek.Insert (0' segm_list[0]);  							segm_list = ebml_seek; 							i = element.DataSize; // Exit the loop: we got what we need 						} else { 							MarkAsCorrupt ("Invalid Meta Seek"); 							refInSeekHead = true; 						} 					} else { 						refInSeekHead = true; 					} 					break;  				case MatroskaID.Void: // extend SeekHead space to following void 					if (Mode == AccessMode.Write) refInSeekHead = true; // This will serve optimization 					break;  				case MatroskaID.Cluster: // reference first Cluster only (too many) 					refInSeekHead = !foundCluster; 					foundCluster = true; 					break;  				// Reference the following elements 				case MatroskaID.Cues: 				case MatroskaID.Tracks: 				case MatroskaID.SegmentInfo: 				case MatroskaID.Tags: 				case MatroskaID.Attachments: 				default: 					refInSeekHead = true; 					break; 				}
Magic Number,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,ReadSimpleTag,The following statement contains a magic number: tag.SimpleTags[key] = list = new List<SimpleTag> (6);
Magic Number,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,WriteSegment,The following statement contains a magic number: var ebml_alloc = new List<EBMLelement> (3);
Magic Number,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,WriteSegment,The following statement contains a magic number: ebml_alloc.Count == 2 && ebml_alloc[0].Size < ebml_alloc[1].Size
Magic Number,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,WriteReservedEBML,The following statement contains a magic number: long margin = 40;
Magic Number,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,WriteReservedEBML,The following statement contains a magic number: margin *= 3;
Magic Number,TagLib.Matroska,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\File.cs,UpdateSegmentsMergeVoids,The following statement contains a magic number: ulong maxbound = ebml_segm.Offset + ebml_segm.Size - 2;
Magic Number,TagLib.Matroska,UIDElement,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\IUIDElement.cs,GenUID,The following statement contains a magic number: ret = ((ulong)random.Next ()) << 32;
Magic Number,TagLib.Matroska,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tag.cs,MakeTargetType,The following statement contains a magic number: switch (targetTypeValue) {  			case 70: ret = TargetType.COLLECTION; break;  			case 60: ret = IsVideo ? TargetType.SEASON : TargetType.VOLUME; break;  			case 50: ret = IsVideo ? TargetType.MOVIE : TargetType.ALBUM; break;  			case 40: ret = TargetType.PART; break;  			case 30: ret = IsVideo ? TargetType.CHAPTER : TargetType.TRACK; break;  			case 20: ret = IsVideo ? TargetType.SCENE : TargetType.MOVEMENT; break;  			case 10: ret = TargetType.SHOT; break; 			}
Magic Number,TagLib.Matroska,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tag.cs,MakeTargetType,The following statement contains a magic number: switch (targetTypeValue) {  			case 70: ret = TargetType.COLLECTION; break;  			case 60: ret = IsVideo ? TargetType.SEASON : TargetType.VOLUME; break;  			case 50: ret = IsVideo ? TargetType.MOVIE : TargetType.ALBUM; break;  			case 40: ret = TargetType.PART; break;  			case 30: ret = IsVideo ? TargetType.CHAPTER : TargetType.TRACK; break;  			case 20: ret = IsVideo ? TargetType.SCENE : TargetType.MOVEMENT; break;  			case 10: ret = TargetType.SHOT; break; 			}
Magic Number,TagLib.Matroska,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tag.cs,MakeTargetType,The following statement contains a magic number: switch (targetTypeValue) {  			case 70: ret = TargetType.COLLECTION; break;  			case 60: ret = IsVideo ? TargetType.SEASON : TargetType.VOLUME; break;  			case 50: ret = IsVideo ? TargetType.MOVIE : TargetType.ALBUM; break;  			case 40: ret = TargetType.PART; break;  			case 30: ret = IsVideo ? TargetType.CHAPTER : TargetType.TRACK; break;  			case 20: ret = IsVideo ? TargetType.SCENE : TargetType.MOVEMENT; break;  			case 10: ret = TargetType.SHOT; break; 			}
Magic Number,TagLib.Matroska,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tag.cs,MakeTargetType,The following statement contains a magic number: switch (targetTypeValue) {  			case 70: ret = TargetType.COLLECTION; break;  			case 60: ret = IsVideo ? TargetType.SEASON : TargetType.VOLUME; break;  			case 50: ret = IsVideo ? TargetType.MOVIE : TargetType.ALBUM; break;  			case 40: ret = TargetType.PART; break;  			case 30: ret = IsVideo ? TargetType.CHAPTER : TargetType.TRACK; break;  			case 20: ret = IsVideo ? TargetType.SCENE : TargetType.MOVEMENT; break;  			case 10: ret = TargetType.SHOT; break; 			}
Magic Number,TagLib.Matroska,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tag.cs,MakeTargetType,The following statement contains a magic number: switch (targetTypeValue) {  			case 70: ret = TargetType.COLLECTION; break;  			case 60: ret = IsVideo ? TargetType.SEASON : TargetType.VOLUME; break;  			case 50: ret = IsVideo ? TargetType.MOVIE : TargetType.ALBUM; break;  			case 40: ret = TargetType.PART; break;  			case 30: ret = IsVideo ? TargetType.CHAPTER : TargetType.TRACK; break;  			case 20: ret = IsVideo ? TargetType.SCENE : TargetType.MOVEMENT; break;  			case 10: ret = TargetType.SHOT; break; 			}
Magic Number,TagLib.Matroska,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tag.cs,MakeTargetType,The following statement contains a magic number: switch (targetTypeValue) {  			case 70: ret = TargetType.COLLECTION; break;  			case 60: ret = IsVideo ? TargetType.SEASON : TargetType.VOLUME; break;  			case 50: ret = IsVideo ? TargetType.MOVIE : TargetType.ALBUM; break;  			case 40: ret = TargetType.PART; break;  			case 30: ret = IsVideo ? TargetType.CHAPTER : TargetType.TRACK; break;  			case 20: ret = IsVideo ? TargetType.SCENE : TargetType.MOVEMENT; break;  			case 10: ret = TargetType.SHOT; break; 			}
Magic Number,TagLib.Matroska,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tag.cs,MakeTargetType,The following statement contains a magic number: switch (targetTypeValue) {  			case 70: ret = TargetType.COLLECTION; break;  			case 60: ret = IsVideo ? TargetType.SEASON : TargetType.VOLUME; break;  			case 50: ret = IsVideo ? TargetType.MOVIE : TargetType.ALBUM; break;  			case 40: ret = TargetType.PART; break;  			case 30: ret = IsVideo ? TargetType.CHAPTER : TargetType.TRACK; break;  			case 20: ret = IsVideo ? TargetType.SCENE : TargetType.MOVEMENT; break;  			case 10: ret = TargetType.SHOT; break; 			}
Magic Number,TagLib.Matroska,Tags,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tags.cs,Get,The following statement contains a magic number: targetTypeValue = (ushort)  				(targetTypeValue > 70 ? 70 				: targetTypeValue < 10 ? 10 				: (targetTypeValue / 10) * 10 				);
Magic Number,TagLib.Matroska,Tags,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tags.cs,Get,The following statement contains a magic number: targetTypeValue = (ushort)  				(targetTypeValue > 70 ? 70 				: targetTypeValue < 10 ? 10 				: (targetTypeValue / 10) * 10 				);
Magic Number,TagLib.Matroska,Tags,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tags.cs,Get,The following statement contains a magic number: targetTypeValue = (ushort)  				(targetTypeValue > 70 ? 70 				: targetTypeValue < 10 ? 10 				: (targetTypeValue / 10) * 10 				);
Magic Number,TagLib.Matroska,Tags,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tags.cs,Get,The following statement contains a magic number: targetTypeValue = (ushort)  				(targetTypeValue > 70 ? 70 				: targetTypeValue < 10 ? 10 				: (targetTypeValue / 10) * 10 				);
Magic Number,TagLib.Matroska,Tags,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tags.cs,Get,The following statement contains a magic number: targetTypeValue = (ushort)  				(targetTypeValue > 70 ? 70 				: targetTypeValue < 10 ? 10 				: (targetTypeValue / 10) * 10 				);
Magic Number,TagLib.Matroska,Tags,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tags.cs,Get,The following statement contains a magic number: targetTypeValue = (ushort)  				(targetTypeValue > 70 ? 70 				: targetTypeValue < 10 ? 10 				: (targetTypeValue / 10) * 10 				);
Magic Number,TagLib.Matroska,VideoTrack,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\VideoTrack.cs,VideoTrack,The following statement contains a magic number: switch (matroska_id) { 				case MatroskaID.TrackVideo: { 						ulong i = 0;  						while (i < elem.DataSize) { 							EBMLreader child = new EBMLreader (_file' elem.DataOffset + i);  							matroska_id = child.ID;  							switch (matroska_id) { 							case MatroskaID.VideoDisplayWidth: 								disp_width = child.ReadULong (); 								break; 							case MatroskaID.VideoDisplayHeight: 								disp_height = child.ReadULong (); 								break; 							case MatroskaID.VideoPixelWidth: 								width = child.ReadULong (); 								break; 							case MatroskaID.VideoPixelHeight: 								height = child.ReadULong (); 								break; 							case MatroskaID.VideoFrameRate: 								framerate = child.ReadDouble (); 								break; 							case MatroskaID.VideoFlagInterlaced: 								interlaced = child.ReadBool (); 								break; 							case MatroskaID.VideoAspectRatioType: 								ratio_type = (VideoAspectRatioType)child.ReadULong (); 								break; 							case MatroskaID.VideoColourSpace: 								fourcc = child.ReadBytes (); 								break; 							default: 								unknown_elems.Add (child); 								break; 							}  							i += child.Size; 						} 						break; 					}  				case MatroskaID.TrackDefaultDuration: 					ulong tmp = elem.ReadULong (); 					framerate = 1000000000.0 / tmp; 					break;  				default: 					unknown_elems.Add (elem); 					break; 				}
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,StreamHeader,The following statement contains a magic number: version = 7;
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,StreamHeader,The following statement contains a magic number: channels = 2;
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,StreamHeader,The following statement contains a magic number: ByteVector magic = file.ReadBlock (4);
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,StreamHeader,The following statement contains a magic number: ReadSv7Properties (magic + file.ReadBlock ((int)SizeSV7 - 4));
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv7Properties,The following statement contains a magic number: version = data[3] & 15;
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv7Properties,The following statement contains a magic number: version = data[3] & 15;
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv7Properties,The following statement contains a magic number: channels = 2;
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv7Properties,The following statement contains a magic number: frames = data.Mid (4' 4).ToUInt (false);
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv7Properties,The following statement contains a magic number: frames = data.Mid (4' 4).ToUInt (false);
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv7Properties,The following statement contains a magic number: uint flags = data.Mid (8' 4).ToUInt (false);
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv7Properties,The following statement contains a magic number: uint flags = data.Mid (8' 4).ToUInt (false);
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv7Properties,The following statement contains a magic number: sample_rate = sftable[(int)(((flags >> 17) & 					1) * 2 + ((flags >> 16) & 1))];
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv7Properties,The following statement contains a magic number: sample_rate = sftable[(int)(((flags >> 17) & 					1) * 2 + ((flags >> 16) & 1))];
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv7Properties,The following statement contains a magic number: sample_rate = sftable[(int)(((flags >> 17) & 					1) * 2 + ((flags >> 16) & 1))];
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv7Properties,The following statement contains a magic number: version == 7
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv8Properties,The following statement contains a magic number: ByteVector packetType = file.ReadBlock (2);
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv8Properties,The following statement contains a magic number: ulong payloadSize = packetSize - 2 - packetSizeLength;
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv8Properties,The following statement contains a magic number: payloadSize <= 5
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv8Properties,The following statement contains a magic number: int pos = 4;
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv8Properties,The following statement contains a magic number: pos > (uint)payloadSize - 3
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv8Properties,The following statement contains a magic number: pos > (uint)payloadSize - 2
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv8Properties,The following statement contains a magic number: sample_rate = sftable[(flags >> 13) & 0x07];
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSv8Properties,The following statement contains a magic number: channels = ((flags >> 4) & 0x0F) + 1;
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSize,The following statement contains a magic number: size = (size << 7) | (tmp & 0x7F);
Magic Number,TagLib.MusePack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpc\StreamHeader.cs,ReadSize,The following statement contains a magic number: size = (size << 7) | (tmp & 0x7F);
Magic Number,TagLib.Mpeg4,AppleTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\AppleTag.cs,FixId,The following statement contains a magic number: id.Count == 4
Magic Number,TagLib.Mpeg4,AppleTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\AppleTag.cs,FixId,The following statement contains a magic number: return new ReadOnlyByteVector (0xa9' id[0]' id[1]' id[2]);
Magic Number,TagLib.Mpeg4,AppleTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\AppleTag.cs,FixId,The following statement contains a magic number: id.Count == 3
Magic Number,TagLib.Mpeg4,Box,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Box.cs,Render,The following statement contains a magic number: header.DataSize != 0 && size_difference >= 8
Magic Number,TagLib.Mpeg4,AppleDataBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleDataBox.cs,Render,The following statement contains a magic number: var output = new ByteVector (4) { 				topData 			};
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: uint min_es_length = 3 + 15 + 3;
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: uint min_es_length = 3 + 15 + 3;
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: uint min_es_length = 3 + 15 + 3;
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: StreamId = box_data.Mid (offset' 2).ToUShort ();
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: offset += 2;
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: stream_dependence_flag = ((byte)((box_data[offset] >> 7) & 0x1) == 0x1 ? true : false);
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: URL_flag = ((byte)((box_data[offset] >> 6) & 0x1) == 0x1 ? true : false);
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: ocr_stream_flag = ((byte)((box_data[offset] >> 5) & 0x1) == 0x1 ? true : false);
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: min_es_length += 2;
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: dependsOn_ES_ID = box_data.Mid (offset' 2).ToUShort ();
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: offset += 2;
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: min_es_length += 2;
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: min_es_length += 2;
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: OCR_ES_Id = box_data.Mid (offset' 2).ToUShort ();
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: offset += 2;
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: switch (tag) { 				case DescriptorTag.DecoderConfigDescrTag: // DecoderConfigDescriptor 					{ 						// Check that the remainder of the tag is at least 13 bytes long (13 + DecoderSpecificInfo[] + profileLevelIndicationIndexDescriptor[]) 						if (ReadLength (box_data' ref offset) < 13) 							throw new CorruptFileException ("Could not read data. Too small.");  						// Read a lot of good info. 						ObjectTypeId = box_data[offset++];  						StreamType = (byte)(box_data[offset] >> 2); // First 6 bits 						upStream = ((byte)((box_data[offset++] >> 1) & 0x1) == 0x1 ? true : false); // 7th bit and we're done with the stream bits  						BufferSizeDB = box_data.Mid (offset' 3).ToUInt (); 						offset += 3; // Done with bufferSizeDB  						max_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with maxBitrate  						average_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with avgBitrate  						// If there's a DecoderSpecificInfo[] array at the end it'll pick it up in the while loop 					} 					break;  				case DescriptorTag.DecSpecificInfoTag: // DecoderSpecificInfo 					{ 						// The rest of the info is decoder specific. 						uint length = ReadLength (box_data' ref offset);  						DecoderConfig = box_data.Mid (offset' (int)length); 						offset += (int)length; // We're done with the config 					} 					break;   				case DescriptorTag.SLConfigDescrTag: // SLConfigDescriptor 					{ 						// The rest of the info is SL specific. 						uint length = ReadLength (box_data' ref offset);  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 					} 					break;  				case DescriptorTag.Forbidden_00: 				case DescriptorTag.Forbidden_FF: 					throw new CorruptFileException ("Invalid Descriptor tag.");  				default: { 						/* TODO: Should we handle other optional descriptor tags? 						 *  ExtensionDescriptor extDescr[0 .. 255]; 							LanguageDescriptor langDescr[0 .. 1]; 							IPI_DescPointer ipiPtr[0 .. 1]; 							IP_IdentificationDataSet ipIDS[0 .. 1]; 							QoS_Descriptor qosDescr[0 .. 1]; 						 */ 						uint length = ReadLength (box_data' ref offset); // Every descriptor starts with a length  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 						break; 					} 				}
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: switch (tag) { 				case DescriptorTag.DecoderConfigDescrTag: // DecoderConfigDescriptor 					{ 						// Check that the remainder of the tag is at least 13 bytes long (13 + DecoderSpecificInfo[] + profileLevelIndicationIndexDescriptor[]) 						if (ReadLength (box_data' ref offset) < 13) 							throw new CorruptFileException ("Could not read data. Too small.");  						// Read a lot of good info. 						ObjectTypeId = box_data[offset++];  						StreamType = (byte)(box_data[offset] >> 2); // First 6 bits 						upStream = ((byte)((box_data[offset++] >> 1) & 0x1) == 0x1 ? true : false); // 7th bit and we're done with the stream bits  						BufferSizeDB = box_data.Mid (offset' 3).ToUInt (); 						offset += 3; // Done with bufferSizeDB  						max_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with maxBitrate  						average_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with avgBitrate  						// If there's a DecoderSpecificInfo[] array at the end it'll pick it up in the while loop 					} 					break;  				case DescriptorTag.DecSpecificInfoTag: // DecoderSpecificInfo 					{ 						// The rest of the info is decoder specific. 						uint length = ReadLength (box_data' ref offset);  						DecoderConfig = box_data.Mid (offset' (int)length); 						offset += (int)length; // We're done with the config 					} 					break;   				case DescriptorTag.SLConfigDescrTag: // SLConfigDescriptor 					{ 						// The rest of the info is SL specific. 						uint length = ReadLength (box_data' ref offset);  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 					} 					break;  				case DescriptorTag.Forbidden_00: 				case DescriptorTag.Forbidden_FF: 					throw new CorruptFileException ("Invalid Descriptor tag.");  				default: { 						/* TODO: Should we handle other optional descriptor tags? 						 *  ExtensionDescriptor extDescr[0 .. 255]; 							LanguageDescriptor langDescr[0 .. 1]; 							IPI_DescPointer ipiPtr[0 .. 1]; 							IP_IdentificationDataSet ipIDS[0 .. 1]; 							QoS_Descriptor qosDescr[0 .. 1]; 						 */ 						uint length = ReadLength (box_data' ref offset); // Every descriptor starts with a length  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 						break; 					} 				}
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: switch (tag) { 				case DescriptorTag.DecoderConfigDescrTag: // DecoderConfigDescriptor 					{ 						// Check that the remainder of the tag is at least 13 bytes long (13 + DecoderSpecificInfo[] + profileLevelIndicationIndexDescriptor[]) 						if (ReadLength (box_data' ref offset) < 13) 							throw new CorruptFileException ("Could not read data. Too small.");  						// Read a lot of good info. 						ObjectTypeId = box_data[offset++];  						StreamType = (byte)(box_data[offset] >> 2); // First 6 bits 						upStream = ((byte)((box_data[offset++] >> 1) & 0x1) == 0x1 ? true : false); // 7th bit and we're done with the stream bits  						BufferSizeDB = box_data.Mid (offset' 3).ToUInt (); 						offset += 3; // Done with bufferSizeDB  						max_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with maxBitrate  						average_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with avgBitrate  						// If there's a DecoderSpecificInfo[] array at the end it'll pick it up in the while loop 					} 					break;  				case DescriptorTag.DecSpecificInfoTag: // DecoderSpecificInfo 					{ 						// The rest of the info is decoder specific. 						uint length = ReadLength (box_data' ref offset);  						DecoderConfig = box_data.Mid (offset' (int)length); 						offset += (int)length; // We're done with the config 					} 					break;   				case DescriptorTag.SLConfigDescrTag: // SLConfigDescriptor 					{ 						// The rest of the info is SL specific. 						uint length = ReadLength (box_data' ref offset);  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 					} 					break;  				case DescriptorTag.Forbidden_00: 				case DescriptorTag.Forbidden_FF: 					throw new CorruptFileException ("Invalid Descriptor tag.");  				default: { 						/* TODO: Should we handle other optional descriptor tags? 						 *  ExtensionDescriptor extDescr[0 .. 255]; 							LanguageDescriptor langDescr[0 .. 1]; 							IPI_DescPointer ipiPtr[0 .. 1]; 							IP_IdentificationDataSet ipIDS[0 .. 1]; 							QoS_Descriptor qosDescr[0 .. 1]; 						 */ 						uint length = ReadLength (box_data' ref offset); // Every descriptor starts with a length  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 						break; 					} 				}
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: switch (tag) { 				case DescriptorTag.DecoderConfigDescrTag: // DecoderConfigDescriptor 					{ 						// Check that the remainder of the tag is at least 13 bytes long (13 + DecoderSpecificInfo[] + profileLevelIndicationIndexDescriptor[]) 						if (ReadLength (box_data' ref offset) < 13) 							throw new CorruptFileException ("Could not read data. Too small.");  						// Read a lot of good info. 						ObjectTypeId = box_data[offset++];  						StreamType = (byte)(box_data[offset] >> 2); // First 6 bits 						upStream = ((byte)((box_data[offset++] >> 1) & 0x1) == 0x1 ? true : false); // 7th bit and we're done with the stream bits  						BufferSizeDB = box_data.Mid (offset' 3).ToUInt (); 						offset += 3; // Done with bufferSizeDB  						max_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with maxBitrate  						average_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with avgBitrate  						// If there's a DecoderSpecificInfo[] array at the end it'll pick it up in the while loop 					} 					break;  				case DescriptorTag.DecSpecificInfoTag: // DecoderSpecificInfo 					{ 						// The rest of the info is decoder specific. 						uint length = ReadLength (box_data' ref offset);  						DecoderConfig = box_data.Mid (offset' (int)length); 						offset += (int)length; // We're done with the config 					} 					break;   				case DescriptorTag.SLConfigDescrTag: // SLConfigDescriptor 					{ 						// The rest of the info is SL specific. 						uint length = ReadLength (box_data' ref offset);  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 					} 					break;  				case DescriptorTag.Forbidden_00: 				case DescriptorTag.Forbidden_FF: 					throw new CorruptFileException ("Invalid Descriptor tag.");  				default: { 						/* TODO: Should we handle other optional descriptor tags? 						 *  ExtensionDescriptor extDescr[0 .. 255]; 							LanguageDescriptor langDescr[0 .. 1]; 							IPI_DescPointer ipiPtr[0 .. 1]; 							IP_IdentificationDataSet ipIDS[0 .. 1]; 							QoS_Descriptor qosDescr[0 .. 1]; 						 */ 						uint length = ReadLength (box_data' ref offset); // Every descriptor starts with a length  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 						break; 					} 				}
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: switch (tag) { 				case DescriptorTag.DecoderConfigDescrTag: // DecoderConfigDescriptor 					{ 						// Check that the remainder of the tag is at least 13 bytes long (13 + DecoderSpecificInfo[] + profileLevelIndicationIndexDescriptor[]) 						if (ReadLength (box_data' ref offset) < 13) 							throw new CorruptFileException ("Could not read data. Too small.");  						// Read a lot of good info. 						ObjectTypeId = box_data[offset++];  						StreamType = (byte)(box_data[offset] >> 2); // First 6 bits 						upStream = ((byte)((box_data[offset++] >> 1) & 0x1) == 0x1 ? true : false); // 7th bit and we're done with the stream bits  						BufferSizeDB = box_data.Mid (offset' 3).ToUInt (); 						offset += 3; // Done with bufferSizeDB  						max_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with maxBitrate  						average_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with avgBitrate  						// If there's a DecoderSpecificInfo[] array at the end it'll pick it up in the while loop 					} 					break;  				case DescriptorTag.DecSpecificInfoTag: // DecoderSpecificInfo 					{ 						// The rest of the info is decoder specific. 						uint length = ReadLength (box_data' ref offset);  						DecoderConfig = box_data.Mid (offset' (int)length); 						offset += (int)length; // We're done with the config 					} 					break;   				case DescriptorTag.SLConfigDescrTag: // SLConfigDescriptor 					{ 						// The rest of the info is SL specific. 						uint length = ReadLength (box_data' ref offset);  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 					} 					break;  				case DescriptorTag.Forbidden_00: 				case DescriptorTag.Forbidden_FF: 					throw new CorruptFileException ("Invalid Descriptor tag.");  				default: { 						/* TODO: Should we handle other optional descriptor tags? 						 *  ExtensionDescriptor extDescr[0 .. 255]; 							LanguageDescriptor langDescr[0 .. 1]; 							IPI_DescPointer ipiPtr[0 .. 1]; 							IP_IdentificationDataSet ipIDS[0 .. 1]; 							QoS_Descriptor qosDescr[0 .. 1]; 						 */ 						uint length = ReadLength (box_data' ref offset); // Every descriptor starts with a length  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 						break; 					} 				}
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: switch (tag) { 				case DescriptorTag.DecoderConfigDescrTag: // DecoderConfigDescriptor 					{ 						// Check that the remainder of the tag is at least 13 bytes long (13 + DecoderSpecificInfo[] + profileLevelIndicationIndexDescriptor[]) 						if (ReadLength (box_data' ref offset) < 13) 							throw new CorruptFileException ("Could not read data. Too small.");  						// Read a lot of good info. 						ObjectTypeId = box_data[offset++];  						StreamType = (byte)(box_data[offset] >> 2); // First 6 bits 						upStream = ((byte)((box_data[offset++] >> 1) & 0x1) == 0x1 ? true : false); // 7th bit and we're done with the stream bits  						BufferSizeDB = box_data.Mid (offset' 3).ToUInt (); 						offset += 3; // Done with bufferSizeDB  						max_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with maxBitrate  						average_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with avgBitrate  						// If there's a DecoderSpecificInfo[] array at the end it'll pick it up in the while loop 					} 					break;  				case DescriptorTag.DecSpecificInfoTag: // DecoderSpecificInfo 					{ 						// The rest of the info is decoder specific. 						uint length = ReadLength (box_data' ref offset);  						DecoderConfig = box_data.Mid (offset' (int)length); 						offset += (int)length; // We're done with the config 					} 					break;   				case DescriptorTag.SLConfigDescrTag: // SLConfigDescriptor 					{ 						// The rest of the info is SL specific. 						uint length = ReadLength (box_data' ref offset);  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 					} 					break;  				case DescriptorTag.Forbidden_00: 				case DescriptorTag.Forbidden_FF: 					throw new CorruptFileException ("Invalid Descriptor tag.");  				default: { 						/* TODO: Should we handle other optional descriptor tags? 						 *  ExtensionDescriptor extDescr[0 .. 255]; 							LanguageDescriptor langDescr[0 .. 1]; 							IPI_DescPointer ipiPtr[0 .. 1]; 							IP_IdentificationDataSet ipIDS[0 .. 1]; 							QoS_Descriptor qosDescr[0 .. 1]; 						 */ 						uint length = ReadLength (box_data' ref offset); // Every descriptor starts with a length  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 						break; 					} 				}
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: switch (tag) { 				case DescriptorTag.DecoderConfigDescrTag: // DecoderConfigDescriptor 					{ 						// Check that the remainder of the tag is at least 13 bytes long (13 + DecoderSpecificInfo[] + profileLevelIndicationIndexDescriptor[]) 						if (ReadLength (box_data' ref offset) < 13) 							throw new CorruptFileException ("Could not read data. Too small.");  						// Read a lot of good info. 						ObjectTypeId = box_data[offset++];  						StreamType = (byte)(box_data[offset] >> 2); // First 6 bits 						upStream = ((byte)((box_data[offset++] >> 1) & 0x1) == 0x1 ? true : false); // 7th bit and we're done with the stream bits  						BufferSizeDB = box_data.Mid (offset' 3).ToUInt (); 						offset += 3; // Done with bufferSizeDB  						max_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with maxBitrate  						average_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with avgBitrate  						// If there's a DecoderSpecificInfo[] array at the end it'll pick it up in the while loop 					} 					break;  				case DescriptorTag.DecSpecificInfoTag: // DecoderSpecificInfo 					{ 						// The rest of the info is decoder specific. 						uint length = ReadLength (box_data' ref offset);  						DecoderConfig = box_data.Mid (offset' (int)length); 						offset += (int)length; // We're done with the config 					} 					break;   				case DescriptorTag.SLConfigDescrTag: // SLConfigDescriptor 					{ 						// The rest of the info is SL specific. 						uint length = ReadLength (box_data' ref offset);  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 					} 					break;  				case DescriptorTag.Forbidden_00: 				case DescriptorTag.Forbidden_FF: 					throw new CorruptFileException ("Invalid Descriptor tag.");  				default: { 						/* TODO: Should we handle other optional descriptor tags? 						 *  ExtensionDescriptor extDescr[0 .. 255]; 							LanguageDescriptor langDescr[0 .. 1]; 							IPI_DescPointer ipiPtr[0 .. 1]; 							IP_IdentificationDataSet ipIDS[0 .. 1]; 							QoS_Descriptor qosDescr[0 .. 1]; 						 */ 						uint length = ReadLength (box_data' ref offset); // Every descriptor starts with a length  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 						break; 					} 				}
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,AppleElementaryStreamDescriptor,The following statement contains a magic number: switch (tag) { 				case DescriptorTag.DecoderConfigDescrTag: // DecoderConfigDescriptor 					{ 						// Check that the remainder of the tag is at least 13 bytes long (13 + DecoderSpecificInfo[] + profileLevelIndicationIndexDescriptor[]) 						if (ReadLength (box_data' ref offset) < 13) 							throw new CorruptFileException ("Could not read data. Too small.");  						// Read a lot of good info. 						ObjectTypeId = box_data[offset++];  						StreamType = (byte)(box_data[offset] >> 2); // First 6 bits 						upStream = ((byte)((box_data[offset++] >> 1) & 0x1) == 0x1 ? true : false); // 7th bit and we're done with the stream bits  						BufferSizeDB = box_data.Mid (offset' 3).ToUInt (); 						offset += 3; // Done with bufferSizeDB  						max_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with maxBitrate  						average_bitrate = box_data.Mid (offset' 4).ToUInt (); 						offset += 4; // Done with avgBitrate  						// If there's a DecoderSpecificInfo[] array at the end it'll pick it up in the while loop 					} 					break;  				case DescriptorTag.DecSpecificInfoTag: // DecoderSpecificInfo 					{ 						// The rest of the info is decoder specific. 						uint length = ReadLength (box_data' ref offset);  						DecoderConfig = box_data.Mid (offset' (int)length); 						offset += (int)length; // We're done with the config 					} 					break;   				case DescriptorTag.SLConfigDescrTag: // SLConfigDescriptor 					{ 						// The rest of the info is SL specific. 						uint length = ReadLength (box_data' ref offset);  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 					} 					break;  				case DescriptorTag.Forbidden_00: 				case DescriptorTag.Forbidden_FF: 					throw new CorruptFileException ("Invalid Descriptor tag.");  				default: { 						/* TODO: Should we handle other optional descriptor tags? 						 *  ExtensionDescriptor extDescr[0 .. 255]; 							LanguageDescriptor langDescr[0 .. 1]; 							IPI_DescPointer ipiPtr[0 .. 1]; 							IP_IdentificationDataSet ipIDS[0 .. 1]; 							QoS_Descriptor qosDescr[0 .. 1]; 						 */ 						uint length = ReadLength (box_data' ref offset); // Every descriptor starts with a length  						offset += (int)length; // Skip the rest of the descriptor as reported in the length so we can move onto the next one 						break; 					} 				}
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,ReadLength,The following statement contains a magic number: int end = offset + 4;
Magic Number,TagLib.Mpeg4,AppleElementaryStreamDescriptor,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\AppleElementaryStreamDescriptor.cs,ReadLength,The following statement contains a magic number: length = (uint)(length << 7) | (uint)(b & 0x7f);
Magic Number,TagLib.Mpeg4,FullBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\FullBox.cs,FullBox,The following statement contains a magic number: ByteVector header_data = file.ReadBlock (4);
Magic Number,TagLib.Mpeg4,FullBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\FullBox.cs,FullBox,The following statement contains a magic number: Flags = header_data.Mid (1' 3).ToUInt ();
Magic Number,TagLib.Mpeg4,FullBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\FullBox.cs,Render,The following statement contains a magic number: var output = new ByteVector (version) { 				ByteVector.FromUInt (Flags).Mid (1' 3)' 				topData 			};
Magic Number,TagLib.Mpeg4,IsoAudioSampleEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoAudioSampleEntry.cs,IsoAudioSampleEntry,The following statement contains a magic number: file.Seek (base.DataPosition + 8);
Magic Number,TagLib.Mpeg4,IsoAudioSampleEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoAudioSampleEntry.cs,IsoAudioSampleEntry,The following statement contains a magic number: channel_count = file.ReadBlock (2).ToUShort ();
Magic Number,TagLib.Mpeg4,IsoAudioSampleEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoAudioSampleEntry.cs,IsoAudioSampleEntry,The following statement contains a magic number: sample_size = file.ReadBlock (2).ToUShort ();
Magic Number,TagLib.Mpeg4,IsoAudioSampleEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoAudioSampleEntry.cs,IsoAudioSampleEntry,The following statement contains a magic number: file.Seek (base.DataPosition + 16);
Magic Number,TagLib.Mpeg4,IsoAudioSampleEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoAudioSampleEntry.cs,IsoAudioSampleEntry,The following statement contains a magic number: sample_rate = file.ReadBlock (4).ToUInt ();
Magic Number,TagLib.Mpeg4,IsoChunkLargeOffsetBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoChunkLargeOffsetBox.cs,IsoChunkLargeOffsetBox,The following statement contains a magic number: Offsets = new ulong[(int) 				box_data.Mid (0' 4).ToUInt ()];
Magic Number,TagLib.Mpeg4,IsoChunkLargeOffsetBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoChunkLargeOffsetBox.cs,IsoChunkLargeOffsetBox,The following statement contains a magic number: Offsets[i] = box_data.Mid (4 + i * 8' 8).ToULong ();
Magic Number,TagLib.Mpeg4,IsoChunkLargeOffsetBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoChunkLargeOffsetBox.cs,IsoChunkLargeOffsetBox,The following statement contains a magic number: Offsets[i] = box_data.Mid (4 + i * 8' 8).ToULong ();
Magic Number,TagLib.Mpeg4,IsoChunkLargeOffsetBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoChunkLargeOffsetBox.cs,IsoChunkLargeOffsetBox,The following statement contains a magic number: Offsets[i] = box_data.Mid (4 + i * 8' 8).ToULong ();
Magic Number,TagLib.Mpeg4,IsoChunkOffsetBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoChunkOffsetBox.cs,IsoChunkOffsetBox,The following statement contains a magic number: Offsets = new uint[(int)box_data.Mid (0' 4).ToUInt ()];
Magic Number,TagLib.Mpeg4,IsoChunkOffsetBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoChunkOffsetBox.cs,IsoChunkOffsetBox,The following statement contains a magic number: Offsets[i] = box_data.Mid (4 + i * 4' 4).ToUInt ();
Magic Number,TagLib.Mpeg4,IsoChunkOffsetBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoChunkOffsetBox.cs,IsoChunkOffsetBox,The following statement contains a magic number: Offsets[i] = box_data.Mid (4 + i * 4' 4).ToUInt ();
Magic Number,TagLib.Mpeg4,IsoChunkOffsetBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoChunkOffsetBox.cs,IsoChunkOffsetBox,The following statement contains a magic number: Offsets[i] = box_data.Mid (4 + i * 4' 4).ToUInt ();
Magic Number,TagLib.Mpeg4,IsoHandlerBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoHandlerBox.cs,IsoHandlerBox,The following statement contains a magic number: file.Seek (DataPosition + 4);
Magic Number,TagLib.Mpeg4,IsoHandlerBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoHandlerBox.cs,IsoHandlerBox,The following statement contains a magic number: ByteVector box_data = file.ReadBlock (DataSize - 4);
Magic Number,TagLib.Mpeg4,IsoHandlerBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoHandlerBox.cs,IsoHandlerBox,The following statement contains a magic number: HandlerType = box_data.Mid (0' 4);
Magic Number,TagLib.Mpeg4,IsoHandlerBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoHandlerBox.cs,IsoHandlerBox,The following statement contains a magic number: int end = box_data.Find ((byte)0' 16);
Magic Number,TagLib.Mpeg4,IsoHandlerBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoHandlerBox.cs,IsoHandlerBox,The following statement contains a magic number: end < 16
Magic Number,TagLib.Mpeg4,IsoHandlerBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoHandlerBox.cs,IsoHandlerBox,The following statement contains a magic number: Name = end > 16 ? box_data.ToString (StringType.UTF8' 16' end - 16) : string.Empty;
Magic Number,TagLib.Mpeg4,IsoHandlerBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoHandlerBox.cs,IsoHandlerBox,The following statement contains a magic number: Name = end > 16 ? box_data.ToString (StringType.UTF8' 16' end - 16) : string.Empty;
Magic Number,TagLib.Mpeg4,IsoHandlerBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoHandlerBox.cs,IsoHandlerBox,The following statement contains a magic number: Name = end > 16 ? box_data.ToString (StringType.UTF8' 16' end - 16) : string.Empty;
Magic Number,TagLib.Mpeg4,IsoHandlerBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoHandlerBox.cs,IsoHandlerBox,The following statement contains a magic number: handlerType.Count < 4
Magic Number,TagLib.Mpeg4,IsoHandlerBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoHandlerBox.cs,IsoHandlerBox,The following statement contains a magic number: HandlerType = handlerType.Mid (0' 4);
Magic Number,TagLib.Mpeg4,IsoMetaBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMetaBox.cs,IsoMetaBox,The following statement contains a magic number: handlerType.Count < 4
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: data = file.ReadBlock (Math.Min (28' 					bytes_remaining));
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: creation_time = data.Mid (0' 						8).ToULong ();
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: data.Count >= 8
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: modification_time = data.Mid (8' 						8).ToULong ();
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: modification_time = data.Mid (8' 						8).ToULong ();
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: data.Count >= 16
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: timescale = data.Mid (16' 4).ToUInt ();
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: timescale = data.Mid (16' 4).ToUInt ();
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: data.Count >= 20
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: duration = data.Mid (20' 8).ToULong ();
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: duration = data.Mid (20' 8).ToULong ();
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: data.Count >= 28
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: bytes_remaining -= 28;
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: data = file.ReadBlock (Math.Min (6' bytes_remaining));
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: rate = data.Mid (0' 4).ToUInt ();
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: data.Count >= 4
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: volume = data.Mid (4' 2).ToUShort ();
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: volume = data.Mid (4' 2).ToUShort ();
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: data.Count >= 6
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: file.Seek (file.Tell + 70);
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: bytes_remaining -= 76;
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: data = file.ReadBlock (Math.Min (4' 				bytes_remaining));
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: NextTrackId = data.Mid (0' 4).ToUInt ();
Magic Number,TagLib.Mpeg4,IsoMovieHeaderBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoMovieHeaderBox.cs,IsoMovieHeaderBox,The following statement contains a magic number: data.Count >= 4
Magic Number,TagLib.Mpeg4,IsoSampleDescriptionBox,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoSampleDescriptionBox.cs,IsoSampleDescriptionBox,The following statement contains a magic number: EntryCount = file.ReadBlock (4).ToUInt ();
Magic Number,TagLib.Mpeg4,IsoSampleEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoSampleEntry.cs,IsoSampleEntry,The following statement contains a magic number: file.Seek (base.DataPosition + 6);
Magic Number,TagLib.Mpeg4,IsoSampleEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoSampleEntry.cs,IsoSampleEntry,The following statement contains a magic number: DataReferenceIndex = file.ReadBlock (2).ToUShort ();
Magic Number,TagLib.Mpeg4,IsoVisualSampleEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoVisualSampleEntry.cs,IsoVisualSampleEntry,The following statement contains a magic number: file.Seek (base.DataPosition + 16);
Magic Number,TagLib.Mpeg4,IsoVisualSampleEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoVisualSampleEntry.cs,IsoVisualSampleEntry,The following statement contains a magic number: width = file.ReadBlock (2).ToUShort ();
Magic Number,TagLib.Mpeg4,IsoVisualSampleEntry,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\Boxes\IsoVisualSampleEntry.cs,IsoVisualSampleEntry,The following statement contains a magic number: height = file.ReadBlock (2).ToUShort ();
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: ByteVector data = file.ReadBlock (32);
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: data.Count < 8 + offset
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: header_size = 8;
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: box_size = data.Mid (offset' 4).ToUInt ();
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: BoxType = data.Mid (offset + 4' 4);
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: BoxType = data.Mid (offset + 4' 4);
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: data.Count < 8 + offset
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: header_size += 8;
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: offset += 8;
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: box_size = data.Mid (offset' 8).ToULong ();
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: data.Count < 16 + offset
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: header_size += 16;
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: ExtendedType = data.Mid (offset' 16);
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: type.Count != 4
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: box_size = header_size = 8;
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: extendedType.Count != 16
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,BoxHeader,The following statement contains a magic number: box_size = header_size = 24;
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,Render,The following statement contains a magic number: header_size += 8;
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,Render,The following statement contains a magic number: box_size += 8;
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,Render,The following statement contains a magic number: (header_size == 8 || header_size == 24) && box_size > uint.MaxValue
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,Render,The following statement contains a magic number: (header_size == 8 || header_size == 24) && box_size > uint.MaxValue
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,Render,The following statement contains a magic number: ByteVector output = ByteVector.FromUInt ( 				(header_size == 8 || header_size == 24) ? 				(uint)box_size : 1);
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,Render,The following statement contains a magic number: ByteVector output = ByteVector.FromUInt ( 				(header_size == 8 || header_size == 24) ? 				(uint)box_size : 1);
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,Render,The following statement contains a magic number: header_size == 16 || header_size == 32
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,Render,The following statement contains a magic number: header_size == 16 || header_size == 32
Magic Number,TagLib.Mpeg4,BoxHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg4\BoxHeader.cs,Render,The following statement contains a magic number: header_size >= 24
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,AudioHeader,The following statement contains a magic number: ByteVector xing_data = file.ReadBlock (16);
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,AudioHeader,The following statement contains a magic number: xing_data.Count == 16 && xing_data.StartsWith (XingHeader.FileIdentifier)
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,AudioHeader,The following statement contains a magic number: ByteVector vbri_data = file.ReadBlock (24);
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,AudioHeader,The following statement contains a magic number: vbri_data.Count == 24 && 				vbri_data.StartsWith (VBRIHeader.FileIdentifier)
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,Find,The following statement contains a magic number: ByteVector buffer = file.ReadBlock (3);
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,Find,The following statement contains a magic number: buffer.Count < 3
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,Find,The following statement contains a magic number: file.Seek (position + 3);
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,Find,The following statement contains a magic number: buffer = buffer.Mid (buffer.Count - 3);
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,Find,The following statement contains a magic number: ByteVector data = buffer.Mid (i' 4);
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,Find,The following statement contains a magic number: i < buffer.Count - 3 && 					(length < 0 || position + i < end)
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,GetHeaderError,The following statement contains a magic number: data.Count < 4
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,GetHeaderError,The following statement contains a magic number: ((flags >> 12) & 0x0F) == 0x0F
Magic Number,TagLib.Mpeg,AudioHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\AudioHeader.cs,GetHeaderError,The following statement contains a magic number: ((flags >> 10) & 0x03) == 0x03
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadEnd,The following statement contains a magic number: end_time = ReadTimestamp (end + 4);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,GetMarker,The following statement contains a magic number: ByteVector identifier = ReadBlock (4);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,GetMarker,The following statement contains a magic number: return (Marker)identifier[3];
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,GetMarker,The following statement contains a magic number: identifier.Count == 4 && identifier.StartsWith (MarkerStart)
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadSystemFile,The following statement contains a magic number: int sanity_limit = 100;
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadSystemFile,The following statement contains a magic number: switch (marker) { 				case Marker.SystemSyncPacket: 					ReadSystemSyncPacket (ref position); 					break;  				case Marker.SystemPacket: 				case Marker.PaddingPacket: 					Seek (position + 4); 					position += ReadBlock (2).ToUShort () + 						6; 					break;  				case Marker.VideoPacket: 					ReadVideoPacket (ref position); 					break;  				case Marker.AudioPacket: 					ReadAudioPacket (ref position); 					break;  				case Marker.EndOfStream: 					return;  				default: 					position += 4; 					break; 				}
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadSystemFile,The following statement contains a magic number: switch (marker) { 				case Marker.SystemSyncPacket: 					ReadSystemSyncPacket (ref position); 					break;  				case Marker.SystemPacket: 				case Marker.PaddingPacket: 					Seek (position + 4); 					position += ReadBlock (2).ToUShort () + 						6; 					break;  				case Marker.VideoPacket: 					ReadVideoPacket (ref position); 					break;  				case Marker.AudioPacket: 					ReadAudioPacket (ref position); 					break;  				case Marker.EndOfStream: 					return;  				default: 					position += 4; 					break; 				}
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadSystemFile,The following statement contains a magic number: switch (marker) { 				case Marker.SystemSyncPacket: 					ReadSystemSyncPacket (ref position); 					break;  				case Marker.SystemPacket: 				case Marker.PaddingPacket: 					Seek (position + 4); 					position += ReadBlock (2).ToUShort () + 						6; 					break;  				case Marker.VideoPacket: 					ReadVideoPacket (ref position); 					break;  				case Marker.AudioPacket: 					ReadAudioPacket (ref position); 					break;  				case Marker.EndOfStream: 					return;  				default: 					position += 4; 					break; 				}
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadSystemFile,The following statement contains a magic number: switch (marker) { 				case Marker.SystemSyncPacket: 					ReadSystemSyncPacket (ref position); 					break;  				case Marker.SystemPacket: 				case Marker.PaddingPacket: 					Seek (position + 4); 					position += ReadBlock (2).ToUShort () + 						6; 					break;  				case Marker.VideoPacket: 					ReadVideoPacket (ref position); 					break;  				case Marker.AudioPacket: 					ReadAudioPacket (ref position); 					break;  				case Marker.EndOfStream: 					return;  				default: 					position += 4; 					break; 				}
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadAudioPacket,The following statement contains a magic number: Seek (position + 4);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadAudioPacket,The following statement contains a magic number: int length = ReadBlock (2).ToUShort ();
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadAudioPacket,The following statement contains a magic number: audio_found = AudioHeader.Find (out audio_header' this' position + 15' length - 9);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadAudioPacket,The following statement contains a magic number: audio_found = AudioHeader.Find (out audio_header' this' position + 15' length - 9);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadVideoPacket,The following statement contains a magic number: Seek (position + 4);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadVideoPacket,The following statement contains a magic number: int length = ReadBlock (2).ToUShort ();
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadVideoPacket,The following statement contains a magic number: long offset = position + 6;
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadVideoPacket,The following statement contains a magic number: video_header = new VideoHeader (this' offset + 4);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadSystemSyncPacket,The following statement contains a magic number: Seek (position + 4);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadSystemSyncPacket,The following statement contains a magic number: packet_size = 12;
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadSystemSyncPacket,The following statement contains a magic number: start_time = ReadTimestamp (position + 4);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadTimestamp,The following statement contains a magic number: ByteVector data = ReadBlock (5);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadTimestamp,The following statement contains a magic number: high = (data[0] >> 3) & 0x01;
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadTimestamp,The following statement contains a magic number: low = ((uint)((data[0] >> 1) & 0x03) << 30) | 					(uint)(data[1] << 22) | 					(uint)((data[2] >> 1) << 15) | 					(uint)(data[3] << 7) | 					(uint)(data[4] >> 1);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadTimestamp,The following statement contains a magic number: low = ((uint)((data[0] >> 1) & 0x03) << 30) | 					(uint)(data[1] << 22) | 					(uint)((data[2] >> 1) << 15) | 					(uint)(data[3] << 7) | 					(uint)(data[4] >> 1);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadTimestamp,The following statement contains a magic number: low = ((uint)((data[0] >> 1) & 0x03) << 30) | 					(uint)(data[1] << 22) | 					(uint)((data[2] >> 1) << 15) | 					(uint)(data[3] << 7) | 					(uint)(data[4] >> 1);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadTimestamp,The following statement contains a magic number: low = ((uint)((data[0] >> 1) & 0x03) << 30) | 					(uint)(data[1] << 22) | 					(uint)((data[2] >> 1) << 15) | 					(uint)(data[3] << 7) | 					(uint)(data[4] >> 1);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadTimestamp,The following statement contains a magic number: low = ((uint)((data[0] >> 1) & 0x03) << 30) | 					(uint)(data[1] << 22) | 					(uint)((data[2] >> 1) << 15) | 					(uint)(data[3] << 7) | 					(uint)(data[4] >> 1);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadTimestamp,The following statement contains a magic number: low = ((uint)((data[0] >> 1) & 0x03) << 30) | 					(uint)(data[1] << 22) | 					(uint)((data[2] >> 1) << 15) | 					(uint)(data[3] << 7) | 					(uint)(data[4] >> 1);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadTimestamp,The following statement contains a magic number: low = ((uint)((data[0] >> 1) & 0x03) << 30) | 					(uint)(data[1] << 22) | 					(uint)((data[2] >> 1) << 15) | 					(uint)(data[3] << 7) | 					(uint)(data[4] >> 1);
Magic Number,TagLib.Mpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\File.cs,ReadTimestamp,The following statement contains a magic number: return (((high * 0x10000) * 0x10000) + low) / 90000.0;
Magic Number,TagLib.Mpeg,VBRIHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VBRIHeader.cs,VBRIHeader,The following statement contains a magic number: int position = 10;
Magic Number,TagLib.Mpeg,VBRIHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VBRIHeader.cs,VBRIHeader,The following statement contains a magic number: TotalSize = data.Mid (position' 4).ToUInt ();
Magic Number,TagLib.Mpeg,VBRIHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VBRIHeader.cs,VBRIHeader,The following statement contains a magic number: position += 4;
Magic Number,TagLib.Mpeg,VBRIHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VBRIHeader.cs,VBRIHeader,The following statement contains a magic number: TotalFrames = data.Mid (position' 4).ToUInt ();
Magic Number,TagLib.Mpeg,VBRIHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VBRIHeader.cs,VBRIHeader,The following statement contains a magic number: position += 4;
Magic Number,TagLib.Mpeg,VideoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VideoHeader.cs,VideoHeader,The following statement contains a magic number: ByteVector data = file.ReadBlock (7);
Magic Number,TagLib.Mpeg,VideoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VideoHeader.cs,VideoHeader,The following statement contains a magic number: data.Count < 7
Magic Number,TagLib.Mpeg,VideoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VideoHeader.cs,VideoHeader,The following statement contains a magic number: VideoWidth = data.Mid (0' 2).ToUShort () >> 4;
Magic Number,TagLib.Mpeg,VideoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VideoHeader.cs,VideoHeader,The following statement contains a magic number: VideoWidth = data.Mid (0' 2).ToUShort () >> 4;
Magic Number,TagLib.Mpeg,VideoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VideoHeader.cs,VideoHeader,The following statement contains a magic number: VideoHeight = data.Mid (1' 2).ToUShort () & 0x0FFF;
Magic Number,TagLib.Mpeg,VideoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VideoHeader.cs,VideoHeader,The following statement contains a magic number: frame_rate_index = data[3] & 0x0F;
Magic Number,TagLib.Mpeg,VideoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VideoHeader.cs,VideoHeader,The following statement contains a magic number: VideoBitrate = (int)((data.Mid (4' 3).ToUInt () >> 6) & 0x3FFFF);
Magic Number,TagLib.Mpeg,VideoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VideoHeader.cs,VideoHeader,The following statement contains a magic number: VideoBitrate = (int)((data.Mid (4' 3).ToUInt () >> 6) & 0x3FFFF);
Magic Number,TagLib.Mpeg,VideoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\VideoHeader.cs,VideoHeader,The following statement contains a magic number: VideoBitrate = (int)((data.Mid (4' 3).ToUInt () >> 6) & 0x3FFFF);
Magic Number,TagLib.Mpeg,XingHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\XingHeader.cs,XingHeader,The following statement contains a magic number: int position = 8;
Magic Number,TagLib.Mpeg,XingHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\XingHeader.cs,XingHeader,The following statement contains a magic number: TotalFrames = data.Mid (position' 4).ToUInt ();
Magic Number,TagLib.Mpeg,XingHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\XingHeader.cs,XingHeader,The following statement contains a magic number: position += 4;
Magic Number,TagLib.Mpeg,XingHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\XingHeader.cs,XingHeader,The following statement contains a magic number: (data[7] & 0x01) != 0
Magic Number,TagLib.Mpeg,XingHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\XingHeader.cs,XingHeader,The following statement contains a magic number: TotalSize = data.Mid (position' 4).ToUInt ();
Magic Number,TagLib.Mpeg,XingHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\XingHeader.cs,XingHeader,The following statement contains a magic number: position += 4;
Magic Number,TagLib.Mpeg,XingHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Mpeg\XingHeader.cs,XingHeader,The following statement contains a magic number: (data[7] & 0x02) != 0
Magic Number,TagLib.Ogg,Page,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Page.cs,Render,The following statement contains a magic number: data[i + 22] = checksum[i];
Magic Number,TagLib.Ogg,Page,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Page.cs,Render,The following statement contains a magic number: i < 4
Magic Number,TagLib.Ogg,Page,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Page.cs,OverwriteSequenceNumbers,The following statement contains a magic number: page_data[i] = new_data[i - 18];
Magic Number,TagLib.Ogg,Page,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Page.cs,OverwriteSequenceNumbers,The following statement contains a magic number: i < 22
Magic Number,TagLib.Ogg,Page,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Page.cs,OverwriteSequenceNumbers,The following statement contains a magic number: i < 26
Magic Number,TagLib.Ogg,Page,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Page.cs,OverwriteSequenceNumbers,The following statement contains a magic number: file.Seek (position + 18);
Magic Number,TagLib.Ogg,Page,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Page.cs,OverwriteSequenceNumbers,The following statement contains a magic number: position < file.Length - 27
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: position < 0 || position > file.Length - 27
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: ByteVector data = file.ReadBlock (27);
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: data.Count < 27 || !data.StartsWith ("OggS")
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: version = data[4];
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: Flags = (PageFlags)data[5];
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: absolute_granular_position = data.Mid (6' 8).ToULong (false);
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: absolute_granular_position = data.Mid (6' 8).ToULong (false);
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: StreamSerialNumber = data.Mid (14' 4).ToUInt (false);
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: StreamSerialNumber = data.Mid (14' 4).ToUInt (false);
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: PageSequenceNumber = data.Mid (18' 4).ToUInt (false);
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: PageSequenceNumber = data.Mid (18' 4).ToUInt (false);
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: int page_segment_count = data[26];
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: Size = (uint)(27 + page_segment_count);
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,PageHeader,The following statement contains a magic number: page_segments[i] < 255
Magic Number,TagLib.Ogg,PageHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\PageHeader.cs,Render,The following statement contains a magic number: ByteVector data = new ByteVector {  				"OggS"'  				version' // stream structure version  				(byte)Flags'  				ByteVector.FromULong ( 				absolute_granular_position' false)'  				ByteVector.FromUInt ( 				StreamSerialNumber' false)'  				ByteVector.FromUInt ( 				PageSequenceNumber' false)'  				new ByteVector (4' 0) // checksum' to be filled in later.  			};
Magic Number,TagLib.Ogg,XiphComment,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\XiphComment.cs,Parse,The following statement contains a magic number: int vendor_length = (int)data.Mid (pos' 4).ToUInt (false);
Magic Number,TagLib.Ogg,XiphComment,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\XiphComment.cs,Parse,The following statement contains a magic number: pos += 4;
Magic Number,TagLib.Ogg,XiphComment,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\XiphComment.cs,Parse,The following statement contains a magic number: int comment_fields = (int)data.Mid (pos' 4).ToUInt (false);
Magic Number,TagLib.Ogg,XiphComment,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\XiphComment.cs,Parse,The following statement contains a magic number: pos += 4;
Magic Number,TagLib.Ogg,XiphComment,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\XiphComment.cs,Parse,The following statement contains a magic number: int comment_length = (int)data.Mid (pos' 4).ToUInt (false);
Magic Number,TagLib.Ogg,XiphComment,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\XiphComment.cs,Parse,The following statement contains a magic number: pos += 4;
Magic Number,TagLib.Ogg.Codecs,Opus,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,GetDuration,The following statement contains a magic number: return TimeSpan.FromSeconds ((lastGranularPosition - firstGranularPosition - 2 * header.pre_skip) / (double)48000);
Magic Number,TagLib.Ogg.Codecs,Opus,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,GetDuration,The following statement contains a magic number: return TimeSpan.FromSeconds ((lastGranularPosition - firstGranularPosition - 2 * header.pre_skip) / (double)48000);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: opus_version = data[8];
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: channel_count = data[9];
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: pre_skip = data.Mid (10' 2).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: pre_skip = data.Mid (10' 2).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: input_sample_rate = data.Mid (12' 4).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: input_sample_rate = data.Mid (12' 4).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: output_gain = data.Mid (16' 2).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: output_gain = data.Mid (16' 2).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: channel_map = data[18];
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: channel_count == 2
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: major_version = data[7];
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: minor_version = data[8];
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: revision_version = data[9];
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: width = (int)data.Mid (14' 3).ToUInt ();
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: width = (int)data.Mid (14' 3).ToUInt ();
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: height = (int)data.Mid (17' 3).ToUInt ();
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: height = (int)data.Mid (17' 3).ToUInt ();
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: fps_numerator = (int)data.Mid (22' 4).ToUInt ();
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: fps_numerator = (int)data.Mid (22' 4).ToUInt ();
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: fps_denominator = (int)data.Mid (26' 4).ToUInt ();
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: fps_denominator = (int)data.Mid (26' 4).ToUInt ();
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: ushort last_bits = data.Mid (40' 2).ToUShort ();
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: ushort last_bits = data.Mid (40' 2).ToUShort ();
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: keyframe_granule_shift = (last_bits >> 5) & 0x1F;
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: vorbis_version = data.Mid (7' 4).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: vorbis_version = data.Mid (7' 4).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: channels = data[11];
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: sample_rate = data.Mid (12' 4).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: sample_rate = data.Mid (12' 4).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: bitrate_maximum = data.Mid (16' 4).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: bitrate_maximum = data.Mid (16' 4).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: bitrate_nominal = data.Mid (20' 4).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: bitrate_nominal = data.Mid (20' 4).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: bitrate_minimum = data.Mid (24' 4).ToUInt (false);
Magic Number,TagLib.Ogg.Codecs,HeaderPacket,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Ogg\Codecs\Opus.cs,HeaderPacket,The following statement contains a magic number: bitrate_minimum = data.Mid (24' 4).ToUInt (false);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ValidateHeader,The following statement contains a magic number: ByteVector data = ReadBlock (8);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ValidateHeader,The following statement contains a magic number: data.Count != 8
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadChunkLength,The following statement contains a magic number: ByteVector data = ReadBlock (4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadChunkLength,The following statement contains a magic number: data.Count != 4
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadChunkType,The following statement contains a magic number: ByteVector data = ReadBlock (4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadChunkType,The following statement contains a magic number: data.Count != 4
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadCRC,The following statement contains a magic number: ByteVector data = ReadBlock (4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadCRC,The following statement contains a magic number: data.Count != 4
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadIHDRChunk,The following statement contains a magic number: data_length != 13
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadIHDRChunk,The following statement contains a magic number: uint width = data.Mid (0' 4).ToUInt (true);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadIHDRChunk,The following statement contains a magic number: uint height = data.Mid (4' 4).ToUInt (true);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadIHDRChunk,The following statement contains a magic number: uint height = data.Mid (4' 4).ToUInt (true);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadiTXtChunk,The following statement contains a magic number: AddMetadataBlock (position - 8' data_length + 8 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadiTXtChunk,The following statement contains a magic number: AddMetadataBlock (position - 8' data_length + 8 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadiTXtChunk,The following statement contains a magic number: AddMetadataBlock (position - 8' data_length + 8 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadiTXtChunk,The following statement contains a magic number: terminator_index + 2 >= data_length
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadiTXtChunk,The following statement contains a magic number: byte compression_method = data[terminator_index + 2];
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadiTXtChunk,The following statement contains a magic number: AddMetadataBlock (position - 8' data_length + 8 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadiTXtChunk,The following statement contains a magic number: AddMetadataBlock (position - 8' data_length + 8 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadiTXtChunk,The following statement contains a magic number: AddMetadataBlock (position - 8' data_length + 8 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadtEXtChunk,The following statement contains a magic number: AddMetadataBlock (position - 8' data_length + 8 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadtEXtChunk,The following statement contains a magic number: AddMetadataBlock (position - 8' data_length + 8 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadtEXtChunk,The following statement contains a magic number: AddMetadataBlock (position - 8' data_length + 8 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ProcessRawProfile,The following statement contains a magic number: parts.Length < 4
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ProcessRawProfile,The following statement contains a magic number: profile.LengthText = parts [2];
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ProcessRawProfile,The following statement contains a magic number: var subString = parts [i].Substring (j' 2);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ProcessRawProfile,The following statement contains a magic number: buffer [iBuffer++] = Convert.ToByte (subString' 16);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadzTXtChunk,The following statement contains a magic number: ByteVector plain_data = Decompress (compression_method' data.Mid (terminator_index + 2));
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadzTXtChunk,The following statement contains a magic number: AddMetadataBlock (position - 8' data_length + 8 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadzTXtChunk,The following statement contains a magic number: AddMetadataBlock (position - 8' data_length + 8 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ReadzTXtChunk,The following statement contains a magic number: AddMetadataBlock (position - 8' data_length + 8 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,SaveMetadata,The following statement contains a magic number: SaveMetadata (metadata_chunks' HEADER.Length + 13 + 4 + 4 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,SaveMetadata,The following statement contains a magic number: SaveMetadata (metadata_chunks' HEADER.Length + 13 + 4 + 4 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,SaveMetadata,The following statement contains a magic number: SaveMetadata (metadata_chunks' HEADER.Length + 13 + 4 + 4 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,SaveMetadata,The following statement contains a magic number: SaveMetadata (metadata_chunks' HEADER.Length + 13 + 4 + 4 + 4);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,ComputeCRC,The following statement contains a magic number: crc = crc_table[(crc ^ b) & 0xFF] ^ (crc >> 8);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,BuildCRCTable,The following statement contains a magic number: crc_table = new uint[256];
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,BuildCRCTable,The following statement contains a magic number: k < 8
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,BuildCRCTable,The following statement contains a magic number: i < 256
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,Inflate,The following statement contains a magic number: input.Seek (2' SeekOrigin.Begin);
Magic Number,TagLib.Png,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Png\File.cs,Inflate,The following statement contains a magic number: byte[] buffer = new byte[1024];
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: offset + 40 > data.Count
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: MicrosecondsPerFrame = data.Mid (offset' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: MaxBytesPerSecond = data.Mid (offset + 4' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: MaxBytesPerSecond = data.Mid (offset + 4' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: Flags = data.Mid (offset + 12' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: Flags = data.Mid (offset + 12' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: TotalFrames = data.Mid (offset + 16' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: TotalFrames = data.Mid (offset + 16' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: InitialFrames = data.Mid (offset + 20' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: InitialFrames = data.Mid (offset + 20' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: Streams = data.Mid (offset + 24' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: Streams = data.Mid (offset + 24' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: SuggestedBufferSize = data.Mid (offset + 28' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: SuggestedBufferSize = data.Mid (offset + 28' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: Width = data.Mid (offset + 32' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: Width = data.Mid (offset + 32' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: Height = data.Mid (offset + 36' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviHeaderList.cs,AviHeader,The following statement contains a magic number: Height = data.Mid (offset + 36' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,ParseStreamList,The following statement contains a magic number: int pos = 4;
Magic Number,TagLib.Riff,AviStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,ParseStreamList,The following statement contains a magic number: ByteVector id = data.Mid (pos' 4);
Magic Number,TagLib.Riff,AviStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,ParseStreamList,The following statement contains a magic number: int block_length = (int)data.Mid (pos + 4' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,ParseStreamList,The following statement contains a magic number: int block_length = (int)data.Mid (pos + 4' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,ParseStreamList,The following statement contains a magic number: var stream_header = new AviStreamHeader (data' pos + 8);
Magic Number,TagLib.Riff,AviStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,ParseStreamList,The following statement contains a magic number: pos += block_length + 8;
Magic Number,TagLib.Riff,AviStream,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,ParseStreamList,The following statement contains a magic number: pos + 8 < data.Count
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: offset + 56 > data.Count
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Type = data.Mid (offset' 4);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Handler = data.Mid (offset + 4' 4);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Handler = data.Mid (offset + 4' 4);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Flags = data.Mid (offset + 8' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Flags = data.Mid (offset + 8' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Priority = data.Mid (offset + 12' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Priority = data.Mid (offset + 12' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: InitialFrames = data.Mid (offset + 16' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: InitialFrames = data.Mid (offset + 16' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Scale = data.Mid (offset + 20' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Scale = data.Mid (offset + 20' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Rate = data.Mid (offset + 24' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Rate = data.Mid (offset + 24' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Start = data.Mid (offset + 28' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Start = data.Mid (offset + 28' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Length = data.Mid (offset + 32' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Length = data.Mid (offset + 32' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: SuggestedBufferSize = data.Mid (offset + 36' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: SuggestedBufferSize = data.Mid (offset + 36' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Quality = data.Mid (offset + 40' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Quality = data.Mid (offset + 40' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: SampleSize = data.Mid (offset + 44' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: SampleSize = data.Mid (offset + 44' 4).ToUInt (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Left = data.Mid (offset + 48' 2).ToUShort (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Left = data.Mid (offset + 48' 2).ToUShort (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Top = data.Mid (offset + 50' 2).ToUShort (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Top = data.Mid (offset + 50' 2).ToUShort (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Right = data.Mid (offset + 52' 2).ToUShort (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Right = data.Mid (offset + 52' 2).ToUShort (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Bottom = data.Mid (offset + 54' 2).ToUShort (false);
Magic Number,TagLib.Riff,AviStreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\AviStream.cs,AviStreamHeader,The following statement contains a magic number: Bottom = data.Mid (offset + 54' 2).ToUShort (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: offset + 40 > data.Count
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: HeaderSize = data.Mid (offset + 0' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: width = data.Mid (offset + 4' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: width = data.Mid (offset + 4' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: height = data.Mid (offset + 8' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: height = data.Mid (offset + 8' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: Planes = data.Mid (offset + 12' 2).ToUShort (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: Planes = data.Mid (offset + 12' 2).ToUShort (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: BitCount = data.Mid (offset + 14' 2).ToUShort (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: BitCount = data.Mid (offset + 14' 2).ToUShort (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: CompressionId = data.Mid (offset + 16' 4);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: CompressionId = data.Mid (offset + 16' 4);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: ImageSize = data.Mid (offset + 20' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: ImageSize = data.Mid (offset + 20' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: XPixelsPerMeter = data.Mid (offset + 24' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: XPixelsPerMeter = data.Mid (offset + 24' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: YPixelsPerMeter = data.Mid (offset + 28' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: YPixelsPerMeter = data.Mid (offset + 28' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: ColorsUsed = data.Mid (offset + 32' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: ColorsUsed = data.Mid (offset + 32' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: ImportantColors = data.Mid (offset + 36' 4).ToUInt (false);
Magic Number,TagLib.Riff,BitmapInfoHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\BitmapInfoHeader.cs,BitmapInfoHeader,The following statement contains a magic number: ImportantColors = data.Mid (offset + 36' 4).ToUInt (false);
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Render,The following statement contains a magic number: var data = new ByteVector { 				ByteVector.FromString (title' StringType.Latin1).Resize (32' 0x20)' 				ByteVector.FromString (artist' StringType.Latin1).Resize (28' 0x20)' 				ByteVector.FromString (year' StringType.Latin1).Resize (4' 0x20)' 				ByteVector.FromString (comment' StringType.Latin1).Resize (48' 0x20)' 				ByteVector.FromString (genre' StringType.Latin1).Resize (3' 0x20)' 				extra_data' 				FileIdentifier 			};
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Render,The following statement contains a magic number: var data = new ByteVector { 				ByteVector.FromString (title' StringType.Latin1).Resize (32' 0x20)' 				ByteVector.FromString (artist' StringType.Latin1).Resize (28' 0x20)' 				ByteVector.FromString (year' StringType.Latin1).Resize (4' 0x20)' 				ByteVector.FromString (comment' StringType.Latin1).Resize (48' 0x20)' 				ByteVector.FromString (genre' StringType.Latin1).Resize (3' 0x20)' 				extra_data' 				FileIdentifier 			};
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Render,The following statement contains a magic number: var data = new ByteVector { 				ByteVector.FromString (title' StringType.Latin1).Resize (32' 0x20)' 				ByteVector.FromString (artist' StringType.Latin1).Resize (28' 0x20)' 				ByteVector.FromString (year' StringType.Latin1).Resize (4' 0x20)' 				ByteVector.FromString (comment' StringType.Latin1).Resize (48' 0x20)' 				ByteVector.FromString (genre' StringType.Latin1).Resize (3' 0x20)' 				extra_data' 				FileIdentifier 			};
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Render,The following statement contains a magic number: var data = new ByteVector { 				ByteVector.FromString (title' StringType.Latin1).Resize (32' 0x20)' 				ByteVector.FromString (artist' StringType.Latin1).Resize (28' 0x20)' 				ByteVector.FromString (year' StringType.Latin1).Resize (4' 0x20)' 				ByteVector.FromString (comment' StringType.Latin1).Resize (48' 0x20)' 				ByteVector.FromString (genre' StringType.Latin1).Resize (3' 0x20)' 				extra_data' 				FileIdentifier 			};
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Render,The following statement contains a magic number: var data = new ByteVector { 				ByteVector.FromString (title' StringType.Latin1).Resize (32' 0x20)' 				ByteVector.FromString (artist' StringType.Latin1).Resize (28' 0x20)' 				ByteVector.FromString (year' StringType.Latin1).Resize (4' 0x20)' 				ByteVector.FromString (comment' StringType.Latin1).Resize (48' 0x20)' 				ByteVector.FromString (genre' StringType.Latin1).Resize (3' 0x20)' 				extra_data' 				FileIdentifier 			};
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Parse,The following statement contains a magic number: title = data.ToString (StringType.Latin1' 0' 32).Trim ();
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Parse,The following statement contains a magic number: artist = data.ToString (StringType.Latin1' 32' 28).Trim ();
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Parse,The following statement contains a magic number: artist = data.ToString (StringType.Latin1' 32' 28).Trim ();
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Parse,The following statement contains a magic number: year = data.ToString (StringType.Latin1' 60' 4).Trim ();
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Parse,The following statement contains a magic number: year = data.ToString (StringType.Latin1' 60' 4).Trim ();
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Parse,The following statement contains a magic number: comment = data.ToString (StringType.Latin1' 64' 48).Trim ();
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Parse,The following statement contains a magic number: comment = data.ToString (StringType.Latin1' 64' 48).Trim ();
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Parse,The following statement contains a magic number: genre = data.ToString (StringType.Latin1' 112' 3).Trim ();
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Parse,The following statement contains a magic number: genre = data.ToString (StringType.Latin1' 112' 3).Trim ();
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Parse,The following statement contains a magic number: extra_data = data.Mid (115' 6);
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Parse,The following statement contains a magic number: extra_data = data.Mid (115' 6);
Magic Number,TagLib.Riff,DivXTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\DivXTag.cs,Clear,The following statement contains a magic number: extra_data = new ByteVector (6);
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Save,The following statement contains a magic number: tag_data.Count % 2 == 1
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Save,The following statement contains a magic number: tag_data.Count > 10
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Save,The following statement contains a magic number: tag_start < 12 || tag_end < tag_start
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Save,The following statement contains a magic number: int padding_size = length - data.Count - 8;
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Save,The following statement contains a magic number: padding_size = 1024;
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Save,The following statement contains a magic number: Insert (ByteVector.FromUInt ((uint)(riff_size + data.Count - length)' false)' 4' 4);
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Save,The following statement contains a magic number: Insert (ByteVector.FromUInt ((uint)(riff_size + data.Count - length)' false)' 4' 4);
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,GetTag,The following statement contains a magic number: switch (type) { 			case TagTypes.Id3v2: 				if (id32_tag == null && create) { 					id32_tag = new Id3v2.Tag (); 					id32_tag.Version = 4; 					id32_tag.Flags |= Id3v2.HeaderFlags.FooterPresent; 					this.tag.CopyTo (id32_tag' true); 				}  				tag = id32_tag; 				break;  			case TagTypes.RiffInfo: 				if (info_tag == null && create) { 					info_tag = new InfoTag (); 					this.tag.CopyTo (info_tag' true); 				}  				tag = info_tag; 				break;  			case TagTypes.MovieId: 				if (mid_tag == null && create) { 					mid_tag = new MovieIdTag (); 					this.tag.CopyTo (mid_tag' true); 				}  				tag = mid_tag; 				break;  			case TagTypes.DivX: 				if (divx_tag == null && create) { 					divx_tag = new DivXTag (); 					this.tag.CopyTo (divx_tag' true); 				}  				tag = divx_tag; 				break; 			}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: ReadBlock (4) != FileIdentifier
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: riff_size = ReadBlock (4).ToUInt (false);
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: ByteVector stream_format = ReadBlock (4);
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: long position = 12;
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: position > 12 && (position & 1) != 0
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: string fourcc = ReadBlock (4).ToString (StringType.UTF8);
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: size = ReadBlock (4).ToUInt (false);
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Magic Number,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following statement contains a magic number: tag_end = position + 8 + size;
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,RenderEnclosed,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,RenderEnclosed,The following statement contains a magic number: data.Count <= 8
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,RenderEnclosed,The following statement contains a magic number: var header = new ByteVector ("LIST") { 				ByteVector.FromUInt ((uint)(data.Count + 4)' false)' 				id 			};
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,GetValues,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,GetValuesAsStrings,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,GetValuesAsStringCollection,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,GetValueAsUInt,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,SetValue,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,SetValue,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,SetValue,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,SetValue,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,SetValue,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,RemoveValue,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,Parse,The following statement contains a magic number: ByteVector id = data.Mid (offset' 4);
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,Parse,The following statement contains a magic number: int length = (int)data.Mid (offset + 4' 4).ToUInt (false);
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,Parse,The following statement contains a magic number: int length = (int)data.Mid (offset + 4' 4).ToUInt (false);
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,Parse,The following statement contains a magic number: this[id].Add (data.Mid (offset + 8' length));
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,Parse,The following statement contains a magic number: length % 2 == 1
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,Parse,The following statement contains a magic number: offset += 8 + length;
Magic Number,TagLib.Riff,List,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\List.cs,Parse,The following statement contains a magic number: offset + 8 < data.Count
Magic Number,TagLib.Riff,ListTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\ListTag.cs,RenderEnclosed,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,ListTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\ListTag.cs,GetValues,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,ListTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\ListTag.cs,GetValuesAsStrings,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,ListTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\ListTag.cs,GetValueAsUInt,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,ListTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\ListTag.cs,SetValue,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,ListTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\ListTag.cs,SetValue,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,ListTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\ListTag.cs,SetValue,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,ListTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\ListTag.cs,RemoveValue,The following statement contains a magic number: id.Count != 4
Magic Number,TagLib.Riff,WaveFormatEx,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\WaveFormatEx.cs,WaveFormatEx,The following statement contains a magic number: offset + 16 > data.Count
Magic Number,TagLib.Riff,WaveFormatEx,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\WaveFormatEx.cs,WaveFormatEx,The following statement contains a magic number: FormatTag = data.Mid (offset' 2).ToUShort (false);
Magic Number,TagLib.Riff,WaveFormatEx,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\WaveFormatEx.cs,WaveFormatEx,The following statement contains a magic number: channels = data.Mid (offset + 2' 2).ToUShort (false);
Magic Number,TagLib.Riff,WaveFormatEx,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\WaveFormatEx.cs,WaveFormatEx,The following statement contains a magic number: channels = data.Mid (offset + 2' 2).ToUShort (false);
Magic Number,TagLib.Riff,WaveFormatEx,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\WaveFormatEx.cs,WaveFormatEx,The following statement contains a magic number: samples_per_second = data.Mid (offset + 4' 4).ToUInt (false);
Magic Number,TagLib.Riff,WaveFormatEx,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\WaveFormatEx.cs,WaveFormatEx,The following statement contains a magic number: samples_per_second = data.Mid (offset + 4' 4).ToUInt (false);
Magic Number,TagLib.Riff,WaveFormatEx,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\WaveFormatEx.cs,WaveFormatEx,The following statement contains a magic number: AverageBytesPerSecond = data.Mid (offset + 8' 4).ToUInt (false);
Magic Number,TagLib.Riff,WaveFormatEx,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\WaveFormatEx.cs,WaveFormatEx,The following statement contains a magic number: AverageBytesPerSecond = data.Mid (offset + 8' 4).ToUInt (false);
Magic Number,TagLib.Riff,WaveFormatEx,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\WaveFormatEx.cs,WaveFormatEx,The following statement contains a magic number: BitsPerSample = data.Mid (offset + 14' 2).ToUShort (false);
Magic Number,TagLib.Riff,WaveFormatEx,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\WaveFormatEx.cs,WaveFormatEx,The following statement contains a magic number: BitsPerSample = data.Mid (offset + 14' 2).ToUShort (false);
Magic Number,TagLib.Tiff,BaseTiffFile,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\BaseTiffFile.cs,BaseTiffFile,The following statement contains a magic number: Magic = 42;
Magic Number,TagLib.Tiff,BaseTiffFile,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\BaseTiffFile.cs,BaseTiffFile,The following statement contains a magic number: Magic = 42;
Magic Number,TagLib.Tiff,BaseTiffFile,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\BaseTiffFile.cs,ReadHeader,The following statement contains a magic number: ByteVector header = ReadBlock (8);
Magic Number,TagLib.Tiff,BaseTiffFile,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\BaseTiffFile.cs,ReadHeader,The following statement contains a magic number: header.Count != 8
Magic Number,TagLib.Tiff,BaseTiffFile,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\BaseTiffFile.cs,ReadHeader,The following statement contains a magic number: string order = header.Mid (0' 2).ToString ();
Magic Number,TagLib.Tiff,BaseTiffFile,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\BaseTiffFile.cs,ReadHeader,The following statement contains a magic number: header.Mid (2' 2).ToUShort (IsBigEndian) != Magic
Magic Number,TagLib.Tiff,BaseTiffFile,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\BaseTiffFile.cs,ReadHeader,The following statement contains a magic number: header.Mid (2' 2).ToUShort (IsBigEndian) != Magic
Magic Number,TagLib.Tiff,BaseTiffFile,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\BaseTiffFile.cs,ReadHeader,The following statement contains a magic number: uint first_ifd_offset = header.Mid (4' 4).ToUInt (IsBigEndian);
Magic Number,TagLib.Tiff,BaseTiffFile,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\BaseTiffFile.cs,ReadHeader,The following statement contains a magic number: uint first_ifd_offset = header.Mid (4' 4).ToUInt (IsBigEndian);
Magic Number,TagLib.Tiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\File.cs,WriteFile,The following statement contains a magic number: uint first_ifd_offset = 8;
Magic Number,TagLib.Tiff.Cr2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Cr2\File.cs,ReadFile,The following statement contains a magic number: ReadIFD (first_ifd_offset' 3);
Magic Number,TagLib.Tiff.Cr2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Cr2\File.cs,ReadAdditionalCR2Header,The following statement contains a magic number: ByteVector header = ReadBlock (8);
Magic Number,TagLib.Tiff.Cr2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Cr2\File.cs,ReadAdditionalCR2Header,The following statement contains a magic number: header.Count != 8
Magic Number,TagLib.Tiff.Cr2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Cr2\File.cs,ReadAdditionalCR2Header,The following statement contains a magic number: header.Mid (0' 2).ToString () != "CR"
Magic Number,TagLib.Tiff.Cr2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Cr2\File.cs,ReadAdditionalCR2Header,The following statement contains a magic number: byte major_version = header[2];
Magic Number,TagLib.Tiff.Cr2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Cr2\File.cs,ReadAdditionalCR2Header,The following statement contains a magic number: byte minor_version = header[3];
Magic Number,TagLib.Tiff.Cr2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Cr2\File.cs,ReadAdditionalCR2Header,The following statement contains a magic number: major_version != 2 || minor_version != 0
Magic Number,TagLib.Tiff.Cr2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Cr2\File.cs,ReadAdditionalCR2Header,The following statement contains a magic number: uint raw_ifd_offset = header.Mid (4' 4).ToUInt (IsBigEndian);
Magic Number,TagLib.Tiff.Cr2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Cr2\File.cs,ReadAdditionalCR2Header,The following statement contains a magic number: uint raw_ifd_offset = header.Mid (4' 4).ToUInt (IsBigEndian);
Magic Number,TagLib.Tiff.Rw2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Rw2\File.cs,File,The following statement contains a magic number: Magic = 85;
Magic Number,TagLib.Tiff.Rw2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Rw2\File.cs,ReadFile,The following statement contains a magic number: ReadIFD (first_ifd_offset' 3);
Magic Number,TagLib.Tiff.Rw2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Rw2\File.cs,ReadAdditionalRW2Header,The following statement contains a magic number: ByteVector header = ReadBlock (16);
Magic Number,TagLib.Tiff.Rw2,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Tiff\Rw2\File.cs,ReadAdditionalRW2Header,The following statement contains a magic number: header.Count != 16
Magic Number,TagLib.WavPack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\WavPack\StreamHeader.cs,StreamHeader,The following statement contains a magic number: version = data.Mid (8' 2).ToUShort (false);
Magic Number,TagLib.WavPack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\WavPack\StreamHeader.cs,StreamHeader,The following statement contains a magic number: version = data.Mid (8' 2).ToUShort (false);
Magic Number,TagLib.WavPack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\WavPack\StreamHeader.cs,StreamHeader,The following statement contains a magic number: flags = data.Mid (24' 4).ToUInt (false);
Magic Number,TagLib.WavPack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\WavPack\StreamHeader.cs,StreamHeader,The following statement contains a magic number: flags = data.Mid (24' 4).ToUInt (false);
Magic Number,TagLib.WavPack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\WavPack\StreamHeader.cs,StreamHeader,The following statement contains a magic number: samples = data.Mid (12' 4).ToUInt (false);
Magic Number,TagLib.WavPack,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\WavPack\StreamHeader.cs,StreamHeader,The following statement contains a magic number: samples = data.Mid (12' 4).ToUInt (false);
Magic Number,TagLib.Xmp,XmpTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Xmp\XmpTag.cs,ParsePropertyElement,The following statement contains a magic number: count > 3
Magic Number,TagLib.Xmp,XmpTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Xmp\XmpTag.cs,GetRationalNode,The following statement contains a magic number: values.Length != 2
Magic Number,TagLib.Xmp,XmpTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Xmp\XmpTag.cs,SetRationalNode,The following statement contains a magic number: string fraction = DecimalToFraction (value' (long)Math.Pow (10' 10));
Magic Number,TagLib.Xmp,XmpTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Xmp\XmpTag.cs,SetRationalNode,The following statement contains a magic number: string fraction = DecimalToFraction (value' (long)Math.Pow (10' 10));
Magic Number,TagLib.Xmp,XmpTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Xmp\XmpTag.cs,DecimalToFraction,The following statement contains a magic number: var m = new long[2' 2];
Magic Number,TagLib.Xmp,XmpTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Xmp\XmpTag.cs,DecimalToFraction,The following statement contains a magic number: var m = new long[2' 2];
Missing Default,TagLib.Aiff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\File.cs,GetTag,The following switch statement is missing a default case: switch (type) { 			case TagTypes.Id3v2: 				if (tag == null && create) { 					tag = new Id3v2.Tag { 						Version = 2 					}; 				}  				id32_tag = tag; 				break; 			}
Missing Default,TagLib.Aiff,StreamHeader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Aiff\StreamHeader.cs,StreamHeader,The following switch statement is missing a default case: switch (sample_rate_tmp) { 			case 44100: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 44100; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 22050; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 11025; 				} 				break;  			case 48000: 				if (sample_rate_indicator == 0x0E) { 					sample_rate = 48000; 				} else if (sample_rate_indicator == 0x0D) { 					sample_rate = 24000; 				} 				break;  			case 64000: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 32000; 				} else if (sample_rate_indicator == 0x0C) { 					sample_rate = 16000; 				} else if (sample_rate_indicator == 0x0B) { 					sample_rate = 8000; 				} 				break;  			case 44510: 				if (sample_rate_indicator == 0x0D) { 					sample_rate = 22255; 				} 				break;  			case 44508: 				if (sample_rate_indicator == 0x0C) { 					sample_rate = 11127; 				} 				break; 			}
Missing Default,TagLib,ByteVector,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\ByteVector.cs,StringTypeToEncoding,The following switch statement is missing a default case: switch (type) { 			case StringType.UTF16: 				// If we have a BOM' return the appropriate 				// encoding. Otherwise' assume we're reading 				// from a string that was already identified. In 				// that case' the encoding will be stored as 				// last_utf16_encoding.  				if (bom == null) 					return last_utf16_encoding;  				if (bom[0] == 0xFF && bom[1] == 0xFE) 					return last_utf16_encoding = 						Encoding.Unicode;  				if (bom[1] == 0xFF && bom[0] == 0xFE) 					return last_utf16_encoding = 						Encoding.BigEndianUnicode;  				return last_utf16_encoding;  			case StringType.UTF16BE: 				return Encoding.BigEndianUnicode;  			case StringType.UTF8: 				return Encoding.UTF8;  			case StringType.UTF16LE: 				return Encoding.Unicode; 			}
Missing Default,TagLib.Dsf,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Dsf\File.cs,GetTag,The following switch statement is missing a default case: switch (type) { 			case TagTypes.Id3v2: 				if (tag == null && create) { 					tag = new Id3v2.Tag { 						Version = 2 					}; 				}  				id32_tag = tag; 				break; 			}
Missing Default,TagLib.Flac,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Flac\File.cs,GetTag,The following switch statement is missing a default case: switch (type) { 			case TagTypes.Xiph: 				return metadata.GetComment (create' tag);  			case TagTypes.FlacMetadata: 				return metadata; 			}
Missing Default,TagLib.IIM,IIMReader,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\IIM\IIMReader.cs,Process,The following switch statement is missing a default case: switch (Data[i]) { 				case 5: // Object Name 					Tag.Title = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 25: // Keywords 					Tag.AddKeyword (Data.ToString (StringType.Latin1' i + 3' len)); 					break; 				case 80: // By-line 					Tag.Creator = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 116: // Copyright notice 					Tag.Copyright = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				case 120: // Caption/Abstract 					Tag.Comment = Data.ToString (StringType.Latin1' i + 3' len); 					break; 				}
Missing Default,TagLib.Image,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Image\File.cs,GetTag,The following switch statement is missing a default case: switch (type) { 			case TagTypes.JpegComment: 				new_tag = new JpegCommentTag (); 				break;  			case TagTypes.GifComment: 				new_tag = new GifCommentTag (); 				break;  			case TagTypes.Png: 				new_tag = new PngTag (); 				break;  			case TagTypes.TiffIFD: 				new_tag = new IFDTag (); 				break;  			case TagTypes.XMP: 				new_tag = new XmpTag (); 				break; 			}
Missing Default,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadMetadata,The following switch statement is missing a default case: switch (marker) { 				case Marker.APP0:   // possibly JFIF header 					ReadJFIFHeader (data_size); 					break;  				case Marker.APP1:   // possibly Exif or Xmp data found 					ReadAPP1Segment (data_size); 					break;  				case Marker.APP13: // possibly IPTC-IIM 					ReadAPP13Segment (data_size); 					break;  				case Marker.COM:    // Comment segment found 					ReadCOMSegment (data_size); 					break;  				case Marker.SOF0: 				case Marker.SOF1: 				case Marker.SOF2: 				case Marker.SOF3: 				case Marker.SOF9: 				case Marker.SOF10: 				case Marker.SOF11: 					ReadSOFSegment (data_size' marker); 					break;  				case Marker.DQT:    // Quantization table(s)' use it to guess quality 					ReadDQTSegment (data_size); 					break; 				}
Missing Default,TagLib.Jpeg,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Jpeg\File.cs,ReadDQTSegment,The following switch statement is missing a default case: switch (tq) { 				case 0: 					table = Table.StandardLuminanceQuantization; 					break; 				case 1: 					table = Table.StandardChrominanceQuantization; 					break; 				}
Missing Default,TagLib.Matroska,Tag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Matroska\Tag.cs,MakeTargetType,The following switch statement is missing a default case: switch (targetTypeValue) {  			case 70: ret = TargetType.COLLECTION; break;  			case 60: ret = IsVideo ? TargetType.SEASON : TargetType.VOLUME; break;  			case 50: ret = IsVideo ? TargetType.MOVIE : TargetType.ALBUM; break;  			case 40: ret = TargetType.PART; break;  			case 30: ret = IsVideo ? TargetType.CHAPTER : TargetType.TRACK; break;  			case 20: ret = IsVideo ? TargetType.SCENE : TargetType.MOVEMENT; break;  			case 10: ret = TargetType.SHOT; break; 			}
Missing Default,TagLib.NonContainer,EndTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\NonContainer\EndTag.cs,ReadTag,The following switch statement is missing a default case: switch (type) { 				case TagTypes.Ape: 					tag = new TagLib.Ape.Tag (file' end - Ape.Footer.Size); 					break; 				case TagTypes.Id3v2: 					tag = new TagLib.Id3v2.Tag (file' start' style); 					break; 				case TagTypes.Id3v1: 					tag = new TagLib.Id3v1.Tag (file' start); 					break; 				}
Missing Default,TagLib.NonContainer,StartTag,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\NonContainer\StartTag.cs,ReadTag,The following switch statement is missing a default case: switch (type) { 			case TagTypes.Ape: 				tag = new TagLib.Ape.Tag (file' start); 				break; 			case TagTypes.Id3v2: 				tag = new TagLib.Id3v2.Tag (file' start' style); 				break; 			}
Missing Default,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,GetTag,The following switch statement is missing a default case: switch (type) { 			case TagTypes.Id3v2: 				if (id32_tag == null && create) { 					id32_tag = new Id3v2.Tag (); 					id32_tag.Version = 4; 					id32_tag.Flags |= Id3v2.HeaderFlags.FooterPresent; 					this.tag.CopyTo (id32_tag' true); 				}  				tag = id32_tag; 				break;  			case TagTypes.RiffInfo: 				if (info_tag == null && create) { 					info_tag = new InfoTag (); 					this.tag.CopyTo (info_tag' true); 				}  				tag = info_tag; 				break;  			case TagTypes.MovieId: 				if (mid_tag == null && create) { 					mid_tag = new MovieIdTag (); 					this.tag.CopyTo (mid_tag' true); 				}  				tag = mid_tag; 				break;  			case TagTypes.DivX: 				if (divx_tag == null && create) { 					divx_tag = new DivXTag (); 					this.tag.CopyTo (divx_tag' true); 				}  				tag = divx_tag; 				break; 			}
Missing Default,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following switch statement is missing a default case: switch (fourcc) {  				// "fmt " is used by Wave files to hold the 				// WaveFormatEx structure. 				case "fmt ": 					if (style == ReadStyle.None || stream_format != "WAVE") 						break;  					Seek (position + 8); 					codecs = new ICodec[] { 						new WaveFormatEx (ReadBlock (18)' 0) 					}; 					break;  				// "data" contains the audio data for wave 				// files. It's contents represent the invariant 				// portion of the file and is used to determine 				// the duration of a file. It should always 				// appear after "fmt ". 				case "data": 					if (stream_format != "WAVE") 						break;  					InvariantStartPosition = position; 					InvariantEndPosition = position + size;  					if (style == ReadStyle.None || 						codecs.Length != 1 || 						!(codecs[0] is WaveFormatEx)) 						break;  					duration += TimeSpan.FromSeconds (size / (double)((WaveFormatEx)codecs[0]).AverageBytesPerSecond);  					break;  				// Lists are used to store a variety of data 				// collections. Read the type and act on it. 				case "LIST": { 						switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						} 						break; 					}  				// "ID32" is a custom box for this format that 				// contains an ID3v2 tag. 				// "ID3 " and "id3 " have become standard (de facto) 				case "id3 ": 				case "ID3 ": 				case "ID32": 					if (read_tags && id32_tag == null) 						id32_tag = new Id3v2.Tag (this' position + 8' style);  					tag_found = true; 					break;  				// "IDVX" is used by DivX and holds an ID3v1- 				// style tag. 				case "IDVX": 					if (read_tags && divx_tag == null) 						divx_tag = new DivXTag (this' position + 8);  					tag_found = true; 					break;  				// "JUNK" is a padding element that could be 				// associated with tag data. 				case "JUNK": 					if (tag_end == position) 						tag_end = position + 8 + size; 					break; 				}
Missing Default,TagLib.Riff,File,C:\research\architectureSmells\repos\mono_taglib-sharp\src\TaglibSharp\Riff\File.cs,Read,The following switch statement is missing a default case: switch (ReadBlock (4).ToString (StringType.UTF8)) {  						// "hdlr" is used by AVI files to hold 						// a media header and BitmapInfoHeader 						// and WaveFormatEx structures. 						case "hdrl": 							if (style == ReadStyle.None || stream_format != "AVI ") 								continue;  							var header_list = new AviHeaderList (this' position + 12' (int)(size - 4)); 							duration = header_list.Header.Duration; 							codecs = header_list.Codecs; 							break;  						// "INFO" is a tagging format handled by 						// the InfoTag class. 						case "INFO": 							if (read_tags && info_tag == null) 								info_tag = new InfoTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "MID " is a tagging format handled by 						// the MovieIdTag class. 						case "MID ": 							if (read_tags && mid_tag == null) 								mid_tag = new MovieIdTag (this' position + 12' (int)(size - 4));  							tag_found = true; 							break;  						// "movi" contains the media data for 						// and AVI and its contents represent 						// the invariant portion of the file. 						case "movi": 							if (stream_format != "AVI ") 								break;  							InvariantStartPosition = position; 							InvariantEndPosition = position + size; 							break; 						}
