Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,AutoFixture.AutoFakeItEasy,AutoFakeItEasyCustomization,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\AutoFakeItEasyCustomization.cs,AssertFakeItEasyCanFakeDelegates,The length of the parameter minimumFakeItEasyAssemblyVersion is 32.
Long Identifier,AutoFixture.AutoFakeItEasy,AutoFakeItEasyCustomization,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\AutoFakeItEasyCustomization.cs,AssertFakeItEasyCanFakeDelegates,The length of the parameter actualFakeItEasyAssemblyVersion is 31.
Long Identifier,AutoFixture.AutoFakeItEasy,FakeMethod<T>,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\FakeItEasyMethodQuery.cs,Invoke,The length of the parameter withArgumentsForConstructorMethod is 33.
Long Identifier,AutoFixture.AutoFakeItEasy,FakeMethod<T>,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\FakeItEasyMethodQuery.cs,Invoke,The length of the parameter addConstructorArgumentsToOptionsAction is 38.
Long Statement,AutoFixture.AutoFakeItEasy,MethodRule,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\MethodRule.cs,Apply,The length of the statement  "            var callResult = this.resultSource.GetOrAdd(CreateMethodCall(fakeObjectCall)' () => this.CreateMethodCallResult(fakeObjectCall)); " is 129.
Magic Number,AutoFixture.AutoFakeItEasy,AutoFakeItEasyCustomization,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\AutoFakeItEasyCustomization.cs,AssertFakeItEasyCanFakeDelegates,The following statement contains a magic number: var minimumFakeItEasyAssemblyVersion = new Version(1' 7' 4257' 42);
Magic Number,AutoFixture.AutoFakeItEasy,AutoFakeItEasyCustomization,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\AutoFakeItEasyCustomization.cs,AssertFakeItEasyCanFakeDelegates,The following statement contains a magic number: var minimumFakeItEasyAssemblyVersion = new Version(1' 7' 4257' 42);
Magic Number,AutoFixture.AutoFakeItEasy,AutoFakeItEasyCustomization,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\AutoFakeItEasyCustomization.cs,AssertFakeItEasyCanFakeDelegates,The following statement contains a magic number: var minimumFakeItEasyAssemblyVersion = new Version(1' 7' 4257' 42);
Magic Number,AutoFixture.AutoFakeItEasy,MethodCall,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\MethodCall.cs,GetHashCode,The following statement contains a magic number: var hashCode = -712421553;
Magic Number,AutoFixture.AutoFakeItEasy,MethodCall,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\MethodCall.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + this.declaringType.GetHashCode();
Magic Number,AutoFixture.AutoFakeItEasy,MethodCall,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\MethodCall.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + this.methodName.GetHashCode();
Magic Number,AutoFixture.AutoFakeItEasy,MethodCall,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\MethodCall.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<object>.Default.GetHashCode(argument);
Magic Number,AutoFixture.AutoFakeItEasy,MethodCall,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\MethodCall.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + argumentType.GetHashCode();
Magic Number,AutoFixture.AutoFakeItEasy,PropertySetterRule,D:\research\architectureSmells\repos\AutoFixture_AutoFixture\Src\AutoFakeItEasy\PropertySetterRule.cs,CreateMethodCallForGetter,The following statement contains a magic number: var methodName = "get_" + fakeCall.Method.Name.Substring(4);
