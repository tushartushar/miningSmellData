Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Ploeh.SemanticComparison,Likeness,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\Likeness.cs,CreateProxy,The length of the statement  "		return ProxyGenerator.CreateLikenessProxy<TSource' TDestination> (this.Value' this.comparer' SemanticComparer<TSource' TDestination>.DefaultMembers.Generate<TDestination> ()); " is 175.
Long Statement,Ploeh.SemanticComparison,Likeness,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\Likeness.cs,CreateProxy,The length of the statement  "		var message = string.Format (CultureInfo.CurrentCulture' "The proxy of {0} could not be created. Access is denied on type' or the base type is sealed. Please see inner exception for more details."' typeof(TDestination)); " is 220.
Long Statement,Ploeh.SemanticComparison,Likeness,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\Likeness.cs,CreateProxy,The length of the statement  "		var message = string.Format (CultureInfo.CurrentCulture' "The proxy of {0} could not be created using the same semantic heuristics as the default semantic comparison. In order to create proxies of types with non-parameterless constructor the values from the source constructor must be compatible to the parameters of the destination constructor."' typeof(TDestination)); " is 370.
Long Statement,Ploeh.SemanticComparison,Likeness,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\Likeness.cs,CreateMismatchMessage,The length of the statement  "		string.Format (CultureInfo.CurrentCulture' "The provided value {0} did not match the expected value {1}. The following members did not match:{2}"' this.Value' other' Environment.NewLine) " is 186.
Long Statement,Ploeh.SemanticComparison,Likeness,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\Likeness.cs,CreateMismatchMessage,The length of the statement  "	}.Concat (mismatches.Select (me => string.Format (CultureInfo.CurrentCulture' "- {0}.{1}"' me.Member.Name' Environment.NewLine))).ToArray ()); " is 142.
Long Statement,Ploeh.SemanticComparison,Likeness,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\Likeness.cs,ToString,The length of the statement  "	return string.Format (CultureInfo.CurrentCulture' "Likeness of {0}"' this.Value == null ? "null" : this.Value.ToString ()); " is 123.
Long Statement,Ploeh.SemanticComparison,Likeness,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\Likeness.cs,ToResemblance,The length of the statement  "		var message = string.Format (CultureInfo.CurrentCulture' "The resemblance of {0} could not be created. Access is denied on type' or the base type is sealed. Please see inner exception for more details."' typeof(T)); " is 215.
Long Statement,Ploeh.SemanticComparison,MemberInfoExtension,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\MemberInfoExtension.cs,ToEvaluator,The length of the statement  "		var eq = Expression.Equal (Expression.TypeAs (srcMember' typeof(object))' Expression.TypeAs (destMember' typeof(object))' false' MemberInfoExtension.equalsMember); " is 163.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,CreateLikenessResemblance,The length of the statement  "	var members = typeof(T).GetProperties (BindingFlags.Public | BindingFlags.Instance).Concat (typeof(T).GetFields (BindingFlags.Public | BindingFlags.Instance).Cast<MemberInfo> ()).ToArray (); " is 190.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,CreateLikenessResemblance,The length of the statement  "	TypeBuilder builder = ProxyGenerator.BuildType<T> (ProxyGenerator.BuildModule (ProxyGenerator.BuildAssembly (assemblyName))); " is 125.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildType,The length of the statement  "	TypeBuilder type = mb.DefineType (typeof(TDestination).Name + "Proxy" + Guid.NewGuid ().ToString ().Replace ("-"' "")' TypeAttributes.NotPublic' typeof(TDestination)); " is 167.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildConstructors,The length of the statement  "	ConstructorBuilder constructor = type.DefineConstructor (MethodAttributes.Public | MethodAttributes.HideBySig' CallingConventions.Standard' constructorParameterTypes); " is 167.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildMethodGetHashCode,The length of the statement  "	MethodInfo getHashCode = typeof(TDestination).GetMethod ("GetHashCode"' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' new Type[] { " is 160.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildMethodEquals,The length of the statement  "	MethodInfo objectEquals = typeof(object).GetMethod ("Equals"' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' new[] { " is 145.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildMethodEquals,The length of the statement  "	MethodInfo equalityComparerEquals = typeof(IEqualityComparer).GetMethod ("Equals"' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' new[] { " is 166.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildMethodEquals,The length of the statement  "	MethodInfo equals = typeof(object).GetMethod ("Equals"' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' new[] { " is 139.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,GetPublicAndProtectedConstructors,The length of the statement  "	return type.GetConstructors (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Where (x => x.IsPublic || x.IsFamily); " is 137.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,GetParameters,The length of the statement  "	List<object> parameters = members.Where (mi => parameterTypes.Matches (mi.ToUnderlyingType ())).Select (x => source.GetType ().MatchProperty (x.Name).GetValue (source' null)).Take (parameterTypes.Count ()).ToList (); " is 216.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,FindCompatibleProperty,The length of the statement  "	return type.GetProperties (BindingFlags.Public | BindingFlags.Instance).First (x => x.Name.StartsWith (name' StringComparison.OrdinalIgnoreCase)); " is 146.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,GetSourceTypeValuePairs,The length of the statement  "	return source.GetType ().GetProperties (BindingFlags.Public | BindingFlags.Instance).Select (a => new SourceTypeValuePair (a.PropertyType' a.GetValue (source' null))); " is 167.
Long Statement,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,Map,The length of the statement  "		var sourceField = sourceFields.Where (s => s.Name.Equals (fi.Name)).Concat (sourceFields.Where (s => s.Match (fi))).FirstOrDefault (); " is 134.
Long Statement,Ploeh.SemanticComparison,SemanticComparer,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\SemanticComparer.cs,Equals,The length of the statement  "	return typeof(T).GetProperties (bindingAttributes).Select (property => this.Comparers.Where (c => c.IsSatisfiedBy (property)).Any (c => c.Equals (property.GetValue (x' null)' property.GetValue (y' null)))).Concat (typeof(T).GetFields (bindingAttributes).Select (field => this.Comparers.Where (c => c.IsSatisfiedBy (field)).Any (c => c.Equals (field.GetValue (x)' field.GetValue (y))))).All (equals => equals); " is 409.
Magic Number,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildConstructors,The following statement contains a magic number: for (int position = 0; position < constructorParameterTypes.Length; position++) {  	if (position == 0) {  		gen.Emit (OpCodes.Ldarg_0);  	} else if (position == 1) {  		gen.Emit (OpCodes.Ldarg_1);  	} else if (position == 2) {  		gen.Emit (OpCodes.Ldarg_2);  	} else if (position == 3) {  		gen.Emit (OpCodes.Ldarg_3);  	} else {  		gen.Emit (OpCodes.Ldarg_S' position);  	}  }  
Magic Number,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildConstructors,The following statement contains a magic number: for (int position = 0; position < constructorParameterTypes.Length; position++) {  	if (position == 0) {  		gen.Emit (OpCodes.Ldarg_0);  	} else if (position == 1) {  		gen.Emit (OpCodes.Ldarg_1);  	} else if (position == 2) {  		gen.Emit (OpCodes.Ldarg_2);  	} else if (position == 3) {  		gen.Emit (OpCodes.Ldarg_3);  	} else {  		gen.Emit (OpCodes.Ldarg_S' position);  	}  }  
Magic Number,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildConstructors,The following statement contains a magic number: if (position == 0) {  	gen.Emit (OpCodes.Ldarg_0);  } else if (position == 1) {  	gen.Emit (OpCodes.Ldarg_1);  } else if (position == 2) {  	gen.Emit (OpCodes.Ldarg_2);  } else if (position == 3) {  	gen.Emit (OpCodes.Ldarg_3);  } else {  	gen.Emit (OpCodes.Ldarg_S' position);  }  
Magic Number,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildConstructors,The following statement contains a magic number: if (position == 0) {  	gen.Emit (OpCodes.Ldarg_0);  } else if (position == 1) {  	gen.Emit (OpCodes.Ldarg_1);  } else if (position == 2) {  	gen.Emit (OpCodes.Ldarg_2);  } else if (position == 3) {  	gen.Emit (OpCodes.Ldarg_3);  } else {  	gen.Emit (OpCodes.Ldarg_S' position);  }  
Magic Number,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildConstructors,The following statement contains a magic number: if (position == 1) {  	gen.Emit (OpCodes.Ldarg_1);  } else if (position == 2) {  	gen.Emit (OpCodes.Ldarg_2);  } else if (position == 3) {  	gen.Emit (OpCodes.Ldarg_3);  } else {  	gen.Emit (OpCodes.Ldarg_S' position);  }  
Magic Number,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildConstructors,The following statement contains a magic number: if (position == 1) {  	gen.Emit (OpCodes.Ldarg_1);  } else if (position == 2) {  	gen.Emit (OpCodes.Ldarg_2);  } else if (position == 3) {  	gen.Emit (OpCodes.Ldarg_3);  } else {  	gen.Emit (OpCodes.Ldarg_S' position);  }  
Magic Number,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildConstructors,The following statement contains a magic number: if (position == 2) {  	gen.Emit (OpCodes.Ldarg_2);  } else if (position == 3) {  	gen.Emit (OpCodes.Ldarg_3);  } else {  	gen.Emit (OpCodes.Ldarg_S' position);  }  
Magic Number,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildConstructors,The following statement contains a magic number: if (position == 2) {  	gen.Emit (OpCodes.Ldarg_2);  } else if (position == 3) {  	gen.Emit (OpCodes.Ldarg_3);  } else {  	gen.Emit (OpCodes.Ldarg_S' position);  }  
Magic Number,Ploeh.SemanticComparison,ProxyGenerator,F:\newReposMay17\AutoFixture_AutoFixture\Src\SemanticComparison\ProxyGenerator.cs,BuildConstructors,The following statement contains a magic number: if (position == 3) {  	gen.Emit (OpCodes.Ldarg_3);  } else {  	gen.Emit (OpCodes.Ldarg_S' position);  }  
