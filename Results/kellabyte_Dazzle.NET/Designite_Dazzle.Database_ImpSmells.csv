Implementation smell,Namespace,Class,File,Method,Description
Long Method,Dazzle.Operations,SelectOperation,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\SelectOperation.cs,Execute,The method has 105 lines of code.
Long Method,Dazzle.Query,DqlGrammar,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Query\DqlQueryGrammar.cs,DqlGrammar,The method has 225 lines of code.
Complex Method,Dazzle.Operations,SelectOperation,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\SelectOperation.cs,Execute,Cyclomatic complexity of the method is 12
Complex Method,Dazzle.Operations,SelectOperationBuilder,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\SelectOperationBuilder.cs,BuildOperation,Cyclomatic complexity of the method is 10
Complex Method,Dazzle.Operations,UpdateOperationBuilder,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\UpdateOperationBuilder.cs,BuildOperation,Cyclomatic complexity of the method is 8
Empty Catch Block,Dazzle.Operations,SelectOperation,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\SelectOperation.cs,Execute,The method has an empty catch block.
Empty Catch Block,Dazzle.Operations,SelectOperation,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\SelectOperation.cs,Execute,The method has an empty catch block.
Magic Number,Dazzle.Operations,DeleteOperationBuilder,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\DeleteOperationBuilder.cs,BuildOperation,The following statement contains a magic number: operation.TableName = node.ChildNodes[2].ChildNodes[0].Token.ValueString;
Magic Number,Dazzle.Operations,DeleteOperationBuilder,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\DeleteOperationBuilder.cs,BuildOperation,The following statement contains a magic number: var val = child.ChildNodes[2].Token.ValueString;
Magic Number,Dazzle.Operations,SelectOperation,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\SelectOperation.cs,Execute,The following statement contains a magic number: switch (keyType)                              {                                  case KeyType.IndexedTerm:                                      if (keyComponents[2] != whereClause.Key)                                      {                                          cancelIndexScanning = true;                                      }                                      break;                                  case KeyType.IndexedValue:                                      if (keyComponents[3] == whereClause.Value)                                      {                                          set.Add(value);                                      }                                      break;                              }
Magic Number,Dazzle.Operations,SelectOperation,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\SelectOperation.cs,Execute,The following statement contains a magic number: switch (keyType)                              {                                  case KeyType.IndexedTerm:                                      if (keyComponents[2] != whereClause.Key)                                      {                                          cancelIndexScanning = true;                                      }                                      break;                                  case KeyType.IndexedValue:                                      if (keyComponents[3] == whereClause.Value)                                      {                                          set.Add(value);                                      }                                      break;                              }
Magic Number,Dazzle.Operations,UpdateOperationBuilder,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\UpdateOperationBuilder.cs,BuildOperation,The following statement contains a magic number: operation.Assignments.Add(node.ChildNodes[0].ChildNodes[0].Token.ValueString' node.ChildNodes[2].Token.ValueString);
Magic Number,Dazzle.Query,DqlQueryPlanBuilder,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Query\DqlQueryPlanBuilder.cs,ReadClause,The following statement contains a magic number: scope.Count >= 2 && scope.ElementAt(scope.Count - 2) == builder.OperationName
Magic Number,Dazzle.Query,DqlQueryPlanBuilder,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Query\DqlQueryPlanBuilder.cs,ReadClause,The following statement contains a magic number: scope.Count >= 2 && scope.ElementAt(scope.Count - 2) == builder.OperationName
Magic Number,Dazzle.Query,DqlGrammar,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Query\DqlQueryGrammar.cs,DqlGrammar,The following statement contains a magic number: RegisterOperators(10' "*"' "/"' "%");
Magic Number,Dazzle.Query,DqlGrammar,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Query\DqlQueryGrammar.cs,DqlGrammar,The following statement contains a magic number: RegisterOperators(9' "+"' "-");
Magic Number,Dazzle.Query,DqlGrammar,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Query\DqlQueryGrammar.cs,DqlGrammar,The following statement contains a magic number: RegisterOperators(8' "="' ">"' "<"' ">="' "<="' "<>"' "!="' "!<"' "!>"' "LIKE"' "IN");
Magic Number,Dazzle.Query,DqlGrammar,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Query\DqlQueryGrammar.cs,DqlGrammar,The following statement contains a magic number: RegisterOperators(7' "^"' "&"' "|");
Magic Number,Dazzle.Query,DqlGrammar,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Query\DqlQueryGrammar.cs,DqlGrammar,The following statement contains a magic number: RegisterOperators(6' NOT);
Magic Number,Dazzle.Query,DqlGrammar,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Query\DqlQueryGrammar.cs,DqlGrammar,The following statement contains a magic number: RegisterOperators(5' "AND");
Magic Number,Dazzle.Query,DqlGrammar,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Query\DqlQueryGrammar.cs,DqlGrammar,The following statement contains a magic number: RegisterOperators(4' "OR");
Missing Default,Dazzle.Operations,SelectOperation,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\SelectOperation.cs,Execute,The following switch statement is missing a default case: switch (keyType)                              {                                  case KeyType.IndexedTerm:                                      if (keyComponents[2] != whereClause.Key)                                      {                                          cancelIndexScanning = true;                                      }                                      break;                                  case KeyType.IndexedValue:                                      if (keyComponents[3] == whereClause.Value)                                      {                                          set.Add(value);                                      }                                      break;                              }
Missing Default,Dazzle.Operations,SelectOperation,D:\research\architectureSmells\repos\kellabyte_Dazzle.NET\src\Dazzle.Database\Operations\SelectOperation.cs,GetKeyType,The following switch statement is missing a default case: switch (value)              {                  case "table":                      return KeyType.Table;                  case "row":                      return KeyType.Row;                  case "column":                      return KeyType.Column;                  case "indexed-column":                      return KeyType.IndexedColumn;                  case "indexed-term":                      return KeyType.IndexedTerm;              }
