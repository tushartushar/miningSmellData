Implementation smell,Namespace,Class,File,Method,Description
Long Method,Irony.Interpreter,LanguageRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\LanguageRuntime.cs,InitTypeConverters,The method has 116 lines of code.
Long Method,Irony.Interpreter,LanguageRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\LanguageRuntime.cs,InitBinaryOperatorImplementationsForMatchedTypes,The method has 164 lines of code.
Long Method,Irony.Interpreter.Evaluator,ExpressionEvaluatorGrammar,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\_Evaluator\ExpressionEvaluatorGrammar.cs,ExpressionEvaluatorGrammar,The method has 106 lines of code.
Complex Method,Irony.Interpreter.Ast,StringTemplateNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\PrimitiveNodes\StringTemplateNode.cs,ParseSegments,Cyclomatic complexity of the method is 8
Complex Method,Irony.Interpreter,LanguageRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\LanguageRuntime.cs,BindSymbolForWrite,Cyclomatic complexity of the method is 8
Complex Method,Irony.Interpreter,LanguageRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\LanguageRuntime.cs,InitTypeConverters,Cyclomatic complexity of the method is 8
Complex Method,Irony.Interpreter,LanguageRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\LanguageRuntime.cs,InitBinaryOperatorImplementationsForMatchedTypes,Cyclomatic complexity of the method is 16
Long Parameter List,Irony.Interpreter,BindingSourceTableExtensions,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Bindings\IBindingSource.cs,AddMethod,The method has 6 parameters. Parameters: targets' method' methodName' minParamCount' maxParamCount' parameterNames
Long Parameter List,Irony.Interpreter,BindingSourceTableExtensions,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Bindings\IBindingSource.cs,AddSpecialForm,The method has 6 parameters. Parameters: targets' form' formName' minChildCount' maxChildCount' parameterNames
Long Parameter List,Irony.Interpreter,LanguageRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\LanguageRuntime.cs,CreateBinaryOperatorImplementation,The method has 6 parameters. Parameters: op' arg1Type' arg2Type' commonType' method' resultConverter
Long Parameter List,Irony.Interpreter,OperatorImplementation,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\OperatorImplementation.cs,OperatorImplementation,The method has 6 parameters. Parameters: key' resultType' baseBinaryMethod' arg1Converter' arg2Converter' resultConverter
Long Parameter List,Irony.Interpreter,BuiltInCallTarget,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Bindings\BuiltInObjectBinding.cs,BuiltInCallTarget,The method has 5 parameters. Parameters: method' name' minParamCount' maxParamCount' parameterNames
Long Parameter List,Irony.Interpreter,BuiltInCallableTargetInfo,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Bindings\BuiltInObjectBinding.cs,BuiltInCallableTargetInfo,The method has 5 parameters. Parameters: method' methodName' minParamCount' maxParamCount' parameterNames
Long Parameter List,Irony.Interpreter,SpecialFormBindingInfo,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Bindings\SpecialFormBinding.cs,SpecialFormBindingInfo,The method has 5 parameters. Parameters: symbol' form' minChildCount' maxChildCount' childRoles
Long Statement,Irony.Interpreter.Ast,AstNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\Base\AstNode.cs,AddChild,The length of the statement  "        child = new NullNode(childParseNode.Term); //put a stub to throw an exception with clear message on attempt to evaluate.  " is 120.
Long Statement,Irony.Interpreter.Ast,IndexedAccessNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\Expressions\IndexedAccessNode.cs,DoEvaluate,The length of the statement  "        const BindingFlags flags = BindingFlags.Public | BindingFlags.Instance | BindingFlags.IgnoreCase | BindingFlags.InvokeMethod; " is 125.
Long Statement,Irony.Interpreter.Ast,IndexedAccessNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\Expressions\IndexedAccessNode.cs,DoSetValue,The length of the statement  "        const BindingFlags flags = BindingFlags.Public | BindingFlags.Instance | BindingFlags.IgnoreCase | BindingFlags.InvokeMethod; " is 125.
Long Statement,Irony.Interpreter.Ast,StringTemplateNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\PrimitiveNodes\StringTemplateNode.cs,ParseSegments,The length of the statement  "      // As we go along the "value text" (that has all escapes done)' we track the position in raw token text  in the variable exprPosInTokenText. " is 140.
Long Statement,Irony.Interpreter.Ast,StringTemplateNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\PrimitiveNodes\StringTemplateNode.cs,ParseSegments,The length of the statement  "      // This position is position in original text in source code' including original escaping sequences and open/close quotes.  " is 122.
Long Statement,Irony.Interpreter.Ast,StringTemplateNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\PrimitiveNodes\StringTemplateNode.cs,ParseSegments,The length of the statement  "      // It will be passed to segment constructor' and maybe used later to compute the exact position of runtime error when it occurs.  " is 128.
Long Statement,Irony.Interpreter.Ast,StringTemplateNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\PrimitiveNodes\StringTemplateNode.cs,ParseSegments,The length of the statement  "            //we use original search in token text instead of currentPos in template to avoid distortions caused by opening quote and escaped sequences " is 139.
Long Statement,Irony.Interpreter.Ast,StringTemplateNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\PrimitiveNodes\StringTemplateNode.cs,ParseSegments,The length of the statement  "          exprPosInTokenText = _tokenText.IndexOf(_templateSettings.StartTag' exprPosInTokenText) + _templateSettings.StartTag.Length; " is 124.
Long Statement,Irony.Interpreter.Ast,StringTemplateNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\PrimitiveNodes\StringTemplateNode.cs,CopyMessages,The length of the statement  "        toList.Add(new LogMessage(other.Level' baseLocation + other.Location' messagePrefix + other.Message' other.ParserState)); " is 121.
Long Statement,Irony.Interpreter.Ast,AssignmentNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\Statements\AssignmentNode.cs,Init,The length of the statement  "      //There maybe an "=" sign in the middle' or not - if it is marked as punctuation; so we just take the last node in child list " is 125.
Long Statement,Irony.Interpreter,LanguageRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\LanguageRuntime.cs,InitBinaryOperatorImplementationsForMatchedTypes,The length of the statement  "      // For each operator' we add a series of implementation methods for same-type operands. They are saved as OperatorImplementation " is 128.
Long Statement,Irony.Interpreter,LanguageRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\LanguageRuntime.cs,InitBinaryOperatorImplementationsForMatchedTypes,The length of the statement  "      // After this initialization (for same-type operands)' system adds implementations for all type pairs (ex: int + double)'  " is 121.
Long Statement,Irony.Interpreter,LanguageRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\LanguageRuntime.cs,CreateBinaryOperatorImplementation,The length of the statement  "      var impl = CreateBinaryOperatorImplementation(op' arg1Type' arg2Type' commonType' baseImpl.BaseBinaryMethod' baseImpl.ResultConverter); " is 135.
Long Statement,Irony.Interpreter,OperatorImplementation,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\OperatorImplementation.cs,SetupEvaluationMethod,The length of the statement  "        //special case - it is unary method' the method itself in Arg1Converter; LanguageRuntime.ExecuteUnaryOperator will handle this properly " is 135.
Long Statement,Irony.Interpreter,ScopeBase,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Scopes\ScopeBase.cs,SetValue,The length of the statement  "        Thread.Sleep(0); // it's  OK to Sleep intead of SpinWait - it is really rare event' so we don't care losing a few more cycles here.  " is 131.
Long Statement,Irony.Interpreter,ScriptApp,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\SriptApplication\ScriptApp.cs,Evaluate,The length of the statement  "      Util.Check (parsedScript.Root.AstNode != null'  "Root AST node is null' cannot evaluate script. Create AST tree first."); " is 121.
Long Statement,Irony.Interpreter,ScriptApp,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\SriptApplication\ScriptApp.cs,Evaluate,The length of the statement  "        "Root AST node {0} is not a subclass of Irony.Interpreter.AstNode. ScriptApp cannot evaluate this script."' root.GetType()); " is 124.
Complex Conditional,Irony.Interpreter,LanguageRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\LanguageRuntime.cs,GetUpType,The conditional expression  "type == typeof(byte) || type == typeof(sbyte) || type == typeof(UInt16) || type == typeof(Int16)"  is complex.
Virtual Method Call from Constructor,Irony.Interpreter.Ast,OperatorHandler,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\AstContext\OperatorHandler.cs,OperatorHandler,The constructor "OperatorHandler" calls a virtual method "BuildDefaultOperatorMappings".
Virtual Method Call from Constructor,Irony.Interpreter,LanguageRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\LanguageRuntime.cs,LanguageRuntime,The constructor "LanguageRuntime" calls a virtual method "Init".
Virtual Method Call from Constructor,Irony.Interpreter,ScriptApp,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\SriptApplication\ScriptApp.cs,ScriptApp,The constructor "ScriptApp" calls a virtual method "CreateRuntime".
Empty Catch Block,Irony.Interpreter,SlotBinding,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Bindings\SlotBinding.cs,GetImmediateParentScopeValue,The method has an empty catch block.
Empty Catch Block,Irony.Interpreter,SlotBinding,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Bindings\SlotBinding.cs,GetImmediateParentScopeParameter,The method has an empty catch block.
Magic Number,Irony.Interpreter.Ast,BinaryOperationNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\Expressions\BinaryOperationNode.cs,Init,The following statement contains a magic number: Right = AddChild("Arg"' nodes[2]);
Magic Number,Irony.Interpreter.Ast,BinaryOperationNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\Expressions\BinaryOperationNode.cs,EvaluateFast,The following statement contains a magic number: if (_lastUsed != null) {          try {            var res = _lastUsed.EvaluateBinary(arg1' arg2);            thread.CurrentNode = Parent; //standard epilog            return res;          } catch {            _lastUsed = null;            _failureCount++;            // if failed 3 times' change to method without direct try            if (_failureCount > 3)              Evaluate = DefaultEvaluateImplementation;          } //catch        }
Magic Number,Irony.Interpreter.Ast,IfNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\Expressions\IfNode.cs,Init,The following statement contains a magic number: if (nodes.Count > 2)          IfFalse = AddChild("IfFalse"' nodes[2]);
Magic Number,Irony.Interpreter.Ast,IfNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\Expressions\IfNode.cs,Init,The following statement contains a magic number: if (nodes.Count > 2)          IfFalse = AddChild("IfFalse"' nodes[2]);
Magic Number,Irony.Interpreter.Ast,FunctionDefNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\Functions\FunctionDefNode.cs,Init,The following statement contains a magic number: Lambda = new LambdaNode(context' treeNode' nodes[2]' nodes[3]);
Magic Number,Irony.Interpreter.Ast,FunctionDefNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\Functions\FunctionDefNode.cs,Init,The following statement contains a magic number: Lambda = new LambdaNode(context' treeNode' nodes[2]' nodes[3]);
Magic Number,Irony.Interpreter.Ast,AssignmentNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\Statements\AssignmentNode.cs,EvaluateAugmentedFast,The following statement contains a magic number: if (_lastUsed != null) {          try {            result = _lastUsed.EvaluateBinary(value' exprValue);          } catch {            _failureCount++;            // if failed 3 times' change to method without direct try            if (_failureCount > 3)              Evaluate = EvaluateAugmented;          } //catch        }
Magic Number,Irony.Interpreter.Ast,OperatorHandler,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\AstContext\OperatorHandler.cs,BuildDefaultOperatorMappings,The following statement contains a magic number: p += 10;
Magic Number,Irony.Interpreter.Ast,OperatorHandler,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\AstContext\OperatorHandler.cs,BuildDefaultOperatorMappings,The following statement contains a magic number: p += 10;
Magic Number,Irony.Interpreter.Ast,OperatorHandler,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\AstContext\OperatorHandler.cs,BuildDefaultOperatorMappings,The following statement contains a magic number: p += 10;
Magic Number,Irony.Interpreter.Ast,OperatorHandler,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\AstContext\OperatorHandler.cs,BuildDefaultOperatorMappings,The following statement contains a magic number: p += 10;
Magic Number,Irony.Interpreter.Ast,OperatorHandler,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\AstContext\OperatorHandler.cs,BuildDefaultOperatorMappings,The following statement contains a magic number: p += 10;
Magic Number,Irony.Interpreter.Ast,OperatorHandler,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\AstContext\OperatorHandler.cs,BuildDefaultOperatorMappings,The following statement contains a magic number: p += 10;
Magic Number,Irony.Interpreter.Ast,OperatorHandler,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\AstContext\OperatorHandler.cs,BuildDefaultOperatorMappings,The following statement contains a magic number: p += 10;
Magic Number,Irony.Interpreter.Ast,OperatorHandler,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\AstContext\OperatorHandler.cs,BuildDefaultOperatorMappings,The following statement contains a magic number: p += 10;
Magic Number,Irony.Interpreter.Ast,OperatorHandler,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\AstContext\OperatorHandler.cs,BuildDefaultOperatorMappings,The following statement contains a magic number: p += 10;
Magic Number,Irony.Interpreter.Ast,OperatorHandler,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\AstContext\OperatorHandler.cs,BuildDefaultOperatorMappings,The following statement contains a magic number: p += 10;
Magic Number,Irony.Interpreter,SpecialFormsLibrary,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\SpecialFormsLibrary.cs,Iif,The following statement contains a magic number: object result = thread.Runtime.IsTrue(testValue) ? childNodes[1].Evaluate(thread) : childNodes[2].Evaluate(thread);
Magic Number,Irony.Interpreter,OperatorDispatchKey,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\OperatorImplementation.cs,OperatorDispatchKey,The following statement contains a magic number: HashCode = unchecked(h0 << 8  ^  h1 << 4 ^ h2);
Magic Number,Irony.Interpreter,OperatorDispatchKey,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\OperatorImplementation.cs,OperatorDispatchKey,The following statement contains a magic number: HashCode = unchecked(h0 << 8  ^  h1 << 4 ^ h2);
Magic Number,Irony.Interpreter,OperatorDispatchKey,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\OperatorImplementation.cs,OperatorDispatchKey,The following statement contains a magic number: HashCode = unchecked(h0 << 8 ^ h1 << 4 ^ h2);
Magic Number,Irony.Interpreter,OperatorDispatchKey,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\LanguageRuntime\OperatorImplementation.cs,OperatorDispatchKey,The following statement contains a magic number: HashCode = unchecked(h0 << 8 ^ h1 << 4 ^ h2);
Magic Number,Irony.Interpreter,ScopeBase,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Scopes\ScopeBase.cs,AddSlot,The following statement contains a magic number: if (slot.Index >= Values.Length)          Resize(Values.Length + 4);
Magic Number,Irony.Interpreter,CommandLine,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\SriptApplication\CommandLine.cs,WaitForScriptComplete,The following statement contains a magic number: while(true) {          Thread.Sleep(50);          if(!IsEvaluating) return;          if(_console.Canceled) {            _console.Canceled = false;             if (Confirm(Resources.MsgAbortScriptYN))              WorkerThreadAbort();          }//if Canceled        }
Magic Number,Irony.Interpreter,CommandLine,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\SriptApplication\CommandLine.cs,WorkerThreadAbort,The following statement contains a magic number: try {          _workerThread.Abort();          _workerThread.Join(50);        } finally {          IsEvaluating = false;        }
Magic Number,Irony.Interpreter.Evaluator,ExpressionEvaluatorGrammar,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\_Evaluator\ExpressionEvaluatorGrammar.cs,ExpressionEvaluatorGrammar,The following statement contains a magic number: RegisterOperators(10' "?");
Magic Number,Irony.Interpreter.Evaluator,ExpressionEvaluatorGrammar,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\_Evaluator\ExpressionEvaluatorGrammar.cs,ExpressionEvaluatorGrammar,The following statement contains a magic number: RegisterOperators(15' "&"' "&&"' "|"' "||");
Magic Number,Irony.Interpreter.Evaluator,ExpressionEvaluatorGrammar,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\_Evaluator\ExpressionEvaluatorGrammar.cs,ExpressionEvaluatorGrammar,The following statement contains a magic number: RegisterOperators(20' "=="' "<"' "<="' ">"' ">="' "!=");
Magic Number,Irony.Interpreter.Evaluator,ExpressionEvaluatorGrammar,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\_Evaluator\ExpressionEvaluatorGrammar.cs,ExpressionEvaluatorGrammar,The following statement contains a magic number: RegisterOperators(30' "+"' "-");
Magic Number,Irony.Interpreter.Evaluator,ExpressionEvaluatorGrammar,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\_Evaluator\ExpressionEvaluatorGrammar.cs,ExpressionEvaluatorGrammar,The following statement contains a magic number: RegisterOperators(40' "*"' "/");
Magic Number,Irony.Interpreter.Evaluator,ExpressionEvaluatorGrammar,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\_Evaluator\ExpressionEvaluatorGrammar.cs,ExpressionEvaluatorGrammar,The following statement contains a magic number: RegisterOperators(50' Associativity.Right' "**");
Magic Number,Irony.Interpreter.Evaluator,ExpressionEvaluatorRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\_Evaluator\ExpressionEvaluatorRuntime.cs,Init,The following statement contains a magic number: BuiltIns.AddSpecialForm(SpecialFormsLibrary.Iif' "iif"' 3' 3);
Magic Number,Irony.Interpreter.Evaluator,ExpressionEvaluatorRuntime,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\_Evaluator\ExpressionEvaluatorRuntime.cs,Init,The following statement contains a magic number: BuiltIns.AddSpecialForm(SpecialFormsLibrary.Iif' "iif"' 3' 3);
Missing Default,Irony.Interpreter.Ast,StringTemplateNode,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Ast\PrimitiveNodes\StringTemplateNode.cs,BuildString,The following switch statement is missing a default case: switch(segment.Type) {            case SegmentType.Text:               values[i] = segment.Text;               break;             case SegmentType.Expression:               values[i] = EvaluateExpression(thread' segment);              break;           }
Missing Default,Irony.Interpreter,BindingSourceTableExtensions,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\Bindings\IBindingSource.cs,ImportStaticMembers,The following switch statement is missing a default case: switch (member.MemberType) {            case MemberTypes.Method:              targets.Add(member.Name' new ClrMethodBindingTargetInfo(fromType' member.Name));              break;            case MemberTypes.Property:              targets.Add(member.Name' new ClrPropertyBindingTargetInfo(member as PropertyInfo' null));              break;            case MemberTypes.Field:              targets.Add(member.Name' new ClrFieldBindingTargetInfo(member as FieldInfo' null));              break;          }
Missing Default,Irony.Interpreter,ConsoleAdapter,C:\repos\kellabyte_Dazzle.NET\lib\Irony\src\Irony.Interpreter\SriptApplication\ConsoleAdaptor.cs,SetTextStyle,The following switch statement is missing a default case: switch(style) {          case ConsoleTextStyle.Normal:            Console.ForegroundColor = ConsoleColor.White;            break;           case ConsoleTextStyle.Error:            Console.ForegroundColor = ConsoleColor.Red;            break;         }
