Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Owin.StatelessAuthExample,Bootstrapper,F:\newReposMay17\jchannon_Owin.StatelessAuth\src\Owin.StatelessAuthExample\Bootstrapper.cs,RequestStartup,The length of the statement  "			Claims = user.Claims.Where (x => x.Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/role").Select (x => x.Value) " is 128.
Long Statement,Owin.StatelessAuthExample,MySecureTokenValidator,F:\newReposMay17\jchannon_Owin.StatelessAuth\src\Owin.StatelessAuthExample\MySecureTokenValidator.cs,ValidateUser,The length of the statement  "		var decodedtoken = JsonWebToken.DecodeToObject (token' configProvider.GetAppSetting ("securekey")) as Dictionary<string' object>; " is 129.
Magic Number,Owin.StatelessAuthExample,HomeModule,F:\newReposMay17\jchannon_Owin.StatelessAuth\src\Owin.StatelessAuthExample\HomeModule.cs,HomeModule,The following statement contains a magic number: Post ["/login"] = _ => {  	var user = this.Bind<UserCredentials> ();  	//Verify user/pass  	if (user.User != "fred" && user.Password != "securepwd") {  		return 401;  	}  	var jwttoken = new JwtToken () {  		Issuer = "http://issuer.com"'  		Audience = "http://mycoolwebsite.com"'  		Claims = new List<Claim> (new[] {  			new Claim ("http://schemas.microsoft.com/ws/2008/06/identity/claims/role"' "Administrator")'  			new Claim (ClaimTypes.Name' "Fred")  		})'  		Expiry = DateTime.UtcNow.AddDays (7)  	};  	var token = jwtWrapper.Encode (jwttoken' configProvider.GetAppSetting ("securekey")' JwtHashAlgorithm.HS256);  	return Negotiate.WithModel (token);  };  
Magic Number,Owin.StatelessAuthExample,HomeModule,F:\newReposMay17\jchannon_Owin.StatelessAuth\src\Owin.StatelessAuthExample\HomeModule.cs,HomeModule,The following statement contains a magic number: Post ["/login"] = _ => {  	var user = this.Bind<UserCredentials> ();  	//Verify user/pass  	if (user.User != "fred" && user.Password != "securepwd") {  		return 401;  	}  	var jwttoken = new JwtToken () {  		Issuer = "http://issuer.com"'  		Audience = "http://mycoolwebsite.com"'  		Claims = new List<Claim> (new[] {  			new Claim ("http://schemas.microsoft.com/ws/2008/06/identity/claims/role"' "Administrator")'  			new Claim (ClaimTypes.Name' "Fred")  		})'  		Expiry = DateTime.UtcNow.AddDays (7)  	};  	var token = jwtWrapper.Encode (jwttoken' configProvider.GetAppSetting ("securekey")' JwtHashAlgorithm.HS256);  	return Negotiate.WithModel (token);  };  
Magic Number,Owin.StatelessAuthExample,HomeModule,F:\newReposMay17\jchannon_Owin.StatelessAuth\src\Owin.StatelessAuthExample\HomeModule.cs,HomeModule,The following statement contains a magic number: if (user.User != "fred" && user.Password != "securepwd") {  	return 401;  }  
Magic Number,Owin.StatelessAuthExample,HomeModule,F:\newReposMay17\jchannon_Owin.StatelessAuth\src\Owin.StatelessAuthExample\HomeModule.cs,HomeModule,The following statement contains a magic number: return 401;  
