Implementation smell,Namespace,Class,File,Method,Description
Long Method,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The method has 108 lines of code.
Long Method,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The method has 108 lines of code.
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,EscapeToJavascriptString,Cyclomatic complexity of the method is 11
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseObject,Cyclomatic complexity of the method is 8
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseValue,Cyclomatic complexity of the method is 8
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseString,Cyclomatic complexity of the method is 22
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,Cyclomatic complexity of the method is 15
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,SerializeValue,Cyclomatic complexity of the method is 9
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,SerializeString,Cyclomatic complexity of the method is 9
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,IsNumeric,Cyclomatic complexity of the method is 12
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,EscapeToJavascriptString,Cyclomatic complexity of the method is 11
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseObject,Cyclomatic complexity of the method is 8
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseValue,Cyclomatic complexity of the method is 8
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseString,Cyclomatic complexity of the method is 22
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,Cyclomatic complexity of the method is 15
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,SerializeValue,Cyclomatic complexity of the method is 9
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,SerializeString,Cyclomatic complexity of the method is 9
Complex Method,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,IsNumeric,Cyclomatic complexity of the method is 12
Complex Method,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,Cyclomatic complexity of the method is 25
Complex Method,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,Cyclomatic complexity of the method is 25
Long Identifier,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,,The length of the parameter _currentJsonSerializerStrategy is 30.
Long Identifier,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,,The length of the parameter _currentJsonSerializerStrategy is 30.
Long Identifier,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,,The length of the parameter ArrayConstructorParameterTypes is 30.
Long Identifier,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,,The length of the parameter ArrayConstructorParameterTypes is 30.
Long Statement,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseString,The length of the statement  "                            if (!(success = UInt32.TryParse(new string(json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) " is 130.
Long Statement,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseString,The length of the statement  "                                    if (new string(json' index' 2) == "\\u" && UInt32.TryParse(new string(json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) " is 163.
Long Statement,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseNumber,The length of the statement  "            if (str.IndexOf("."' StringComparison.OrdinalIgnoreCase) != -1 || str.IndexOf("e"' StringComparison.OrdinalIgnoreCase) != -1) " is 125.
Long Statement,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseNumber,The length of the statement  "                success = double.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 123.
Long Statement,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseNumber,The length of the statement  "                success = long.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 121.
Long Statement,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The length of the statement  "                if (json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e') " is 127.
Long Statement,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseString,The length of the statement  "                            if (!(success = UInt32.TryParse(new string(json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) " is 130.
Long Statement,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseString,The length of the statement  "                                    if (new string(json' index' 2) == "\\u" && UInt32.TryParse(new string(json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) " is 163.
Long Statement,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseNumber,The length of the statement  "            if (str.IndexOf("."' StringComparison.OrdinalIgnoreCase) != -1 || str.IndexOf("e"' StringComparison.OrdinalIgnoreCase) != -1) " is 125.
Long Statement,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseNumber,The length of the statement  "                success = double.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 123.
Long Statement,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseNumber,The length of the statement  "                success = long.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 121.
Long Statement,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The length of the statement  "                if (json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e') " is 127.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,SetterValueFactory,The length of the statement  "            IDictionary<string' KeyValuePair<Type' ReflectionUtils.SetDelegate>> result = new Dictionary<string' KeyValuePair<Type' ReflectionUtils.SetDelegate>>(); " is 152.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,SetterValueFactory,The length of the statement  "                    result[propertyInfo.Name] = new KeyValuePair<Type' ReflectionUtils.SetDelegate>(propertyInfo.PropertyType' ReflectionUtils.GetSetMethod(propertyInfo)); " is 151.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,SetterValueFactory,The length of the statement  "                result[fieldInfo.Name] = new KeyValuePair<Type' ReflectionUtils.SetDelegate>(fieldInfo.FieldType' ReflectionUtils.GetSetMethod(fieldInfo)); " is 139.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The length of the statement  "                    if (type == typeof(DateTime) || (ReflectionUtils.IsNullableType(type) && Nullable.GetUnderlyingType(type) == typeof(DateTime))) " is 127.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The length of the statement  "                        obj = DateTime.ParseExact(str' Iso8601Format' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal); " is 143.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The length of the statement  "                    else if (type == typeof(Guid) || (ReflectionUtils.IsNullableType(type) && Nullable.GetUnderlyingType(type) == typeof(Guid))) " is 124.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The length of the statement  " type == typeof(int) || type == typeof(long) || type == typeof(double) || type == typeof(float) || type == typeof(bool) || type == typeof(decimal) || type == typeof(byte) || type == typeof(short) " is 194.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The length of the statement  "                    else if (ReflectionUtils.IsTypeGenericeCollectionInterface(type) || ReflectionUtils.IsAssignableFrom(typeof(IList)' type)) " is 122.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,SetterValueFactory,The length of the statement  "            IDictionary<string' KeyValuePair<Type' ReflectionUtils.SetDelegate>> result = new Dictionary<string' KeyValuePair<Type' ReflectionUtils.SetDelegate>>(); " is 152.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,SetterValueFactory,The length of the statement  "                    result[propertyInfo.Name] = new KeyValuePair<Type' ReflectionUtils.SetDelegate>(propertyInfo.PropertyType' ReflectionUtils.GetSetMethod(propertyInfo)); " is 151.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,SetterValueFactory,The length of the statement  "                result[fieldInfo.Name] = new KeyValuePair<Type' ReflectionUtils.SetDelegate>(fieldInfo.FieldType' ReflectionUtils.GetSetMethod(fieldInfo)); " is 139.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The length of the statement  "                    if (type == typeof(DateTime) || (ReflectionUtils.IsNullableType(type) && Nullable.GetUnderlyingType(type) == typeof(DateTime))) " is 127.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The length of the statement  "                        obj = DateTime.ParseExact(str' Iso8601Format' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal); " is 143.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The length of the statement  "                    else if (type == typeof(Guid) || (ReflectionUtils.IsNullableType(type) && Nullable.GetUnderlyingType(type) == typeof(Guid))) " is 124.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The length of the statement  " type == typeof(int) || type == typeof(long) || type == typeof(double) || type == typeof(float) || type == typeof(bool) || type == typeof(decimal) || type == typeof(byte) || type == typeof(short) " is 194.
Long Statement,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The length of the statement  "                    else if (ReflectionUtils.IsTypeGenericeCollectionInterface(type) || ReflectionUtils.IsAssignableFrom(typeof(IList)' type)) " is 122.
Long Statement,Reflection,ReflectionUtils,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,IsTypeGenericeCollectionInterface,The length of the statement  "                return (genericDefinition == typeof(IList<>) || genericDefinition == typeof(ICollection<>) || genericDefinition == typeof(IEnumerable<>)); " is 138.
Long Statement,Reflection,ReflectionUtils,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ToNullableType,The length of the statement  "                return obj == null ? null : Convert.ChangeType(obj' Nullable.GetUnderlyingType(nullableType)' CultureInfo.InvariantCulture); " is 124.
Long Statement,Reflection,ReflectionUtils,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,GetGetMethodByExpression,The length of the statement  "                UnaryExpression instanceCast = (!IsValueType(propertyInfo.DeclaringType)) ? Expression.TypeAs(instance' propertyInfo.DeclaringType) : Expression.Convert(instance' propertyInfo.DeclaringType); " is 191.
Long Statement,Reflection,ReflectionUtils,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,GetGetMethodByExpression,The length of the statement  "                Func<object' object> compiled = Expression.Lambda<Func<object' object>>(Expression.TypeAs(Expression.Call(instanceCast' getMethodInfo)' typeof(object))' instance).Compile(); " is 173.
Long Statement,Reflection,ReflectionUtils,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,GetSetMethodByExpression,The length of the statement  "                UnaryExpression instanceCast = (!IsValueType(propertyInfo.DeclaringType)) ? Expression.TypeAs(instance' propertyInfo.DeclaringType) : Expression.Convert(instance' propertyInfo.DeclaringType); " is 191.
Long Statement,Reflection,ReflectionUtils,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,GetSetMethodByExpression,The length of the statement  "                UnaryExpression valueCast = (!IsValueType(propertyInfo.PropertyType)) ? Expression.TypeAs(value' propertyInfo.PropertyType) : Expression.Convert(value' propertyInfo.PropertyType); " is 179.
Long Statement,Reflection,ReflectionUtils,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,GetSetMethodByExpression,The length of the statement  "                Action<object' object> compiled = Expression.Lambda<Action<object' object>>(Expression.Call(instanceCast' setMethodInfo' valueCast)' new ParameterExpression[] { instance' value }).Compile(); " is 190.
Long Statement,Reflection,ReflectionUtils,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,GetSetMethodByExpression,The length of the statement  "                    Assign(Expression.Field(Expression.Convert(instance' fieldInfo.DeclaringType)' fieldInfo)' Expression.Convert(value' fieldInfo.FieldType))' instance' value).Compile(); " is 167.
Complex Conditional,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'"  is complex.
Complex Conditional,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'"  is complex.
Complex Conditional,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'"  is complex.
Complex Conditional,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'"  is complex.
Complex Conditional,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'"  is complex.
Complex Conditional,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'"  is complex.
Complex Conditional,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The conditional expression  "(value is long && type == typeof(long)) || (value is double && type == typeof(double))"  is complex.
Complex Conditional,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The conditional expression  "(value is double && type != typeof(double)) || (value is long && type != typeof(long))"  is complex.
Complex Conditional,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The conditional expression  "(value is long && type == typeof(long)) || (value is double && type == typeof(double))"  is complex.
Complex Conditional,GitHubAPI.Tests,PocoJsonSerializerStrategy,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,DeserializeObject,The conditional expression  "(value is double && type != typeof(double)) || (value is long && type != typeof(long))"  is complex.
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,EscapeToJavascriptString,The following statement contains a magic number: remainingLength >= 2
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ConvertFromUtf32,The following statement contains a magic number: return new string(new char[] { (char)((utf32 >> 10) + 0xD800)' (char)(utf32 % 0x0400 + 0xDC00) });
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 5;
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 5
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,EscapeToJavascriptString,The following statement contains a magic number: remainingLength >= 2
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ConvertFromUtf32,The following statement contains a magic number: return new string(new char[] { (char)((utf32 >> 10) + 0xD800)' (char)(utf32 % 0x0400 + 0xDC00) });
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 5;
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 5
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'
Magic Number,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Missing Default,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseValue,The following switch statement is missing a default case: switch (LookAhead(json' index))              {                  case TOKEN_STRING:                      return ParseString(json' ref index' ref success);                  case TOKEN_NUMBER:                      return ParseNumber(json' ref index' ref success);                  case TOKEN_CURLY_OPEN:                      return ParseObject(json' ref index' ref success);                  case TOKEN_SQUARED_OPEN:                      return ParseArray(json' ref index' ref success);                  case TOKEN_TRUE:                      NextToken(json' ref index);                      return true;                  case TOKEN_FALSE:                      NextToken(json' ref index);                      return false;                  case TOKEN_NULL:                      NextToken(json' ref index);                      return null;                  case TOKEN_NONE:                      break;              }
Missing Default,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following switch statement is missing a default case: switch (c)              {                  case '{':                      return TOKEN_CURLY_OPEN;                  case '}':                      return TOKEN_CURLY_CLOSE;                  case '[':                      return TOKEN_SQUARED_OPEN;                  case ']':                      return TOKEN_SQUARED_CLOSE;                  case ''':                      return TOKEN_COMMA;                  case '"':                      return TOKEN_STRING;                  case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                      return TOKEN_NUMBER;                  case ':':                      return TOKEN_COLON;              }
Missing Default,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,ParseValue,The following switch statement is missing a default case: switch (LookAhead(json' index))              {                  case TOKEN_STRING:                      return ParseString(json' ref index' ref success);                  case TOKEN_NUMBER:                      return ParseNumber(json' ref index' ref success);                  case TOKEN_CURLY_OPEN:                      return ParseObject(json' ref index' ref success);                  case TOKEN_SQUARED_OPEN:                      return ParseArray(json' ref index' ref success);                  case TOKEN_TRUE:                      NextToken(json' ref index);                      return true;                  case TOKEN_FALSE:                      NextToken(json' ref index);                      return false;                  case TOKEN_NULL:                      NextToken(json' ref index);                      return null;                  case TOKEN_NONE:                      break;              }
Missing Default,GitHubAPI.Tests,SimpleJson,D:\research\architectureSmells\repos1\sgrassie_csharp-github-api\csharp-github-api.Tests\SimpleJson.cs,NextToken,The following switch statement is missing a default case: switch (c)              {                  case '{':                      return TOKEN_CURLY_OPEN;                  case '}':                      return TOKEN_CURLY_CLOSE;                  case '[':                      return TOKEN_SQUARED_OPEN;                  case ']':                      return TOKEN_SQUARED_CLOSE;                  case ''':                      return TOKEN_COMMA;                  case '"':                      return TOKEN_STRING;                  case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                      return TOKEN_NUMBER;                  case ':':                      return TOKEN_COLON;              }
