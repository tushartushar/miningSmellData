Implementation smell,Namespace,Class,File,Method,Description
Long Method,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The method has 122 lines of code.
Long Method,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The method has 160 lines of code.
Complex Method,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,Cyclomatic complexity of the method is 23
Complex Method,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PerformPlacement,Cyclomatic complexity of the method is 13
Complex Method,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,Cyclomatic complexity of the method is 12
Complex Method,Baconography.PlatformServices.ImageAPI,Imgur,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Imgur.cs,GetImagesFromUri,Cyclomatic complexity of the method is 9
Long Parameter List,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The method has 8 parameters. Parameters: largeArray' lWidth' lHeight' smallArray' sWidth' sHeight' widthOffset' heightOffset
Long Parameter List,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImageAsync,The method has 6 parameters. Parameters: inputFile' width' height' edgePadding' bottomPadding' collisionOption
Long Parameter List,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImage,The method has 6 parameters. Parameters: inputFile' width' height' edgePadding' bottomPadding' replaceIfExists
Long Identifier,BaconographyW8.Common,SettingsFlyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\SettingsFlyout.cs,,The length of the parameter ContentForegroundBrushProperty is 30.
Long Identifier,BaconographyW8.Common,SettingsFlyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\SettingsFlyout.cs,,The length of the parameter ContentBackgroundBrushProperty is 30.
Long Statement,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,GetTopLevelComments,The length of the statement  "                        var result = JsonConvert.DeserializeObject<Listing>(Encoding.UTF8.GetString(decompressedBytes' 0' decompressedBytes.Length)); " is 125.
Long Statement,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,StoreLink,The length of the statement  "                using (var commentsCursor = await _linksDB.SeekAsync(_linksDB.GetKeys().First()' keySpace' DBReadFlags.AutoLock | DBReadFlags.WaitOnLock)) " is 138.
Long Statement,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,StoreSubreddit,The length of the statement  "            var combinedSpace = GenerateCombinedKeyspace(((Subreddit)thing.Data).DisplayName' ((Subreddit)thing.Data).Name' encodedValue); " is 126.
Long Statement,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,StoreSubreddit,The length of the statement  "            using (var subredditsCursor = await _subredditsDB.SeekAsync(_subredditsDB.GetKeys()[0]' keyspace' DBReadFlags.AutoLock | DBReadFlags.WaitOnLock)) " is 145.
Long Statement,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,GetSubreddit,The length of the statement  "                        var decodedListing = Encoding.UTF8.GetString(currentRecord' SubredditKeySpaceSize' currentRecord.Length - SubredditKeySpaceSize); " is 129.
Long Statement,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,IncrementDomain,The length of the statement  "                using (var dbCursor = await _domainStatisticsDB.SeekAsync(_domainStatisticsDB.GetKeys()[0]' keyspace' DBReadFlags.AutoLock | DBReadFlags.WaitOnLock)) " is 149.
Long Statement,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,IncrementSubreddit,The length of the statement  "                using (var dbCursor = await _subredditStatisticsDB.SeekAsync(_subredditStatisticsDB.GetKeys()[0]' keyspace' DBReadFlags.AutoLock | DBReadFlags.WaitOnLock)) " is 155.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The length of the statement  "                _actionsDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\actions_v2.ism"' DBCreateFlags.None' " is 132.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The length of the statement  "                _historyDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\history_v2.ism"' DBCreateFlags.None); " is 133.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The length of the statement  "                _settingsDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\settings_v2.ism"' DBCreateFlags.None); " is 135.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The length of the statement  "                _blobStoreDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\blobs_v3.ism"' DBCreateFlags.None' 0' " is 135.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The length of the statement  "                _imageAPIDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\image_api_v1.ism"' DBCreateFlags.None' 64000); " is 143.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The length of the statement  "                _imageDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\image_v1.ism"' DBCreateFlags.None' 0); " is 132.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The length of the statement  "                var actionCursor = await _actionsDb.SeekAsync(_actionsDb.GetKeys().First()' "action"' DBReadFlags.AutoLock | DBReadFlags.WaitOnLock); " is 133.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,UserHasOfflineMessages,The length of the statement  "            using (var cursor = await _blobStoreDb.SeekAsync(_blobStoreDb.GetKeys()[0]' BitConverter.GetBytes(key.GetHashCode())' DBReadFlags.NoLock)) " is 138.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreOrderedThings,The length of the statement  "                using (var blobCursor = await _blobStoreDb.SeekAsync(_blobStoreDb.GetKeys()[0]' BitConverter.GetBytes(key.GetHashCode())' DBReadFlags.WaitOnLock)) " is 146.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreThing,The length of the statement  "                using (var blobCursor = await _blobStoreDb.SeekAsync(_blobStoreDb.GetKeys()[0]' BitConverter.GetBytes(key.GetHashCode())' DBReadFlags.WaitOnLock)) " is 146.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveThing,The length of the statement  "                using (var blobCursor = await _blobStoreDb.SeekAsync(_blobStoreDb.GetKeys()[0]' BitConverter.GetBytes(key.GetHashCode())' DBReadFlags.WaitOnLock)) " is 146.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveOrderedThings,The length of the statement  "                using (var blobCursor = await _blobStoreDb.SeekAsync(_blobStoreDb.GetKeys()[0]' BitConverter.GetBytes(key.GetHashCode())' DBReadFlags.WaitOnLock)) " is 146.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveOrderedThings,The length of the statement  "                            IEnumerable<Thing> result = JsonConvert.DeserializeObject<Thing[]>(Encoding.UTF8.GetString(decompressedBytes' 0' decompressedBytes.Length)); " is 140.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreSetting,The length of the statement  "                var cursor = await _settingsDb.SeekAsync(_settingsDb.GetKeys().First()' name' DBReadFlags.AutoLock | DBReadFlags.WaitOnLock) ; " is 126.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,ClearHistory,The length of the statement  "            _historyDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\history_v2.ism"' DBCreateFlags.Supersede); " is 138.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,EnqueueAction,The length of the statement  "            await _actionsDb.InsertAsync("action"' JsonConvert.SerializeObject(new { Name = actionName' Parameters = parameters })); " is 120.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,DequeueAction,The length of the statement  "                var actionCursor = await _actionsDb.SeekAsync(_actionsDb.GetKeys().First()' "action"' DBReadFlags.AutoLock | DBReadFlags.WaitOnLock); " is 133.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,DequeueAction,The length of the statement  "                        var tpl = JsonConvert.DeserializeAnonymousType(actionCursor.GetString()' new { Name = ""' Parameters = new Dictionary<string' string>() }); " is 139.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreImage,The length of the statement  "                using (var apiCursor = await _imageDb.SeekAsync(_imageDb.GetKeys()[0]' uriBytes' DBReadFlags.AutoLock | DBReadFlags.WaitOnLock)) " is 128.
Long Statement,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreImages,The length of the statement  "                using (var apiCursor = await _imageAPIDb.SeekAsync(_imageAPIDb.GetKeys()[0]' uriBytes' DBReadFlags.AutoLock | DBReadFlags.WaitOnLock)) " is 134.
Long Statement,Baconography.NeutralServices,VideoService,D:\research\architectureSmells\repos1\Synergex_Baconography\NeutralServices\VideoService.cs,GetUrls,The length of the statement  "                    .Where(elem => elem.ContainsKey("itag") && elem.ContainsKey("type") && elem.ContainsKey("sig") && elem.ContainsKey("url")) " is 122.
Long Statement,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The length of the statement  "                    pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) }; " is 264.
Long Statement,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The length of the statement  "                    pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) }; " is 265.
Long Statement,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The length of the statement  "                    pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) }; " is 244.
Long Statement,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The length of the statement  "                    pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) }; " is 249.
Long Statement,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The length of the statement  "            x = pointArray[0].X; // TODO: taking this solves my horizontal nudging' but is a hack...keeping it though until a better solution " is 129.
Long Statement,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The length of the statement  "                else if (((placement == PlacementMode.Top) || (placement == PlacementMode.Bottom)) && (((x != target[0].X) && (x != target[1].X)) && (((x + width) != target[0].X) && ((x + width) != target[1].X)))) " is 197.
Long Statement,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PerformPlacement,The length of the statement  "            var calcH = this.CalculateHorizontalCenterOffset(x' ((FrameworkElement)_hostPopup.Child).ActualWidth' element.ActualWidth); " is 123.
Long Statement,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PerformPlacement,The length of the statement  "            var calcY = this.CalculateVerticalCenterOffset(y' ((FrameworkElement)_hostPopup.Child).ActualHeight' element.ActualHeight); " is 123.
Long Statement,BaconographyW8.Common,SettingsFlyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\SettingsFlyout.cs,OnApplyTemplate,The length of the statement  "                                                     FromHorizontalOffset = (SettingsPane.Edge == SettingsEdgeLocation.Right) ? CONTENT_HORIZONTAL_OFFSET : (CONTENT_HORIZONTAL_OFFSET * -1) " is 135.
Long Statement,BaconographyW8.Common,SettingsFlyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\SettingsFlyout.cs,OnLoaded,The length of the statement  "            _hostPopup.SetValue(Canvas.LeftProperty' SettingsPane.Edge == SettingsEdgeLocation.Right ? (_windowBounds.Width - _settingsWidth) : 0); " is 135.
Long Statement,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,SaveFileFromUriAsync,The length of the statement  "            var destinationFolder = await Windows.Storage.ApplicationData.Current.LocalFolder.CreateFolderAsync(localPath' CreationCollisionOption.OpenIfExists); " is 149.
Long Statement,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,SaveFileFromUriAsync,The length of the statement  "            return await SaveFileFromUriAsync(fileUri' localFileName' localPath' replaceIfExists ? NameCollisionOption.ReplaceExisting : NameCollisionOption.FailIfExists);  " is 159.
Long Statement,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImageAsync,The length of the statement  "                byte[] bytes = MergePixelArrays(transparentBytes' width' height' data.DetachPixelData()' outDecoder.PixelWidth' outDecoder.PixelHeight' widthOffset' heightOffset); " is 163.
Long Statement,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImage,The length of the statement  "            return await GenerateResizedImageAsync(inputFile as StorageFile' width' height' edgePadding' bottomPadding' replaceIfExists ? NameCollisionOption.ReplaceExisting : NameCollisionOption.FailIfExists); " is 198.
Long Statement,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateSecondaryTileForSubreddit,The length of the statement  "                    var rawImage = await _imagesService.SaveFileFromUriAsync(new Uri(subreddit.Data.HeaderImage)' subreddit.Data.DisplayName + ".jpg"' "Images"); " is 141.
Long Statement,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The length of the statement  "            text = text.Replace("&"' "&amp;").Replace("<"' "&lt;").Replace(">"' "&gt;").Replace("\""' "&quot;").Replace("'"' "&apos;"); " is 123.
Long Statement,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The length of the statement  "                largeImageFile = (await _imagesService.SaveFileFromUriAsync(largeImage' largeImage.LocalPath' "liveTiles")) as StorageFile; " is 123.
Long Statement,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The length of the statement  "                smallImageFile = (await _imagesService.SaveFileFromUriAsync(smallImage' smallImage.LocalPath' "liveTiles")) as StorageFile; " is 123.
Long Statement,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The length of the statement  "                    smallImageFile = (await _imagesService.SaveFileFromUriAsync(smallImage' smallImage.LocalPath' "liveTiles")) as StorageFile; " is 123.
Long Statement,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The length of the statement  "            if (smallImageFile != null && largeImageFile != null && !textIsLong && largeImageIsWide && !smallImageIsTall && !smallImageIsWide) " is 130.
Long Statement,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The length of the statement  "                var sizedWideLargeImage = await _imagesService.GenerateResizedImage(largeImageFile' 310' 150' 0' 0' true) as StorageFile; " is 121.
Long Statement,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The length of the statement  "                var sizedSquareLargeImage = await _imagesService.GenerateResizedImage(largeImageFile' 150' 150' 0' 0' true) as StorageFile; " is 123.
Long Statement,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The length of the statement  "                var sizedWideLargeImage = await _imagesService.GenerateResizedImage(largeImageFile' 310' 150' 0' 0' true) as StorageFile; " is 121.
Long Statement,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The length of the statement  "                var sizedSquareLargeImage = await _imagesService.GenerateResizedImage(largeImageFile' 150' 150' 0' 0' true) as StorageFile; " is 123.
Long Statement,BaconographyW8.PlatformServices,NotificationService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\NotificationService.cs,CreateErrorNotification,The length of the statement  "                        toastTextElements[0].AppendChild(toastXml.CreateTextNode("We're having a hard time connecting to reddit' you've been moved to offline mode")); " is 142.
Long Statement,BaconographyW8.PlatformServices,NotificationService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\NotificationService.cs,CreateErrorNotification,The length of the statement  "                        Messenger.Default.Send<ConnectionStatusMessage>(new ConnectionStatusMessage { IsOnline = false' UserInitiated = false }); " is 121.
Long Statement,BaconographyW8.PlatformServices,NotificationService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\NotificationService.cs,CreateErrorNotification,The length of the statement  "                toastTextElements[0].AppendChild(toastXml.CreateTextNode("We're having a hard time connecting to reddit' you might want to try again later or go into offline mode")); " is 166.
Long Statement,BaconographyW8.PlatformServices,SimpleHttpService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\SimpleHttpService.cs,SendPost,The length of the statement  "                getMeClientHandler.CookieContainer.Add(new Uri("http://www.reddit.com"' UriKind.Absolute)' new Cookie("reddit_session"' cookie)); " is 129.
Long Statement,BaconographyW8.PlatformServices,SimpleHttpService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\SimpleHttpService.cs,SendPost,The length of the statement  "            postClient.DefaultRequestHeaders.UserAgent.Add(new System.Net.Http.Headers.ProductInfoHeaderValue("Baconography_Windows_8_Client"' "1.0")); " is 139.
Long Statement,BaconographyW8.PlatformServices,SimpleHttpService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\SimpleHttpService.cs,SendGet,The length of the statement  "                getMeClientHandler.CookieContainer.Add(new Uri("http://www.reddit.com"' UriKind.Absolute)' new Cookie("reddit_session"' cookie)); " is 129.
Long Statement,BaconographyW8.PlatformServices,SimpleHttpService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\SimpleHttpService.cs,SendGet,The length of the statement  "            getClient.DefaultRequestHeaders.UserAgent.Add(new System.Net.Http.Headers.ProductInfoHeaderValue("Baconography_Windows_8_Client"' "1.0")); " is 138.
Long Statement,BaconographyW8.PlatformServices,SimpleHttpService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\SimpleHttpService.cs,SendPostForCookies,The length of the statement  "            postClient.DefaultRequestHeaders.UserAgent.Add(new System.Net.Http.Headers.ProductInfoHeaderValue("Baconography_Windows_8_Client"' "1.0")); " is 139.
Long Statement,BaconographyW8.PlatformServices,SimpleHttpService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\SimpleHttpService.cs,UnAuthedGet,The length of the statement  "            getClient.DefaultRequestHeaders.UserAgent.Add(new System.Net.Http.Headers.ProductInfoHeaderValue("Baconography_Windows_8_Client"' "1.0")); " is 138.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,Logout,The length of the statement  "            Messenger.Default.Send<UserLoggedInMessage>(new UserLoggedInMessage { CurrentUser = _currentUser' UserTriggered = true }); " is 122.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,InitImpl,The length of the statement  "            Messenger.Default.Send<UserLoggedInMessage>(new UserLoggedInMessage { CurrentUser = _currentUser' UserTriggered = false }); " is 123.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,AddStoredCredential,The length of the statement  "            var existingCredential = currentCredentials.FirstOrDefault(credential => credential.Username == newCredential.Username); " is 120.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,AddStoredCredential,The length of the statement  "                        var userCredentialsCursor = await userInfoDb.SelectAsync(userInfoDb.GetKeys().First()' "credentials"' DBReadFlags.AutoLock); " is 124.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,RemoveStoredCredential,The length of the statement  "                var userCredentialsCursor = await userInfoDb.SelectAsync(userInfoDb.GetKeys().First()' "credentials"' DBReadFlags.AutoLock); " is 124.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,RemoveStoredCredential,The length of the statement  "                var matchingWindowsCredential = windowsCredentials.FirstOrDefault(windowsCredential => string.Compare(windowsCredential.UserName' username' StringComparison.CurrentCultureIgnoreCase) == 0); " is 189.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,AddOrUpdateWindowsCredential,The length of the statement  "                var matchingWindowsCredential = windowsCredentials.FirstOrDefault(credential => string.Compare(credential.UserName' existingCredential.Username' StringComparison.CurrentCultureIgnoreCase) == 0); " is 194.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,AddOrUpdateWindowsCredential,The length of the statement  "                        passwordVault.Add(new Windows.Security.Credentials.PasswordCredential("Baconography"' existingCredential.Username' password)); " is 126.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,AddOrUpdateWindowsCredential,The length of the statement  "                    passwordVault.Add(new Windows.Security.Credentials.PasswordCredential("Baconography"' existingCredential.Username' password)); " is 126.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,AddOrUpdateWindowsCredential,The length of the statement  "                passwordVault.Add(new Windows.Security.Credentials.PasswordCredential("Baconography"' existingCredential.Username' password)); " is 126.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,GetStoredCredentialsImpl,The length of the statement  "                var userCredentialsCursor = await userInfoDb.SelectAsync(userInfoDb.GetKeys().First()' "credentials"' DBReadFlags.NoLock); " is 122.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,LoginWithCredentials,The length of the statement  "                var loggedInUser = new User { Username = credential.Username' LoginCookie = credential.LoginCookie' NeedsCaptcha = false }; " is 123.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,LoginWithCredentials,The length of the statement  "                    var matchingWindowsCredential = windowsCredentials.FirstOrDefault(windowsCredential => string.Compare(windowsCredential.UserName' credential.Username' StringComparison.CurrentCultureIgnoreCase) == 0); " is 200.
Long Statement,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,DoLogin,The length of the statement  "            var targetCredential = storedCredentials.FirstOrDefault(credential => string.Compare(credential.Username' username' StringComparison.CurrentCultureIgnoreCase) == 0); " is 165.
Long Statement,Baconography.PlatformServices.ImageAPI,Flickr,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Flickr.cs,GetImagesFromUri,The length of the statement  "                var apiURL = string.Format("http://api.flickr.com/services/rest/?method=flickr.photos.getSizes&api_key=81afa34d85f53254ff12a8cb73cba64d&photo_id={0}&format=json&nojsoncallback=1"' photoID); " is 189.
Long Statement,Baconography.PlatformServices.ImageAPI,Imgur,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Imgur.cs,GetImagesFromUri,The length of the statement  "						return new Tuple<string' string>[] { Tuple.Create(title' string.Format("http://i.imgur.com/{0}.gif"' groups[1].Value)) }; " is 121.
Long Statement,Baconography.PlatformServices.ImageAPI,Imgur,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Imgur.cs,GetImagesFromUri,The length of the statement  "							return Tuple.Create(string.IsNullOrWhiteSpace(caption) ? albumTitle : caption' (string)((JObject)e.GetValue("links")).GetValue("original")); " is 140.
Long Statement,Baconography.PlatformServices.ImageAPI,Memecrunch,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Memecrunch.cs,GetImagesFromUri,The length of the statement  "                return new Tuple<string' string>[] { Tuple.Create(title' string.Format("http://memecrunch.com/meme/{0}/{1}/image.png"' groups[1].Value' groups[2].Value ?? "null")) }; " is 166.
Long Statement,Baconography.PlatformServices.ImageAPI,Picsarus,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Picsarus.cs,GetImagesFromUri,The length of the statement  "                return new Tuple<string' string>[] { Tuple.Create(title' string.Format("http://www.picsarus.com/{0}.jpg"' groups[1].Value)) }; " is 126.
Complex Conditional,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The conditional expression  "((y != target[0].Y) && (y != target[1].Y)) && (((y + height) != target[0].Y) && ((y + height) != target[1].Y))"  is complex.
Complex Conditional,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The conditional expression  "((placement == PlacementMode.Top) || (placement == PlacementMode.Bottom)) && (((x != target[0].X) && (x != target[1].X)) && (((x + width) != target[0].X) && ((x + width) != target[1].X)))"  is complex.
Complex Conditional,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GetImagesFromUrl,The conditional expression  "filename.EndsWith(".jpg") || filename.EndsWith(".png") || filename.EndsWith(".jpeg") || filename.EndsWith(".gif")"  is complex.
Complex Conditional,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MightHaveImagesFromUrl,The conditional expression  "filename.EndsWith(".jpg") || url.EndsWith(".png") || url.EndsWith(".jpeg") || url.EndsWith(".gif")"  is complex.
Complex Conditional,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The conditional expression  "smallImageFile != null && largeImageFile != null && !textIsLong && largeImageIsWide && !smallImageIsTall && !smallImageIsWide"  is complex.
Empty Catch Block,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,StoreCommentMetadata,The method has an empty catch block.
Empty Catch Block,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,GetTopLevelComments,The method has an empty catch block.
Empty Catch Block,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,StoreSubreddit,The method has an empty catch block.
Empty Catch Block,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreComments,The method has an empty catch block.
Empty Catch Block,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreMessages,The method has an empty catch block.
Empty Catch Block,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreLinks,The method has an empty catch block.
Empty Catch Block,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveThing,The method has an empty catch block.
Empty Catch Block,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,SaveFileFromUriAsync,The method has an empty catch block.
Empty Catch Block,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImageAsync,The method has an empty catch block.
Empty Catch Block,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MightHaveImagesFromUrl,The method has an empty catch block.
Empty Catch Block,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,MaybeCreateTile,The method has an empty catch block.
Empty Catch Block,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateSecondaryTileForSubreddit,The method has an empty catch block.
Empty Catch Block,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,AddStoredCredential,The method has an empty catch block.
Empty Catch Block,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,RemoveStoredCredential,The method has an empty catch block.
Empty Catch Block,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,RemoveStoredCredential,The method has an empty catch block.
Empty Catch Block,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,GetStoredCredentialsImpl,The method has an empty catch block.
Empty Catch Block,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,LoginWithCredentials,The method has an empty catch block.
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,GetDBInstance,The following statement contains a magic number: var db = await DB.CreateAsync(commentsDatabase' DBCreateFlags.None' 0' new DBKey[]              {                  new DBKey(20' 0' DBKeyFlags.Alpha' "permalinkhash"' false' false' false' 0)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 1)              });
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,GetDBInstance,The following statement contains a magic number: var db = await DB.CreateAsync(commentsDatabase' DBCreateFlags.None' 0' new DBKey[]              {                  new DBKey(20' 0' DBKeyFlags.Alpha' "permalinkhash"' false' false' false' 0)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 1)              });
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,GetDBInstance,The following statement contains a magic number: var db = await DB.CreateAsync(commentsDatabase' DBCreateFlags.None' 0' new DBKey[]              {                  new DBKey(20' 0' DBKeyFlags.Alpha' "permalinkhash"' false' false' false' 0)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 1)              });
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,GetMetaDBInstance,The following statement contains a magic number: var db = await DB.CreateAsync(commentsMetaDatabase' DBCreateFlags.None' 36' new DBKey[]              {                  new DBKey(20' 0' DBKeyFlags.Alpha' "permalinkhash"' false' false' false' 0)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 1)              });
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,GetMetaDBInstance,The following statement contains a magic number: var db = await DB.CreateAsync(commentsMetaDatabase' DBCreateFlags.None' 36' new DBKey[]              {                  new DBKey(20' 0' DBKeyFlags.Alpha' "permalinkhash"' false' false' false' 0)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 1)              });
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,GetMetaDBInstance,The following statement contains a magic number: var db = await DB.CreateAsync(commentsMetaDatabase' DBCreateFlags.None' 36' new DBKey[]              {                  new DBKey(20' 0' DBKeyFlags.Alpha' "permalinkhash"' false' false' false' 0)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 1)              });
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,GetMetaDBInstance,The following statement contains a magic number: var db = await DB.CreateAsync(commentsMetaDatabase' DBCreateFlags.None' 36' new DBKey[]              {                  new DBKey(20' 0' DBKeyFlags.Alpha' "permalinkhash"' false' false' false' 0)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 1)              });
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,StoreComments,The following statement contains a magic number: var recordBytes = new byte[compressedBytes.Length + 28];
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,StoreComments,The following statement contains a magic number: Array.Copy(compressedBytes' 0' recordBytes' 28' compressedBytes.Length);
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,GetCommentMetadata,The following statement contains a magic number: return Tuple.Create(BitConverter.ToInt32(bytes' 28)' BitConverter.ToInt32(bytes' 32));
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,GetCommentMetadata,The following statement contains a magic number: return Tuple.Create(BitConverter.ToInt32(bytes' 28)' BitConverter.ToInt32(bytes' 32));
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,StoreCommentMetadata,The following statement contains a magic number: var recordBytes = new byte[36];
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,StoreCommentMetadata,The following statement contains a magic number: BitConverter.GetBytes(linkComments).CopyTo(recordBytes' 28);
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,StoreCommentMetadata,The following statement contains a magic number: BitConverter.GetBytes(actualComments).CopyTo(recordBytes' 32);
Magic Number,Baconography.NeutralServices.KitaroDB,Comments,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Comments.cs,GetTopLevelComments,The following statement contains a magic number: var decompressedBytes = compressor.Decompress(gottenBlob' 28);
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,CreateDB,The following statement contains a magic number: return await DB.CreateAsync(linksDatabase' DBCreateFlags.None' 0' new DBKey[]                  {                      new DBKey(20' 0' DBKeyFlags.Alpha' "main"' false' false' false' 0)'                      new DBKey(8' 8' DBKeyFlags.Alpha' "directid"' true' false' false' 1)'                      new DBKey(4' 16' DBKeyFlags.Alpha' "urlhash"' true' false' false' 2)'                      new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 3)'                      new DBKey(8' 28' DBKeyFlags.AutoSequence' "insertion_order"' false' false' false' 4)'                                    });
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,CreateDB,The following statement contains a magic number: return await DB.CreateAsync(linksDatabase' DBCreateFlags.None' 0' new DBKey[]                  {                      new DBKey(20' 0' DBKeyFlags.Alpha' "main"' false' false' false' 0)'                      new DBKey(8' 8' DBKeyFlags.Alpha' "directid"' true' false' false' 1)'                      new DBKey(4' 16' DBKeyFlags.Alpha' "urlhash"' true' false' false' 2)'                      new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 3)'                      new DBKey(8' 28' DBKeyFlags.AutoSequence' "insertion_order"' false' false' false' 4)'                                    });
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,CreateDB,The following statement contains a magic number: return await DB.CreateAsync(linksDatabase' DBCreateFlags.None' 0' new DBKey[]                  {                      new DBKey(20' 0' DBKeyFlags.Alpha' "main"' false' false' false' 0)'                      new DBKey(8' 8' DBKeyFlags.Alpha' "directid"' true' false' false' 1)'                      new DBKey(4' 16' DBKeyFlags.Alpha' "urlhash"' true' false' false' 2)'                      new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 3)'                      new DBKey(8' 28' DBKeyFlags.AutoSequence' "insertion_order"' false' false' false' 4)'                                    });
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,CreateDB,The following statement contains a magic number: return await DB.CreateAsync(linksDatabase' DBCreateFlags.None' 0' new DBKey[]                  {                      new DBKey(20' 0' DBKeyFlags.Alpha' "main"' false' false' false' 0)'                      new DBKey(8' 8' DBKeyFlags.Alpha' "directid"' true' false' false' 1)'                      new DBKey(4' 16' DBKeyFlags.Alpha' "urlhash"' true' false' false' 2)'                      new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 3)'                      new DBKey(8' 28' DBKeyFlags.AutoSequence' "insertion_order"' false' false' false' 4)'                                    });
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,CreateDB,The following statement contains a magic number: return await DB.CreateAsync(linksDatabase' DBCreateFlags.None' 0' new DBKey[]                  {                      new DBKey(20' 0' DBKeyFlags.Alpha' "main"' false' false' false' 0)'                      new DBKey(8' 8' DBKeyFlags.Alpha' "directid"' true' false' false' 1)'                      new DBKey(4' 16' DBKeyFlags.Alpha' "urlhash"' true' false' false' 2)'                      new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 3)'                      new DBKey(8' 28' DBKeyFlags.AutoSequence' "insertion_order"' false' false' false' 4)'                                    });
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,CreateDB,The following statement contains a magic number: return await DB.CreateAsync(linksDatabase' DBCreateFlags.None' 0' new DBKey[]                  {                      new DBKey(20' 0' DBKeyFlags.Alpha' "main"' false' false' false' 0)'                      new DBKey(8' 8' DBKeyFlags.Alpha' "directid"' true' false' false' 1)'                      new DBKey(4' 16' DBKeyFlags.Alpha' "urlhash"' true' false' false' 2)'                      new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 3)'                      new DBKey(8' 28' DBKeyFlags.AutoSequence' "insertion_order"' false' false' false' 4)'                                    });
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,CreateDB,The following statement contains a magic number: return await DB.CreateAsync(linksDatabase' DBCreateFlags.None' 0' new DBKey[]                  {                      new DBKey(20' 0' DBKeyFlags.Alpha' "main"' false' false' false' 0)'                      new DBKey(8' 8' DBKeyFlags.Alpha' "directid"' true' false' false' 1)'                      new DBKey(4' 16' DBKeyFlags.Alpha' "urlhash"' true' false' false' 2)'                      new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 3)'                      new DBKey(8' 28' DBKeyFlags.AutoSequence' "insertion_order"' false' false' false' 4)'                                    });
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,CreateDB,The following statement contains a magic number: return await DB.CreateAsync(linksDatabase' DBCreateFlags.None' 0' new DBKey[]                  {                      new DBKey(20' 0' DBKeyFlags.Alpha' "main"' false' false' false' 0)'                      new DBKey(8' 8' DBKeyFlags.Alpha' "directid"' true' false' false' 1)'                      new DBKey(4' 16' DBKeyFlags.Alpha' "urlhash"' true' false' false' 2)'                      new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 3)'                      new DBKey(8' 28' DBKeyFlags.AutoSequence' "insertion_order"' false' false' false' 4)'                                    });
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,CreateDB,The following statement contains a magic number: return await DB.CreateAsync(linksDatabase' DBCreateFlags.None' 0' new DBKey[]                  {                      new DBKey(20' 0' DBKeyFlags.Alpha' "main"' false' false' false' 0)'                      new DBKey(8' 8' DBKeyFlags.Alpha' "directid"' true' false' false' 1)'                      new DBKey(4' 16' DBKeyFlags.Alpha' "urlhash"' true' false' false' 2)'                      new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 3)'                      new DBKey(8' 28' DBKeyFlags.AutoSequence' "insertion_order"' false' false' false' 4)'                                    });
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,CreateDB,The following statement contains a magic number: return await DB.CreateAsync(linksDatabase' DBCreateFlags.None' 0' new DBKey[]                  {                      new DBKey(20' 0' DBKeyFlags.Alpha' "main"' false' false' false' 0)'                      new DBKey(8' 8' DBKeyFlags.Alpha' "directid"' true' false' false' 1)'                      new DBKey(4' 16' DBKeyFlags.Alpha' "urlhash"' true' false' false' 2)'                      new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 3)'                      new DBKey(8' 28' DBKeyFlags.AutoSequence' "insertion_order"' false' false' false' 4)'                                    });
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,CreateDB,The following statement contains a magic number: return await DB.CreateAsync(linksDatabase' DBCreateFlags.None' 0' new DBKey[]                  {                      new DBKey(20' 0' DBKeyFlags.Alpha' "main"' false' false' false' 0)'                      new DBKey(8' 8' DBKeyFlags.Alpha' "directid"' true' false' false' 1)'                      new DBKey(4' 16' DBKeyFlags.Alpha' "urlhash"' true' false' false' 2)'                      new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 3)'                      new DBKey(8' 28' DBKeyFlags.AutoSequence' "insertion_order"' false' false' false' 4)'                                    });
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,CreateDB,The following statement contains a magic number: return await DB.CreateAsync(linksDatabase' DBCreateFlags.None' 0' new DBKey[]                  {                      new DBKey(20' 0' DBKeyFlags.Alpha' "main"' false' false' false' 0)'                      new DBKey(8' 8' DBKeyFlags.Alpha' "directid"' true' false' false' 1)'                      new DBKey(4' 16' DBKeyFlags.Alpha' "urlhash"' true' false' false' 2)'                      new DBKey(8' 20' DBKeyFlags.AutoTime' "creation_timestamp"' false' false' false' 3)'                      new DBKey(8' 28' DBKeyFlags.AutoSequence' "insertion_order"' false' false' false' 4)'                                    });
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,StoreLink,The following statement contains a magic number: i < 8 && i < ((Link)link.Data).SubredditId.Length
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,StoreLink,The following statement contains a magic number: keySpace[i] = combinedSpace[i] = (byte)((Link)link.Data).Name[i - 8];
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,StoreLink,The following statement contains a magic number: i < 16 && i < (byte)((Link)link.Data).Name.Length + 8
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,StoreLink,The following statement contains a magic number: i < 16 && i < (byte)((Link)link.Data).Name.Length + 8
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,StoreLink,The following statement contains a magic number: hashBytes.CopyTo(combinedSpace' 16);
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,StoreLink,The following statement contains a magic number: hashBytes.CopyTo(keySpace' 16);
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,DeserializeCursor,The following statement contains a magic number: targetListing.Data.After = Encoding.UTF8.GetString(currentRecord' 0' 16);
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,LinksForSubreddit,The following statement contains a magic number: var keyspace = new byte[8];
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,LinksForSubreddit,The following statement contains a magic number: i < 8 && i < subredditId.Length
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,LinksForSubreddit,The following statement contains a magic number: var afterKeyspace = new byte[16];
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,LinksForSubreddit,The following statement contains a magic number: afterKeyspace[i] = (byte)after[i + 2];
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,LinksForSubreddit,The following statement contains a magic number: i < 16 && i < after.Length + 10
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,LinksForSubreddit,The following statement contains a magic number: i < 16 && i < after.Length + 10
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,LinksForSubreddit,The following statement contains a magic number: return await DeserializeCursor(linkCursor' 25);
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,AllLinks,The following statement contains a magic number: var afterKeyspace = new byte[16];
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,AllLinks,The following statement contains a magic number: i < 16 && i < after.Length
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,AllLinks,The following statement contains a magic number: return await DeserializeCursor(linkCursor' 25);
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,GetLink,The following statement contains a magic number: linkCursor = await _linksDB.SeekAsync(_linksDB.GetKeys()[2]' urlKeyspace' DBReadFlags.NoLock);
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,GetLink,The following statement contains a magic number: var microseconds = BitConverter.ToInt64(gottenBlob' 20);
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,GetLink,The following statement contains a magic number: var updatedTime = new DateTime(microseconds * 10).AddYears(1969);
Magic Number,Baconography.NeutralServices.KitaroDB,Links,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Links.cs,GetLink,The following statement contains a magic number: var updatedTime = new DateTime(microseconds * 10).AddYears(1969);
Magic Number,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,GetInstanceImpl,The following statement contains a magic number: var db = await DB.CreateAsync(subredditsDatabase' DBCreateFlags.None' ushort.MaxValue - 100' new DBKey[]              {                  new DBKey(24' 0' DBKeyFlags.Alpha' "name"' false' false' false' 0)'                  new DBKey(12' 24' DBKeyFlags.Alpha' "id"' false' false' false' 1)              });
Magic Number,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,GetInstanceImpl,The following statement contains a magic number: var db = await DB.CreateAsync(subredditsDatabase' DBCreateFlags.None' ushort.MaxValue - 100' new DBKey[]              {                  new DBKey(24' 0' DBKeyFlags.Alpha' "name"' false' false' false' 0)'                  new DBKey(12' 24' DBKeyFlags.Alpha' "id"' false' false' false' 1)              });
Magic Number,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,GetInstanceImpl,The following statement contains a magic number: var db = await DB.CreateAsync(subredditsDatabase' DBCreateFlags.None' ushort.MaxValue - 100' new DBKey[]              {                  new DBKey(24' 0' DBKeyFlags.Alpha' "name"' false' false' false' 0)'                  new DBKey(12' 24' DBKeyFlags.Alpha' "id"' false' false' false' 1)              });
Magic Number,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,GetInstanceImpl,The following statement contains a magic number: var db = await DB.CreateAsync(subredditsDatabase' DBCreateFlags.None' ushort.MaxValue - 100' new DBKey[]              {                  new DBKey(24' 0' DBKeyFlags.Alpha' "name"' false' false' false' 0)'                  new DBKey(12' 24' DBKeyFlags.Alpha' "id"' false' false' false' 1)              });
Magic Number,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,GenerateNameKeyspace,The following statement contains a magic number: i < 24 && i < name.Length
Magic Number,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,GenerateIdKeyspace,The following statement contains a magic number: i < 12 && i < id.Length
Magic Number,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,GenerateCombinedKeyspace,The following statement contains a magic number: i < 24 && i < name.Length
Magic Number,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,GenerateCombinedKeyspace,The following statement contains a magic number: keyspace[i + 24] = (byte)id[i];
Magic Number,Baconography.NeutralServices.KitaroDB,Subreddits,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\Subreddits.cs,GenerateCombinedKeyspace,The following statement contains a magic number: i < 12 && i < id.Length
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var sub = await DB.CreateAsync(subredditStatisticsPath' DBCreateFlags.None' 28' new DBKey[]              {                  new DBKey(12' 0' DBKeyFlags.Alpha' "subreddit_id"' false' false' false' 0)'                  new DBKey(4' 12' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 16' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var sub = await DB.CreateAsync(subredditStatisticsPath' DBCreateFlags.None' 28' new DBKey[]              {                  new DBKey(12' 0' DBKeyFlags.Alpha' "subreddit_id"' false' false' false' 0)'                  new DBKey(4' 12' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 16' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var sub = await DB.CreateAsync(subredditStatisticsPath' DBCreateFlags.None' 28' new DBKey[]              {                  new DBKey(12' 0' DBKeyFlags.Alpha' "subreddit_id"' false' false' false' 0)'                  new DBKey(4' 12' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 16' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var sub = await DB.CreateAsync(subredditStatisticsPath' DBCreateFlags.None' 28' new DBKey[]              {                  new DBKey(12' 0' DBKeyFlags.Alpha' "subreddit_id"' false' false' false' 0)'                  new DBKey(4' 12' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 16' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var sub = await DB.CreateAsync(subredditStatisticsPath' DBCreateFlags.None' 28' new DBKey[]              {                  new DBKey(12' 0' DBKeyFlags.Alpha' "subreddit_id"' false' false' false' 0)'                  new DBKey(4' 12' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 16' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var sub = await DB.CreateAsync(subredditStatisticsPath' DBCreateFlags.None' 28' new DBKey[]              {                  new DBKey(12' 0' DBKeyFlags.Alpha' "subreddit_id"' false' false' false' 0)'                  new DBKey(4' 12' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 16' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var sub = await DB.CreateAsync(subredditStatisticsPath' DBCreateFlags.None' 28' new DBKey[]              {                  new DBKey(12' 0' DBKeyFlags.Alpha' "subreddit_id"' false' false' false' 0)'                  new DBKey(4' 12' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 16' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var sub = await DB.CreateAsync(subredditStatisticsPath' DBCreateFlags.None' 28' new DBKey[]              {                  new DBKey(12' 0' DBKeyFlags.Alpha' "subreddit_id"' false' false' false' 0)'                  new DBKey(4' 12' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 16' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var sub = await DB.CreateAsync(subredditStatisticsPath' DBCreateFlags.None' 28' new DBKey[]              {                  new DBKey(12' 0' DBKeyFlags.Alpha' "subreddit_id"' false' false' false' 0)'                  new DBKey(4' 12' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 16' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var sub = await DB.CreateAsync(subredditStatisticsPath' DBCreateFlags.None' 28' new DBKey[]              {                  new DBKey(12' 0' DBKeyFlags.Alpha' "subreddit_id"' false' false' false' 0)'                  new DBKey(4' 12' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 16' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 20' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var domain = await DB.CreateAsync(domainStatisticsPath' DBCreateFlags.None' 20' new DBKey[]              {                  new DBKey(4' 0' DBKeyFlags.Unsigned' "domain_hash"' false' false' false' 0)'                  new DBKey(4' 4' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 8' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 12' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var domain = await DB.CreateAsync(domainStatisticsPath' DBCreateFlags.None' 20' new DBKey[]              {                  new DBKey(4' 0' DBKeyFlags.Unsigned' "domain_hash"' false' false' false' 0)'                  new DBKey(4' 4' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 8' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 12' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var domain = await DB.CreateAsync(domainStatisticsPath' DBCreateFlags.None' 20' new DBKey[]              {                  new DBKey(4' 0' DBKeyFlags.Unsigned' "domain_hash"' false' false' false' 0)'                  new DBKey(4' 4' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 8' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 12' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var domain = await DB.CreateAsync(domainStatisticsPath' DBCreateFlags.None' 20' new DBKey[]              {                  new DBKey(4' 0' DBKeyFlags.Unsigned' "domain_hash"' false' false' false' 0)'                  new DBKey(4' 4' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 8' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 12' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var domain = await DB.CreateAsync(domainStatisticsPath' DBCreateFlags.None' 20' new DBKey[]              {                  new DBKey(4' 0' DBKeyFlags.Unsigned' "domain_hash"' false' false' false' 0)'                  new DBKey(4' 4' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 8' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 12' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var domain = await DB.CreateAsync(domainStatisticsPath' DBCreateFlags.None' 20' new DBKey[]              {                  new DBKey(4' 0' DBKeyFlags.Unsigned' "domain_hash"' false' false' false' 0)'                  new DBKey(4' 4' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 8' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 12' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var domain = await DB.CreateAsync(domainStatisticsPath' DBCreateFlags.None' 20' new DBKey[]              {                  new DBKey(4' 0' DBKeyFlags.Unsigned' "domain_hash"' false' false' false' 0)'                  new DBKey(4' 4' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 8' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 12' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var domain = await DB.CreateAsync(domainStatisticsPath' DBCreateFlags.None' 20' new DBKey[]              {                  new DBKey(4' 0' DBKeyFlags.Unsigned' "domain_hash"' false' false' false' 0)'                  new DBKey(4' 4' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 8' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 12' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var domain = await DB.CreateAsync(domainStatisticsPath' DBCreateFlags.None' 20' new DBKey[]              {                  new DBKey(4' 0' DBKeyFlags.Unsigned' "domain_hash"' false' false' false' 0)'                  new DBKey(4' 4' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 8' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 12' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetInstanceImpl,The following statement contains a magic number: var domain = await DB.CreateAsync(domainStatisticsPath' DBCreateFlags.None' 20' new DBKey[]              {                  new DBKey(4' 0' DBKeyFlags.Unsigned' "domain_hash"' false' false' false' 0)'                  new DBKey(4' 4' DBKeyFlags.Unsigned' "links"' true' true' false' 1)'                  new DBKey(4' 8' DBKeyFlags.Unsigned' "comments"' true' true' false' 2)'                  new DBKey(8' 12' DBKeyFlags.AutoTime' "update_timestamp"' true' true' false' 3)              });
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GenerateCombinedSubredditKeyspace,The following statement contains a magic number: BitConverter.GetBytes(comments).CopyTo(keyspace' SubIdKeySpaceSize + 4);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GenerateCombinedDomainKeyspace,The following statement contains a magic number: BitConverter.GetBytes(comments).CopyTo(keyspace' DomainHashKeySpaceSize + 4);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,IncrementDomain,The following statement contains a magic number: links = BitConverter.ToUInt32(record.Skip(DomainHashKeySpaceSize).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,IncrementDomain,The following statement contains a magic number: comments = BitConverter.ToUInt32(record.Skip(DomainHashKeySpaceSize + 4).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,IncrementDomain,The following statement contains a magic number: comments = BitConverter.ToUInt32(record.Skip(DomainHashKeySpaceSize + 4).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,IncrementSubreddit,The following statement contains a magic number: links = BitConverter.ToUInt32(record.Skip(SubIdKeySpaceSize).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,IncrementSubreddit,The following statement contains a magic number: comments = BitConverter.ToUInt32(record.Skip(SubIdKeySpaceSize + 4).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,IncrementSubreddit,The following statement contains a magic number: comments = BitConverter.ToUInt32(record.Skip(SubIdKeySpaceSize + 4).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetSubredditAggregates,The following statement contains a magic number: uint links = BitConverter.ToUInt32(currentRecord.Skip(SubIdKeySpaceSize).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetSubredditAggregates,The following statement contains a magic number: uint comments = BitConverter.ToUInt32(currentRecord.Skip(SubIdKeySpaceSize + 4).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetSubredditAggregates,The following statement contains a magic number: uint comments = BitConverter.ToUInt32(currentRecord.Skip(SubIdKeySpaceSize + 4).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetDomainAggregates,The following statement contains a magic number: var links = BitConverter.ToUInt32(currentRecord.Skip(DomainHashKeySpaceSize).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetDomainAggregates,The following statement contains a magic number: var comments = BitConverter.ToUInt32(currentRecord.Skip(DomainHashKeySpaceSize + 4).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetDomainAggregates,The following statement contains a magic number: var comments = BitConverter.ToUInt32(currentRecord.Skip(DomainHashKeySpaceSize + 4).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetSubredditAggregateList,The following statement contains a magic number: agg.SubredditId = BitConverter.ToString(currentRecord.Take(12).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetSubredditAggregateList,The following statement contains a magic number: agg.LinkClicks = BitConverter.ToUInt32(currentRecord.Skip(SubIdKeySpaceSize).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetSubredditAggregateList,The following statement contains a magic number: agg.CommentClicks = BitConverter.ToUInt32(currentRecord.Skip(SubIdKeySpaceSize + 4).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetSubredditAggregateList,The following statement contains a magic number: agg.CommentClicks = BitConverter.ToUInt32(currentRecord.Skip(SubIdKeySpaceSize + 4).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetSubredditAggregateList,The following statement contains a magic number: agg.LastModified = new DateTime(BitConverter.ToInt64(currentRecord.Skip(20).Take(8).ToArray()' 0));
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetSubredditAggregateList,The following statement contains a magic number: agg.LastModified = new DateTime(BitConverter.ToInt64(currentRecord.Skip(20).Take(8).ToArray()' 0));
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetDomainAggregateList,The following statement contains a magic number: agg.DomainHash = BitConverter.ToUInt32(currentRecord.Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetDomainAggregateList,The following statement contains a magic number: agg.LinkClicks = BitConverter.ToUInt32(currentRecord.Skip(4).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetDomainAggregateList,The following statement contains a magic number: agg.LinkClicks = BitConverter.ToUInt32(currentRecord.Skip(4).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetDomainAggregateList,The following statement contains a magic number: agg.CommentClicks = BitConverter.ToUInt32(currentRecord.Skip(8).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetDomainAggregateList,The following statement contains a magic number: agg.CommentClicks = BitConverter.ToUInt32(currentRecord.Skip(8).Take(4).ToArray()' 0);
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetDomainAggregateList,The following statement contains a magic number: agg.LastModified = new DateTime(BitConverter.ToInt64(currentRecord.Skip(12).Take(8).ToArray()' 0));
Magic Number,Baconography.NeutralServices.KitaroDB,UsageStatistics,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\kitarodb\UsageStatistics.cs,GetDomainAggregateList,The following statement contains a magic number: agg.LastModified = new DateTime(BitConverter.ToInt64(currentRecord.Skip(12).Take(8).ToArray()' 0));
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The following statement contains a magic number: _actionsDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\actions_v2.ism"' DBCreateFlags.None'                      ushort.MaxValue - 100'                      new DBKey[] { new DBKey(8' 0' DBKeyFlags.KeyValue' "default"' true' false' false' 0) });
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The following statement contains a magic number: _actionsDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\actions_v2.ism"' DBCreateFlags.None'                      ushort.MaxValue - 100'                      new DBKey[] { new DBKey(8' 0' DBKeyFlags.KeyValue' "default"' true' false' false' 0) });
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The following statement contains a magic number: _blobStoreDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\blobs_v3.ism"' DBCreateFlags.None' 0'                      new DBKey[]                       {                           new DBKey(4' 0' DBKeyFlags.Integer' "default"' false' false' false' 0)'                          new DBKey(8' 4' DBKeyFlags.AutoTime' "timestamp"' false' true' false' 1)                       });
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The following statement contains a magic number: _blobStoreDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\blobs_v3.ism"' DBCreateFlags.None' 0'                      new DBKey[]                       {                           new DBKey(4' 0' DBKeyFlags.Integer' "default"' false' false' false' 0)'                          new DBKey(8' 4' DBKeyFlags.AutoTime' "timestamp"' false' true' false' 1)                       });
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The following statement contains a magic number: _blobStoreDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\blobs_v3.ism"' DBCreateFlags.None' 0'                      new DBKey[]                       {                           new DBKey(4' 0' DBKeyFlags.Integer' "default"' false' false' false' 0)'                          new DBKey(8' 4' DBKeyFlags.AutoTime' "timestamp"' false' true' false' 1)                       });
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,InitializeImpl,The following statement contains a magic number: _imageAPIDb = await DB.CreateAsync(Windows.Storage.ApplicationData.Current.LocalFolder.Path + "\\image_api_v1.ism"' DBCreateFlags.None' 64000);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,Clear,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,CleanupAll,The following statement contains a magic number: await Cleanup(_comments._commentsDB' 20' olderThan' token);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,CleanupAll,The following statement contains a magic number: await Cleanup(_comments._metaDB' 20' olderThan' token);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,CleanupAll,The following statement contains a magic number: await Cleanup(_links._linksDB' 20' olderThan' token);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,Cleanup,The following statement contains a magic number: var updatedTime = new DateTime(microseconds * 10).AddYears(1969);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,Cleanup,The following statement contains a magic number: var updatedTime = new DateTime(microseconds * 10).AddYears(1969);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,UserHasOfflineMessages,The following statement contains a magic number: var microseconds = BitConverter.ToInt64(gottenBlob' 4);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,UserHasOfflineMessages,The following statement contains a magic number: var updatedTime = new DateTime(microseconds * 10).AddYears(1969);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,UserHasOfflineMessages,The following statement contains a magic number: var updatedTime = new DateTime(microseconds * 10).AddYears(1969);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreOrderedThings,The following statement contains a magic number: var recordBytes = new byte[compressedBytes.Length + 12];
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreOrderedThings,The following statement contains a magic number: Array.Copy(compressedBytes' 0' recordBytes' 12' compressedBytes.Length);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreOrderedThings,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(key.GetHashCode())' recordBytes' 4);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreThing,The following statement contains a magic number: var recordBytes = new byte[thingBytes.Length + 12];
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreThing,The following statement contains a magic number: Array.Copy(thingBytes' 0' recordBytes' 12' thingBytes.Length);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,StoreThing,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(key.GetHashCode())' recordBytes' 4);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveThing,The following statement contains a magic number: var microseconds = BitConverter.ToInt64(gottenBlob' 4);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveThing,The following statement contains a magic number: var updatedTime = new DateTime(microseconds * 10).AddYears(1969);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveThing,The following statement contains a magic number: var updatedTime = new DateTime(microseconds * 10).AddYears(1969);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveThing,The following statement contains a magic number: return JsonConvert.DeserializeObject<Thing>(Encoding.UTF8.GetString(gottenBlob' 12' gottenBlob.Length));
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveOrderedThings,The following statement contains a magic number: var microseconds = BitConverter.ToInt64(gottenBlob' 4);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveOrderedThings,The following statement contains a magic number: var updatedTime = new DateTime(microseconds * 10).AddYears(1969);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveOrderedThings,The following statement contains a magic number: var updatedTime = new DateTime(microseconds * 10).AddYears(1969);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveOrderedThings,The following statement contains a magic number: var decompressedBytes = compressor.Decompress(gottenBlob' 12);
Magic Number,Baconography.NeutralServices,OfflineService,D:\research\architectureSmells\repos1\Synergex_Baconography\neutralservices\OfflineService.cs,RetrieveLink,The following statement contains a magic number: var link = await _links.GetLink(null' id' TimeSpan.FromDays(1024));
Magic Number,Baconography.NeutralServices,VideoService,D:\research\architectureSmells\repos1\Synergex_Baconography\NeutralServices\VideoService.cs,scoreFileType,The following statement contains a magic number: return 100;
Magic Number,Baconography.NeutralServices,VideoService,D:\research\architectureSmells\repos1\Synergex_Baconography\NeutralServices\VideoService.cs,SplitAmp,The following statement contains a magic number: strSubParts.Length < 2
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,OnInputPaneShowing,The following statement contains a magic number: focusedPoint.Y > (_windowBounds.Height - args.OccludedRect.Height - 50)
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PlacePopup,The following statement contains a magic number: double num18 = bounds.Top + (bounds.Height / 2.0);
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,GetTransformedPoints,The following statement contains a magic number: Point[] pointArray = new Point[4];
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,GetTransformedPoints,The following statement contains a magic number: pointArray[2] = gt.TransformPoint(new Point(0.0' element.ActualHeight));
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,GetTransformedPoints,The following statement contains a magic number: pointArray[3] = gt.TransformPoint(new Point(element.ActualWidth' element.ActualHeight));
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PerformPlacement,The following statement contains a magic number: switch (this.Placement)              {                  case PlacementMode.Bottom:                      popin.FromVerticalOffset = -10;                      popin.FromHorizontalOffset = 0;                      break;                  case PlacementMode.Left:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = 10;                      break;                  case PlacementMode.Right:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = -10;                      break;                  case PlacementMode.Top:                      popin.FromVerticalOffset = 10;                      popin.FromHorizontalOffset = 0;                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PerformPlacement,The following statement contains a magic number: switch (this.Placement)              {                  case PlacementMode.Bottom:                      popin.FromVerticalOffset = -10;                      popin.FromHorizontalOffset = 0;                      break;                  case PlacementMode.Left:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = 10;                      break;                  case PlacementMode.Right:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = -10;                      break;                  case PlacementMode.Top:                      popin.FromVerticalOffset = 10;                      popin.FromHorizontalOffset = 0;                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PerformPlacement,The following statement contains a magic number: switch (this.Placement)              {                  case PlacementMode.Bottom:                      popin.FromVerticalOffset = -10;                      popin.FromHorizontalOffset = 0;                      break;                  case PlacementMode.Left:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = 10;                      break;                  case PlacementMode.Right:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = -10;                      break;                  case PlacementMode.Top:                      popin.FromVerticalOffset = 10;                      popin.FromHorizontalOffset = 0;                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PerformPlacement,The following statement contains a magic number: switch (this.Placement)              {                  case PlacementMode.Bottom:                      popin.FromVerticalOffset = -10;                      popin.FromHorizontalOffset = 0;                      break;                  case PlacementMode.Left:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = 10;                      break;                  case PlacementMode.Right:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = -10;                      break;                  case PlacementMode.Top:                      popin.FromVerticalOffset = 10;                      popin.FromHorizontalOffset = 0;                      break;              }
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,CalculateHorizontalCenterOffset,The following statement contains a magic number: newX = this.HorizontalOffset + initialOffset - ((flyoutWidth / 2) - (elementWidth / 2));
Magic Number,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,CalculateHorizontalCenterOffset,The following statement contains a magic number: newX = this.HorizontalOffset + initialOffset - ((flyoutWidth / 2) - (elementWidth / 2));
Magic Number,BaconographyW8.Common,SettingsFlyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\SettingsFlyout.cs,OnInputPaneShowing,The following statement contains a magic number: focusedPoint.Y > (_windowBounds.Height - args.OccludedRect.Height - 50)
Magic Number,BaconographyW8.Common,SettingsFlyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\SettingsFlyout.cs,OnHeaderBrushColorChanged,The following statement contains a magic number: var yiq = ((newBrush.Color.R*299) + (newBrush.Color.G*587) + (newBrush.Color.B*114)) / 1000;
Magic Number,BaconographyW8.Common,SettingsFlyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\SettingsFlyout.cs,OnHeaderBrushColorChanged,The following statement contains a magic number: var yiq = ((newBrush.Color.R*299) + (newBrush.Color.G*587) + (newBrush.Color.B*114)) / 1000;
Magic Number,BaconographyW8.Common,SettingsFlyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\SettingsFlyout.cs,OnHeaderBrushColorChanged,The following statement contains a magic number: var yiq = ((newBrush.Color.R*299) + (newBrush.Color.G*587) + (newBrush.Color.B*114)) / 1000;
Magic Number,BaconographyW8.Common,SettingsFlyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\SettingsFlyout.cs,OnHeaderBrushColorChanged,The following statement contains a magic number: var yiq = ((newBrush.Color.R*299) + (newBrush.Color.G*587) + (newBrush.Color.B*114)) / 1000;
Magic Number,BaconographyW8.Common,SettingsFlyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\SettingsFlyout.cs,OnHeaderBrushColorChanged,The following statement contains a magic number: Debug.WriteLine(yiq >= 128 ? "black" : "white");
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The following statement contains a magic number: largeArray[(lWidth * rows + cols) * 4 + 0] = smallArray[(sWidth * sRows + sCols) * 4 + 0];
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The following statement contains a magic number: largeArray[(lWidth * rows + cols) * 4 + 0] = smallArray[(sWidth * sRows + sCols) * 4 + 0];
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The following statement contains a magic number: largeArray[(lWidth * rows + cols) * 4 + 1] = smallArray[(sWidth * sRows + sCols) * 4 + 1];
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The following statement contains a magic number: largeArray[(lWidth * rows + cols) * 4 + 1] = smallArray[(sWidth * sRows + sCols) * 4 + 1];
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The following statement contains a magic number: largeArray[(lWidth * rows + cols) * 4 + 2] = smallArray[(sWidth * sRows + sCols) * 4 + 2];
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The following statement contains a magic number: largeArray[(lWidth * rows + cols) * 4 + 2] = smallArray[(sWidth * sRows + sCols) * 4 + 2];
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The following statement contains a magic number: largeArray[(lWidth * rows + cols) * 4 + 2] = smallArray[(sWidth * sRows + sCols) * 4 + 2];
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The following statement contains a magic number: largeArray[(lWidth * rows + cols) * 4 + 2] = smallArray[(sWidth * sRows + sCols) * 4 + 2];
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The following statement contains a magic number: largeArray[(lWidth * rows + cols) * 4 + 3] = smallArray[(sWidth * sRows + sCols) * 4 + 3];
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The following statement contains a magic number: largeArray[(lWidth * rows + cols) * 4 + 3] = smallArray[(sWidth * sRows + sCols) * 4 + 3];
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The following statement contains a magic number: largeArray[(lWidth * rows + cols) * 4 + 3] = smallArray[(sWidth * sRows + sCols) * 4 + 3];
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MergePixelArrays,The following statement contains a magic number: largeArray[(lWidth * rows + cols) * 4 + 3] = smallArray[(sWidth * sRows + sCols) * 4 + 3];
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImageAsync,The following statement contains a magic number: float nPercentW = (((float)width - (edgePadding * 2)) / (float)decoder.PixelWidth);
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImageAsync,The following statement contains a magic number: float nPercentH = (((float)height - (edgePadding * 2)) / (float)decoder.PixelHeight);
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImageAsync,The following statement contains a magic number: bounds.X = (encoder.BitmapTransform.ScaledWidth - width) / 2;
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImageAsync,The following statement contains a magic number: bounds.Y = (encoder.BitmapTransform.ScaledHeight - height) / 2;
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImageAsync,The following statement contains a magic number: uint heightOffset = (height - outDecoder.PixelHeight) / 2 - bottomPadding;
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImageAsync,The following statement contains a magic number: uint widthOffset = (width - outDecoder.PixelWidth) / 2;
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImageAsync,The following statement contains a magic number: outEncoder.SetPixelData(BitmapPixelFormat.Bgra8' BitmapAlphaMode.Straight' width' height' 72.0' 72.0' bytes);
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,GenerateResizedImageAsync,The following statement contains a magic number: outEncoder.SetPixelData(BitmapPixelFormat.Bgra8' BitmapAlphaMode.Straight' width' height' 72.0' 72.0' bytes);
Magic Number,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,ImageBytesFromUrl,The following statement contains a magic number: await Task.Delay(500);
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,MaybeCreateTile,The following statement contains a magic number: _tileCreationDates.Count >= 5 && (DateTime.Now - _tileCreationDates.First()).TotalMinutes < 14
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,MaybeCreateTile,The following statement contains a magic number: _tileCreationDates.Count >= 5 && (DateTime.Now - _tileCreationDates.First()).TotalMinutes < 14
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,MaybeCreateTile,The following statement contains a magic number: _tileCreationDates.Count >= 5
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateSecondaryTileForSubreddit,The following statement contains a magic number: var wideImage = await _imagesService.GenerateResizedImage(rawImage' 310' 150) as StorageFile;
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateSecondaryTileForSubreddit,The following statement contains a magic number: var wideImage = await _imagesService.GenerateResizedImage(rawImage' 310' 150) as StorageFile;
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateSecondaryTileForSubreddit,The following statement contains a magic number: var squareImage = await _imagesService.GenerateResizedImage(rawImage' 150' 150) as StorageFile;
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateSecondaryTileForSubreddit,The following statement contains a magic number: var squareImage = await _imagesService.GenerateResizedImage(rawImage' 150' 150) as StorageFile;
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The following statement contains a magic number: bool textIsLong = text.Length > 42;
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The following statement contains a magic number: largeImageIsTall = imageRatio < .9;
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The following statement contains a magic number: largeImageIsWide = imageRatio > 1.34;
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The following statement contains a magic number: smallImageIsTall = smallImageRatio < .9;
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The following statement contains a magic number: smallImageIsWide = smallImageRatio > 1.34;
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The following statement contains a magic number: var sizedWideLargeImage = await _imagesService.GenerateResizedImage(largeImageFile' 310' 150' 0' 0' true) as StorageFile;
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The following statement contains a magic number: var sizedWideLargeImage = await _imagesService.GenerateResizedImage(largeImageFile' 310' 150' 0' 0' true) as StorageFile;
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The following statement contains a magic number: var sizedSquareLargeImage = await _imagesService.GenerateResizedImage(largeImageFile' 150' 150' 0' 0' true) as StorageFile;
Magic Number,BaconographyW8.PlatformServices,LiveTileService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\LiveTileService.cs,CreateTile,The following statement contains a magic number: var sizedSquareLargeImage = await _imagesService.GenerateResizedImage(largeImageFile' 150' 150' 0' 0' true) as StorageFile;
Magic Number,BaconographyW8.PlatformServices,SimpleHttpService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\SimpleHttpService.cs,ThrottleRequests,The following statement contains a magic number: await Task.Delay(2000 - (int)offset.TotalMilliseconds);
Magic Number,BaconographyW8.PlatformServices,SimpleHttpService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\SimpleHttpService.cs,ThrottleRequests,The following statement contains a magic number: offset.TotalMilliseconds < 2000
Magic Number,BaconographyW8.PlatformServices,SimpleHttpService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\SimpleHttpService.cs,ThrottleRequests,The following statement contains a magic number: await Task.Delay((60 - (int)overallOffset.TotalSeconds) * 1000);
Magic Number,BaconographyW8.PlatformServices,SimpleHttpService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\SimpleHttpService.cs,ThrottleRequests,The following statement contains a magic number: await Task.Delay((60 - (int)overallOffset.TotalSeconds) * 1000);
Magic Number,BaconographyW8.PlatformServices,SimpleHttpService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\SimpleHttpService.cs,ThrottleRequests,The following statement contains a magic number: overallOffset.TotalSeconds < 60
Magic Number,BaconographyW8.PlatformServices,SimpleHttpService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\SimpleHttpService.cs,ThrottleRequests,The following statement contains a magic number: _requestSetCount > 30
Magic Number,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,GetUserInfoDB,The following statement contains a magic number: _userInfoDb = await DB.CreateAsync(userInfoDbPath' DBCreateFlags.None' ushort.MaxValue - 100'                      new DBKey[] { new DBKey(8' 0' DBKeyFlags.KeyValue' "default"' true' false' false' 0) });
Magic Number,BaconographyW8.PlatformServices,UserService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\UserService.cs,GetUserInfoDB,The following statement contains a magic number: _userInfoDb = await DB.CreateAsync(userInfoDbPath' DBCreateFlags.None' ushort.MaxValue - 100'                      new DBKey[] { new DBKey(8' 0' DBKeyFlags.KeyValue' "default"' true' false' false' 0) });
Magic Number,Baconography.PlatformServices.ImageAPI,Flickr,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Flickr.cs,GetImagesFromUri,The following statement contains a magic number: groups.Count > 2 && string.IsNullOrWhiteSpace(groups[2].Value)
Magic Number,Baconography.PlatformServices.ImageAPI,Flickr,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Flickr.cs,GetImagesFromUri,The following statement contains a magic number: groups.Count > 2 && string.IsNullOrWhiteSpace(groups[2].Value)
Magic Number,Baconography.PlatformServices.ImageAPI,Imgur,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Imgur.cs,GetImagesFromUri,The following statement contains a magic number: groups.Count > 2 && string.IsNullOrWhiteSpace(groups[2].Value)
Magic Number,Baconography.PlatformServices.ImageAPI,Imgur,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Imgur.cs,GetImagesFromUri,The following statement contains a magic number: groups.Count > 2 && string.IsNullOrWhiteSpace(groups[2].Value)
Magic Number,Baconography.PlatformServices.ImageAPI,Memecrunch,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Memecrunch.cs,GetImagesFromUri,The following statement contains a magic number: return new Tuple<string' string>[] { Tuple.Create(title' string.Format("http://memecrunch.com/meme/{0}/{1}/image.png"' groups[1].Value' groups[2].Value ?? "null")) };
Magic Number,Baconography.PlatformServices.ImageAPI,Minus,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Minus.cs,GetImagesFromUri,The following statement contains a magic number: groups.Count > 2 && string.IsNullOrWhiteSpace(groups[2].Value)
Magic Number,Baconography.PlatformServices.ImageAPI,Minus,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImageAPI\Minus.cs,GetImagesFromUri,The following statement contains a magic number: groups.Count > 2 && string.IsNullOrWhiteSpace(groups[2].Value)
Missing Default,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PerformPlacement,The following switch statement is missing a default case: switch (placement)              {                  case PlacementMode.Bottom:                  case PlacementMode.Left:                  case PlacementMode.Right:                  case PlacementMode.Top:                      Point[] target = GetTransformedPoints(element' isRTL' element);                      Point[] menu = GetTransformedPoints((FrameworkElement)_hostPopup.Child' isRTL' element);                      if (menu[0].X > menu[1].X)                      {                          return;                      }                      Point p2 = PlacePopup(_windowBounds' target' menu' placement);                      x = p2.X;                      if (isRTL)                      {                          // TODO: Handle RTL - PerformPlacement                          //x = _windowBounds.Width - x;                          //this._hostPopup.VerticalOffset = y;                          //this._hostPopup.HorizontalOffset = x;                          //return;                      }                      y = p2.Y;                      break;                  case PlacementMode.Mouse:                      throw new NotImplementedException("Mouse PlacementMode is not implemented.");              }
Missing Default,BaconographyW8.Common,Flyout,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\Common\Flyout.cs,PerformPlacement,The following switch statement is missing a default case: switch (this.Placement)              {                  case PlacementMode.Bottom:                      popin.FromVerticalOffset = -10;                      popin.FromHorizontalOffset = 0;                      break;                  case PlacementMode.Left:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = 10;                      break;                  case PlacementMode.Right:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = -10;                      break;                  case PlacementMode.Top:                      popin.FromVerticalOffset = 10;                      popin.FromHorizontalOffset = 0;                      break;              }
Missing Default,BaconographyW8.PlatformServices,ImagesService,D:\research\architectureSmells\repos1\Synergex_Baconography\BaconographyW8Core\PlatformServices\ImagesService.cs,MightHaveImagesFromUrl,The following switch statement is missing a default case: switch (targetHost)                      {                          case "imgur.com":                          case "min.us":                          case "www.quickmeme.com":                          case "i.qkme.me":                          case "quickmeme.com":                          case "qkme.me":                          case "memecrunch.com":                          case "flickr.com":                              return true;                      }
