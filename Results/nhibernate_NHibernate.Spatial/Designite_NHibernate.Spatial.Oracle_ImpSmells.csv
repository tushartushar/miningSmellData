Implementation smell,Namespace,Class,File,Method,Description
Long Method,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialCreateString,The method has 74 lines of code.
Long Method,NHibernate.Spatial.MGeometries,MLineString,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MLineString.cs,GetCoordinatesBetween,The method has 70 lines of code.
Complex Method,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialAnalysisString,Cyclomatic complexity of the method is 11
Complex Method,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialRelationString,Cyclomatic complexity of the method is 11
Complex Method,NHibernate.Spatial.MGeometries,MCoordinate,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MCoordinate.cs,SetOrdinate,Cyclomatic complexity of the method is 14
Complex Method,NHibernate.Spatial.MGeometries,MCoordinateSequence,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MCoordinateSequence.cs,SetOrdinate,Cyclomatic complexity of the method is 14
Complex Method,NHibernate.Spatial.MGeometries,MLineString,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MLineString.cs,GetClosestPoint,Cyclomatic complexity of the method is 7
Complex Method,NHibernate.Spatial.MGeometries,MLineString,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MLineString.cs,GetCoordinatesBetween,Cyclomatic complexity of the method is 13
Complex Method,NHibernate.Spatial.MGeometries,MultiMLineString,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MultiMLineString.cs,DetermineMonotone,Cyclomatic complexity of the method is 12
Complex Method,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,Cyclomatic complexity of the method is 7
Complex Method,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ReadGeometry,Cyclomatic complexity of the method is 8
Complex Method,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ConvertOrdinateArray,Cyclomatic complexity of the method is 7
Complex Method,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,Linearize,Cyclomatic complexity of the method is 8
Complex Method,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,WriteGeometry,Cyclomatic complexity of the method is 8
Long Parameter List,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterSpatialFunction,The method has 4 parameters.
Long Parameter List,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialRelateString,The method has 5 parameters.
Long Parameter List,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialRelationString,The method has 4 parameters.
Long Parameter List,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialFilterString,The method has 5 parameters.
Long Parameter List,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialCreateString,The method has 7 parameters.
Long Parameter List,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialCreateString,The method has 5 parameters.
Long Parameter List,NHibernate.Spatial.MGeometries,MCoordinate,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MCoordinate.cs,MCoordinate,The method has 4 parameters.
Long Parameter List,NHibernate.Spatial.MGeometries,MCoordinate,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MCoordinate.cs,Create3dWithMeasure,The method has 4 parameters.
Long Parameter List,NHibernate.Spatial.Oracle,ElementInfo,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementInfo.cs,SetElement,The method has 4 parameters.
Long Parameter List,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,Circle,The method has 4 parameters.
Long Parameter List,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,Circle,The method has 6 parameters.
Long Parameter List,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,LinearizeArc,The method has 7 parameters.
Long Parameter List,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,LinearizeArc,The method has 6 parameters.
Long Parameter List,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,LinearizeCircle,The method has 6 parameters.
Long Parameter List,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,LinearizeArc,The method has 4 parameters.
Long Parameter List,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,Linearize,The method has 4 parameters.
Long Parameter List,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertAddCoordinates,The method has 4 parameters.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterSpatialFunction,The length of the statement  "	RegisterFunction (SpatialDialect.HqlPrefix + standardName' new SpatialMethodSafeFunction (dialectName' returnedType' allowedArgsCount)); " is 136.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterSpatialFunctionStatic,The length of the statement  "	RegisterFunction (SpatialDialect.HqlPrefix + standardName' new SpatialStandardSafeFunction ("geometry::" + dialectName' returnedType' allowedArgsCount)); " is 153.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialAnalysisString,The length of the statement  "		if (analysis == SpatialAnalysis.Buffer && !(extraArgument is Parameter || new SqlString (Parameter.Placeholder).Equals (extraArgument))) { " is 138.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialAnalysisString,The length of the statement  "		return new SqlStringBuilder ().AddObject (geometry).Add (".ST").Add (analysis.ToString ()).Add ("(").AddObject (extraArgument).Add (")").ToSqlString (); " is 152.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialValidationString,The length of the statement  "	return new SqlStringBuilder ().AddObject (geometry).Add (".ST").Add (validation.ToString ()).Add ("()").Add (criterion ? " = 1" : "").ToSqlString (); " is 149.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialRelationString,The length of the statement  "			builder.AddObject (geometry).Add (".STRelate(").AddObject (anotherGeometry).Add ("' '").Add (patterns [i]).Add ("') = 1").ToSqlString (); " is 137.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialRelationString,The length of the statement  "		return new SqlStringBuilder (8).AddObject (geometry).Add (".ST").Add (relation.ToString ()).Add ("(").AddObject (anotherGeometry).Add (")").Add (criterion ? " = 1" : "").ToSqlString (); " is 185.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialFilterString,The length of the statement  "	return new SqlStringBuilder (6).Add (tableAlias).Add (".").Add (geometryColumnName).Add (".Filter(").AddParameter ().Add (") = 1").ToSqlString (); " is 146.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialCreateString,The length of the statement  "                "' this.QuoteSchema (schema)' this.Quote (GeometryColumnsViewName)' this.MultipleQueriesSeparator' viewScript.Replace ("'"' "''")); " is 131.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialCreateString,The length of the statement  "	builder.AppendFormat ("ALTER TABLE {0}{1} DROP COLUMN {2}"' quotedSchema' this.QuoteForTableName (table)' this.QuoteForColumnName (column)); " is 140.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialCreateString,The length of the statement  "	builder.AppendFormat ("ALTER TABLE {0}{1} ADD {2} MDSYS.SDO_GEOMETRY"' quotedSchema' this.QuoteForTableName (table)' this.QuoteForColumnName (column)' srid' subtype); " is 166.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialCreateString,The length of the statement  "		builder.AppendFormat ("EXECUTE('ALTER TABLE {0}{1} WITH CHECK ADD  CONSTRAINT {2} CHECK ({3}.{4} = {5})')"' quotedSchema' this.QuoteForTableName (table)' this.Quote ("CK_NHSP_" + table + "_" + column + "_SRID")' this.QuoteForColumnName (column)' this.Quote ("STSrid")' srid); " is 275.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialCreateString,The length of the statement  "		builder.AppendFormat ("ALTER TABLE {0}{1} WITH CHECK ADD  CONSTRAINT {2} CHECK ({3}.{4}() = '{5}')"' quotedSchema' this.QuoteForTableName (table)' this.Quote ("CK_NHSP_" + table + "_" + column + "_TYPE")' this.QuoteForColumnName (column)' this.Quote ("STGeometryType")' subtype); " is 279.
Long Statement,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialDropString,The length of the statement  "	builder.AppendFormat ("ALTER TABLE {0}{1} DROP COLUMN {2}"' quotedSchema' this.QuoteForTableName (table)' this.QuoteForColumnName (column)); " is 140.
Long Statement,NHibernate.Spatial.MGeometries,MLineString,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MLineString.cs,GetMaxM,The length of the statement  "		} else if (this.GetMeasureDirection () == MGeometryType.Decreasing || this.GetMeasureDirection () == MGeometryType.Constant) { " is 126.
Long Statement,NHibernate.Spatial.MGeometries,MLineString,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MLineString.cs,GetCoordinatesBetween,The length of the statement  "					MCoordinate mc = new MCoordinate (mco1.X + r * (mco2.X - mco1.X)' mco1.Y + r * (mco2.Y - mco1.Y)' mco1.Z + r * (mco2.Z - mco1.Z)' minM); " is 136.
Long Statement,NHibernate.Spatial.MGeometries,MLineString,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MLineString.cs,GetCoordinatesBetween,The length of the statement  "				MCoordinate mc = new MCoordinate (mco1.X + r * (mco2.X - mco1.X)' mco1.Y + r * (mco2.Y - mco1.Y)' mco1.Z + r * (mco2.Z - mco1.Z)' maxM); " is 136.
Long Statement,NHibernate.Spatial.MGeometries,MLineString,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MLineString.cs,GetMinM,The length of the statement  "		} else if (this.GetMeasureDirection () == MGeometryType.Decreasing || this.GetMeasureDirection () == MGeometryType.Constant) { " is 126.
Long Statement,NHibernate.Spatial.MGeometries,MultiMLineString,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MultiMLineString.cs,DetermineMonotone,The length of the statement  "		if (!ml.IsMonotone (false) || (ml.GetMeasureDirection () != mdir && !(ml.GetMeasureDirection () == MGeometryType.Constant))) { " is 126.
Long Statement,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,InitThreePointCircle,The length of the statement  "	if ((Math.Abs (a13) < smallNumber && Math.Abs (b13) < smallNumber) || (Math.Abs (a13) < smallNumber && Math.Abs (b13) < smallNumber)) { " is 135.
Long Statement,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ReadMultiLine,The length of the statement  "	IMultiLineString mls = lrs ? factory.CreateMultiLineString ((MLineString[])lines) : factory.CreateMultiLineString (lines); " is 122.
Long Statement,NHibernate.Spatial.Type,OracleGeometryType,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Type\OracleGeometryType.cs,FromGeometry,The length of the statement  "			if (ex.Message == "24117: The LineString input is not valid because it does not have enough distinct points. A LineString must have at least two distinct points." || ex.Message == "24305: The Polygon input is not valid because the ring does not have enough distinct points. Each ring of a polygon must contain at least three distinct points.") { " is 345.
Complex Conditional,NHibernate.Spatial.MGeometries,MLineString,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MLineString.cs,GetCoordinateAtM,The conditional expression  "(mval [i - 1] <= m && m <= mval [i]) || (mval [i] <= m && m <= mval [i - 1])"  is complex.
Complex Conditional,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,InitThreePointCircle,The conditional expression  "(Math.Abs (a13) < smallNumber && Math.Abs (b13) < smallNumber) || (Math.Abs (a13) < smallNumber && Math.Abs (b13) < smallNumber)"  is complex.
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunction ("GeometryN"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunction ("InteriorRingN"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunction ("PointN"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunction ("Simplify"' "Reduce"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunction ("Transform"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("GeomCollFromText"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("GeomCollFromWKB"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("GeomFromText"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("GeomFromWKB"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("LineFromText"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("LineFromWKB"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("PointFromText"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("PointFromWKB"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("PolyFromText"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("PolyFromWKB"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("MLineFromText"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("MLineFromWKB"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("MPointFromText"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("MPointFromWKB"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("MPolyFromText"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunctionStatic ("MPolyFromWKB"' 2);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,RegisterFunctions,The following statement contains a magic number: RegisterSpatialFunction ("Relate"' NHibernateUtil.Boolean' 3);  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialRelationString,The following statement contains a magic number: switch (relation) {  case SpatialRelation.Covers:  	string[] patterns = new string[] {  		"T*****FF*"'  		"*T****FF*"'  		"***T**FF*"'  		"****T*FF*"'  	};  	SqlStringBuilder builder = new SqlStringBuilder ();  	builder.Add ("(CASE WHEN ");  	for (int i = 0; i < patterns.Length; i++) {  		if (i > 0)  			builder.Add (" OR ");  		builder.AddObject (geometry).Add (".STRelate(").AddObject (anotherGeometry).Add ("' '").Add (patterns [i]).Add ("') = 1").ToSqlString ();  	}  	builder.Add (" THEN 1 ELSE 0 END)");  	builder.Add (criterion ? " = 1" : "");  	return builder.ToSqlString ();  case SpatialRelation.CoveredBy:  	return GetSpatialRelationString (anotherGeometry' SpatialRelation.Covers' geometry' criterion);  default:  	return new SqlStringBuilder (8).AddObject (geometry).Add (".ST").Add (relation.ToString ()).Add ("(").AddObject (anotherGeometry).Add (")").Add (criterion ? " = 1" : "").ToSqlString ();  }  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialRelationString,The following statement contains a magic number: return new SqlStringBuilder (8).AddObject (geometry).Add (".ST").Add (relation.ToString ()).Add ("(").AddObject (anotherGeometry).Add (")").Add (criterion ? " = 1" : "").ToSqlString ();  
Magic Number,NHibernate.Spatial.Dialect,OracleSpatialDialect,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Dialect\OracleSpatialDialect.cs,GetSpatialFilterString,The following statement contains a magic number: return new SqlStringBuilder (6).Add (tableAlias).Add (".").Add (geometryColumnName).Add (".Filter(").AddParameter ().Add (") = 1").ToSqlString ();  
Magic Number,NHibernate.Spatial.Oracle,ElementInfo,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementInfo.cs,ElementInfo,The following statement contains a magic number: this.Elements = new decimal[3 * size];  
Magic Number,NHibernate.Spatial.Oracle,ElementInfo,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementInfo.cs,GetNumCompounds,The following statement contains a magic number: if (this.GetElementType (index).IsCompound ()) {  	var startIndexOfTriplet = index * 3;  	return Convert.ToInt32 (this.Elements [startIndexOfTriplet + 2]);  }  
Magic Number,NHibernate.Spatial.Oracle,ElementInfo,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementInfo.cs,GetNumCompounds,The following statement contains a magic number: if (this.GetElementType (index).IsCompound ()) {  	var startIndexOfTriplet = index * 3;  	return Convert.ToInt32 (this.Elements [startIndexOfTriplet + 2]);  }  
Magic Number,NHibernate.Spatial.Oracle,ElementInfo,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementInfo.cs,GetNumCompounds,The following statement contains a magic number: return Convert.ToInt32 (this.Elements [startIndexOfTriplet + 2]);  
Magic Number,NHibernate.Spatial.Oracle,ElementInfo,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementInfo.cs,SetElement,The following statement contains a magic number: this.Elements [startIndexOfTriplet + 2] = et.IsCompound () ? new decimal (numCompounds) : et.Interpretation ();  
Magic Number,NHibernate.Spatial.Oracle,ElementInfo,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementInfo.cs,GetElement,The following statement contains a magic number: if (this.GetElementType (index).IsCompound ()) {  	var numCompounds = this.GetNumCompounds (index);  	element = new decimal[numCompounds + 1];  } else {  	element = new decimal[3];  }  
Magic Number,NHibernate.Spatial.Oracle,ElementInfo,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementInfo.cs,GetElement,The following statement contains a magic number: element = new decimal[3];  
Magic Number,NHibernate.Spatial.Oracle,SdoElementType,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementType.cs,SdoElementType,The following statement contains a magic number: this.Interpretation = 2;  
Magic Number,NHibernate.Spatial.Oracle,ElementTypes,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementType.cs,IsLine,The following statement contains a magic number: return (attr.EType == 2 || attr.EType == 4);  
Magic Number,NHibernate.Spatial.Oracle,ElementTypes,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementType.cs,IsLine,The following statement contains a magic number: return (attr.EType == 2 || attr.EType == 4);  
Magic Number,NHibernate.Spatial.Oracle,ElementTypes,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementType.cs,IsInteriorRing,The following statement contains a magic number: return (attr.EType == 2003 || attr.EType == 2005);  
Magic Number,NHibernate.Spatial.Oracle,ElementTypes,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementType.cs,IsInteriorRing,The following statement contains a magic number: return (attr.EType == 2003 || attr.EType == 2005);  
Magic Number,NHibernate.Spatial.Oracle,ElementTypes,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementType.cs,IsExteriorRing,The following statement contains a magic number: return (attr.EType == 1003 || attr.EType == 1005);  
Magic Number,NHibernate.Spatial.Oracle,ElementTypes,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementType.cs,IsExteriorRing,The following statement contains a magic number: return (attr.EType == 1003 || attr.EType == 1005);  
Magic Number,NHibernate.Spatial.Oracle,ElementTypes,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementType.cs,IsArcSegment,The following statement contains a magic number: return attr.Interpretation == 2;  
Magic Number,NHibernate.Spatial.Oracle,ElementTypes,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementType.cs,IsRect,The following statement contains a magic number: return attr.Interpretation == 3;  
Magic Number,NHibernate.Spatial.Oracle,ElementTypes,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\ElementType.cs,IsCircle,The following statement contains a magic number: return attr.Interpretation == 4;  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,Circle,The following statement contains a magic number: center.X = Math.Min (xRight' xLeft) + side / 2;  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,Circle,The following statement contains a magic number: center.Y = Math.Min (yUpper' yLower) + side / 2;  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,Circle,The following statement contains a magic number: radius = side / 2;  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,InitThreePointCircle,The following statement contains a magic number: a13 = 2 * (p1.X - p3.X);  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,InitThreePointCircle,The following statement contains a magic number: b13 = 2 * (p1.Y - p3.Y);  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,InitThreePointCircle,The following statement contains a magic number: a23 = 2 * (p2.X - p3.X);  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,InitThreePointCircle,The following statement contains a magic number: b23 = 2 * (p2.Y - p3.Y);  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return (center.GetHashCode () * 397) ^ radius.GetHashCode ();  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetHashCode,The following statement contains a magic number: return (center.GetHashCode () * 397) ^ radius.GetHashCode ();  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dx == 0.0) {  	if (dy == 0.0) {  		angle = 0.0;  	} else if (dy > 0.0) {  		angle = Math.PI / 2.0;  	} else {  		angle = (Math.PI * 3.0) / 2.0;  	}  } else if (dy == 0.0) {  	angle = dx > 0.0 ? 0.0 : Math.PI;  } else {  	if (dx < 0.0) {  		angle = Math.Atan (dy / dx) + Math.PI;  	} else if (dy < 0.0) {  		angle = Math.Atan (dy / dx) + (2 * Math.PI);  	} else {  		angle = Math.Atan (dy / dx);  	}  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dx == 0.0) {  	if (dy == 0.0) {  		angle = 0.0;  	} else if (dy > 0.0) {  		angle = Math.PI / 2.0;  	} else {  		angle = (Math.PI * 3.0) / 2.0;  	}  } else if (dy == 0.0) {  	angle = dx > 0.0 ? 0.0 : Math.PI;  } else {  	if (dx < 0.0) {  		angle = Math.Atan (dy / dx) + Math.PI;  	} else if (dy < 0.0) {  		angle = Math.Atan (dy / dx) + (2 * Math.PI);  	} else {  		angle = Math.Atan (dy / dx);  	}  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dx == 0.0) {  	if (dy == 0.0) {  		angle = 0.0;  	} else if (dy > 0.0) {  		angle = Math.PI / 2.0;  	} else {  		angle = (Math.PI * 3.0) / 2.0;  	}  } else if (dy == 0.0) {  	angle = dx > 0.0 ? 0.0 : Math.PI;  } else {  	if (dx < 0.0) {  		angle = Math.Atan (dy / dx) + Math.PI;  	} else if (dy < 0.0) {  		angle = Math.Atan (dy / dx) + (2 * Math.PI);  	} else {  		angle = Math.Atan (dy / dx);  	}  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dx == 0.0) {  	if (dy == 0.0) {  		angle = 0.0;  	} else if (dy > 0.0) {  		angle = Math.PI / 2.0;  	} else {  		angle = (Math.PI * 3.0) / 2.0;  	}  } else if (dy == 0.0) {  	angle = dx > 0.0 ? 0.0 : Math.PI;  } else {  	if (dx < 0.0) {  		angle = Math.Atan (dy / dx) + Math.PI;  	} else if (dy < 0.0) {  		angle = Math.Atan (dy / dx) + (2 * Math.PI);  	} else {  		angle = Math.Atan (dy / dx);  	}  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dy == 0.0) {  	angle = 0.0;  } else if (dy > 0.0) {  	angle = Math.PI / 2.0;  } else {  	angle = (Math.PI * 3.0) / 2.0;  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dy == 0.0) {  	angle = 0.0;  } else if (dy > 0.0) {  	angle = Math.PI / 2.0;  } else {  	angle = (Math.PI * 3.0) / 2.0;  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dy == 0.0) {  	angle = 0.0;  } else if (dy > 0.0) {  	angle = Math.PI / 2.0;  } else {  	angle = (Math.PI * 3.0) / 2.0;  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dy > 0.0) {  	angle = Math.PI / 2.0;  } else {  	angle = (Math.PI * 3.0) / 2.0;  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dy > 0.0) {  	angle = Math.PI / 2.0;  } else {  	angle = (Math.PI * 3.0) / 2.0;  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dy > 0.0) {  	angle = Math.PI / 2.0;  } else {  	angle = (Math.PI * 3.0) / 2.0;  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: angle = Math.PI / 2.0;  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: angle = (Math.PI * 3.0) / 2.0;  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: angle = (Math.PI * 3.0) / 2.0;  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dy == 0.0) {  	angle = dx > 0.0 ? 0.0 : Math.PI;  } else {  	if (dx < 0.0) {  		angle = Math.Atan (dy / dx) + Math.PI;  	} else if (dy < 0.0) {  		angle = Math.Atan (dy / dx) + (2 * Math.PI);  	} else {  		angle = Math.Atan (dy / dx);  	}  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dx < 0.0) {  	angle = Math.Atan (dy / dx) + Math.PI;  } else if (dy < 0.0) {  	angle = Math.Atan (dy / dx) + (2 * Math.PI);  } else {  	angle = Math.Atan (dy / dx);  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: if (dy < 0.0) {  	angle = Math.Atan (dy / dx) + (2 * Math.PI);  } else {  	angle = Math.Atan (dy / dx);  }  
Magic Number,NHibernate.Spatial.Oracle,Circle,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\Circle.cs,GetAngle,The following statement contains a magic number: angle = Math.Atan (dy / dx) + (2 * Math.PI);  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ReadPoint,The following statement contains a magic number: if (ordinates.Length == 0) {  	if (sdoGeom.Dimensionality == 2) {  		ordinates = new[] {  			sdoGeom.Point.XD.Value'  			sdoGeom.Point.YD.Value  		};  	} else {  		ordinates = new[] {  			sdoGeom.Point.XD.Value'  			sdoGeom.Point.YD.Value'  			sdoGeom.Point.ZD.Value  		};  	}  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ReadPoint,The following statement contains a magic number: if (sdoGeom.Dimensionality == 2) {  	ordinates = new[] {  		sdoGeom.Point.XD.Value'  		sdoGeom.Point.YD.Value  	};  } else {  	ordinates = new[] {  		sdoGeom.Point.XD.Value'  		sdoGeom.Point.YD.Value'  		sdoGeom.Point.ZD.Value  	};  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ExtractOrdinatesOfElement,The following statement contains a magic number: if (((element + 1) * 3) < sdoGeom.ElemArray.Length - 1) {  	end = (int)sdoGeom.ElemArray [(element + 1) * 3];  	// if this is a subelement of a compound geometry'  	// the last point is the first point of  	// the next subelement.  	if (hasNextSE) {  		end += sdoGeom.Dimensionality;  	}  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ExtractOrdinatesOfElement,The following statement contains a magic number: if (((element + 1) * 3) < sdoGeom.ElemArray.Length - 1) {  	end = (int)sdoGeom.ElemArray [(element + 1) * 3];  	// if this is a subelement of a compound geometry'  	// the last point is the first point of  	// the next subelement.  	if (hasNextSE) {  		end += sdoGeom.Dimensionality;  	}  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ExtractOrdinatesOfElement,The following statement contains a magic number: end = (int)sdoGeom.ElemArray [(element + 1) * 3];  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ConvertOrdinateArray,The following statement contains a magic number: for (int i = 0; i < coordinates.Length; i++) {  	if (dim == 2) {  		coordinates [i] = new Coordinate (oordinates [i * dim]' oordinates [i * dim + 1]);  	} else if (dim == 3) {  		if (sdoGeom.LRS > 0) {  			coordinates [i] = MCoordinate.Create2dWithMeasure (oordinates [i * dim]' // X  			oordinates [i * dim + 1]' // Y  			oordinates [i * dim + lrsDim]);  			// M  		} else {  			coordinates [i] = new Coordinate (oordinates [i * dim]' // X  			oordinates [i * dim + 1]' // Y  			oordinates [i * dim + zDim]);  			// Z  		}  	} else if (dim == 4) {  		// This must be an LRS Geometry  		if (sdoGeom.LRS == 0)  			throw new ApplicationException ("4 dimensional Geometries must be LRS geometry");  		coordinates [i] = MCoordinate.Create3dWithMeasure (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + zDim]' // Z  		oordinates [i * dim + lrsDim]);  		// M  	}  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ConvertOrdinateArray,The following statement contains a magic number: for (int i = 0; i < coordinates.Length; i++) {  	if (dim == 2) {  		coordinates [i] = new Coordinate (oordinates [i * dim]' oordinates [i * dim + 1]);  	} else if (dim == 3) {  		if (sdoGeom.LRS > 0) {  			coordinates [i] = MCoordinate.Create2dWithMeasure (oordinates [i * dim]' // X  			oordinates [i * dim + 1]' // Y  			oordinates [i * dim + lrsDim]);  			// M  		} else {  			coordinates [i] = new Coordinate (oordinates [i * dim]' // X  			oordinates [i * dim + 1]' // Y  			oordinates [i * dim + zDim]);  			// Z  		}  	} else if (dim == 4) {  		// This must be an LRS Geometry  		if (sdoGeom.LRS == 0)  			throw new ApplicationException ("4 dimensional Geometries must be LRS geometry");  		coordinates [i] = MCoordinate.Create3dWithMeasure (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + zDim]' // Z  		oordinates [i * dim + lrsDim]);  		// M  	}  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ConvertOrdinateArray,The following statement contains a magic number: for (int i = 0; i < coordinates.Length; i++) {  	if (dim == 2) {  		coordinates [i] = new Coordinate (oordinates [i * dim]' oordinates [i * dim + 1]);  	} else if (dim == 3) {  		if (sdoGeom.LRS > 0) {  			coordinates [i] = MCoordinate.Create2dWithMeasure (oordinates [i * dim]' // X  			oordinates [i * dim + 1]' // Y  			oordinates [i * dim + lrsDim]);  			// M  		} else {  			coordinates [i] = new Coordinate (oordinates [i * dim]' // X  			oordinates [i * dim + 1]' // Y  			oordinates [i * dim + zDim]);  			// Z  		}  	} else if (dim == 4) {  		// This must be an LRS Geometry  		if (sdoGeom.LRS == 0)  			throw new ApplicationException ("4 dimensional Geometries must be LRS geometry");  		coordinates [i] = MCoordinate.Create3dWithMeasure (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + zDim]' // Z  		oordinates [i * dim + lrsDim]);  		// M  	}  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ConvertOrdinateArray,The following statement contains a magic number: if (dim == 2) {  	coordinates [i] = new Coordinate (oordinates [i * dim]' oordinates [i * dim + 1]);  } else if (dim == 3) {  	if (sdoGeom.LRS > 0) {  		coordinates [i] = MCoordinate.Create2dWithMeasure (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + lrsDim]);  		// M  	} else {  		coordinates [i] = new Coordinate (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + zDim]);  		// Z  	}  } else if (dim == 4) {  	// This must be an LRS Geometry  	if (sdoGeom.LRS == 0)  		throw new ApplicationException ("4 dimensional Geometries must be LRS geometry");  	coordinates [i] = MCoordinate.Create3dWithMeasure (oordinates [i * dim]' // X  	oordinates [i * dim + 1]' // Y  	oordinates [i * dim + zDim]' // Z  	oordinates [i * dim + lrsDim]);  	// M  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ConvertOrdinateArray,The following statement contains a magic number: if (dim == 2) {  	coordinates [i] = new Coordinate (oordinates [i * dim]' oordinates [i * dim + 1]);  } else if (dim == 3) {  	if (sdoGeom.LRS > 0) {  		coordinates [i] = MCoordinate.Create2dWithMeasure (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + lrsDim]);  		// M  	} else {  		coordinates [i] = new Coordinate (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + zDim]);  		// Z  	}  } else if (dim == 4) {  	// This must be an LRS Geometry  	if (sdoGeom.LRS == 0)  		throw new ApplicationException ("4 dimensional Geometries must be LRS geometry");  	coordinates [i] = MCoordinate.Create3dWithMeasure (oordinates [i * dim]' // X  	oordinates [i * dim + 1]' // Y  	oordinates [i * dim + zDim]' // Z  	oordinates [i * dim + lrsDim]);  	// M  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ConvertOrdinateArray,The following statement contains a magic number: if (dim == 2) {  	coordinates [i] = new Coordinate (oordinates [i * dim]' oordinates [i * dim + 1]);  } else if (dim == 3) {  	if (sdoGeom.LRS > 0) {  		coordinates [i] = MCoordinate.Create2dWithMeasure (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + lrsDim]);  		// M  	} else {  		coordinates [i] = new Coordinate (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + zDim]);  		// Z  	}  } else if (dim == 4) {  	// This must be an LRS Geometry  	if (sdoGeom.LRS == 0)  		throw new ApplicationException ("4 dimensional Geometries must be LRS geometry");  	coordinates [i] = MCoordinate.Create3dWithMeasure (oordinates [i * dim]' // X  	oordinates [i * dim + 1]' // Y  	oordinates [i * dim + zDim]' // Z  	oordinates [i * dim + lrsDim]);  	// M  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ConvertOrdinateArray,The following statement contains a magic number: if (dim == 3) {  	if (sdoGeom.LRS > 0) {  		coordinates [i] = MCoordinate.Create2dWithMeasure (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + lrsDim]);  		// M  	} else {  		coordinates [i] = new Coordinate (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + zDim]);  		// Z  	}  } else if (dim == 4) {  	// This must be an LRS Geometry  	if (sdoGeom.LRS == 0)  		throw new ApplicationException ("4 dimensional Geometries must be LRS geometry");  	coordinates [i] = MCoordinate.Create3dWithMeasure (oordinates [i * dim]' // X  	oordinates [i * dim + 1]' // Y  	oordinates [i * dim + zDim]' // Z  	oordinates [i * dim + lrsDim]);  	// M  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ConvertOrdinateArray,The following statement contains a magic number: if (dim == 3) {  	if (sdoGeom.LRS > 0) {  		coordinates [i] = MCoordinate.Create2dWithMeasure (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + lrsDim]);  		// M  	} else {  		coordinates [i] = new Coordinate (oordinates [i * dim]' // X  		oordinates [i * dim + 1]' // Y  		oordinates [i * dim + zDim]);  		// Z  	}  } else if (dim == 4) {  	// This must be an LRS Geometry  	if (sdoGeom.LRS == 0)  		throw new ApplicationException ("4 dimensional Geometries must be LRS geometry");  	coordinates [i] = MCoordinate.Create3dWithMeasure (oordinates [i * dim]' // X  	oordinates [i * dim + 1]' // Y  	oordinates [i * dim + zDim]' // Z  	oordinates [i * dim + lrsDim]);  	// M  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ConvertOrdinateArray,The following statement contains a magic number: if (dim == 4) {  	// This must be an LRS Geometry  	if (sdoGeom.LRS == 0)  		throw new ApplicationException ("4 dimensional Geometries must be LRS geometry");  	coordinates [i] = MCoordinate.Create3dWithMeasure (oordinates [i * dim]' // X  	oordinates [i * dim + 1]' // Y  	oordinates [i * dim + zDim]' // Z  	oordinates [i * dim + lrsDim]);  	// M  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,ReverseRing,The following statement contains a magic number: for (int i = 0; i < ar.Length / 2; i++) {  	Coordinate cs = ar [i];  	ar [i] = ar [ar.Length - 1 - i];  	ar [ar.Length - 1 - i] = cs;  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryReader,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryReader.cs,Linearize,The following statement contains a magic number: if (coordDim != 2)  	throw new ArgumentException ("Can only linearize 2D arc segments' but geometry is " + dim + "D.");  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,WriteMultiLineString,The following statement contains a magic number: for (var i = 0; i < geometry.NumGeometries; i++) {  	info [i + 0] = oordinatesOffset;  	info [i + 1] = elementType.EType ();  	info [i + 2] = elementType.Interpretation ();  	ordinates = this.ConvertAddCoordinates (ordinates' geometry.GetGeometryN (i).Coordinates' dim' isLrs);  	oordinatesOffset = ordinates.Length + 1;  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,WriteMultiLineString,The following statement contains a magic number: info [i + 2] = elementType.Interpretation ();  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,WriteMultiPoint,The following statement contains a magic number: for (int i = 0; i < geometry.NumPoints; i++) {  	//info.setElement(i' oordinatesOffset' ElementType.POINT' 0);  	info [i + 0] = oordinatesOffset;  	info [i + 1] = elementType.EType ();  	info [i + 2] = elementType.Interpretation ();  	ordinates = this.ConvertAddCoordinates (ordinates' geometry.GetGeometryN (i).Coordinates' dim' isLrs);  	oordinatesOffset = ordinates.Length + 1;  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,WriteMultiPoint,The following statement contains a magic number: info [i + 2] = elementType.Interpretation ();  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,AddPolygon,The following statement contains a magic number: for (int i = 0; i < info.Length; i = i + 3) {  	ElementType et;  	Coordinate[] coords;  	if (i == 0) {  		et = ElementType.EXTERIOR_RING_STRAIGHT_SEGMENTS;  		coords = polygon.ExteriorRing.Coordinates;  		// 1003: exterior polygon ring (must be specified in counterclockwise order)  		if (!CGAlgorithms.IsCCW (coords)) {  			coords = this.ReverseRing (coords);  		}  	} else {  		et = ElementType.INTERIOR_RING_STRAIGHT_SEGMENTS;  		coords = polygon.InteriorRings [i - 1].Coordinates;  		// 2003: interior polygon ring (must be specified in clockwise order)  		if (CGAlgorithms.IsCCW (coords)) {  			coords = this.ReverseRing (coords);  		}  	}  	//info.setElement(i' ordinatesOffset' et' 0);  	info [i + 0] = ordinatesOffset;  	info [i + 1] = et.EType ();  	info [i + 2] = et.Interpretation ();  	ordinates = this.ConvertAddCoordinates (ordinates' coords' sdoGeometry.Dimensionality' sdoGeometry.LRS > 0);  	ordinatesOffset = ordinatesPreviousOffset + ordinates.Length + 1;  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,AddPolygon,The following statement contains a magic number: for (int i = 0; i < info.Length; i = i + 3) {  	ElementType et;  	Coordinate[] coords;  	if (i == 0) {  		et = ElementType.EXTERIOR_RING_STRAIGHT_SEGMENTS;  		coords = polygon.ExteriorRing.Coordinates;  		// 1003: exterior polygon ring (must be specified in counterclockwise order)  		if (!CGAlgorithms.IsCCW (coords)) {  			coords = this.ReverseRing (coords);  		}  	} else {  		et = ElementType.INTERIOR_RING_STRAIGHT_SEGMENTS;  		coords = polygon.InteriorRings [i - 1].Coordinates;  		// 2003: interior polygon ring (must be specified in clockwise order)  		if (CGAlgorithms.IsCCW (coords)) {  			coords = this.ReverseRing (coords);  		}  	}  	//info.setElement(i' ordinatesOffset' et' 0);  	info [i + 0] = ordinatesOffset;  	info [i + 1] = et.EType ();  	info [i + 2] = et.Interpretation ();  	ordinates = this.ConvertAddCoordinates (ordinates' coords' sdoGeometry.Dimensionality' sdoGeometry.LRS > 0);  	ordinatesOffset = ordinatesPreviousOffset + ordinates.Length + 1;  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,AddPolygon,The following statement contains a magic number: i = i + 3
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,AddPolygon,The following statement contains a magic number: info [i + 2] = et.Interpretation ();  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ReverseRing,The following statement contains a magic number: for (int i = 0; i < ar.Length / 2; i++) {  	Coordinate cs = ar [i];  	ar [i] = ar [ar.Length - 1 - i];  	ar [ar.Length - 1 - i] = cs;  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: if (dim > 4) {  	throw new ArgumentException ("Dim parameter value cannot be greater than 4");  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: for (int i = 0; i < coordinates.Length; i++) {  	Coordinate c = coordinates [i];  	MCoordinate cm = c as MCoordinate;  	// set the X and Y values  	converted [i * dim] = this.ToDecimal (c.X);  	converted [i * dim + 1] = this.ToDecimal (c.Y);  	if (dim == 3) {  		converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  		converted [i * dim + 2] = this.ToDecimal (c.Z);  	} else if (dim == 4) {  		converted [i * dim + 2] = this.ToDecimal (c.Z);  		converted [i * dim + 3] = this.ToDecimal (cm.M);  	}  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: for (int i = 0; i < coordinates.Length; i++) {  	Coordinate c = coordinates [i];  	MCoordinate cm = c as MCoordinate;  	// set the X and Y values  	converted [i * dim] = this.ToDecimal (c.X);  	converted [i * dim + 1] = this.ToDecimal (c.Y);  	if (dim == 3) {  		converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  		converted [i * dim + 2] = this.ToDecimal (c.Z);  	} else if (dim == 4) {  		converted [i * dim + 2] = this.ToDecimal (c.Z);  		converted [i * dim + 3] = this.ToDecimal (cm.M);  	}  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: for (int i = 0; i < coordinates.Length; i++) {  	Coordinate c = coordinates [i];  	MCoordinate cm = c as MCoordinate;  	// set the X and Y values  	converted [i * dim] = this.ToDecimal (c.X);  	converted [i * dim + 1] = this.ToDecimal (c.Y);  	if (dim == 3) {  		converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  		converted [i * dim + 2] = this.ToDecimal (c.Z);  	} else if (dim == 4) {  		converted [i * dim + 2] = this.ToDecimal (c.Z);  		converted [i * dim + 3] = this.ToDecimal (cm.M);  	}  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: for (int i = 0; i < coordinates.Length; i++) {  	Coordinate c = coordinates [i];  	MCoordinate cm = c as MCoordinate;  	// set the X and Y values  	converted [i * dim] = this.ToDecimal (c.X);  	converted [i * dim + 1] = this.ToDecimal (c.Y);  	if (dim == 3) {  		converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  		converted [i * dim + 2] = this.ToDecimal (c.Z);  	} else if (dim == 4) {  		converted [i * dim + 2] = this.ToDecimal (c.Z);  		converted [i * dim + 3] = this.ToDecimal (cm.M);  	}  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: for (int i = 0; i < coordinates.Length; i++) {  	Coordinate c = coordinates [i];  	MCoordinate cm = c as MCoordinate;  	// set the X and Y values  	converted [i * dim] = this.ToDecimal (c.X);  	converted [i * dim + 1] = this.ToDecimal (c.Y);  	if (dim == 3) {  		converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  		converted [i * dim + 2] = this.ToDecimal (c.Z);  	} else if (dim == 4) {  		converted [i * dim + 2] = this.ToDecimal (c.Z);  		converted [i * dim + 3] = this.ToDecimal (cm.M);  	}  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: for (int i = 0; i < coordinates.Length; i++) {  	Coordinate c = coordinates [i];  	MCoordinate cm = c as MCoordinate;  	// set the X and Y values  	converted [i * dim] = this.ToDecimal (c.X);  	converted [i * dim + 1] = this.ToDecimal (c.Y);  	if (dim == 3) {  		converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  		converted [i * dim + 2] = this.ToDecimal (c.Z);  	} else if (dim == 4) {  		converted [i * dim + 2] = this.ToDecimal (c.Z);  		converted [i * dim + 3] = this.ToDecimal (cm.M);  	}  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: if (dim == 3) {  	converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  	converted [i * dim + 2] = this.ToDecimal (c.Z);  } else if (dim == 4) {  	converted [i * dim + 2] = this.ToDecimal (c.Z);  	converted [i * dim + 3] = this.ToDecimal (cm.M);  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: if (dim == 3) {  	converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  	converted [i * dim + 2] = this.ToDecimal (c.Z);  } else if (dim == 4) {  	converted [i * dim + 2] = this.ToDecimal (c.Z);  	converted [i * dim + 3] = this.ToDecimal (cm.M);  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: if (dim == 3) {  	converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  	converted [i * dim + 2] = this.ToDecimal (c.Z);  } else if (dim == 4) {  	converted [i * dim + 2] = this.ToDecimal (c.Z);  	converted [i * dim + 3] = this.ToDecimal (cm.M);  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: if (dim == 3) {  	converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  	converted [i * dim + 2] = this.ToDecimal (c.Z);  } else if (dim == 4) {  	converted [i * dim + 2] = this.ToDecimal (c.Z);  	converted [i * dim + 3] = this.ToDecimal (cm.M);  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: if (dim == 3) {  	converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  	converted [i * dim + 2] = this.ToDecimal (c.Z);  } else if (dim == 4) {  	converted [i * dim + 2] = this.ToDecimal (c.Z);  	converted [i * dim + 3] = this.ToDecimal (cm.M);  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: if (dim == 3) {  	converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  	converted [i * dim + 2] = this.ToDecimal (c.Z);  } else if (dim == 4) {  	converted [i * dim + 2] = this.ToDecimal (c.Z);  	converted [i * dim + 3] = this.ToDecimal (cm.M);  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: converted [i * dim + 2] = isLrs ? this.ToDecimal (cm.M) : this.ToDecimal (c.Z);  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: converted [i * dim + 2] = this.ToDecimal (c.Z);  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: if (dim == 4) {  	converted [i * dim + 2] = this.ToDecimal (c.Z);  	converted [i * dim + 3] = this.ToDecimal (cm.M);  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: if (dim == 4) {  	converted [i * dim + 2] = this.ToDecimal (c.Z);  	converted [i * dim + 3] = this.ToDecimal (cm.M);  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: if (dim == 4) {  	converted [i * dim + 2] = this.ToDecimal (c.Z);  	converted [i * dim + 3] = this.ToDecimal (cm.M);  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: converted [i * dim + 2] = this.ToDecimal (c.Z);  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,ConvertCoordinates,The following statement contains a magic number: converted [i * dim + 3] = this.ToDecimal (cm.M);  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,GetCoordinateLrsPosition,The following statement contains a magic number: if (c != null && !Double.IsNaN (c.M)) {  	measurePos = (Double.IsNaN (c.Z)) ? 3 : 4;  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,GetCoordinateLrsPosition,The following statement contains a magic number: if (c != null && !Double.IsNaN (c.M)) {  	measurePos = (Double.IsNaN (c.Z)) ? 3 : 4;  }  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,GetCoordinateLrsPosition,The following statement contains a magic number: measurePos = (Double.IsNaN (c.Z)) ? 3 : 4;  
Magic Number,NHibernate.Spatial.Oracle,OracleGeometryWriter,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\OracleGeometryWriter.cs,GetCoordinateLrsPosition,The following statement contains a magic number: measurePos = (Double.IsNaN (c.Z)) ? 3 : 4;  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: if (sdoGtype != null) {  	var gtype = this.Sdo_Gtype;  	if (gtype != null) {  		var v = (int)gtype;  		var dim = v / 1000;  		this.Dimensionality = dim;  		v -= dim * 1000;  		var lrsDim = v / 100;  		this.LRS = lrsDim;  		v -= lrsDim * 100;  		this.GeometryType = (SDO_GTYPE)v;  	}  	return (this.Dimensionality * 1000) + (this.LRS * 100) + (int)this.GeometryType;  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: if (sdoGtype != null) {  	var gtype = this.Sdo_Gtype;  	if (gtype != null) {  		var v = (int)gtype;  		var dim = v / 1000;  		this.Dimensionality = dim;  		v -= dim * 1000;  		var lrsDim = v / 100;  		this.LRS = lrsDim;  		v -= lrsDim * 100;  		this.GeometryType = (SDO_GTYPE)v;  	}  	return (this.Dimensionality * 1000) + (this.LRS * 100) + (int)this.GeometryType;  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: if (sdoGtype != null) {  	var gtype = this.Sdo_Gtype;  	if (gtype != null) {  		var v = (int)gtype;  		var dim = v / 1000;  		this.Dimensionality = dim;  		v -= dim * 1000;  		var lrsDim = v / 100;  		this.LRS = lrsDim;  		v -= lrsDim * 100;  		this.GeometryType = (SDO_GTYPE)v;  	}  	return (this.Dimensionality * 1000) + (this.LRS * 100) + (int)this.GeometryType;  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: if (sdoGtype != null) {  	var gtype = this.Sdo_Gtype;  	if (gtype != null) {  		var v = (int)gtype;  		var dim = v / 1000;  		this.Dimensionality = dim;  		v -= dim * 1000;  		var lrsDim = v / 100;  		this.LRS = lrsDim;  		v -= lrsDim * 100;  		this.GeometryType = (SDO_GTYPE)v;  	}  	return (this.Dimensionality * 1000) + (this.LRS * 100) + (int)this.GeometryType;  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: if (sdoGtype != null) {  	var gtype = this.Sdo_Gtype;  	if (gtype != null) {  		var v = (int)gtype;  		var dim = v / 1000;  		this.Dimensionality = dim;  		v -= dim * 1000;  		var lrsDim = v / 100;  		this.LRS = lrsDim;  		v -= lrsDim * 100;  		this.GeometryType = (SDO_GTYPE)v;  	}  	return (this.Dimensionality * 1000) + (this.LRS * 100) + (int)this.GeometryType;  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: if (sdoGtype != null) {  	var gtype = this.Sdo_Gtype;  	if (gtype != null) {  		var v = (int)gtype;  		var dim = v / 1000;  		this.Dimensionality = dim;  		v -= dim * 1000;  		var lrsDim = v / 100;  		this.LRS = lrsDim;  		v -= lrsDim * 100;  		this.GeometryType = (SDO_GTYPE)v;  	}  	return (this.Dimensionality * 1000) + (this.LRS * 100) + (int)this.GeometryType;  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: if (gtype != null) {  	var v = (int)gtype;  	var dim = v / 1000;  	this.Dimensionality = dim;  	v -= dim * 1000;  	var lrsDim = v / 100;  	this.LRS = lrsDim;  	v -= lrsDim * 100;  	this.GeometryType = (SDO_GTYPE)v;  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: if (gtype != null) {  	var v = (int)gtype;  	var dim = v / 1000;  	this.Dimensionality = dim;  	v -= dim * 1000;  	var lrsDim = v / 100;  	this.LRS = lrsDim;  	v -= lrsDim * 100;  	this.GeometryType = (SDO_GTYPE)v;  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: if (gtype != null) {  	var v = (int)gtype;  	var dim = v / 1000;  	this.Dimensionality = dim;  	v -= dim * 1000;  	var lrsDim = v / 100;  	this.LRS = lrsDim;  	v -= lrsDim * 100;  	this.GeometryType = (SDO_GTYPE)v;  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: if (gtype != null) {  	var v = (int)gtype;  	var dim = v / 1000;  	this.Dimensionality = dim;  	v -= dim * 1000;  	var lrsDim = v / 100;  	this.LRS = lrsDim;  	v -= lrsDim * 100;  	this.GeometryType = (SDO_GTYPE)v;  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: v -= dim * 1000;  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: v -= lrsDim * 100;  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: return (this.Dimensionality * 1000) + (this.LRS * 100) + (int)this.GeometryType;  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesFromGTYPE,The following statement contains a magic number: return (this.Dimensionality * 1000) + (this.LRS * 100) + (int)this.GeometryType;  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,PropertiesToGTYPE,The following statement contains a magic number: v = v + (this.LRS * 100);  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,Join,The following statement contains a magic number: if (sdoElements == null || sdoElements.Length == 0) {  	sdoCollection.Dimensionality = 2;  	sdoCollection.LRS = 0;  } else {  	SdoGeometry firstElement = sdoElements [0];  	int dim = firstElement.Dimensionality;  	int lrsDim = firstElement.LRS;  	sdoCollection.Dimensionality = dim;  	sdoCollection.LRS = lrsDim;  	int ordinatesOffset = 1;  	for (int i = 0; i < sdoElements.Length; i++) {  		var element = sdoElements [i].ElemArray;  		var ordinates = sdoElements [i].OrdinatesArray;  		if (element != null && element.Length > 0) {  			//int shift = ordinatesOffset - element.getOrdinatesOffset(0);  			int shift = ordinatesOffset - (int)element [0];  			ShiftOrdinateOffset (element' shift);  			sdoCollection.addElement (element);  			sdoCollection.AddOrdinates (ordinates);  			ordinatesOffset += ordinates.Length;  		}  	}  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,Join,The following statement contains a magic number: sdoCollection.Dimensionality = 2;  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,ShiftOrdinateOffset,The following statement contains a magic number: for (int i = 0; i < elemInfo.Length; i++) {  	//int newOffset = elemInfo.getOrdinatesOffset(i) + offset;  	//elemInfo.setOrdinatesOffset(i' newOffset);  	elemInfo [i * 3] = elemInfo [i * 3] + offset;  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,ShiftOrdinateOffset,The following statement contains a magic number: for (int i = 0; i < elemInfo.Length; i++) {  	//int newOffset = elemInfo.getOrdinatesOffset(i) + offset;  	//elemInfo.setOrdinatesOffset(i' newOffset);  	elemInfo [i * 3] = elemInfo [i * 3] + offset;  }  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,ShiftOrdinateOffset,The following statement contains a magic number: elemInfo [i * 3] = elemInfo [i * 3] + offset;  
Magic Number,NHibernate.Spatial.Oracle,SdoGeometry,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\Oracle\SdoGeometry.cs,ShiftOrdinateOffset,The following statement contains a magic number: elemInfo [i * 3] = elemInfo [i * 3] + offset;  
Missing Default,NHibernate.Spatial.MGeometries,MCoordinate,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MCoordinate.cs,GetOrdinate,The following switch statement is missing a default case: switch (ordinateIndex) {  case Ordinates.X:  	return this.X;  case Ordinates.Y:  	return this.Y;  case Ordinates.Z:  	return this.Z;  case Ordinates.M:  	return M;  }  
Missing Default,NHibernate.Spatial.MGeometries,MCoordinateSequence,D:\newReposJune17\nhibernate_NHibernate.Spatial\NHibernate.Spatial.Oracle\MGeometries\MCoordinateSequence.cs,GetOrdinate,The following switch statement is missing a default case: switch (ordinateIndex) {  case Ordinates.X:  	return coordinates [index].X;  case Ordinates.Y:  	return coordinates [index].Y;  case Ordinates.Z:  	return coordinates [index].Z;  case Ordinates.M:  	return coordinates [index].M;  }  
