Implementation smell,Namespace,Class,File,Method,Description
Complex Method,J6.DevFw.Data,DataBaseAccess,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\DataBaseAccess.cs,DataBaseAccess,Cyclomatic complexity of the method is 16
Complex Method,J6.DevFw.Data.Extensions,DataTableExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\Extensions\DataExtensions.cs,ToEntityList,Cyclomatic complexity of the method is 10
Complex Method,J6.DevFw.Data.Extensions,DataTableExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\Extensions\DataExtensions.cs,ToEntityList,Cyclomatic complexity of the method is 10
Complex Method,J6.DevFw.Data.Extensions,DataTableExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\Extensions\DataExtensions.cs,CopyToEntity,Cyclomatic complexity of the method is 8
Complex Method,J6.DevFw.Data.Extensions,DataTableExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\Extensions\DataExtensions.cs,GetDbParameter,Cyclomatic complexity of the method is 34
Complex Method,J6.DevFw.Data.Extensions,DataTableExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\Extensions\DataExtensions.cs,AutoInsertSQL,Cyclomatic complexity of the method is 11
Complex Method,J6.DevFw.Data.Extensions,DataTableExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\Extensions\DataExtensions.cs,AutoUpdateSQL,Cyclomatic complexity of the method is 12
Long Statement,J6.DevFw.Data,DataBaseAccess,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\DataBaseAccess.cs,GetDataSet,The length of the statement  "			adapter.SelectCommand.CommandType = procedureRegex.IsMatch (commandText) ? CommandType.Text : CommandType.StoredProcedure; " is 122.
Long Statement,J6.DevFw.Data.Orm,EntityManager,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\Orm\EntityManager.cs,Insert,The length of the statement  "	db.ExecuteNonQuery ("insert into " + tableName + " (" + filedStr.Remove (filedStr.Length - 1) + ")values(" + paramStr.Remove (paramStr.Length - 1) + ")"' parameters.ToArray ()); " is 177.
Long Statement,J6.DevFw.Data.Orm,EntityManager,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\Orm\EntityManager.cs,Delete,The length of the statement  "	db.ExecuteNonQuery ("delete from " + tableName + " where " + fieldName + "=@" + fieldName' db.DataBaseAdapter.CreateParameter ("@" + fieldName' field.Value)); " is 158.
Magic Number,J6.DevFw.Data,SqlQuery,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\SqlQuery.cs,SqlQuery,The following statement contains a magic number: if (parameters != null) {  	if (parameters.GetLength (0) != 0 && parameters.GetLength (1) != 2) {  		throw new ArgumentOutOfRangeException ("Parameters"' "多纬数组的二维长度必须为2");  	}  }  
Magic Number,J6.DevFw.Data,SqlQuery,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\SqlQuery.cs,SqlQuery,The following statement contains a magic number: if (parameters.GetLength (0) != 0 && parameters.GetLength (1) != 2) {  	throw new ArgumentOutOfRangeException ("Parameters"' "多纬数组的二维长度必须为2");  }  
Magic Number,J6.DevFw.Data.Extensions,DataTableExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\Extensions\DataExtensions.cs,GetDbParameter,The following statement contains a magic number: if (autoPro) {  	PropertyInfo[] pros = type.GetProperties (BindingFlags.Public | BindingFlags.Instance | BindingFlags.IgnoreCase);  	parameters = new object[pros.Length' 2];  	int i = 0;  	foreach (PropertyInfo _pro in pros) {  		proValue = _pro.GetValue (obj' null);  		parameters [i' 0] = String.Format ("@{0}"' _pro.Name);  		parameters [i' 1] = proValue;  		++i;  	}  } else {  	filedArray = fields.Split (' '' ''');  	//初始化参数数组  	int fieldCount = filedArray.Length;  	//参数数组  	parameters = new object[fieldCount' 2];  	string fieldName;  	for (int i = 0; i < parameters.GetLength (0); i++) {  		fieldName = filedArray [i];  		pro = type.GetProperty (fieldName' BindingFlags.Public | BindingFlags.Instance | BindingFlags.IgnoreCase);  		if (pro == null) {  			throw new Exception (String.Format ("对象不存在属性：{0}"' fieldName));  		}  		//获取对象的值  		proValue = pro.GetValue (obj' null);  		if (proValue == null) {  			throw new Exception (String.Format ("对象属性必须赋值，属性名称:{0}"' fieldName));  		}  		parameters [i' 0] = String.Format ("@{0}"' fieldName);  		parameters [i' 1] = proValue;  	}  }  
Magic Number,J6.DevFw.Data.Extensions,DataTableExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\Extensions\DataExtensions.cs,GetDbParameter,The following statement contains a magic number: if (autoPro) {  	PropertyInfo[] pros = type.GetProperties (BindingFlags.Public | BindingFlags.Instance | BindingFlags.IgnoreCase);  	parameters = new object[pros.Length' 2];  	int i = 0;  	foreach (PropertyInfo _pro in pros) {  		proValue = _pro.GetValue (obj' null);  		parameters [i' 0] = String.Format ("@{0}"' _pro.Name);  		parameters [i' 1] = proValue;  		++i;  	}  } else {  	filedArray = fields.Split (' '' ''');  	//初始化参数数组  	int fieldCount = filedArray.Length;  	//参数数组  	parameters = new object[fieldCount' 2];  	string fieldName;  	for (int i = 0; i < parameters.GetLength (0); i++) {  		fieldName = filedArray [i];  		pro = type.GetProperty (fieldName' BindingFlags.Public | BindingFlags.Instance | BindingFlags.IgnoreCase);  		if (pro == null) {  			throw new Exception (String.Format ("对象不存在属性：{0}"' fieldName));  		}  		//获取对象的值  		proValue = pro.GetValue (obj' null);  		if (proValue == null) {  			throw new Exception (String.Format ("对象属性必须赋值，属性名称:{0}"' fieldName));  		}  		parameters [i' 0] = String.Format ("@{0}"' fieldName);  		parameters [i' 1] = proValue;  	}  }  
Magic Number,J6.DevFw.Data.Extensions,DataTableExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\Extensions\DataExtensions.cs,GetDbParameter,The following statement contains a magic number: parameters = new object[pros.Length' 2];  
Magic Number,J6.DevFw.Data.Extensions,DataTableExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\Extensions\DataExtensions.cs,GetDbParameter,The following statement contains a magic number: parameters = new object[fieldCount' 2];  
Missing Default,J6.DevFw.Data,DataBaseAccess,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Data\DataBaseAccess.cs,DataBaseAccess,The following switch statement is missing a default case: switch (type) {  case DataBaseType.OLEDB:  	dbFactory = new OleDbFactory (connectionString);  	break;  case DataBaseType.SQLite:  	dbFactory = new SQLiteFactory (connectionString);  	break;  case DataBaseType.MonoSQLite:  	dbFactory = new MonoSQLiteFactory (connectionString);  	break;  case DataBaseType.SQLServer:  	dbFactory = new SqlServerFactory (connectionString);  	break;  case DataBaseType.MySQL:  	dbFactory = new MySqlFactory (connectionString);  	break;  }  
