Implementation smell,Namespace,Class,File,Method,Description
Long Method,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The method has 103 lines of code.
Long Method,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeThumbnail,The method has 102 lines of code.
Complex Method,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,Cyclomatic complexity of the method is 21
Complex Method,J6.DevFw.Framework.Extensions,ICollectionExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\ICollectionExtensions.cs,BindToEntity,Cyclomatic complexity of the method is 8
Complex Method,J6.DevFw.Framework.Extensions,ICollectionExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\ICollectionExtensions.cs,GetPropertyValue,Cyclomatic complexity of the method is 10
Complex Method,J6.DevFw.Framework.Extensions,TExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\TExtensions.cs,CloneData,Cyclomatic complexity of the method is 15
Complex Method,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,GraphicsHelper,Cyclomatic complexity of the method is 14
Complex Method,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,GetSize,Cyclomatic complexity of the method is 21
Complex Method,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,Cyclomatic complexity of the method is 9
Complex Method,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeThumbnail,Cyclomatic complexity of the method is 28
Complex Method,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,Cyclomatic complexity of the method is 38
Complex Method,J6.DevFw.Framework.TaskBox.HttpSync,HttpSimpleRequest,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\TaskBox\HttpSync\HttpSimpleRequest.cs,CreatePostHttpResponse,Cyclomatic complexity of the method is 11
Complex Method,J6.DevFw.Utils,MultiThreadProcess,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Utils\MultiThreadProcess.cs,Start,Cyclomatic complexity of the method is 9
Complex Method,J6.DevFw.Utils,ZipUtility,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Utils\ZipUtility.cs,PackageFolder,Cyclomatic complexity of the method is 10
Complex Method,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,Cyclomatic complexity of the method is 18
Complex Method,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,GraphicDrawImage,Cyclomatic complexity of the method is 22
Complex Method,J6.DevFw.Framework.Web.UI,CustomPagingGetter,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Get,Cyclomatic complexity of the method is 8
Complex Method,J6.DevFw.Framework.Web.UI,UrlPager,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Pager,Cyclomatic complexity of the method is 15
Complex Method,J6.DevFw.Framework.Web.unused.Handler,ExecuteHandler,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\Handler\ExecuteHandler.cs,ProcessRequest,Cyclomatic complexity of the method is 11
Long Parameter List,J6.DevFw.Framework.Extensions,ICollectionExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\ICollectionExtensions.cs,GetPropertyValue,The method has 5 parameters.
Long Parameter List,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The method has 8 parameters.
Long Parameter List,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The method has 5 parameters.
Long Parameter List,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeThumbnail,The method has 5 parameters.
Long Parameter List,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,SaveThumbnail,The method has 5 parameters.
Long Parameter List,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,SaveThumbnail,The method has 5 parameters.
Long Parameter List,J6.DevFw.Framework.TaskBox.HttpSync,HttpSimpleRequest,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\TaskBox\HttpSync\HttpSimpleRequest.cs,CreatePostHttpResponse,The method has 5 parameters.
Long Parameter List,J6.DevFw.Framework.Net,FtpClient,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Net\FtpClient.cs,FtpClient,The method has 5 parameters.
Long Parameter List,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,RenderGraphicImage,The method has 5 parameters.
Long Parameter List,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,GraphicDrawImage,The method has 6 parameters.
Long Parameter List,J6.DevFw.Framework.Web.UI,IPagingGetter,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Get,The method has 5 parameters.
Long Parameter List,J6.DevFw.Framework.Web.UI,DefaultPageingGetter,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Get,The method has 5 parameters.
Long Parameter List,J6.DevFw.Framework.Web.UI,CustomPagingGetter,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,CustomPagingGetter,The method has 6 parameters.
Long Parameter List,J6.DevFw.Framework.Web.UI,CustomPagingGetter,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Get,The method has 5 parameters.
Long Parameter List,J6.DevFw.Framework.Web.UI,UrlPaging,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,PagerHtml,The method has 5 parameters.
Long Parameter List,J6.DevFw.Framework.Web.unused,ExceptionProcess,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\ExceptionProcess.cs,PostError,The method has 6 parameters.
Long Statement,J6.DevFw.Framework,AssemblyResolve,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\AssemblyResolve.cs,Resolve,The length of the statement  "		string filePath = String.Concat (directory' directory.EndsWith ("/") ? "" : "/"' args.Name.Split (''') [0]' fileExtension); " is 123.
Long Statement,J6.DevFw,VersionSet,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Version.cs,GetVersion,The length of the statement  "	return this._versionStr ?? (this._versionStr = String.Format ("{0}.{1}.{2}"' this.MajorVersion' this.MinorVersion' this.BuildNumber)); " is 134.
Long Statement,J6.DevFw,MicroTemplateEngine,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\MicroTemplateEngine.cs,Execute,The length of the statement  "		method = type.GetMethod (tagName' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.IgnoreCase' null' parameterTypes' null); " is 158.
Long Statement,Ops.Extensions,Cloning,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Extensions\ILEmit.cs,CloneObjectWithILShallow,The length of the statement  "		foreach (FieldInfo field in myObject.GetType ().GetFields (System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Public)) { " is 185.
Long Statement,Ops.Extensions,Cloning,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Extensions\ILEmit.cs,CloneObjectWithILDeep,The length of the statement  "		foreach (FieldInfo field in typeof(T).GetFields (System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Public)) { " is 175.
Long Statement,Ops.Extensions,Cloning,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Extensions\ILEmit.cs,CopyReferenceType,The length of the statement  "		foreach (FieldInfo fi in field.FieldType.GetFields (System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Public)) { " is 178.
Long Statement,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The length of the statement  "				sb.Append ("<dl").Append (ffa.Hidden ? " style=\"display:none\"" : "").Append (String.IsNullOrEmpty (ffa.Group) ? ">" : " group=\"" + ffa.Group + "\">").Append ("<dt>").Append (ffa.IsRequired ? "<span class=\"required\">*</span>" : "").Append (String.IsNullOrEmpty (ffa.Text) ? ffa.Name : ffa.Text).Append (":</dt>").Append ("<dd>"); " is 333.
Long Statement,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The length of the statement  "					SelectFieldAttribute[] sfAttrs = pro.GetCustomAttributes (typeof(SelectFieldAttribute)' false) as SelectFieldAttribute[]; " is 121.
Long Statement,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The length of the statement  "							sb.Append ("<select class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\""); " is 131.
Long Statement,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The length of the statement  "									sb.Append ("<option value=\"").Append (opt [1]).Append ("\"").Append (value == opt [1] ? " selected=\"selected\"" : "").Append (">").Append (opt [0]).Append ("</option>"); " is 171.
Long Statement,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The length of the statement  "							sb.Append ("<textarea class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\""); " is 133.
Long Statement,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The length of the statement  "							sb.Append ("<input class=\"ui-validate\" type=\"").Append (ffa.IsPassword ? "password" : "text").Append ("\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"").Append (" value=\"").Append (value).Append ("\""); " is 248.
Long Statement,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The length of the statement  "					sb.Append (value).Append ("<input type=\"hidden\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\" value=\"").Append (value).Append ("\"/>"); " is 179.
Long Statement,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The length of the statement  "		sb.Append ("<dl><dt>&nbsp;</dt><dd><a id=\"btn\" class=\"btn\" href=\"javascript:;\">").Append (btnText).Append ("</a></dd></dl>").Append ("</form></div>"); " is 156.
Long Statement,J6.DevFw.Framework.Extensions,HttpExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\HttpExtensions.cs,IscMobileDevice,The length of the statement  "	Regex b = new Regex (@"(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino"' RegexOptions.IgnoreCase | RegexOptions.Multiline); " is 395.
Long Statement,J6.DevFw.Framework.Extensions,HttpExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\HttpExtensions.cs,IscMobileDevice,The length of the statement  "	Regex v = new Regex (@"1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-"' RegexOptions.IgnoreCase | RegexOptions.Multiline); " is 1682.
Long Statement,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The length of the statement  "	g.DrawImage (original' new Rectangle (x' y' imageSize.Width' imageSize.Height)' new Rectangle (x' y' ow' oh)' GraphicsUnit.Pixel); " is 130.
Long Statement,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeThumbnail,The length of the statement  "	g.DrawImage (original' new Rectangle ((width - toWidth) / 2' (height - toHeight) / 2' toWidth' toHeight)' new Rectangle (x' y' ow' oh)' GraphicsUnit.Pixel); " is 156.
Long Statement,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,Thumbnal_Test,The length of the statement  "	byte[] data = GraphicsHelper.DrawBySize (img' ImageSizeMode.CustomSize' width' height' ImageFormat.Jpeg' 90L' 50L' null); " is 121.
Long Statement,J6.DevFw.Framework.TaskBox.HttpSync,HttpSimpleRequest,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\TaskBox\HttpSync\HttpSimpleRequest.cs,CreatePostHttpResponse,The length of the statement  "		ServicePointManager.ServerCertificateValidationCallback = new RemoteCertificateValidationCallback (CheckValidationResult); " is 122.
Long Statement,J6.DevFw.Utils,ZipUtility,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Utils\ZipUtility.cs,PackageFolder,The length of the statement  "				pathInPackage = Path.GetDirectoryName (fileName).Replace (folderName' string.Empty) + "/" + Path.GetFileName (fileName); " is 120.
Long Statement,J6.DevFw.Framework.Net,HttpClient,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Net\HttpClient.cs,Post,The length of the statement  "		ServicePointManager.ServerCertificateValidationCallback = new RemoteCertificateValidationCallback (CheckValidationResult); " is 122.
Long Statement,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The length of the statement  "				if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) { " is 213.
Long Statement,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The length of the statement  "				} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) { " is 124.
Long Statement,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The length of the statement  "			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) { " is 224.
Long Statement,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The length of the statement  "		g.DrawString (((char)charNumberArray [i]).ToString ()' font' brushs [rd.Next (brushs.Length)]' new PointF (_offset + i * (_fontSize - 1)' (_height - _fontSize) / 2)); " is 166.
Long Statement,J6.DevFw.Framework.Web.UI,UrlPager,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Pager,The length of the statement  "		linkUrl = this.Getter.Get (this.CurrentPageIndex' this.PageCount' this.CurrentPageIndex - 1' PagingFlag.Control | PagingFlag.Previous' out linkText); " is 149.
Long Statement,J6.DevFw.Framework.Web.UI,UrlPager,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Pager,The length of the statement  "		linkUrl = this.Getter.Get (this.CurrentPageIndex' this.PageCount' this.CurrentPageIndex' PagingFlag.Control | PagingFlag.Previous' out linkText); " is 145.
Long Statement,J6.DevFw.Framework.Web.UI,UrlPager,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Pager,The length of the statement  "	for (int i = 1' j = startPage; i <= c && j <= PageCount; i++' j = (CurrentPageIndex % c == 0 ? CurrentPageIndex - 1 : CurrentPageIndex) / c * c + i) { " is 150.
Long Statement,J6.DevFw.Framework.Web.UI,UrlPager,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Pager,The length of the statement  "	//if (EnableInput) sb.Append("<input type=\"text\" size=\"2\"/><a href=\"#\" class=\"go\" onclick=\"gotoPage(this)\">").Append(InputButtonText ?? "跳页").Append("</a>"); " is 167.
Long Statement,J6.DevFw.Framework.Web.UI,UrlPager,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Pager,The length of the statement  "		linkUrl = this.Getter.Get (this.CurrentPageIndex' this.PageCount' this.CurrentPageIndex + 1' PagingFlag.Control | PagingFlag.Next' out linkText); " is 145.
Long Statement,J6.DevFw.Framework.Web.UI,UrlPager,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Pager,The length of the statement  "		linkUrl = this.Getter.Get (this.CurrentPageIndex' this.PageCount' this.CurrentPageIndex' PagingFlag.Control | PagingFlag.Next' out linkText); " is 141.
Long Statement,J6.DevFw.Framework.Web.UI,UrlPager,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Pager,The length of the statement  "		selectSb.Append ("<select onchange=\"").Append ("location.href='").Append (linkUrl.Replace ("1"' "#")).Append ("'.replace('#''this.value);").Append ("\">"); " is 156.
Long Statement,J6.DevFw.Framework.Web.UI,UrlPager,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Pager,The length of the statement  "		sb.Append (String.Format (String.Concat ("<span class=\"select\">"' this.SelectPageText' "</span>")' selectSb.ToString ())); " is 124.
Long Statement,J6.DevFw.Framework.Web.UI,UrlPager,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\UrlPager.cs,Pager,The length of the statement  "		sb.Append (String.Format (_pagerTotal' CurrentPageIndex.ToString ()' _pageCount.ToString ()' this.RecordCount.ToString ())); " is 124.
Long Statement,J6.DevFw.Framework.Web.unused.HttpModule,HttpReportModule,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\HttpModule\HttpReportModule.cs,ProcessError,The length of the statement  "		if (String.IsNullOrEmpty (remoteuri) || (remoteuri.IndexOf (domain) != -1 && HttpContext.Current.Request.ApplicationPath == "/")) " is 129.
Long Statement,J6.DevFw.Framework.Web.unused,ExceptionProcess,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\ExceptionProcess.cs,TraceError,The length of the statement  "	sb.Append ("[Error] Hapend at ").Append (String.Format ("{0:yyyy:MM:dd HH:mm:ss}"' DateTime.Now)).Append ("\tip:").Append (context.Request.UserHostAddress).Append (" \tpath:").Append (context.Request.Url.PathAndQuery).Append ("\r\n").Append ('-'' 100).Append ("\r\n").Append ("[message]:").Append (e.Message).Append (" [type]:").Append (e.GetType ().ToString ()).Append ("\r\n").Append ("[stack]:").Append (e.StackTrace).Append ("\r\n"); " is 437.
Long Statement,J6.DevFw.Framework.Web.unused,ExceptionProcess,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\ExceptionProcess.cs,PostError,The length of the statement  "	sb.Append ("[Error] Hapend at ").Append (String.Format ("{0:yyyy:MM:dd HH:mm:ss}"' DateTime.Now)).Append ("\tip:").Append (ip).Append (" \tpath:").Append (errorUri).Append ("\r\n").Append ('-'' 100).Append ("\r\n").Append ("[message]:").Append (msg).Append (" [type]:").Append (type).Append ("\r\n").Append ("[stack]:").Append (trace).Append ("\r\n"); " is 351.
Long Statement,J6.DevFw.Framework.Web.unused,ExceptionProcess,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\ExceptionProcess.cs,PostRemoteError,The length of the statement  "	sb.Append (context.Request.Url.ToString ().Replace ("'"' "__")).Append ("'").Append (context.Request.UserHostAddress).Append ("'").Append (e.GetType ().ToString ()).Append ("'").Append (e.Message).Append ("'").Append (e.StackTrace.Replace ("'"' "__")); " is 252.
Long Statement,J6.DevFw.Framework.Web.unused.Handler,ExecuteHandler,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\Handler\ExecuteHandler.cs,ProcessRequest,The length of the statement  "	string task = context.Request ["do"] ?? (context.Request.Url.Query.IndexOfAny (chars) != -1 ? context.Request.Url.Query.Replace ("?"' "") : context.Request ["task"]); " is 166.
Long Statement,J6.DevFw.Framework.Web.unused.Handler,ExecuteHandler,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\Handler\ExecuteHandler.cs,ProcessRequest,The length of the statement  "		returnObj = method.GetParameters ().Length != 0 && args.Length > 2 ? method.Invoke (obj' task.Substring (args [0].Length + args [1].Length + 2).Split (''')) : method.Invoke (obj' null); " is 185.
Long Statement,J6.DevFw.Framework.Web.unused.Handler,GetAttribute,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\Handler\HttpMethodAttribute.cs,PreExecuting,The length of the statement  "				HttpContext.Current.Response.Write (String.IsNullOrEmpty (RefreshErrorMessage) ? "Service unavailable!" : RefreshErrorMessage); " is 127.
Long Statement,J6.DevFw.Framework.Xml.AutoObject,XmlObject,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Xml\AutoObject\AutoObjectXml.cs,ToJson,The length of the statement  "	sb.Append ("{'key':'").Append (this.key.Replace ("'"' "\\'")).Append ("'''name':'").Append ((this.name ?? "").Replace ("'"' "\\'")).Append ("'''descript':'").Append ((this.descript ?? "").Replace ("'"' "\\'")).Append ("'''properties':"); " is 237.
Long Statement,J6.DevFw.Framework.Xml.AutoObject,XmlObject,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Xml\AutoObject\AutoObjectXml.cs,ToJson,The length of the statement  "			sb.Append ("{'key':'").Append (pro.Key.Replace ("'"' "\\'")).Append ("'''name':'").Append ((pro.Name ?? "").Replace ("'"' "\\'")).Append ("'''descript':'").Append ((pro.Descript ?? "").Replace ("'"' "\\'")).Append ("'}"); " is 221.
Long Statement,J6.DevFw.Framework.Xml.AutoObject,AutoObjectXml,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Xml\AutoObject\AutoObjectXml.cs,InsertFromType,The length of the statement  "			list.Add (new XmlObjectProperty (p.Name' xpa == null || xpa.Name == null ? p.Name : xpa.Name' xpa == null || xpa.Name == null ? "" : xpa.Descript)); " is 148.
Long Statement,J6.DevFw.Framework.Xml.AutoObject,AutoObjectXml,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Xml\AutoObject\AutoObjectXml.cs,GetObject,The length of the statement  "	XmlObject obj = new XmlObject (node.Attributes ["key"].Value' node.Attributes ["name"].Value' node.SelectSingleNode ("descript").InnerText); " is 140.
Long Statement,J6.DevFw.Framework.Xml.AutoObject,AutoObjectXml,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Xml\AutoObject\AutoObjectXml.cs,GetObjects,The length of the statement  "		obj = new XmlObject (node.Attributes ["key"].Value' node.Attributes ["name"].Value' node.SelectSingleNode ("descript").InnerText); " is 130.
Long Statement,J6.DevFw.Framework.Xml.AutoObject,AutoXmlTest,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Xml\AutoObject\AutoXmlTest.cs,Test,The length of the statement  "	Xml.AutoObject.AutoObjectXml ax = new Xml.AutoObject.AutoObjectXml (AppDomain.CurrentDomain.BaseDirectory + "templet/template_dict.xml"); " is 137.
Long Statement,J6.DevFw.Framework.Xml.AutoObject,AutoXmlTest,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Xml\AutoObject\AutoXmlTest.cs,Test,The length of the statement  "	ax.InsertObjectNode ("Temp"' "客户"' ""' new XmlObjectProperty ("ID"' "客户编号"' "1234\nretyt\nfdsf")' new XmlObjectProperty ("RealName"' "真实姓名")); " is 142.
Long Statement,J6.DevFw.Framework.Xml.AutoObject,XmlObjectDoc,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Xml\AutoObject\XmlObjectDoc.cs,GetGrid,The length of the statement  "			sb.Append ("<tr><td class=\"key\">").Append (p.Key).Append ("</td><td class=\"name\">").Append (p.Name).Append ("</td><td class=\"descript\">").Append (p.Descript).Append ("&nbsp;</td></tr>"); " is 192.
Long Statement,J6.DevFw.Framework.Xml.AutoObject,XmlObjectDoc,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Xml\AutoObject\XmlObjectDoc.cs,GetGrid,The length of the statement  "	return tpl.Replace ("%object.key%"' obj.Key).Replace ("%object.index%"' index < 1 ? "" : index.ToString ()).Replace ("%object.name%"' obj.Name).Replace ("%object.descript%"' obj.Descript.Replace ("\n"' "<br />")).Replace ("%object.prop%"' sb.ToString ()); " is 255.
Complex Conditional,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The conditional expression  "((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))"  is complex.
Complex Conditional,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The conditional expression  "((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))"  is complex.
Complex Conditional,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,GraphicDrawImage,The conditional expression  "i < _ul_s || i > _ll_e || (i > _ul_e && i < _ll_s)"  is complex.
Complex Conditional,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,TwistImage,The conditional expression  "nOldX >= 0 && nOldX < destBmp.Width && nOldY >= 0 && nOldY < destBmp.Height"  is complex.
Empty Catch Block,J6.DevFw.Framework.Extensions,TExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\TExtensions.cs,CloneData,The method has an empty catch block.
Empty Catch Block,J6.DevFw.Framework.Extensions,TExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\TExtensions.cs,CloneData,The method has an empty catch block.
Empty Catch Block,J6.DevFw.Framework.Net,HttpClient,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Net\HttpClient.cs,DownloadFile,The method has an empty catch block.
Magic Number,J6.DevFw,FwCtx,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\FwCtx.cs,Mono,The following statement contains a magic number: return _platformId == 4 || _platformId == 6 || _platformId == 128;  
Magic Number,J6.DevFw,FwCtx,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\FwCtx.cs,Mono,The following statement contains a magic number: return _platformId == 4 || _platformId == 6 || _platformId == 128;  
Magic Number,J6.DevFw,FwCtx,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\FwCtx.cs,Mono,The following statement contains a magic number: return _platformId == 4 || _platformId == 6 || _platformId == 128;  
Magic Number,J6.DevFw,MicroTemplateEngine,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\MicroTemplateEngine.cs,Execute,The following statement contains a magic number: resultTxt = tagRegex.Replace (resultTxt' m => {  	tagName = m.Groups [1].Value;  	//获得参数  	paramMcs = paramRegex.Matches (m.Groups [2].Value);  	parameters = new object[paramMcs.Count];  	//查找是否存在方法(方法参数均为string类型)  	parameterTypes = new Type[parameters.Length];  	for (int i = 0; i < parameterTypes.Length; i++) {  		parameterTypes [i] = typeof(String);  	}  	method = type.GetMethod (tagName' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.IgnoreCase' null' parameterTypes' null);  	//如果方法存在则执行返回结果，否则返回原始值  	if (method == null) {  		return m.Value;  	} else {  		//数字参数  		string intParamValue;  		//则给参数数组赋值  		for (int i = 0; i < paramMcs.Count; i++) {  			intParamValue = paramMcs [i].Groups [2].Value;  			if (intParamValue != String.Empty) {  				parameters [i] = intParamValue;  			} else {  				parameters [i] = paramMcs [i].Groups [1].Value;  			}  		}  		//执行方法并返回结果  		return method.Invoke (instance' parameters).ToString ();  	}  });  
Magic Number,J6.DevFw,MicroTemplateEngine,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\MicroTemplateEngine.cs,Execute,The following statement contains a magic number: resultTxt = tagRegex.Replace (resultTxt' m => {  	tagName = m.Groups [1].Value;  	//获得参数  	paramMcs = paramRegex.Matches (m.Groups [2].Value);  	parameters = new object[paramMcs.Count];  	//查找是否存在方法(方法参数均为string类型)  	parameterTypes = new Type[parameters.Length];  	for (int i = 0; i < parameterTypes.Length; i++) {  		parameterTypes [i] = typeof(String);  	}  	method = type.GetMethod (tagName' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.IgnoreCase' null' parameterTypes' null);  	//如果方法存在则执行返回结果，否则返回原始值  	if (method == null) {  		return m.Value;  	} else {  		//数字参数  		string intParamValue;  		//则给参数数组赋值  		for (int i = 0; i < paramMcs.Count; i++) {  			intParamValue = paramMcs [i].Groups [2].Value;  			if (intParamValue != String.Empty) {  				parameters [i] = intParamValue;  			} else {  				parameters [i] = paramMcs [i].Groups [1].Value;  			}  		}  		//执行方法并返回结果  		return method.Invoke (instance' parameters).ToString ();  	}  });  
Magic Number,J6.DevFw,MicroTemplateEngine,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\MicroTemplateEngine.cs,Execute,The following statement contains a magic number: paramMcs = paramRegex.Matches (m.Groups [2].Value);  
Magic Number,J6.DevFw,MicroTemplateEngine,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\MicroTemplateEngine.cs,Execute,The following statement contains a magic number: if (method == null) {  	return m.Value;  } else {  	//数字参数  	string intParamValue;  	//则给参数数组赋值  	for (int i = 0; i < paramMcs.Count; i++) {  		intParamValue = paramMcs [i].Groups [2].Value;  		if (intParamValue != String.Empty) {  			parameters [i] = intParamValue;  		} else {  			parameters [i] = paramMcs [i].Groups [1].Value;  		}  	}  	//执行方法并返回结果  	return method.Invoke (instance' parameters).ToString ();  }  
Magic Number,J6.DevFw,MicroTemplateEngine,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\MicroTemplateEngine.cs,Execute,The following statement contains a magic number: for (int i = 0; i < paramMcs.Count; i++) {  	intParamValue = paramMcs [i].Groups [2].Value;  	if (intParamValue != String.Empty) {  		parameters [i] = intParamValue;  	} else {  		parameters [i] = paramMcs [i].Groups [1].Value;  	}  }  
Magic Number,J6.DevFw,MicroTemplateEngine,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\MicroTemplateEngine.cs,Execute,The following statement contains a magic number: intParamValue = paramMcs [i].Groups [2].Value;  
Magic Number,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The following statement contains a magic number: if (eta.Length != 0) {  	//读取属性  	PropertyInfo[] prolist = type.GetProperties ();  	foreach (PropertyInfo pro in prolist) {  		//枚举则获取对应的数值  		if (pro.PropertyType.IsEnum) {  			value = Convert.ToInt32 (pro.GetValue (t' null)).ToString ();  		} else {  			value = (pro.GetValue (t' null) ?? String.Empty).ToString ();  		}  		FormFieldAttribute[] fieldAttrs = pro.GetCustomAttributes (typeof(FormFieldAttribute)' false) as FormFieldAttribute[];  		if (fieldAttrs.Length == 0) {  			continue;  		} else {  			ffa = fieldAttrs [0];  			//设置标题  			sb.Append ("<dl").Append (ffa.Hidden ? " style=\"display:none\"" : "").Append (String.IsNullOrEmpty (ffa.Group) ? ">" : " group=\"" + ffa.Group + "\">").Append ("<dt>").Append (ffa.IsRequired ? "<span class=\"required\">*</span>" : "").Append (String.IsNullOrEmpty (ffa.Text) ? ffa.Name : ffa.Text).Append (":</dt>").Append ("<dd>");  			if (!ffa.DisableEdit) {  				//设置UI  				SelectFieldAttribute[] sfAttrs = pro.GetCustomAttributes (typeof(SelectFieldAttribute)' false) as SelectFieldAttribute[];  				if (sfAttrs.Length != 0) {  					sfa = sfAttrs [0];  					//输出SELECT或RADIO  					if (sfa.UseDrop) {  						sb.Append ("<select class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"");  						if (ffa.IsRequired) {  							sb.Append (" required=\"true\"");  						}  						sb.Append (">");  						//输出选项  						string[] data = sfa.Data.Split (';'' '|');  						string[] opt;  						foreach (string dstr in data) {  							opt = dstr.Split ('=');  							if (opt.Length == 2) {  								sb.Append ("<option value=\"").Append (opt [1]).Append ("\"").Append (value == opt [1] ? " selected=\"selected\"" : "").Append (">").Append (opt [0]).Append ("</option>");  							}  						}  						sb.Append ("</select>");  					} else {  						//  						//UNDONE:....  						//  					}  				} else {  					if (ffa.MultLine) {  						//输出Textbox  						sb.Append ("<textarea class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"");  					} else {  						//输出INPUT  						sb.Append ("<input class=\"ui-validate\" type=\"").Append (ffa.IsPassword ? "password" : "text").Append ("\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"").Append (" value=\"").Append (value).Append ("\"");  					}  					if (ffa.IsRequired) {  						sb.Append (" required=\"true\"");  					}  					if (ffa.IsNumber) {  						sb.Append (" isnumber=\"true\"");  					}  					if (!String.IsNullOrEmpty (ffa.Length)) {  						sb.Append (" length=\"").Append (ffa.Length).Append ("\"");  					}  					if (!String.IsNullOrEmpty (ffa.Regex)) {  						sb.Append (" regex=\"").Append (ffa.Regex).Append ("\"");  					}  					if (ffa.MultLine) {  						//关闭Textarea  						sb.Append (">").Append (value).Append ("</textarea>");  					} else {  						//关闭INPUT  						sb.Append (" />");  					}  				}  			} else {  				sb.Append (value).Append ("<input type=\"hidden\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\" value=\"").Append (value).Append ("\"/>");  			}  			//列描述  			if (!String.IsNullOrEmpty (ffa.Descript)) {  				sb.Append ("<span class=\"descript\">").Append (ffa.Descript).Append ("</span>");  			}  			//关闭列  			sb.Append ("</dd></dl>\r\n");  		}  	}  } else {  	sb.Append ("<strong style=\"color:red;font-size:14px;\">该实体不支持EntityForm!</strong>");  }  
Magic Number,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The following statement contains a magic number: foreach (PropertyInfo pro in prolist) {  	//枚举则获取对应的数值  	if (pro.PropertyType.IsEnum) {  		value = Convert.ToInt32 (pro.GetValue (t' null)).ToString ();  	} else {  		value = (pro.GetValue (t' null) ?? String.Empty).ToString ();  	}  	FormFieldAttribute[] fieldAttrs = pro.GetCustomAttributes (typeof(FormFieldAttribute)' false) as FormFieldAttribute[];  	if (fieldAttrs.Length == 0) {  		continue;  	} else {  		ffa = fieldAttrs [0];  		//设置标题  		sb.Append ("<dl").Append (ffa.Hidden ? " style=\"display:none\"" : "").Append (String.IsNullOrEmpty (ffa.Group) ? ">" : " group=\"" + ffa.Group + "\">").Append ("<dt>").Append (ffa.IsRequired ? "<span class=\"required\">*</span>" : "").Append (String.IsNullOrEmpty (ffa.Text) ? ffa.Name : ffa.Text).Append (":</dt>").Append ("<dd>");  		if (!ffa.DisableEdit) {  			//设置UI  			SelectFieldAttribute[] sfAttrs = pro.GetCustomAttributes (typeof(SelectFieldAttribute)' false) as SelectFieldAttribute[];  			if (sfAttrs.Length != 0) {  				sfa = sfAttrs [0];  				//输出SELECT或RADIO  				if (sfa.UseDrop) {  					sb.Append ("<select class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"");  					if (ffa.IsRequired) {  						sb.Append (" required=\"true\"");  					}  					sb.Append (">");  					//输出选项  					string[] data = sfa.Data.Split (';'' '|');  					string[] opt;  					foreach (string dstr in data) {  						opt = dstr.Split ('=');  						if (opt.Length == 2) {  							sb.Append ("<option value=\"").Append (opt [1]).Append ("\"").Append (value == opt [1] ? " selected=\"selected\"" : "").Append (">").Append (opt [0]).Append ("</option>");  						}  					}  					sb.Append ("</select>");  				} else {  					//  					//UNDONE:....  					//  				}  			} else {  				if (ffa.MultLine) {  					//输出Textbox  					sb.Append ("<textarea class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"");  				} else {  					//输出INPUT  					sb.Append ("<input class=\"ui-validate\" type=\"").Append (ffa.IsPassword ? "password" : "text").Append ("\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"").Append (" value=\"").Append (value).Append ("\"");  				}  				if (ffa.IsRequired) {  					sb.Append (" required=\"true\"");  				}  				if (ffa.IsNumber) {  					sb.Append (" isnumber=\"true\"");  				}  				if (!String.IsNullOrEmpty (ffa.Length)) {  					sb.Append (" length=\"").Append (ffa.Length).Append ("\"");  				}  				if (!String.IsNullOrEmpty (ffa.Regex)) {  					sb.Append (" regex=\"").Append (ffa.Regex).Append ("\"");  				}  				if (ffa.MultLine) {  					//关闭Textarea  					sb.Append (">").Append (value).Append ("</textarea>");  				} else {  					//关闭INPUT  					sb.Append (" />");  				}  			}  		} else {  			sb.Append (value).Append ("<input type=\"hidden\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\" value=\"").Append (value).Append ("\"/>");  		}  		//列描述  		if (!String.IsNullOrEmpty (ffa.Descript)) {  			sb.Append ("<span class=\"descript\">").Append (ffa.Descript).Append ("</span>");  		}  		//关闭列  		sb.Append ("</dd></dl>\r\n");  	}  }  
Magic Number,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The following statement contains a magic number: if (fieldAttrs.Length == 0) {  	continue;  } else {  	ffa = fieldAttrs [0];  	//设置标题  	sb.Append ("<dl").Append (ffa.Hidden ? " style=\"display:none\"" : "").Append (String.IsNullOrEmpty (ffa.Group) ? ">" : " group=\"" + ffa.Group + "\">").Append ("<dt>").Append (ffa.IsRequired ? "<span class=\"required\">*</span>" : "").Append (String.IsNullOrEmpty (ffa.Text) ? ffa.Name : ffa.Text).Append (":</dt>").Append ("<dd>");  	if (!ffa.DisableEdit) {  		//设置UI  		SelectFieldAttribute[] sfAttrs = pro.GetCustomAttributes (typeof(SelectFieldAttribute)' false) as SelectFieldAttribute[];  		if (sfAttrs.Length != 0) {  			sfa = sfAttrs [0];  			//输出SELECT或RADIO  			if (sfa.UseDrop) {  				sb.Append ("<select class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"");  				if (ffa.IsRequired) {  					sb.Append (" required=\"true\"");  				}  				sb.Append (">");  				//输出选项  				string[] data = sfa.Data.Split (';'' '|');  				string[] opt;  				foreach (string dstr in data) {  					opt = dstr.Split ('=');  					if (opt.Length == 2) {  						sb.Append ("<option value=\"").Append (opt [1]).Append ("\"").Append (value == opt [1] ? " selected=\"selected\"" : "").Append (">").Append (opt [0]).Append ("</option>");  					}  				}  				sb.Append ("</select>");  			} else {  				//  				//UNDONE:....  				//  			}  		} else {  			if (ffa.MultLine) {  				//输出Textbox  				sb.Append ("<textarea class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"");  			} else {  				//输出INPUT  				sb.Append ("<input class=\"ui-validate\" type=\"").Append (ffa.IsPassword ? "password" : "text").Append ("\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"").Append (" value=\"").Append (value).Append ("\"");  			}  			if (ffa.IsRequired) {  				sb.Append (" required=\"true\"");  			}  			if (ffa.IsNumber) {  				sb.Append (" isnumber=\"true\"");  			}  			if (!String.IsNullOrEmpty (ffa.Length)) {  				sb.Append (" length=\"").Append (ffa.Length).Append ("\"");  			}  			if (!String.IsNullOrEmpty (ffa.Regex)) {  				sb.Append (" regex=\"").Append (ffa.Regex).Append ("\"");  			}  			if (ffa.MultLine) {  				//关闭Textarea  				sb.Append (">").Append (value).Append ("</textarea>");  			} else {  				//关闭INPUT  				sb.Append (" />");  			}  		}  	} else {  		sb.Append (value).Append ("<input type=\"hidden\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\" value=\"").Append (value).Append ("\"/>");  	}  	//列描述  	if (!String.IsNullOrEmpty (ffa.Descript)) {  		sb.Append ("<span class=\"descript\">").Append (ffa.Descript).Append ("</span>");  	}  	//关闭列  	sb.Append ("</dd></dl>\r\n");  }  
Magic Number,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The following statement contains a magic number: if (!ffa.DisableEdit) {  	//设置UI  	SelectFieldAttribute[] sfAttrs = pro.GetCustomAttributes (typeof(SelectFieldAttribute)' false) as SelectFieldAttribute[];  	if (sfAttrs.Length != 0) {  		sfa = sfAttrs [0];  		//输出SELECT或RADIO  		if (sfa.UseDrop) {  			sb.Append ("<select class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"");  			if (ffa.IsRequired) {  				sb.Append (" required=\"true\"");  			}  			sb.Append (">");  			//输出选项  			string[] data = sfa.Data.Split (';'' '|');  			string[] opt;  			foreach (string dstr in data) {  				opt = dstr.Split ('=');  				if (opt.Length == 2) {  					sb.Append ("<option value=\"").Append (opt [1]).Append ("\"").Append (value == opt [1] ? " selected=\"selected\"" : "").Append (">").Append (opt [0]).Append ("</option>");  				}  			}  			sb.Append ("</select>");  		} else {  			//  			//UNDONE:....  			//  		}  	} else {  		if (ffa.MultLine) {  			//输出Textbox  			sb.Append ("<textarea class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"");  		} else {  			//输出INPUT  			sb.Append ("<input class=\"ui-validate\" type=\"").Append (ffa.IsPassword ? "password" : "text").Append ("\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"").Append (" value=\"").Append (value).Append ("\"");  		}  		if (ffa.IsRequired) {  			sb.Append (" required=\"true\"");  		}  		if (ffa.IsNumber) {  			sb.Append (" isnumber=\"true\"");  		}  		if (!String.IsNullOrEmpty (ffa.Length)) {  			sb.Append (" length=\"").Append (ffa.Length).Append ("\"");  		}  		if (!String.IsNullOrEmpty (ffa.Regex)) {  			sb.Append (" regex=\"").Append (ffa.Regex).Append ("\"");  		}  		if (ffa.MultLine) {  			//关闭Textarea  			sb.Append (">").Append (value).Append ("</textarea>");  		} else {  			//关闭INPUT  			sb.Append (" />");  		}  	}  } else {  	sb.Append (value).Append ("<input type=\"hidden\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\" value=\"").Append (value).Append ("\"/>");  }  
Magic Number,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The following statement contains a magic number: if (sfAttrs.Length != 0) {  	sfa = sfAttrs [0];  	//输出SELECT或RADIO  	if (sfa.UseDrop) {  		sb.Append ("<select class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"");  		if (ffa.IsRequired) {  			sb.Append (" required=\"true\"");  		}  		sb.Append (">");  		//输出选项  		string[] data = sfa.Data.Split (';'' '|');  		string[] opt;  		foreach (string dstr in data) {  			opt = dstr.Split ('=');  			if (opt.Length == 2) {  				sb.Append ("<option value=\"").Append (opt [1]).Append ("\"").Append (value == opt [1] ? " selected=\"selected\"" : "").Append (">").Append (opt [0]).Append ("</option>");  			}  		}  		sb.Append ("</select>");  	} else {  		//  		//UNDONE:....  		//  	}  } else {  	if (ffa.MultLine) {  		//输出Textbox  		sb.Append ("<textarea class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"");  	} else {  		//输出INPUT  		sb.Append ("<input class=\"ui-validate\" type=\"").Append (ffa.IsPassword ? "password" : "text").Append ("\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"").Append (" value=\"").Append (value).Append ("\"");  	}  	if (ffa.IsRequired) {  		sb.Append (" required=\"true\"");  	}  	if (ffa.IsNumber) {  		sb.Append (" isnumber=\"true\"");  	}  	if (!String.IsNullOrEmpty (ffa.Length)) {  		sb.Append (" length=\"").Append (ffa.Length).Append ("\"");  	}  	if (!String.IsNullOrEmpty (ffa.Regex)) {  		sb.Append (" regex=\"").Append (ffa.Regex).Append ("\"");  	}  	if (ffa.MultLine) {  		//关闭Textarea  		sb.Append (">").Append (value).Append ("</textarea>");  	} else {  		//关闭INPUT  		sb.Append (" />");  	}  }  
Magic Number,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The following statement contains a magic number: if (sfa.UseDrop) {  	sb.Append ("<select class=\"ui-validate\" field=\"").Append (ffa.Name).Append ("\" name=\"field_").Append (ffa.Name).Append ("\"");  	if (ffa.IsRequired) {  		sb.Append (" required=\"true\"");  	}  	sb.Append (">");  	//输出选项  	string[] data = sfa.Data.Split (';'' '|');  	string[] opt;  	foreach (string dstr in data) {  		opt = dstr.Split ('=');  		if (opt.Length == 2) {  			sb.Append ("<option value=\"").Append (opt [1]).Append ("\"").Append (value == opt [1] ? " selected=\"selected\"" : "").Append (">").Append (opt [0]).Append ("</option>");  		}  	}  	sb.Append ("</select>");  } else {  	//  	//UNDONE:....  	//  }  
Magic Number,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The following statement contains a magic number: foreach (string dstr in data) {  	opt = dstr.Split ('=');  	if (opt.Length == 2) {  		sb.Append ("<option value=\"").Append (opt [1]).Append ("\"").Append (value == opt [1] ? " selected=\"selected\"" : "").Append (">").Append (opt [0]).Append ("</option>");  	}  }  
Magic Number,J6.DevFw.Framework.Automation,EntityForm,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Automation\EntityForm.cs,Build,The following statement contains a magic number: if (opt.Length == 2) {  	sb.Append ("<option value=\"").Append (opt [1]).Append ("\"").Append (value == opt [1] ? " selected=\"selected\"" : "").Append (">").Append (opt [0]).Append ("</option>");  }  
Magic Number,J6.DevFw.Framework.Security,Md5Crypto,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Security\Md5Crypto.cs,Encode16MD5,The following statement contains a magic number: return BitConverter.ToString (md5.ComputeHash (Encoding.UTF8.GetBytes (str))' 4' 8).Replace ("-"' String.Empty);  
Magic Number,J6.DevFw.Framework.Security,Md5Crypto,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Security\Md5Crypto.cs,Encode16MD5,The following statement contains a magic number: return BitConverter.ToString (md5.ComputeHash (Encoding.UTF8.GetBytes (str))' 4' 8).Replace ("-"' String.Empty);  
Magic Number,J6.DevFw.Framework.Extensions,StringExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\StringExtensions.cs,RandomLetters,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	str += cs [rd.Next (24)];  	//24为cs.Length  }  
Magic Number,J6.DevFw.Framework.Extensions,StringExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\StringExtensions.cs,RandomLetters,The following statement contains a magic number: str += cs [rd.Next (24)];  
Magic Number,J6.DevFw.Framework.Extensions,StringExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\StringExtensions.cs,RandomUpperLetters,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	randomNum = rd.Next (24);  	//24为cs.Length  	str += randomNum > 12 ? cs [rd.Next (randomNum)].ToString ().ToUpper () : cs [rd.Next (randomNum)].ToString ();  }  
Magic Number,J6.DevFw.Framework.Extensions,StringExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\StringExtensions.cs,RandomUpperLetters,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	randomNum = rd.Next (24);  	//24为cs.Length  	str += randomNum > 12 ? cs [rd.Next (randomNum)].ToString ().ToUpper () : cs [rd.Next (randomNum)].ToString ();  }  
Magic Number,J6.DevFw.Framework.Extensions,StringExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\StringExtensions.cs,RandomUpperLetters,The following statement contains a magic number: randomNum = rd.Next (24);  
Magic Number,J6.DevFw.Framework.Extensions,StringExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\StringExtensions.cs,RandomUpperLetters,The following statement contains a magic number: str += randomNum > 12 ? cs [rd.Next (randomNum)].ToString ().ToUpper () : cs [rd.Next (randomNum)].ToString ();  
Magic Number,J6.DevFw.Framework.Extensions,HttpExtensions,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Extensions\HttpExtensions.cs,IscMobileDevice,The following statement contains a magic number: return b.IsMatch (u) || v.IsMatch (u.Substring (0' 4));  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: if (mode == ImageSizeMode.Cut) {  	if ((double)original.Width / (double)original.Height > (double)toSize.Width / (double)toSize.Height) {  		oh = original.Height;  		ow = original.Height * toWidth / toHeight;  		y = 0;  		x = (original.Width - ow) / 2;  	} else {  		ow = original.Width;  		oh = original.Width * height / toWidth;  		x = 0;  		y = (original.Height - oh) / 2;  	}  } else {  	x = (toSize.Width - imageSize.Width) / 2;  	y = (toSize.Height - imageSize.Height) / 2;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: if (mode == ImageSizeMode.Cut) {  	if ((double)original.Width / (double)original.Height > (double)toSize.Width / (double)toSize.Height) {  		oh = original.Height;  		ow = original.Height * toWidth / toHeight;  		y = 0;  		x = (original.Width - ow) / 2;  	} else {  		ow = original.Width;  		oh = original.Width * height / toWidth;  		x = 0;  		y = (original.Height - oh) / 2;  	}  } else {  	x = (toSize.Width - imageSize.Width) / 2;  	y = (toSize.Height - imageSize.Height) / 2;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: if (mode == ImageSizeMode.Cut) {  	if ((double)original.Width / (double)original.Height > (double)toSize.Width / (double)toSize.Height) {  		oh = original.Height;  		ow = original.Height * toWidth / toHeight;  		y = 0;  		x = (original.Width - ow) / 2;  	} else {  		ow = original.Width;  		oh = original.Width * height / toWidth;  		x = 0;  		y = (original.Height - oh) / 2;  	}  } else {  	x = (toSize.Width - imageSize.Width) / 2;  	y = (toSize.Height - imageSize.Height) / 2;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: if (mode == ImageSizeMode.Cut) {  	if ((double)original.Width / (double)original.Height > (double)toSize.Width / (double)toSize.Height) {  		oh = original.Height;  		ow = original.Height * toWidth / toHeight;  		y = 0;  		x = (original.Width - ow) / 2;  	} else {  		ow = original.Width;  		oh = original.Width * height / toWidth;  		x = 0;  		y = (original.Height - oh) / 2;  	}  } else {  	x = (toSize.Width - imageSize.Width) / 2;  	y = (toSize.Height - imageSize.Height) / 2;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: if ((double)original.Width / (double)original.Height > (double)toSize.Width / (double)toSize.Height) {  	oh = original.Height;  	ow = original.Height * toWidth / toHeight;  	y = 0;  	x = (original.Width - ow) / 2;  } else {  	ow = original.Width;  	oh = original.Width * height / toWidth;  	x = 0;  	y = (original.Height - oh) / 2;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: if ((double)original.Width / (double)original.Height > (double)toSize.Width / (double)toSize.Height) {  	oh = original.Height;  	ow = original.Height * toWidth / toHeight;  	y = 0;  	x = (original.Width - ow) / 2;  } else {  	ow = original.Width;  	oh = original.Width * height / toWidth;  	x = 0;  	y = (original.Height - oh) / 2;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: x = (original.Width - ow) / 2;  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: y = (original.Height - oh) / 2;  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: x = (toSize.Width - imageSize.Width) / 2;  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: y = (toSize.Height - imageSize.Height) / 2;  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: if (imgCode != null) {  	EncoderParameters ep = new EncoderParameters (2);  	ep.Param [0] = new EncoderParameter (Encoder.Quality' imageQuality > 100 || imageQuality <= 0 ? 100L : imageQuality);  	ep.Param [1] = new EncoderParameter (Encoder.Compression' compression < 1L ? 100L : compression);  	bitmap.Save (ms' imgCode' ep);  } else {  	bitmap.Save (ms' ImageFormat.Jpeg);  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: if (imgCode != null) {  	EncoderParameters ep = new EncoderParameters (2);  	ep.Param [0] = new EncoderParameter (Encoder.Quality' imageQuality > 100 || imageQuality <= 0 ? 100L : imageQuality);  	ep.Param [1] = new EncoderParameter (Encoder.Compression' compression < 1L ? 100L : compression);  	bitmap.Save (ms' imgCode' ep);  } else {  	bitmap.Save (ms' ImageFormat.Jpeg);  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,DrawBySize,The following statement contains a magic number: ep.Param [0] = new EncoderParameter (Encoder.Quality' imageQuality > 100 || imageQuality <= 0 ? 100L : imageQuality);  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeThumbnail,The following statement contains a magic number: switch (mode) {  case ImageSizeMode.SuitWidth:  	toHeight = original.Height * width / original.Width;  	break;  case ImageSizeMode.SuitHeight:  	toWidth = original.Width * height / original.Height;  	break;  case ImageSizeMode.AutoSuit:  	//根据宽度适配  	if (original.Width > original.Height) {  		toHeight = original.Height * width / original.Width;  	} else//根据高度适配  	 {  		toWidth = original.Width * height / original.Height;  	}  	break;  //填充适应  case ImageSizeMode.FillFit:  	if ((double)original.Width / (double)original.Height > (double)toWidth / (double)toHeight) {  		toWidth = width;  		toHeight = original.Height * width / original.Width;  	} else {  		toHeight = height;  		toWidth = original.Width * height / original.Height;  	}  	break;  //裁剪  case ImageSizeMode.Cut:  	if ((double)original.Width / (double)original.Height > (double)toWidth / (double)toHeight) {  		oh = original.Height;  		ow = original.Height * toWidth / toHeight;  		y = 0;  		x = (original.Width - ow) / 2;  	} else {  		ow = original.Width;  		oh = original.Width * height / toWidth;  		x = 0;  		y = (original.Height - oh) / 2;  	}  	break;  default:  case ImageSizeMode.CustomSize:  	break;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeThumbnail,The following statement contains a magic number: switch (mode) {  case ImageSizeMode.SuitWidth:  	toHeight = original.Height * width / original.Width;  	break;  case ImageSizeMode.SuitHeight:  	toWidth = original.Width * height / original.Height;  	break;  case ImageSizeMode.AutoSuit:  	//根据宽度适配  	if (original.Width > original.Height) {  		toHeight = original.Height * width / original.Width;  	} else//根据高度适配  	 {  		toWidth = original.Width * height / original.Height;  	}  	break;  //填充适应  case ImageSizeMode.FillFit:  	if ((double)original.Width / (double)original.Height > (double)toWidth / (double)toHeight) {  		toWidth = width;  		toHeight = original.Height * width / original.Width;  	} else {  		toHeight = height;  		toWidth = original.Width * height / original.Height;  	}  	break;  //裁剪  case ImageSizeMode.Cut:  	if ((double)original.Width / (double)original.Height > (double)toWidth / (double)toHeight) {  		oh = original.Height;  		ow = original.Height * toWidth / toHeight;  		y = 0;  		x = (original.Width - ow) / 2;  	} else {  		ow = original.Width;  		oh = original.Width * height / toWidth;  		x = 0;  		y = (original.Height - oh) / 2;  	}  	break;  default:  case ImageSizeMode.CustomSize:  	break;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeThumbnail,The following statement contains a magic number: if ((double)original.Width / (double)original.Height > (double)toWidth / (double)toHeight) {  	oh = original.Height;  	ow = original.Height * toWidth / toHeight;  	y = 0;  	x = (original.Width - ow) / 2;  } else {  	ow = original.Width;  	oh = original.Width * height / toWidth;  	x = 0;  	y = (original.Height - oh) / 2;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeThumbnail,The following statement contains a magic number: if ((double)original.Width / (double)original.Height > (double)toWidth / (double)toHeight) {  	oh = original.Height;  	ow = original.Height * toWidth / toHeight;  	y = 0;  	x = (original.Width - ow) / 2;  } else {  	ow = original.Width;  	oh = original.Width * height / toWidth;  	x = 0;  	y = (original.Height - oh) / 2;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeThumbnail,The following statement contains a magic number: x = (original.Width - ow) / 2;  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeThumbnail,The following statement contains a magic number: y = (original.Height - oh) / 2;  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeThumbnail,The following statement contains a magic number: g.DrawImage (original' new Rectangle ((width - toWidth) / 2' (height - toHeight) / 2' toWidth' toHeight)' new Rectangle (x' y' ow' oh)' GraphicsUnit.Pixel);  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeThumbnail,The following statement contains a magic number: g.DrawImage (original' new Rectangle ((width - toWidth) / 2' (height - toHeight) / 2' toWidth' toHeight)' new Rectangle (x' y' ow' oh)' GraphicsUnit.Pixel);  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,The following statement contains a magic number: switch (pos) {  case WatermarkPosition.Bottom:  	//正下方  	x = (img.Width - water.Width) / 2;  	y = img.Height - water.Height - yOffset;  	break;  case WatermarkPosition.LeftBottom:  	//左下方  	x = xOffset;  	y = img.Height - water.Height - yOffset;  	break;  case WatermarkPosition.Right:  	//右方  	x = img.Width - water.Width - xOffset;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.Middle:  	//正中  	x = (img.Width - water.Width) / 2;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.Left:  	//左边  	x = xOffset;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.RightTop:  	//右上方  	x = img.Width - water.Width - xOffset;  	y = yOffset;  	break;  case WatermarkPosition.Top:  	//正上方  	x = (img.Width - water.Width) / 2;  	y = yOffset;  	break;  case WatermarkPosition.LeftTop:  	//左上方  	x = xOffset;  	y = yOffset;  	break;  default:  case WatermarkPosition.Default:  case WatermarkPosition.RightBottom:  	//右下角  	x = img.Width - water.Width - xOffset;  	y = img.Height - water.Height - yOffset;  	break;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,The following statement contains a magic number: switch (pos) {  case WatermarkPosition.Bottom:  	//正下方  	x = (img.Width - water.Width) / 2;  	y = img.Height - water.Height - yOffset;  	break;  case WatermarkPosition.LeftBottom:  	//左下方  	x = xOffset;  	y = img.Height - water.Height - yOffset;  	break;  case WatermarkPosition.Right:  	//右方  	x = img.Width - water.Width - xOffset;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.Middle:  	//正中  	x = (img.Width - water.Width) / 2;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.Left:  	//左边  	x = xOffset;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.RightTop:  	//右上方  	x = img.Width - water.Width - xOffset;  	y = yOffset;  	break;  case WatermarkPosition.Top:  	//正上方  	x = (img.Width - water.Width) / 2;  	y = yOffset;  	break;  case WatermarkPosition.LeftTop:  	//左上方  	x = xOffset;  	y = yOffset;  	break;  default:  case WatermarkPosition.Default:  case WatermarkPosition.RightBottom:  	//右下角  	x = img.Width - water.Width - xOffset;  	y = img.Height - water.Height - yOffset;  	break;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,The following statement contains a magic number: switch (pos) {  case WatermarkPosition.Bottom:  	//正下方  	x = (img.Width - water.Width) / 2;  	y = img.Height - water.Height - yOffset;  	break;  case WatermarkPosition.LeftBottom:  	//左下方  	x = xOffset;  	y = img.Height - water.Height - yOffset;  	break;  case WatermarkPosition.Right:  	//右方  	x = img.Width - water.Width - xOffset;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.Middle:  	//正中  	x = (img.Width - water.Width) / 2;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.Left:  	//左边  	x = xOffset;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.RightTop:  	//右上方  	x = img.Width - water.Width - xOffset;  	y = yOffset;  	break;  case WatermarkPosition.Top:  	//正上方  	x = (img.Width - water.Width) / 2;  	y = yOffset;  	break;  case WatermarkPosition.LeftTop:  	//左上方  	x = xOffset;  	y = yOffset;  	break;  default:  case WatermarkPosition.Default:  case WatermarkPosition.RightBottom:  	//右下角  	x = img.Width - water.Width - xOffset;  	y = img.Height - water.Height - yOffset;  	break;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,The following statement contains a magic number: switch (pos) {  case WatermarkPosition.Bottom:  	//正下方  	x = (img.Width - water.Width) / 2;  	y = img.Height - water.Height - yOffset;  	break;  case WatermarkPosition.LeftBottom:  	//左下方  	x = xOffset;  	y = img.Height - water.Height - yOffset;  	break;  case WatermarkPosition.Right:  	//右方  	x = img.Width - water.Width - xOffset;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.Middle:  	//正中  	x = (img.Width - water.Width) / 2;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.Left:  	//左边  	x = xOffset;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.RightTop:  	//右上方  	x = img.Width - water.Width - xOffset;  	y = yOffset;  	break;  case WatermarkPosition.Top:  	//正上方  	x = (img.Width - water.Width) / 2;  	y = yOffset;  	break;  case WatermarkPosition.LeftTop:  	//左上方  	x = xOffset;  	y = yOffset;  	break;  default:  case WatermarkPosition.Default:  case WatermarkPosition.RightBottom:  	//右下角  	x = img.Width - water.Width - xOffset;  	y = img.Height - water.Height - yOffset;  	break;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,The following statement contains a magic number: switch (pos) {  case WatermarkPosition.Bottom:  	//正下方  	x = (img.Width - water.Width) / 2;  	y = img.Height - water.Height - yOffset;  	break;  case WatermarkPosition.LeftBottom:  	//左下方  	x = xOffset;  	y = img.Height - water.Height - yOffset;  	break;  case WatermarkPosition.Right:  	//右方  	x = img.Width - water.Width - xOffset;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.Middle:  	//正中  	x = (img.Width - water.Width) / 2;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.Left:  	//左边  	x = xOffset;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.RightTop:  	//右上方  	x = img.Width - water.Width - xOffset;  	y = yOffset;  	break;  case WatermarkPosition.Top:  	//正上方  	x = (img.Width - water.Width) / 2;  	y = yOffset;  	break;  case WatermarkPosition.LeftTop:  	//左上方  	x = xOffset;  	y = yOffset;  	break;  default:  case WatermarkPosition.Default:  case WatermarkPosition.RightBottom:  	//右下角  	x = img.Width - water.Width - xOffset;  	y = img.Height - water.Height - yOffset;  	break;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,The following statement contains a magic number: switch (pos) {  case WatermarkPosition.Bottom:  	//正下方  	x = (img.Width - water.Width) / 2;  	y = img.Height - water.Height - yOffset;  	break;  case WatermarkPosition.LeftBottom:  	//左下方  	x = xOffset;  	y = img.Height - water.Height - yOffset;  	break;  case WatermarkPosition.Right:  	//右方  	x = img.Width - water.Width - xOffset;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.Middle:  	//正中  	x = (img.Width - water.Width) / 2;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.Left:  	//左边  	x = xOffset;  	y = (img.Height - water.Height) / 2;  	break;  case WatermarkPosition.RightTop:  	//右上方  	x = img.Width - water.Width - xOffset;  	y = yOffset;  	break;  case WatermarkPosition.Top:  	//正上方  	x = (img.Width - water.Width) / 2;  	y = yOffset;  	break;  case WatermarkPosition.LeftTop:  	//左上方  	x = xOffset;  	y = yOffset;  	break;  default:  case WatermarkPosition.Default:  case WatermarkPosition.RightBottom:  	//右下角  	x = img.Width - water.Width - xOffset;  	y = img.Height - water.Height - yOffset;  	break;  }  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,The following statement contains a magic number: x = (img.Width - water.Width) / 2;  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,The following statement contains a magic number: y = (img.Height - water.Height) / 2;  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,The following statement contains a magic number: x = (img.Width - water.Width) / 2;  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,The following statement contains a magic number: y = (img.Height - water.Height) / 2;  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,The following statement contains a magic number: y = (img.Height - water.Height) / 2;  
Magic Number,J6.DevFw.Framework.Graphic,GraphicsHelper,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Graphic\GraphicsHelper.cs,MakeWatermarkImage,The following statement contains a magic number: x = (img.Width - water.Width) / 2;  
Magic Number,J6.DevFw.Framework.TaskBox.Toolkit,TaskService,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\TaskBox\Toolkit\TaskService.cs,Start,The following statement contains a magic number: if (_box == null) {  	if (storage == null) {  		storage = new TaskBoxDbStorage ();  	}  	if (logProvider == null) {  		logProvider = new TaskLogProvider (storage);  	}  	_box = new TaskBox (storage' logProvider' 3);  	if (handler != null) {  		handler (_box);  	}  	//if (String.IsNullOrEmpty(_server)  	//    || String.IsNullOrEmpty(_token))  	//    throw new ArgumentNullException("��ʹ��RegistServerע�������������Ϣ!");  	//HttpSyncClient client = new HttpSyncClient(_server' _token);  	//if (client.TestConnect())  	//{  	//    //ע���¼�  	//    _box.OnTaskPosting += client.Post;  	//}  	//else  	//{  	//    throw new Exception("�������������ʧ��");  	//}  }  
Magic Number,J6.DevFw.Framework.TaskBox.Toolkit,TaskService,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\TaskBox\Toolkit\TaskService.cs,Start,The following statement contains a magic number: _box = new TaskBox (storage' logProvider' 3);  
Magic Number,J6.DevFw.Framework.Net,FtpClient,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Net\FtpClient.cs,FtpClient,The following statement contains a magic number: this.Port = port ?? 21;  
Magic Number,J6.DevFw.Framework.Net,FtpClient,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Net\FtpClient.cs,FtpClient,The following statement contains a magic number: this.Port = 21;  
Magic Number,J6.DevFw.Framework.Net,HttpClient,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Net\HttpClient.cs,Post,The following statement contains a magic number: request.Timeout = 10000;  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: while (i < local.Length) {  	// 是否为GBK 字符  	if ((local [i] >= 129) && (local [i + 1] >= 64)) {  		switch ((int)local [i]) {  		case 163:// 全角 ASCII  		 {  			tmp = ((char)(local [i + 1] - 128)).ToString ();  			if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  				// 控制不能输出非数字' 字母的字符  				tmp = "";  			}  			break;  		}  		case 162:// 罗马数字  		 {  			if (local [i + 1] > 160) {  				tmp = _charIndex [(int)local [i + 1] - 160];  			} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				// 在罗马数字区' 不能翻译的字符非罗马数字  				tmp = "?";  			} else {  				tmp = "";  			}  			break;  		}  		case 166:// 希腊字母  		 {  			//  			// TODO:未实现  			//  			break;  		}  		default: {  			index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  			if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  			 {  				//是否翻译为问号  				if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  					tmp = "?";  				} else {  					tmp = "";  				}  			} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  			 {  				tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  			} else {  				tmp = _spellMusicCode [index].ToUpper ();  			}  			break;  		}  		}  		//end of swicth()  		result.Append (tmp);  		i += 2;  	} else// 在 GBK 字符集外' 即半角字符  	 {  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  			result.Append (((char)local [i]).ToString ().ToUpper ());  		} //note:下行修改过的  		else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  			result.Append ("-");  		}  		i++;  	}  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if ((local [i] >= 129) && (local [i + 1] >= 64)) {  	switch ((int)local [i]) {  	case 163:// 全角 ASCII  	 {  		tmp = ((char)(local [i + 1] - 128)).ToString ();  		if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  			// 控制不能输出非数字' 字母的字符  			tmp = "";  		}  		break;  	}  	case 162:// 罗马数字  	 {  		if (local [i + 1] > 160) {  			tmp = _charIndex [(int)local [i + 1] - 160];  		} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			// 在罗马数字区' 不能翻译的字符非罗马数字  			tmp = "?";  		} else {  			tmp = "";  		}  		break;  	}  	case 166:// 希腊字母  	 {  		//  		// TODO:未实现  		//  		break;  	}  	default: {  		index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  		if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  		 {  			//是否翻译为问号  			if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  				tmp = "?";  			} else {  				tmp = "";  			}  		} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  		 {  			tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  		} else {  			tmp = _spellMusicCode [index].ToUpper ();  		}  		break;  	}  	}  	//end of swicth()  	result.Append (tmp);  	i += 2;  } else// 在 GBK 字符集外' 即半角字符   {  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  		result.Append (((char)local [i]).ToString ().ToUpper ());  	} //note:下行修改过的  	else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  		result.Append ("-");  	}  	i++;  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: switch ((int)local [i]) {  case 163:// 全角 ASCII   {  	tmp = ((char)(local [i + 1] - 128)).ToString ();  	if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  		// 控制不能输出非数字' 字母的字符  		tmp = "";  	}  	break;  }  case 162:// 罗马数字   {  	if (local [i + 1] > 160) {  		tmp = _charIndex [(int)local [i + 1] - 160];  	} else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  		// 在罗马数字区' 不能翻译的字符非罗马数字  		tmp = "?";  	} else {  		tmp = "";  	}  	break;  }  case 166:// 希腊字母   {  	//  	// TODO:未实现  	//  	break;  }  default: {  	index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  	if (index == 0)// 无此汉字' 不能翻译的字符' GBK 保留  	 {  		//是否翻译为问号  		if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  			tmp = "?";  		} else {  			tmp = "";  		}  	} else if ((options & SpellOptions.FirstLetterOnly) == SpellOptions.FirstLetterOnly)//是单拼音  	 {  		tmp = _spellMusicCode [index].ToUpper ().Substring (0' 1);  	} else {  		tmp = _spellMusicCode [index].ToUpper ();  	}  	break;  }  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: tmp = ((char)(local [i + 1] - 128)).ToString ();  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  	// 控制不能输出非数字' 字母的字符  	tmp = "";  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  	// 控制不能输出非数字' 字母的字符  	tmp = "";  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  	// 控制不能输出非数字' 字母的字符  	tmp = "";  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  	// 控制不能输出非数字' 字母的字符  	tmp = "";  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  	// 控制不能输出非数字' 字母的字符  	tmp = "";  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) && !(((tmp [0] >= 97) && (tmp [0] <= 122)) || ((tmp [0] >= 65) && (tmp [0] <= 90)) || ((tmp [0] >= 48) && (tmp [0] <= 57)))) {  	// 控制不能输出非数字' 字母的字符  	tmp = "";  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (local [i + 1] > 160) {  	tmp = _charIndex [(int)local [i + 1] - 160];  } else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  	// 在罗马数字区' 不能翻译的字符非罗马数字  	tmp = "?";  } else {  	tmp = "";  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (local [i + 1] > 160) {  	tmp = _charIndex [(int)local [i + 1] - 160];  } else if ((options & SpellOptions.TranslateUnknowWordToInterrogation) == SpellOptions.TranslateUnknowWordToInterrogation) {  	// 在罗马数字区' 不能翻译的字符非罗马数字  	tmp = "?";  } else {  	tmp = "";  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: tmp = _charIndex [(int)local [i + 1] - 160];  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: index = _spellCodeIndex [(int)local [i] - 129' local [i + 1] - 64] - 1;  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: i += 2;  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  	result.Append (((char)local [i]).ToString ().ToUpper ());  } //note:下行修改过的  else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  	result.Append ("-");  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  	result.Append (((char)local [i]).ToString ().ToUpper ());  } //note:下行修改过的  else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  	result.Append ("-");  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  	result.Append (((char)local [i]).ToString ().ToUpper ());  } //note:下行修改过的  else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  	result.Append ("-");  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  	result.Append (((char)local [i]).ToString ().ToUpper ());  } //note:下行修改过的  else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  	result.Append ("-");  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  	result.Append (((char)local [i]).ToString ().ToUpper ());  } //note:下行修改过的  else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  	result.Append ("-");  }  
Magic Number,J6.DevFw.Framework.Text,ChineseSpell,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Text\ChineseSpell.cs,GetSpellWord,The following statement contains a magic number: if (((options & SpellOptions.EnableUnicodeLetter) == SpellOptions.EnableUnicodeLetter) || (((local [i] >= 97) && (local [i] <= 122)) || ((local [i] >= 65) && (local [i] <= 90)) || ((local [i] >= 48) && (local [i] <= 57)))) {  	result.Append (((char)local [i]).ToString ().ToUpper ());  } //note:下行修改过的  else if ((options & SpellOptions.TranslateSpecialWordToConnect) == SpellOptions.TranslateSpecialWordToConnect) {  	result.Append ("-");  }  
Magic Number,J6.DevFw.Framework.Web.Cache,CacheUtil,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\Cache\CacheUtil.cs,CheckClientCacheExpires,The following statement contains a magic number: if (maxAge > 0) {  	HttpResponse response = HttpContext.Current.Response;  	HttpRequest request = HttpContext.Current.Request;  	string sinceModified = request.Headers.Get ("If-Modified-Since");  	if (!String.IsNullOrEmpty (sinceModified)) {  		//现在时间  		DateTime nowTime = DateTime.Now.ToUniversalTime ();  		//最后修改时间  		DateTime sinceTime;  		DateTime.TryParse (sinceModified' out sinceTime);  		sinceTime = sinceTime.ToUniversalTime ();  		if ((nowTime - sinceTime).TotalSeconds < maxAge) {  			response.StatusCode = 304;  			response.Status = "304 Not Modified";  			return false;  		}  	}  }  
Magic Number,J6.DevFw.Framework.Web.Cache,CacheUtil,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\Cache\CacheUtil.cs,CheckClientCacheExpires,The following statement contains a magic number: if (!String.IsNullOrEmpty (sinceModified)) {  	//现在时间  	DateTime nowTime = DateTime.Now.ToUniversalTime ();  	//最后修改时间  	DateTime sinceTime;  	DateTime.TryParse (sinceModified' out sinceTime);  	sinceTime = sinceTime.ToUniversalTime ();  	if ((nowTime - sinceTime).TotalSeconds < maxAge) {  		response.StatusCode = 304;  		response.Status = "304 Not Modified";  		return false;  	}  }  
Magic Number,J6.DevFw.Framework.Web.Cache,CacheUtil,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\Cache\CacheUtil.cs,CheckClientCacheExpires,The following statement contains a magic number: if ((nowTime - sinceTime).TotalSeconds < maxAge) {  	response.StatusCode = 304;  	response.Status = "304 Not Modified";  	return false;  }  
Magic Number,J6.DevFw.Framework.Web.Cache,CacheUtil,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\Cache\CacheUtil.cs,CheckClientCacheExpires,The following statement contains a magic number: response.StatusCode = 304;  
Magic Number,J6.DevFw.Framework.Web.Cache,CacheUtil,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\Cache\CacheUtil.cs,CheckClientCacheExpires,The following statement contains a magic number: if (String.Compare (clientEtag' String.Concat ("\""' etag' "\"")' false) == 0) {  	HttpResponse response = HttpContext.Current.Response;  	response.StatusCode = 304;  	response.Status = "304 Not Modified";  	return false;  }  
Magic Number,J6.DevFw.Framework.Web.Cache,CacheUtil,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\Cache\CacheUtil.cs,CheckClientCacheExpires,The following statement contains a magic number: response.StatusCode = 304;  
Magic Number,J6.DevFw.Framework.Web.Cache,CacheUtil,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\Cache\CacheUtil.cs,Output,The following statement contains a magic number: if (!String.IsNullOrEmpty (sinceModified)) {  	//最后修改时间  	DateTime sinceTime;  	DateTime.TryParse (sinceModified' out sinceTime);  	sinceTime = sinceTime.ToUniversalTime ();  	if ((nowTime - sinceTime).TotalSeconds < maxage) {  		response.StatusCode = 304;  		response.Status = "304 Not Modified";  		return true;  	}  }  
Magic Number,J6.DevFw.Framework.Web.Cache,CacheUtil,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\Cache\CacheUtil.cs,Output,The following statement contains a magic number: if ((nowTime - sinceTime).TotalSeconds < maxage) {  	response.StatusCode = 304;  	response.Status = "304 Not Modified";  	return true;  }  
Magic Number,J6.DevFw.Framework.Web.Cache,CacheUtil,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\Cache\CacheUtil.cs,Output,The following statement contains a magic number: response.StatusCode = 304;  
Magic Number,J6.DevFw.Framework.Web.Cache,CacheUtil,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\Cache\CacheUtil.cs,Output,The following statement contains a magic number: if (String.Compare (clientEtag' String.Concat ("\""' etag' "\"")' false) == 0) {  	response.StatusCode = 304;  	response.Status = "304 Not Modified";  	return true;  }  
Magic Number,J6.DevFw.Framework.Web.Cache,CacheUtil,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\Cache\CacheUtil.cs,Output,The following statement contains a magic number: response.StatusCode = 304;  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,VerifyCode,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	wordArray [i] = _n_s + i;  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,VerifyCode,The following statement contains a magic number: for (int i = 0; i < 26; i++) {  	wordArray [36 + i] = _ul_s + i;  	wordArray [10 + i] = _ll_s + i;  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,VerifyCode,The following statement contains a magic number: for (int i = 0; i < 26; i++) {  	wordArray [36 + i] = _ul_s + i;  	wordArray [10 + i] = _ll_s + i;  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,VerifyCode,The following statement contains a magic number: for (int i = 0; i < 26; i++) {  	wordArray [36 + i] = _ul_s + i;  	wordArray [10 + i] = _ll_s + i;  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,VerifyCode,The following statement contains a magic number: wordArray [36 + i] = _ul_s + i;  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,VerifyCode,The following statement contains a magic number: wordArray [10 + i] = _ll_s + i;  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,GetDefaultFont,The following statement contains a magic number: return new Font (fontFamily' 14' FontStyle.Bold' GraphicsUnit.Pixel);  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,GraphicDrawImage,The following statement contains a magic number: return GraphicDrawImage (number' opt' simpleMode' GetDefaultFont ()' 22' out words);  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: for (int i = 0; i < 25; i++) {  	int x1 = rd.Next (img.Width);  	int x2 = rd.Next (img.Width);  	int y1 = rd.Next (img.Height);  	int y2 = rd.Next (img.Height);  	g.DrawLine (new Pen (Color.FromArgb (200' 200' 200))' x1' y1' x2' y2);  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: for (int i = 0; i < 25; i++) {  	int x1 = rd.Next (img.Width);  	int x2 = rd.Next (img.Width);  	int y1 = rd.Next (img.Height);  	int y2 = rd.Next (img.Height);  	g.DrawLine (new Pen (Color.FromArgb (200' 200' 200))' x1' y1' x2' y2);  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: for (int i = 0; i < 25; i++) {  	int x1 = rd.Next (img.Width);  	int x2 = rd.Next (img.Width);  	int y1 = rd.Next (img.Height);  	int y2 = rd.Next (img.Height);  	g.DrawLine (new Pen (Color.FromArgb (200' 200' 200))' x1' y1' x2' y2);  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: for (int i = 0; i < 25; i++) {  	int x1 = rd.Next (img.Width);  	int x2 = rd.Next (img.Width);  	int y1 = rd.Next (img.Height);  	int y2 = rd.Next (img.Height);  	g.DrawLine (new Pen (Color.FromArgb (200' 200' 200))' x1' y1' x2' y2);  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: g.DrawLine (new Pen (Color.FromArgb (200' 200' 200))' x1' y1' x2' y2);  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: g.DrawLine (new Pen (Color.FromArgb (200' 200' 200))' x1' y1' x2' y2);  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: g.DrawLine (new Pen (Color.FromArgb (200' 200' 200))' x1' y1' x2' y2);  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: for (int i = 0; i < charNumberArray.Length; i++) {  	g.DrawString (((char)charNumberArray [i]).ToString ()' font' brushs [rd.Next (brushs.Length)]' new PointF (_offset + i * (_fontSize - 1)' (_height - _fontSize) / 2));  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: g.DrawString (((char)charNumberArray [i]).ToString ()' font' brushs [rd.Next (brushs.Length)]' new PointF (_offset + i * (_fontSize - 1)' (_height - _fontSize) / 2));  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: if (!simpleMode) {  	//弯曲图片  	img = TwistImage (img' true' 2' 1);  	//画图片的前景干扰点     	for (int i = 0; i < 100; i++) {  		int x = rd.Next (img.Width);  		int y = rd.Next (img.Height);  		img.SetPixel (x' y' Color.FromArgb (235' 235' 235));  	}  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: if (!simpleMode) {  	//弯曲图片  	img = TwistImage (img' true' 2' 1);  	//画图片的前景干扰点     	for (int i = 0; i < 100; i++) {  		int x = rd.Next (img.Width);  		int y = rd.Next (img.Height);  		img.SetPixel (x' y' Color.FromArgb (235' 235' 235));  	}  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: if (!simpleMode) {  	//弯曲图片  	img = TwistImage (img' true' 2' 1);  	//画图片的前景干扰点     	for (int i = 0; i < 100; i++) {  		int x = rd.Next (img.Width);  		int y = rd.Next (img.Height);  		img.SetPixel (x' y' Color.FromArgb (235' 235' 235));  	}  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: if (!simpleMode) {  	//弯曲图片  	img = TwistImage (img' true' 2' 1);  	//画图片的前景干扰点     	for (int i = 0; i < 100; i++) {  		int x = rd.Next (img.Width);  		int y = rd.Next (img.Height);  		img.SetPixel (x' y' Color.FromArgb (235' 235' 235));  	}  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: if (!simpleMode) {  	//弯曲图片  	img = TwistImage (img' true' 2' 1);  	//画图片的前景干扰点     	for (int i = 0; i < 100; i++) {  		int x = rd.Next (img.Width);  		int y = rd.Next (img.Height);  		img.SetPixel (x' y' Color.FromArgb (235' 235' 235));  	}  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: img = TwistImage (img' true' 2' 1);  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	int x = rd.Next (img.Width);  	int y = rd.Next (img.Height);  	img.SetPixel (x' y' Color.FromArgb (235' 235' 235));  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	int x = rd.Next (img.Width);  	int y = rd.Next (img.Height);  	img.SetPixel (x' y' Color.FromArgb (235' 235' 235));  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	int x = rd.Next (img.Width);  	int y = rd.Next (img.Height);  	img.SetPixel (x' y' Color.FromArgb (235' 235' 235));  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	int x = rd.Next (img.Width);  	int y = rd.Next (img.Height);  	img.SetPixel (x' y' Color.FromArgb (235' 235' 235));  }  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: img.SetPixel (x' y' Color.FromArgb (235' 235' 235));  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: img.SetPixel (x' y' Color.FromArgb (235' 235' 235));  
Magic Number,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,DrawingImage,The following statement contains a magic number: img.SetPixel (x' y' Color.FromArgb (235' 235' 235));  
Magic Number,J6.DevFw.Framework.Web.unused,ExceptionProcess,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\ExceptionProcess.cs,TraceError,The following statement contains a magic number: sb.Append ("[Error] Hapend at ").Append (String.Format ("{0:yyyy:MM:dd HH:mm:ss}"' DateTime.Now)).Append ("\tip:").Append (context.Request.UserHostAddress).Append (" \tpath:").Append (context.Request.Url.PathAndQuery).Append ("\r\n").Append ('-'' 100).Append ("\r\n").Append ("[message]:").Append (e.Message).Append (" [type]:").Append (e.GetType ().ToString ()).Append ("\r\n").Append ("[stack]:").Append (e.StackTrace).Append ("\r\n");  
Magic Number,J6.DevFw.Framework.Web.unused,ExceptionProcess,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\ExceptionProcess.cs,PostError,The following statement contains a magic number: sb.Append ("[Error] Hapend at ").Append (String.Format ("{0:yyyy:MM:dd HH:mm:ss}"' DateTime.Now)).Append ("\tip:").Append (ip).Append (" \tpath:").Append (errorUri).Append ("\r\n").Append ('-'' 100).Append ("\r\n").Append ("[message]:").Append (msg).Append (" [type]:").Append (type).Append ("\r\n").Append ("[stack]:").Append (trace).Append ("\r\n");  
Magic Number,J6.DevFw.Framework.Web.unused.Handler,ExecuteHandler,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\Handler\ExecuteHandler.cs,ProcessRequest,The following statement contains a magic number: if (args.Length >= 2) {  	//获取执行当前代码的程序集并创建实例  	Assembly ass = Assembly.GetAssembly (handlerType);  	object obj = ass.CreateInstance (handlerType.Namespace + "." + args [0]' true);  	//获取实例类型  	Type type;  	try {  		type = obj.GetType ();  	} catch {  		throw new Exception ("无法在命名空间:" + handlerType.Namespace + "下找到类型:" + args [0]);  	}  	//未添加WebExecuteAttribute特性的类将不被执行  	object[] attrs = type.GetCustomAttributes (true);  	bool canExecute = false;  	IWebExecute iw;  	foreach (object o in attrs) {  		//如果添加IWebExecuteableAttribute特性  		//则调用其PreExecuting方法  		iw = o as IWebExecute;  		if (iw != null)  			iw.PreExecuting ();  		else {  			//如果添加了WebExecuteableAttribute特性，则允许执行  			if (o as WebExecuteableAttribute != null)  				canExecute = true;  		}  	}  	if (!canExecute) {  		context.Response.Write ("此模块不允许被执行!请在需要执行的类名上添加WebExecuteable特性!");  		return;  	}  	//获取方法'及方法上的IWebExecuteableAttribute特性'  	//并调用起PreExecuting方法  	MethodInfo method = type.GetMethod (args [1]' BindingFlags.Instance | BindingFlags.Public | BindingFlags.IgnoreCase);  	IWebExecute[] execAttr = Array.ConvertAll (method.GetCustomAttributes (false)' a => a as IWebExecute);  	foreach (IWebExecute a in execAttr)  		a.PreExecuting ();  	//执行方法  	object returnObj;  	returnObj = method.GetParameters ().Length != 0 && args.Length > 2 ? method.Invoke (obj' task.Substring (args [0].Length + args [1].Length + 2).Split (''')) : method.Invoke (obj' null);  	//如国返回String类型或值类型则输出到页面  	bool isValueType = returnObj is ValueType;  	if (isValueType || method.ReturnType == typeof(string))  		context.Response.Write ((isValueType ? returnObj : returnObj ?? "").ToString ());  }  
Magic Number,J6.DevFw.Framework.Web.unused.Handler,ExecuteHandler,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\Handler\ExecuteHandler.cs,ProcessRequest,The following statement contains a magic number: if (args.Length >= 2) {  	//获取执行当前代码的程序集并创建实例  	Assembly ass = Assembly.GetAssembly (handlerType);  	object obj = ass.CreateInstance (handlerType.Namespace + "." + args [0]' true);  	//获取实例类型  	Type type;  	try {  		type = obj.GetType ();  	} catch {  		throw new Exception ("无法在命名空间:" + handlerType.Namespace + "下找到类型:" + args [0]);  	}  	//未添加WebExecuteAttribute特性的类将不被执行  	object[] attrs = type.GetCustomAttributes (true);  	bool canExecute = false;  	IWebExecute iw;  	foreach (object o in attrs) {  		//如果添加IWebExecuteableAttribute特性  		//则调用其PreExecuting方法  		iw = o as IWebExecute;  		if (iw != null)  			iw.PreExecuting ();  		else {  			//如果添加了WebExecuteableAttribute特性，则允许执行  			if (o as WebExecuteableAttribute != null)  				canExecute = true;  		}  	}  	if (!canExecute) {  		context.Response.Write ("此模块不允许被执行!请在需要执行的类名上添加WebExecuteable特性!");  		return;  	}  	//获取方法'及方法上的IWebExecuteableAttribute特性'  	//并调用起PreExecuting方法  	MethodInfo method = type.GetMethod (args [1]' BindingFlags.Instance | BindingFlags.Public | BindingFlags.IgnoreCase);  	IWebExecute[] execAttr = Array.ConvertAll (method.GetCustomAttributes (false)' a => a as IWebExecute);  	foreach (IWebExecute a in execAttr)  		a.PreExecuting ();  	//执行方法  	object returnObj;  	returnObj = method.GetParameters ().Length != 0 && args.Length > 2 ? method.Invoke (obj' task.Substring (args [0].Length + args [1].Length + 2).Split (''')) : method.Invoke (obj' null);  	//如国返回String类型或值类型则输出到页面  	bool isValueType = returnObj is ValueType;  	if (isValueType || method.ReturnType == typeof(string))  		context.Response.Write ((isValueType ? returnObj : returnObj ?? "").ToString ());  }  
Magic Number,J6.DevFw.Framework.Web.unused.Handler,ExecuteHandler,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\Handler\ExecuteHandler.cs,ProcessRequest,The following statement contains a magic number: if (args.Length >= 2) {  	//获取执行当前代码的程序集并创建实例  	Assembly ass = Assembly.GetAssembly (handlerType);  	object obj = ass.CreateInstance (handlerType.Namespace + "." + args [0]' true);  	//获取实例类型  	Type type;  	try {  		type = obj.GetType ();  	} catch {  		throw new Exception ("无法在命名空间:" + handlerType.Namespace + "下找到类型:" + args [0]);  	}  	//未添加WebExecuteAttribute特性的类将不被执行  	object[] attrs = type.GetCustomAttributes (true);  	bool canExecute = false;  	IWebExecute iw;  	foreach (object o in attrs) {  		//如果添加IWebExecuteableAttribute特性  		//则调用其PreExecuting方法  		iw = o as IWebExecute;  		if (iw != null)  			iw.PreExecuting ();  		else {  			//如果添加了WebExecuteableAttribute特性，则允许执行  			if (o as WebExecuteableAttribute != null)  				canExecute = true;  		}  	}  	if (!canExecute) {  		context.Response.Write ("此模块不允许被执行!请在需要执行的类名上添加WebExecuteable特性!");  		return;  	}  	//获取方法'及方法上的IWebExecuteableAttribute特性'  	//并调用起PreExecuting方法  	MethodInfo method = type.GetMethod (args [1]' BindingFlags.Instance | BindingFlags.Public | BindingFlags.IgnoreCase);  	IWebExecute[] execAttr = Array.ConvertAll (method.GetCustomAttributes (false)' a => a as IWebExecute);  	foreach (IWebExecute a in execAttr)  		a.PreExecuting ();  	//执行方法  	object returnObj;  	returnObj = method.GetParameters ().Length != 0 && args.Length > 2 ? method.Invoke (obj' task.Substring (args [0].Length + args [1].Length + 2).Split (''')) : method.Invoke (obj' null);  	//如国返回String类型或值类型则输出到页面  	bool isValueType = returnObj is ValueType;  	if (isValueType || method.ReturnType == typeof(string))  		context.Response.Write ((isValueType ? returnObj : returnObj ?? "").ToString ());  }  
Magic Number,J6.DevFw.Framework.Web.unused.Handler,ExecuteHandler,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\Handler\ExecuteHandler.cs,ProcessRequest,The following statement contains a magic number: returnObj = method.GetParameters ().Length != 0 && args.Length > 2 ? method.Invoke (obj' task.Substring (args [0].Length + args [1].Length + 2).Split (''')) : method.Invoke (obj' null);  
Magic Number,J6.DevFw.Framework.Web.unused.Handler,ExecuteHandler,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\unused\Handler\ExecuteHandler.cs,ProcessRequest,The following statement contains a magic number: returnObj = method.GetParameters ().Length != 0 && args.Length > 2 ? method.Invoke (obj' task.Substring (args [0].Length + args [1].Length + 2).Split (''')) : method.Invoke (obj' null);  
Missing Default,J6.DevFw.Framework.Web.UI,VerifyCode,F:\newReposMay17\atnet_devfw\J6\src\core\J6.DevFw.Core\Framework\Web\UI\VerifyCode.cs,GraphicDrawImage,The following switch statement is missing a default case: switch (opt) {  //纯数字  case VerifyWordOptions.Number:  	test = (i' array) => {  		if (i == 0)  			return false;  		else if (i < _n_s || i > _n_e)  			return false;  		else if (!AllowRepeat && Array.Exists (array' a => a == i))  			return false;  		return true;  	};  	for (int i = 0; i < number; i++) {  		while (verifyWords [i] == 0) {  			_tempInt = wordArray [rd.Next (wordLength)];  			if (test (_tempInt' verifyWords)) {  				verifyWords [i] = _tempInt;  			}  		}  	}  	break;  //纯字母  case VerifyWordOptions.Letter:  	test = (i' array) => {  		if (i == 0)  			return false;  		else if (i < _ul_s || i > _ll_e || (i > _ul_e && i < _ll_s))  			return false;  		else if (!AllowRepeat && Array.Exists (array' a => a == i))  			return false;  		return true;  	};  	for (int i = 0; i < number; i++) {  		while (verifyWords [i] == 0) {  			_tempInt = wordArray [rd.Next (wordLength)];  			if (test (_tempInt' verifyWords)) {  				verifyWords [i] = _tempInt;  			}  		}  	}  	break;  //字母和数字  case VerifyWordOptions.LetterAndNumber:  	test = (i' array) => {  		if (i == 0)  			return false;  		else if (!Array.Exists (wordArray' a => a == i))  			return false;  		else if (!AllowRepeat && Array.Exists (array' a => a == i))  			return false;  		return true;  	};  	for (int i = 0; i < number; i++) {  		while (verifyWords [i] == 0) {  			_tempInt = wordArray [rd.Next (wordLength)];  			if (test (_tempInt' verifyWords)) {  				verifyWords [i] = _tempInt;  			}  		}  	}  	break;  }  
