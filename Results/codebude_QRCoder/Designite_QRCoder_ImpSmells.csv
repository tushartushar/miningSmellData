Implementation smell,Namespace,Class,File,Method,Description
Long Method,QRCoder,ContactData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The method has 114 lines of code.
Long Method,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The method has 112 lines of code.
Long Method,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The method has 117 lines of code.
Complex Method,QRCoder,ContactData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,Cyclomatic complexity of the method is 31
Complex Method,QRCoder,Contact,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Contact,Cyclomatic complexity of the method is 21
Complex Method,QRCoder,Girocode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Girocode,Cyclomatic complexity of the method is 10
Complex Method,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,Cyclomatic complexity of the method is 37
Complex Method,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,Cyclomatic complexity of the method is 17
Complex Method,QRCoder,OneTimePassword,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ProcessCommonFields,Cyclomatic complexity of the method is 12
Complex Method,QRCoder,QRCodeData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeData.cs,QRCodeData,Cyclomatic complexity of the method is 8
Complex Method,QRCoder,QRCodeData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeData.cs,GetRawData,Cyclomatic complexity of the method is 8
Complex Method,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,Cyclomatic complexity of the method is 14
Complex Method,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,Cyclomatic complexity of the method is 11
Complex Method,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,MaskCode,Cyclomatic complexity of the method is 13
Complex Method,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceDataWords,Cyclomatic complexity of the method is 10
Complex Method,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceAlignmentPatterns,Cyclomatic complexity of the method is 8
Complex Method,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,Cyclomatic complexity of the method is 19
Long Parameter List,QRCoder,AsciiQRCodeHelper,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\AsciiQRCode.cs,GetQRCode,The method has 10 parameters. Parameters: plainText' pixelsPerModule' darkColorString' whiteSpaceString' eccLevel' forceUtf8' utf8BOM' eciMode' requestedVersion' endOfLine
Long Parameter List,QRCoder,Base64QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\Base64QRCode.cs,GetGraphic,The method has 5 parameters. Parameters: pixelsPerModule' darkColorHtmlHex' lightColorHtmlHex' drawQuietZones' imgType
Long Parameter List,QRCoder,Base64QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\Base64QRCode.cs,GetGraphic,The method has 5 parameters. Parameters: pixelsPerModule' darkColor' lightColor' drawQuietZones' imgType
Long Parameter List,QRCoder,Base64QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\Base64QRCode.cs,GetGraphic,The method has 8 parameters. Parameters: pixelsPerModule' darkColor' lightColor' icon' iconSizePercent' iconBorderWidth' drawQuietZones' imgType
Long Parameter List,QRCoder,Base64QRCodeHelper,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\Base64QRCode.cs,GetQRCode,The method has 11 parameters. Parameters: plainText' pixelsPerModule' darkColorHtmlHex' lightColorHtmlHex' eccLevel' forceUtf8' utf8BOM' eciMode' requestedVersion' drawQuietZones' imgType
Long Parameter List,QRCoder,BitmapByteQRCodeHelper,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,GetQRCode,The method has 9 parameters. Parameters: plainText' pixelsPerModule' darkColorHtmlHex' lightColorHtmlHex' eccLevel' forceUtf8' utf8BOM' eciMode' requestedVersion
Long Parameter List,QRCoder,ContactData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ContactData,The method has 18 parameters. Parameters: outputType' firstname' lastname' nickname' phone' mobilePhone' workPhone' email' birthday' website' street' houseNumber' city' zipCode' country' note' stateRegion' addressOrder
Long Parameter List,QRCoder,SwissQrCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SwissQrCode,The method has 11 parameters. Parameters: iban' currency' creditor' reference' additionalInformation' debitor' amount' requestedDateOfPayment' ultimateCreditor' alternativeProcedure1' alternativeProcedure2
Long Parameter List,QRCoder,Contact,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Contact,The method has 6 parameters. Parameters: name' zipCode' city' country' street' houseNumber
Long Parameter List,QRCoder,Contact,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Contact,The method has 7 parameters. Parameters: name' zipCode' city' country' streetOrAddressline1' houseNumberOrAddressline2' addressType
Long Parameter List,QRCoder,Girocode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Girocode,The method has 10 parameters. Parameters: iban' bic' name' amount' remittanceInformation' typeOfRemittance' purposeOfCreditTransfer' messageToGirocodeUser' version' encoding
Long Parameter List,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The method has 7 parameters. Parameters: authority' name' account' bnc' iban' bic' reason
Long Parameter List,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The method has 13 parameters. Parameters: authority' name' account' bnc' amount' periodicTimeunit' periodicTimeunitRotation' periodicFirstExecutionDate' periodicLastExecutionDate' reason' postingKey' currency' executionDate
Long Parameter List,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The method has 16 parameters. Parameters: authority' name' iban' bic' amount' periodicTimeunit' periodicTimeunitRotation' periodicFirstExecutionDate' periodicLastExecutionDate' creditorId' mandateId' dateOfSignature' reason' sepaReference' currency' executionDate
Long Parameter List,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The method has 20 parameters. Parameters: authority' name' account' bnc' iban' bic' amount' periodicTimeunit' periodicTimeunitRotation' periodicFirstExecutionDate' periodicLastExecutionDate' creditorId' mandateId' dateOfSignature' reason' postingKey' sepaReference' currency' executionDate' internalMode
Long Parameter List,QRCoder,CalendarEvent,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,CalendarEvent,The method has 7 parameters. Parameters: subject' description' location' start' end' allDayEvent' encoding
Long Parameter List,QRCoder,ShadowSocksConfig,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ShadowSocksConfig,The method has 5 parameters. Parameters: hostname' port' password' method' tag
Long Parameter List,QRCoder,MoneroTransaction,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,MoneroTransaction,The method has 5 parameters. Parameters: address' txAmount' txPaymentId' recipientName' txDescription
Long Parameter List,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The method has 12 parameters. Parameters: payerName' payerAddress' payerPlace' recipientName' recipientAddress' recipientPlace' recipientIban' description' amount' recipientSiModel' recipientSiReference' code
Long Parameter List,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The method has 13 parameters. Parameters: payerName' payerAddress' payerPlace' recipientName' recipientAddress' recipientPlace' recipientIban' description' amount' deadline' recipientSiModel' recipientSiReference' code
Long Parameter List,QRCoder,PngByteQRCodeHelper,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetQRCode,The method has 9 parameters. Parameters: plainText' pixelsPerModule' darkColorRgba' lightColorRgba' eccLevel' forceUtf8' utf8BOM' eciMode' requestedVersion
Long Parameter List,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The method has 5 parameters. Parameters: pointsPerModule' darkColor' lightColor' drawQuietZones' epsFormat
Long Parameter List,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The method has 5 parameters. Parameters: pointsPerModule' darkColorHex' lightColorHex' drawQuietZones' epsFormat
Long Parameter List,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The method has 5 parameters. Parameters: viewBox' darkColorHex' lightColorHex' drawQuietZones' epsFormat
Long Parameter List,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The method has 5 parameters. Parameters: viewBox' darkColor' lightColor' drawQuietZones' epsFormat
Long Parameter List,QRCoder,PostscriptQRCodeHelper,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetQRCode,The method has 11 parameters. Parameters: plainText' pointsPerModule' darkColorHex' lightColorHex' eccLevel' forceUtf8' utf8BOM' eciMode' requestedVersion' drawQuietZones' epsFormat
Long Parameter List,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The method has 7 parameters. Parameters: pixelsPerModule' darkColor' lightColor' icon' iconSizePercent' iconBorderWidth' drawQuietZones
Long Parameter List,QRCoder,QRCodeHelper,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetQRCode,The method has 13 parameters. Parameters: plainText' pixelsPerModule' darkColor' lightColor' eccLevel' forceUtf8' utf8BOM' eciMode' requestedVersion' icon' iconSizePercent' iconBorderWidth' drawQuietZones
Long Parameter List,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The method has 6 parameters. Parameters: plainText' eccLevel' forceUtf8' utf8BOM' eciMode' requestedVersion
Long Parameter List,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The method has 6 parameters. Parameters: plainText' eccLevel' forceUtf8' utf8BOM' eciMode' requestedVersion
Long Parameter List,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinary,The method has 5 parameters. Parameters: plainText' encMode' eciMode' utf8BOM' forceUtf8
Long Parameter List,QRCoder,CodewordBlock,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CodewordBlock,The method has 7 parameters. Parameters: groupNumber' blockNumber' bitString' codeWords' eccWords' codeWordsInt' eccWordsInt
Long Parameter List,QRCoder,ECCInfo,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ECCInfo,The method has 8 parameters. Parameters: version' errorCorrectionLevel' totalDataCodewords' eccPerBlock' blocksInGroup1' codewordsInGroup1' blocksInGroup2' codewordsInGroup2
Long Parameter List,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The method has 5 parameters. Parameters: pixelsPerModule' darkColor' lightColor' drawQuietZones' sizingMode
Long Parameter List,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The method has 5 parameters. Parameters: pixelsPerModule' darkColorHex' lightColorHex' drawQuietZones' sizingMode
Long Parameter List,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The method has 5 parameters. Parameters: viewBox' darkColor' lightColor' drawQuietZones' sizingMode
Long Parameter List,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The method has 5 parameters. Parameters: viewBox' darkColorHex' lightColorHex' drawQuietZones' sizingMode
Long Parameter List,QRCoder,SvgQRCodeHelper,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetQRCode,The method has 11 parameters. Parameters: plainText' pixelsPerModule' darkColorHex' lightColorHex' eccLevel' forceUtf8' utf8BOM' eciMode' requestedVersion' drawQuietZones' sizingMode
Long Parameter List,QRCoder,XamlQRCodeHelper,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\XamlQRCode.cs,GetQRCode,The method has 10 parameters. Parameters: plainText' pixelsPerModule' darkColorHex' lightColorHex' eccLevel' forceUtf8' utf8BOM' eciMode' requestedVersion' drawQuietZones
Long Identifier,QRCoder,AsciiQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\AsciiQRCode.cs,GetLineByLineGraphic,The length of the parameter adjustmentValueForNumberOfCharacters is 36.
Long Statement,QRCoder,Base64QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\Base64QRCode.cs,GetGraphic,The length of the statement  "            return this.GetGraphic(pixelsPerModule' ColorTranslator.FromHtml(darkColorHtmlHex)' ColorTranslator.FromHtml(lightColorHtmlHex)' drawQuietZones' imgType); " is 154.
Long Statement,QRCoder,Base64QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\Base64QRCode.cs,GetGraphic,The length of the statement  "            using (Bitmap bmp = qr.GetGraphic(pixelsPerModule' darkColor' lightColor' icon' iconSizePercent' iconBorderWidth' drawQuietZones)) " is 130.
Long Statement,QRCoder,BitmapByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,GetGraphic,The length of the statement  "            bmp.AddRange(new byte[] { 0x42' 0x4D' 0x4C' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x1A' 0x00' 0x00' 0x00' 0x0C' 0x00' 0x00' 0x00 }); " is 136.
Long Statement,QRCoder,BitmapByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,HexColorToByteArray,The length of the statement  "                byteColor[i] = byte.Parse(colorString.Substring(i * 2' 2)' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);             " is 155.
Long Statement,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,IsValidIban,The length of the statement  "            var sum = $"{ibanCleared.Substring(4)}{ibanCleared.Substring(0' 4)}".ToCharArray().Aggregate(""' (current' c) => current + (char.IsLetter(c) ? (c - 55).ToString() : c.ToString())); " is 180.
Long Statement,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,isHexStyle,The length of the statement  "            return (System.Text.RegularExpressions.Regex.IsMatch(inp' @"\A\b[0-9a-fA-F]+\b\Z") || System.Text.RegularExpressions.Regex.IsMatch(inp' @"\A\b(0[xX])?[0-9a-fA-F]+\b\Z")); " is 170.
Long Statement,QRCoder,Mail,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                            $"mailto:{this.mailReceiver}?subject={System.Uri.EscapeDataString(this.subject)}&body={System.Uri.EscapeDataString(this.message)}"; " is 131.
Long Statement,QRCoder,ContactData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                        addressString = $"ADR:''{(!string.IsNullOrEmpty(street) ? street + " " : "")}{(!string.IsNullOrEmpty(houseNumber) ? houseNumber : "")}'{(!string.IsNullOrEmpty(zipCode) ? zipCode : "")}'{(!string.IsNullOrEmpty(city) ? city : "")}'{(!string.IsNullOrEmpty(stateRegion) ? stateRegion : "")}'{(!string.IsNullOrEmpty(country) ? country : "")}\r\n"; " is 342.
Long Statement,QRCoder,ContactData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                        addressString = $"ADR:''{(!string.IsNullOrEmpty(houseNumber) ? houseNumber + " " : "")}{(!string.IsNullOrEmpty(street) ? street : "")}'{(!string.IsNullOrEmpty(city) ? city : "")}'{(!string.IsNullOrEmpty(stateRegion) ? stateRegion : "")}'{(!string.IsNullOrEmpty(zipCode) ? zipCode : "")}'{(!string.IsNullOrEmpty(country) ? country : "")}\r\n"; " is 342.
Long Statement,QRCoder,ContactData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                    payload += $"N:{(!string.IsNullOrEmpty(lastname) ? lastname : "")};{(!string.IsNullOrEmpty(firstname) ? firstname : "")};;;\r\n"; " is 129.
Long Statement,QRCoder,ContactData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                    payload += $"FN:{(!string.IsNullOrEmpty(firstname) ? firstname + " " : "")}{(!string.IsNullOrEmpty(lastname) ? lastname : "")}\r\n"; " is 132.
Long Statement,QRCoder,ContactData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                        addressString = $";;{(!string.IsNullOrEmpty(street) ? street + " " : "")}{(!string.IsNullOrEmpty(houseNumber) ? houseNumber : "")};{(!string.IsNullOrEmpty(zipCode) ? zipCode : "")};{(!string.IsNullOrEmpty(city) ? city : "")};{(!string.IsNullOrEmpty(stateRegion) ? stateRegion : "")};{(!string.IsNullOrEmpty(country) ? country : "")}\r\n"; " is 338.
Long Statement,QRCoder,ContactData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                        addressString = $";;{(!string.IsNullOrEmpty(houseNumber) ? houseNumber + " " : "")}{(!string.IsNullOrEmpty(street) ? street : "")};{(!string.IsNullOrEmpty(city) ? city : "")};{(!string.IsNullOrEmpty(stateRegion) ? stateRegion : "")};{(!string.IsNullOrEmpty(zipCode) ? zipCode : "")};{(!string.IsNullOrEmpty(country) ? country : "")}\r\n"; " is 338.
Long Statement,QRCoder,BitcoinAddress,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                  new KeyValuePair<string' string>(nameof(amount)' amount.HasValue ? amount.Value.ToString("#.########"' CultureInfo.InvariantCulture) : null) " is 140.
Long Statement,QRCoder,SwissQrCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                //Amoutn has to use . as decimal seperator in any case. See https://www.paymentstandards.ch/dam/downloads/ig-qr-bill-en.pdf page 27. " is 132.
Long Statement,QRCoder,SwissQrCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                //SwissQrCodePayload += (requestedDateOfPayment != null ?  ((DateTime)requestedDateOfPayment).ToString("yyyy-MM-dd") : string.Empty) + br; //ReqdExctnDt " is 152.
Long Statement,QRCoder,SwissQrCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                SwissQrCodePayload += (!string.IsNullOrEmpty(reference.ReferenceText) ? reference.ReferenceText : string.Empty) + br; //Ref " is 123.
Long Statement,QRCoder,SwissQrCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                SwissQrCodePayload += (!string.IsNullOrEmpty(additionalInformation.UnstructureMessage) ? additionalInformation.UnstructureMessage : string.Empty) + br; //Ustrd " is 159.
Long Statement,QRCoder,SwissQrCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                SwissQrCodePayload += (!string.IsNullOrEmpty(additionalInformation.BillInformation) ? additionalInformation.BillInformation : string.Empty) + br; //StrdBkgInf " is 158.
Long Statement,QRCoder,Contact,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                    contactData += (!string.IsNullOrEmpty(streetOrAddressline1) ? streetOrAddressline1.Replace("\n"'"") : string.Empty) + br; //StrtNmOrAdrLine1 " is 140.
Long Statement,QRCoder,Contact,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                    contactData += (!string.IsNullOrEmpty(houseNumberOrAddressline2) ? houseNumberOrAddressline2.Replace("\n"' "") : string.Empty) + br; //BldgNbOrAdrLine2 " is 151.
Long Statement,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                    if (authority.Equals(AuthorityType.periodicsinglepayment) || authority.Equals(AuthorityType.singledirectdebit) || authority.Equals(AuthorityType.singlepayment)) " is 160.
Long Statement,QRCoder,CalendarEvent,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                    vEvent = $@"BEGIN:VCALENDAR{Environment.NewLine}VERSION:2.0{Environment.NewLine}{vEvent}{Environment.NewLine}END:VCALENDAR"; " is 124.
Long Statement,QRCoder,MoneroTransaction,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                var moneroUri = $"monero://{address}{(!string.IsNullOrEmpty(txPaymentId) || !string.IsNullOrEmpty(recipientName) || !string.IsNullOrEmpty(txDescription) || txAmount != null ? "?" : string.Empty)}"; " is 197.
Long Statement,QRCoder,MoneroTransaction,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                moneroUri += (!string.IsNullOrEmpty(txPaymentId) ? $"tx_payment_id={Uri.EscapeDataString(txPaymentId)}&" : string.Empty); " is 121.
Long Statement,QRCoder,MoneroTransaction,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                moneroUri += (!string.IsNullOrEmpty(recipientName) ? $"recipient_name={Uri.EscapeDataString(recipientName)}&" : string.Empty); " is 126.
Long Statement,QRCoder,MoneroTransaction,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The length of the statement  "                moneroUri += (!string.IsNullOrEmpty(txDescription) ? $"tx_description={Uri.EscapeDataString(txDescription)}" : string.Empty); " is 125.
Long Statement,QRCoder,PngByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,DrawScanlines,The length of the statement  "            var bytesPerScanline = (matrixSize * pixelsPerModule + 7) / 8 + 1; // A monochrome scanline is one byte for filter type then one bit per pixel. " is 143.
Long Statement,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The length of the statement  "                    var dataLength = (bytes[chunkOffset] << 24) | (bytes[chunkOffset + 1] << 16) | (bytes[chunkOffset + 2] << 8) | bytes[chunkOffset + 3]; " is 134.
Long Statement,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The length of the statement  "            var viewBox = new Size(pointsPerModule * this.QrCodeData.ModuleMatrix.Count' pointsPerModule * this.QrCodeData.ModuleMatrix.Count); " is 131.
Long Statement,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The length of the statement  "            var viewBox = new Size(pointsPerModule * this.QrCodeData.ModuleMatrix.Count' pointsPerModule * this.QrCodeData.ModuleMatrix.Count); " is 131.
Long Statement,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The length of the statement  "            var viewBox = new Size(pointsPerModule * this.QrCodeData.ModuleMatrix.Count' pointsPerModule * this.QrCodeData.ModuleMatrix.Count); " is 131.
Long Statement,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The length of the statement  "            return this.GetGraphic(viewBox' ColorTranslator.FromHtml(darkColorHex)' ColorTranslator.FromHtml(lightColorHex)' drawQuietZones' epsFormat); " is 140.
Long Statement,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The length of the statement  "            return this.GetGraphic(pixelsPerModule' ColorTranslator.FromHtml(darkColorHtmlHex)' ColorTranslator.FromHtml(lightColorHtmlHex)' drawQuietZones); " is 145.
Long Statement,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The length of the statement  "                        var module = this.QrCodeData.ModuleMatrix[(y + pixelsPerModule) / pixelsPerModule - 1][(x + pixelsPerModule) / pixelsPerModule - 1]; " is 132.
Long Statement,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The length of the statement  "                    var centerDest = new RectangleF(iconX - iconBorderWidth' iconY - iconBorderWidth' iconDestWidth + iconBorderWidth * 2' iconDestHeight + iconBorderWidth * 2); " is 157.
Long Statement,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The length of the statement  "                        var module = this.QrCodeData.ModuleMatrix[(y + pixelsPerModule) / pixelsPerModule - 1][(x + pixelsPerModule) / pixelsPerModule - 1]; " is 132.
Long Statement,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The length of the statement  "            roundedRect.AddArc(rect.X + rect.Width - cornerRadius * 2' rect.Y + rect.Height - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 0' 90); " is 143.
Long Statement,QRCoder,QRCodeHelper,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetQRCode,The length of the statement  "                return qrCode.GetGraphic(pixelsPerModule' darkColor' lightColor' icon' iconSizePercent' iconBorderWidth' drawQuietZones); " is 121.
Long Statement,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The length of the statement  "            ModulePlacer.PlaceAlignmentPatterns(ref qr' alignmentPatternTable.Where(x => x.Version == version).Select(x => x.PatternPositions).First()' ref blockedModules); " is 160.
Long Statement,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateECCWords,The length of the statement  "            for (var i = 0; (leadTermSource.PolyItems.Count > 0 && leadTermSource.PolyItems[leadTermSource.PolyItems.Count - 1].Exponent > 0); i++) " is 135.
Long Statement,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateECCWords,The length of the statement  "                    leadTermSource.PolyItems.Add(new PolynomItem(0' leadTermSource.PolyItems[leadTermSource.PolyItems.Count - 1].Exponent - 1)); " is 124.
Long Statement,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateECCWords,The length of the statement  "                    var resPoly = MultiplyGeneratorPolynomByLeadterm(generatorPolynom' ConvertToAlphaNotation(leadTermSource).PolyItems[0]' i); " is 123.
Long Statement,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ConvertToDecNotation,The length of the statement  "                newPoly.PolyItems.Add(new PolynomItem(GetIntValFromAlphaExp(poly.PolyItems[i].Coefficient)' poly.PolyItems[i].Exponent)); " is 121.
Long Statement,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryByte,The length of the statement  "                        codeBytes = utf8BOM ? Encoding.UTF8.GetPreamble().Concat(Encoding.UTF8.GetBytes(plainText)).ToArray() : Encoding.UTF8.GetBytes(plainText); " is 138.
Long Statement,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,MultiplyAlphaPolynoms,The length of the statement  "            var exponentsToGlue = resultPolynom.PolyItems.GroupBy(x => x.Exponent).Where(x => x.Count() > 1).Select(x => x.First().Exponent); " is 129.
Long Statement,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "            var viewBox = new Size(pixelsPerModule*this.QrCodeData.ModuleMatrix.Count' pixelsPerModule * this.QrCodeData.ModuleMatrix.Count); " is 129.
Long Statement,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "            var viewBox = new Size(pixelsPerModule * this.QrCodeData.ModuleMatrix.Count' pixelsPerModule * this.QrCodeData.ModuleMatrix.Count); " is 131.
Long Statement,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "            var viewBox = new Size(pixelsPerModule * this.QrCodeData.ModuleMatrix.Count' pixelsPerModule * this.QrCodeData.ModuleMatrix.Count); " is 131.
Long Statement,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "            return this.GetGraphic(viewBox' ColorTranslator.ToHtml(Color.FromArgb(darkColor.ToArgb()))' ColorTranslator.ToHtml(Color.FromArgb(lightColor.ToArgb()))' drawQuietZones' sizingMode); " is 181.
Long Statement,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "            var svgSizeAttributes = sizingMode.Equals(SizingMode.WidthHeightAttribute) ? $@"width=""{viewBox.Width}"" height=""{viewBox.Height}""" : $@"viewBox=""0 0 {viewBox.Width} {viewBox.Height}"""; " is 190.
Long Statement,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "            var svgFile = new StringBuilder($@"<svg version=""1.1"" baseProfile=""full"" shape-rendering=""crispEdges"" {svgSizeAttributes} xmlns=""http://www.w3.org/2000/svg"">"); " is 168.
Long Statement,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "            svgFile.AppendLine($@"<rect x=""0"" y=""0"" width=""{CleanSvgVal(qrSize)}"" height=""{CleanSvgVal(qrSize)}"" fill=""{lightColorHex}"" />"); " is 139.
Long Statement,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "                        svgFile.AppendLine($@"<rect x=""{CleanSvgVal(x)}"" y=""{CleanSvgVal(y)}"" width=""{CleanSvgVal(pixelsPerModule)}"" height=""{CleanSvgVal(pixelsPerModule)}"" fill=""{darkColorHex}"" />"); " is 186.
Long Statement,QRCoder,XamlQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\XamlQRCode.cs,GetGraphic,The length of the statement  "            return this.GetGraphic(viewBox' new SolidColorBrush((Color)ColorConverter.ConvertFromString(darkColorHex))' new SolidColorBrush((Color)ColorConverter.ConvertFromString(lightColorHex))' drawQuietZones); " is 201.
Long Statement,QRCoder,XamlQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\XamlQRCode.cs,GetGraphic,The length of the statement  "            drawing.Children.Add(new GeometryDrawing(lightBrush' null' new RectangleGeometry(new Rect(new Point(0' 0)' new Size(qrSize' qrSize))))); " is 136.
Complex Conditional,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The conditional expression  "(!oldFilled && !newFilled) || (oldFilled && newFilled)"  is complex.
Complex Conditional,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The conditional expression  "authority.Equals(AuthorityType.periodicsinglepayment) || authority.Equals(AuthorityType.singledirectdebit) || authority.Equals(AuthorityType.singlepayment) || authority.Equals(AuthorityType.contact) || (authority.Equals(AuthorityType.contact_v2) && oldWayFilled)"  is complex.
Complex Conditional,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The conditional expression  "authority.Equals(AuthorityType.periodicsinglepaymentsepa) || authority.Equals(AuthorityType.singledirectdebitsepa) || authority.Equals(AuthorityType.singlepaymentsepa) || (authority.Equals(AuthorityType.contact_v2) && newWayFilled)"  is complex.
Complex Conditional,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFinderPatterns,The conditional expression  "!(((x == 1 || x == 5) && y > 0 && y < 6) || (x > 0 && x < 6 && (y == 1 || y == 5)))"  is complex.
Complex Conditional,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceAlignmentPatterns,The conditional expression  "y == 0 || y == 4 || x == 0 || x == 4 || (x == 2 && y == 2)"  is complex.
Complex Conditional,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The conditional expression  "(qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])"  is complex.
Complex Conditional,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The conditional expression  "(qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])"  is complex.
Magic Number,QRCoder,AsciiQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\AsciiQRCode.cs,GetLineByLineGraphic,The following statement contains a magic number: var adjustmentValueForNumberOfCharacters = darkColorString.Length / 2 != 1 ? darkColorString.Length / 2 : 0;
Magic Number,QRCoder,AsciiQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\AsciiQRCode.cs,GetLineByLineGraphic,The following statement contains a magic number: var adjustmentValueForNumberOfCharacters = darkColorString.Length / 2 != 1 ? darkColorString.Length / 2 : 0;
Magic Number,QRCoder,BitmapByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,GetGraphic,The following statement contains a magic number: i < sideLength%4
Magic Number,QRCoder,BitmapByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,GetGraphic,The following statement contains a magic number: sideLength%4 != 0
Magic Number,QRCoder,BitmapByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,HexColorToByteArray,The following statement contains a magic number: byte[] byteColor = new byte[colorString.Length / 2];
Magic Number,QRCoder,BitmapByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,HexColorToByteArray,The following statement contains a magic number: byteColor[i] = byte.Parse(colorString.Substring(i * 2' 2)' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);
Magic Number,QRCoder,BitmapByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,HexColorToByteArray,The following statement contains a magic number: byteColor[i] = byte.Parse(colorString.Substring(i * 2' 2)' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);
Magic Number,QRCoder,BitmapByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,IntTo4Byte,The following statement contains a magic number: byte[] bytes = new byte[2];
Magic Number,QRCoder,BitmapByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,IntTo4Byte,The following statement contains a magic number: bytes[1] = (byte)(inp >> 8);
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,IsValidIban,The following statement contains a magic number: var sum = $"{ibanCleared.Substring(4)}{ibanCleared.Substring(0' 4)}".ToCharArray().Aggregate(""' (current' c) => current + (char.IsLetter(c) ? (c - 55).ToString() : c.ToString()));
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,IsValidIban,The following statement contains a magic number: var sum = $"{ibanCleared.Substring(4)}{ibanCleared.Substring(0' 4)}".ToCharArray().Aggregate(""' (current' c) => current + (char.IsLetter(c) ? (c - 55).ToString() : c.ToString()));
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,IsValidIban,The following statement contains a magic number: var sum = $"{ibanCleared.Substring(4)}{ibanCleared.Substring(0' 4)}".ToCharArray().Aggregate(""' (current' c) => current + (char.IsLetter(c) ? (c - 55).ToString() : c.ToString()));
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,IsValidIban,The following statement contains a magic number: var checksumValid = (sumDec % 97) == 1;
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: string.IsNullOrEmpty(digits) || digits.Length < 2
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: int[] mods = new int[] { 0' 9' 4' 6' 8' 2' 7' 1' 3' 5 };
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: int[] mods = new int[] { 0' 9' 4' 6' 8' 2' 7' 1' 3' 5 };
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: int[] mods = new int[] { 0' 9' 4' 6' 8' 2' 7' 1' 3' 5 };
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: int[] mods = new int[] { 0' 9' 4' 6' 8' 2' 7' 1' 3' 5 };
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: int[] mods = new int[] { 0' 9' 4' 6' 8' 2' 7' 1' 3' 5 };
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: int[] mods = new int[] { 0' 9' 4' 6' 8' 2' 7' 1' 3' 5 };
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: int[] mods = new int[] { 0' 9' 4' 6' 8' 2' 7' 1' 3' 5 };
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: int[] mods = new int[] { 0' 9' 4' 6' 8' 2' 7' 1' 3' 5 };
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: var num = Convert.ToInt32(digits[i]) - 48;
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: remainder = mods[(num + remainder) % 10];
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: var checksum = (10 - remainder) % 10;
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: var checksum = (10 - remainder) % 10;
Magic Number,QRCoder,PayloadGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ChecksumMod10,The following statement contains a magic number: return checksum == Convert.ToInt32(digits[digits.Length - 1]) - 48;
Magic Number,QRCoder,SwissQrCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SwissQrCode,The following statement contains a magic number: amount != null && amount.ToString().Length > 12
Magic Number,QRCoder,SwissQrCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SwissQrCode,The following statement contains a magic number: alternativeProcedure1 != null && alternativeProcedure1.Length > 100
Magic Number,QRCoder,SwissQrCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SwissQrCode,The following statement contains a magic number: alternativeProcedure2 != null && alternativeProcedure2.Length > 100
Magic Number,QRCoder,SwissQrCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ToString,The following statement contains a magic number: SwissQrCodePayload += string.Concat(Enumerable.Repeat(br' 7).ToArray());
Magic Number,QRCoder,AdditionalInformation,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,AdditionalInformation,The following statement contains a magic number: ((unstructuredMessage != null ? unstructuredMessage.Length : 0) + (billInformation != null ? billInformation.Length : 0)) > 140
Magic Number,QRCoder,Reference,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Reference,The following statement contains a magic number: referenceTextType.Equals(ReferenceTextType.QrReference) && reference != null && (reference.Length > 27)
Magic Number,QRCoder,Reference,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Reference,The following statement contains a magic number: referenceTextType.Equals(ReferenceTextType.CreditorReferenceIso11649) && reference != null && (reference.Length > 25)
Magic Number,QRCoder,Contact,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Contact,The following statement contains a magic number: name.Length > 70
Magic Number,QRCoder,Contact,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Contact,The following statement contains a magic number: !string.IsNullOrEmpty(streetOrAddressline1) && (streetOrAddressline1.Length > 70)
Magic Number,QRCoder,Contact,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Contact,The following statement contains a magic number: !string.IsNullOrEmpty(houseNumberOrAddressline2) && houseNumberOrAddressline2.Length > 16
Magic Number,QRCoder,Contact,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Contact,The following statement contains a magic number: zipCode.Length > 16
Magic Number,QRCoder,Contact,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Contact,The following statement contains a magic number: city.Length > 35
Magic Number,QRCoder,Girocode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Girocode,The following statement contains a magic number: name.Length > 70
Magic Number,QRCoder,Girocode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Girocode,The following statement contains a magic number: amount.ToString().Replace("'"' ".").Contains(".") && amount.ToString().Replace("'"'".").Split('.')[1].TrimEnd('0').Length > 2
Magic Number,QRCoder,Girocode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Girocode,The following statement contains a magic number: amount < 0.01m || amount > 999999999.99m
Magic Number,QRCoder,Girocode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Girocode,The following statement contains a magic number: amount < 0.01m || amount > 999999999.99m
Magic Number,QRCoder,Girocode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Girocode,The following statement contains a magic number: purposeOfCreditTransfer.Length > 4
Magic Number,QRCoder,Girocode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Girocode,The following statement contains a magic number: typeOfRemittance.Equals(TypeOfRemittance.Unstructured) && remittanceInformation.Length > 140
Magic Number,QRCoder,Girocode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Girocode,The following statement contains a magic number: typeOfRemittance.Equals(TypeOfRemittance.Structured) && remittanceInformation.Length > 35
Magic Number,QRCoder,Girocode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,Girocode,The following statement contains a magic number: messageToGirocodeUser.Length > 70
Magic Number,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The following statement contains a magic number: name.Length > 70
Magic Number,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The following statement contains a magic number: reason.Length > 27
Magic Number,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The following statement contains a magic number: postingKey < 0 || postingKey >= 100
Magic Number,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The following statement contains a magic number: sepaReference.Length > 35
Magic Number,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The following statement contains a magic number: amount.ToString().Replace("'"' ".").Contains(".") && amount.ToString().Replace("'"' ".").Split('.')[1].TrimEnd('0').Length > 2
Magic Number,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The following statement contains a magic number: amount < 0.01m || amount > 999999999.99m
Magic Number,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The following statement contains a magic number: amount < 0.01m || amount > 999999999.99m
Magic Number,QRCoder,BezahlCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,BezahlCode,The following statement contains a magic number: periodicTimeunitRotation < 1 || periodicTimeunitRotation > 52
Magic Number,QRCoder,OneTimePassword,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,TimeToString,The following statement contains a magic number: Period != 30
Magic Number,QRCoder,OneTimePassword,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ProcessCommonFields,The following statement contains a magic number: Digits != 6
Magic Number,QRCoder,ShadowSocksConfig,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,ShadowSocksConfig,The following statement contains a magic number: port < 1 || port > 65535
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The following statement contains a magic number: _payerName = LimitLength(payerName.Trim()' 33);
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The following statement contains a magic number: _payerAddress = LimitLength(payerAddress.Trim()' 33);
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The following statement contains a magic number: _payerPlace = LimitLength(payerPlace.Trim()' 33);
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The following statement contains a magic number: _code = LimitLength(code.Trim().ToUpper()' 4);
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The following statement contains a magic number: _purpose = LimitLength(description.Trim()' 42);
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The following statement contains a magic number: _recipientIban = LimitLength(recipientIban.Trim()' 34);
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The following statement contains a magic number: _recipientName = LimitLength(recipientName.Trim()' 33);
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The following statement contains a magic number: _recipientAddress = LimitLength(recipientAddress.Trim()' 33);
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The following statement contains a magic number: _recipientPlace = LimitLength(recipientPlace.Trim()' 33);
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The following statement contains a magic number: _recipientSiModel = LimitLength(recipientSiModel.Trim().ToUpper()' 4);
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,SlovenianUpnQr,The following statement contains a magic number: _recipientSiReference = LimitLength(recipientSiReference.Trim()' 22);
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,FormatAmount,The following statement contains a magic number: int _amt = (int)Math.Round(amount * 100.0);
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,CalculateChecksum,The following statement contains a magic number: int _cs = 5 + _payerName.Length;
Magic Number,QRCoder,SlovenianUpnQr,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PayloadGenerator.cs,CalculateChecksum,The following statement contains a magic number: _cs += 19;
Magic Number,QRCoder,PngByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,DrawScanlines,The following statement contains a magic number: var bytesPerScanline = (matrixSize * pixelsPerModule + 7) / 8 + 1;
Magic Number,QRCoder,PngByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,DrawScanlines,The following statement contains a magic number: var bytesPerScanline = (matrixSize * pixelsPerModule + 7) / 8 + 1;
Magic Number,QRCoder,PngByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,DrawScanlines,The following statement contains a magic number: scanlines[scanlineOffset + 1 + pixelIndex / 8] |= (byte)(0x80 >> (pixelIndex % 8));
Magic Number,QRCoder,PngByteQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,DrawScanlines,The following statement contains a magic number: scanlines[scanlineOffset + 1 + pixelIndex / 8] |= (byte)(0x80 >> (pixelIndex % 8));
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: var dataLength = (bytes[chunkOffset] << 24) | (bytes[chunkOffset + 1] << 16) | (bytes[chunkOffset + 2] << 8) | bytes[chunkOffset + 3];
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: var dataLength = (bytes[chunkOffset] << 24) | (bytes[chunkOffset + 1] << 16) | (bytes[chunkOffset + 2] << 8) | bytes[chunkOffset + 3];
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: var dataLength = (bytes[chunkOffset] << 24) | (bytes[chunkOffset + 1] << 16) | (bytes[chunkOffset + 2] << 8) | bytes[chunkOffset + 3];
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: var dataLength = (bytes[chunkOffset] << 24) | (bytes[chunkOffset + 1] << 16) | (bytes[chunkOffset + 2] << 8) | bytes[chunkOffset + 3];
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: var dataLength = (bytes[chunkOffset] << 24) | (bytes[chunkOffset + 1] << 16) | (bytes[chunkOffset + 2] << 8) | bytes[chunkOffset + 3];
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: var crc = Crc32(bytes' chunkOffset + 4' dataLength + 4);
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: var crc = Crc32(bytes' chunkOffset + 4' dataLength + 4);
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: var crcOffset = chunkOffset + 8 + dataLength;
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: bytes[crcOffset + 0] = (byte)(crc >> 24);
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: bytes[crcOffset + 1] = (byte)(crc >> 16);
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: bytes[crcOffset + 2] = (byte)(crc >> 8);
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: bytes[crcOffset + 2] = (byte)(crc >> 8);
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: bytes[crcOffset + 3] = (byte)crc;
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,GetBytes,The following statement contains a magic number: chunkOffset = crcOffset + 4;
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,WriteHeader,The following statement contains a magic number: this.WriteChunkStart(IHDR' 13);
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,WritePalette,The following statement contains a magic number: const int Red = 0' Green = 1' Blue = 2' Alpha = 3;
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,WritePalette,The following statement contains a magic number: const int Red = 0' Green = 1' Blue = 2' Alpha = 3;
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,WritePalette,The following statement contains a magic number: const byte Opaque = 255;
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,WritePalette,The following statement contains a magic number: this.WriteChunkStart(PLTE' 3 * rgbaColors.Length);
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,WriteScanlines,The following statement contains a magic number: this.WriteChunkStart(IDAT' (int)(idatStream.Length + 6));
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,WriteChunkStart,The following statement contains a magic number: this.stream.Write(type' 0' 4);
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,WriteChunkEnd,The following statement contains a magic number: this.stream.SetLength(this.stream.Length + 4);
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,WriteChunkEnd,The following statement contains a magic number: this.stream.Position += 4;
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,WriteIntBigEndian,The following statement contains a magic number: this.stream.WriteByte((byte)(value >> 24));
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,WriteIntBigEndian,The following statement contains a magic number: this.stream.WriteByte((byte)(value >> 16));
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,WriteIntBigEndian,The following statement contains a magic number: this.stream.WriteByte((byte)(value >> 8));
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,Adler32,The following statement contains a magic number: const uint Base = 65521;
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,Adler32,The following statement contains a magic number: return (s2 << 16) + s1;
Magic Number,QRCoder,PngBuilder,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PngByteQRCode.cs,Crc32,The following statement contains a magic number: c = CrcTable[(c ^ data[n]) & 0xff] ^ (c >> 8);
Magic Number,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The following statement contains a magic number: var offset = drawQuietZones ? 0 : 4;
Magic Number,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The following statement contains a magic number: var drawableModulesCount = this.QrCodeData.ModuleMatrix.Count - (drawQuietZones ? 0 : offset * 2);
Magic Number,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The following statement contains a magic number: psFile += string.Format(psFunctions' new object[] {                  CleanSvgVal(darkColor.R /255.0)' CleanSvgVal(darkColor.G /255.0)' CleanSvgVal(darkColor.B /255.0)'                  CleanSvgVal(lightColor.R /255.0)' CleanSvgVal(lightColor.G /255.0)' CleanSvgVal(lightColor.B /255.0)'                  drawableModulesCount              });
Magic Number,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The following statement contains a magic number: psFile += string.Format(psFunctions' new object[] {                  CleanSvgVal(darkColor.R /255.0)' CleanSvgVal(darkColor.G /255.0)' CleanSvgVal(darkColor.B /255.0)'                  CleanSvgVal(lightColor.R /255.0)' CleanSvgVal(lightColor.G /255.0)' CleanSvgVal(lightColor.B /255.0)'                  drawableModulesCount              });
Magic Number,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The following statement contains a magic number: psFile += string.Format(psFunctions' new object[] {                  CleanSvgVal(darkColor.R /255.0)' CleanSvgVal(darkColor.G /255.0)' CleanSvgVal(darkColor.B /255.0)'                  CleanSvgVal(lightColor.R /255.0)' CleanSvgVal(lightColor.G /255.0)' CleanSvgVal(lightColor.B /255.0)'                  drawableModulesCount              });
Magic Number,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The following statement contains a magic number: psFile += string.Format(psFunctions' new object[] {                  CleanSvgVal(darkColor.R /255.0)' CleanSvgVal(darkColor.G /255.0)' CleanSvgVal(darkColor.B /255.0)'                  CleanSvgVal(lightColor.R /255.0)' CleanSvgVal(lightColor.G /255.0)' CleanSvgVal(lightColor.B /255.0)'                  drawableModulesCount              });
Magic Number,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The following statement contains a magic number: psFile += string.Format(psFunctions' new object[] {                  CleanSvgVal(darkColor.R /255.0)' CleanSvgVal(darkColor.G /255.0)' CleanSvgVal(darkColor.B /255.0)'                  CleanSvgVal(lightColor.R /255.0)' CleanSvgVal(lightColor.G /255.0)' CleanSvgVal(lightColor.B /255.0)'                  drawableModulesCount              });
Magic Number,QRCoder,PostscriptQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\PostscriptQRCode.cs,GetGraphic,The following statement contains a magic number: psFile += string.Format(psFunctions' new object[] {                  CleanSvgVal(darkColor.R /255.0)' CleanSvgVal(darkColor.G /255.0)' CleanSvgVal(darkColor.B /255.0)'                  CleanSvgVal(lightColor.R /255.0)' CleanSvgVal(lightColor.G /255.0)' CleanSvgVal(lightColor.B /255.0)'                  drawableModulesCount              });
Magic Number,QRCoder,QRCodeData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeData.cs,QRCodeData,The following statement contains a magic number: bytes[0] != 0x51 || bytes[1] != 0x52 || bytes[2] != 0x52
Magic Number,QRCoder,QRCodeData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeData.cs,QRCodeData,The following statement contains a magic number: var sideLen = (int)bytes[4];
Magic Number,QRCoder,QRCodeData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeData.cs,QRCodeData,The following statement contains a magic number: bytes.RemoveRange(0' 5);
Magic Number,QRCoder,QRCodeData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeData.cs,QRCodeData,The following statement contains a magic number: this.Version = (sideLen - 21 - 8) / 4 + 1;
Magic Number,QRCoder,QRCodeData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeData.cs,QRCodeData,The following statement contains a magic number: this.Version = (sideLen - 21 - 8) / 4 + 1;
Magic Number,QRCoder,QRCodeData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeData.cs,QRCodeData,The following statement contains a magic number: this.Version = (sideLen - 21 - 8) / 4 + 1;
Magic Number,QRCoder,QRCodeData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeData.cs,GetRawData,The following statement contains a magic number: i < 8 - (ModuleMatrix.Count * ModuleMatrix.Count) % 8
Magic Number,QRCoder,QRCodeData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeData.cs,GetRawData,The following statement contains a magic number: i < 8 - (ModuleMatrix.Count * ModuleMatrix.Count) % 8
Magic Number,QRCoder,QRCodeData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeData.cs,ModulesPerSideFromVersion,The following statement contains a magic number: return 21 + (version - 1) * 4;
Magic Number,QRCoder,QRCodeData,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeData.cs,ModulesPerSideFromVersion,The following statement contains a magic number: return 21 + (version - 1) * 4;
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: var size = (this.QrCodeData.ModuleMatrix.Count - (drawQuietZones ? 0 : 8)) * pixelsPerModule;
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: var offset = drawQuietZones ? 0 : 4 * pixelsPerModule;
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: var size = (this.QrCodeData.ModuleMatrix.Count - (drawQuietZones ? 0 : 8)) * pixelsPerModule;
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: var offset = drawQuietZones ? 0 : 4 * pixelsPerModule;
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: var drawIconFlag = icon != null && iconSizePercent > 0 && iconSizePercent <= 100;
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: iconDestWidth = iconSizePercent * bmp.Width / 100f;
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: iconX = (bmp.Width - iconDestWidth) / 2;
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: iconY = (bmp.Height - iconDestHeight) / 2;
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: var centerDest = new RectangleF(iconX - iconBorderWidth' iconY - iconBorderWidth' iconDestWidth + iconBorderWidth * 2' iconDestHeight + iconBorderWidth * 2);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: var centerDest = new RectangleF(iconX - iconBorderWidth' iconY - iconBorderWidth' iconDestWidth + iconBorderWidth * 2' iconDestHeight + iconBorderWidth * 2);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: iconPath = this.CreateRoundedRectanglePath(centerDest' iconBorderWidth * 2);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X' rect.Y' cornerRadius * 2' cornerRadius * 2' 180' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X' rect.Y' cornerRadius * 2' cornerRadius * 2' 180' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X' rect.Y' cornerRadius * 2' cornerRadius * 2' 180' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X' rect.Y' cornerRadius * 2' cornerRadius * 2' 180' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine(rect.X + cornerRadius' rect.Y' rect.Right - cornerRadius * 2' rect.Y);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X + rect.Width - cornerRadius * 2' rect.Y' cornerRadius * 2' cornerRadius * 2' 270' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X + rect.Width - cornerRadius * 2' rect.Y' cornerRadius * 2' cornerRadius * 2' 270' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X + rect.Width - cornerRadius * 2' rect.Y' cornerRadius * 2' cornerRadius * 2' 270' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X + rect.Width - cornerRadius * 2' rect.Y' cornerRadius * 2' cornerRadius * 2' 270' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X + rect.Width - cornerRadius * 2' rect.Y' cornerRadius * 2' cornerRadius * 2' 270' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine(rect.Right' rect.Y + cornerRadius * 2' rect.Right' rect.Y + rect.Height - cornerRadius * 2);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine(rect.Right' rect.Y + cornerRadius * 2' rect.Right' rect.Y + rect.Height - cornerRadius * 2);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X + rect.Width - cornerRadius * 2' rect.Y + rect.Height - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 0' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X + rect.Width - cornerRadius * 2' rect.Y + rect.Height - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 0' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X + rect.Width - cornerRadius * 2' rect.Y + rect.Height - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 0' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X + rect.Width - cornerRadius * 2' rect.Y + rect.Height - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 0' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X + rect.Width - cornerRadius * 2' rect.Y + rect.Height - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 0' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine(rect.Right - cornerRadius * 2' rect.Bottom' rect.X + cornerRadius * 2' rect.Bottom);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine(rect.Right - cornerRadius * 2' rect.Bottom' rect.X + cornerRadius * 2' rect.Bottom);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X' rect.Bottom - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 90' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X' rect.Bottom - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 90' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X' rect.Bottom - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 90' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X' rect.Bottom - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 90' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc(rect.X' rect.Bottom - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 90' 90);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine(rect.X' rect.Bottom - cornerRadius * 2' rect.X' rect.Y + cornerRadius * 2);
Magic Number,QRCoder,QRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine(rect.X' rect.Bottom - cornerRadius * 2' rect.X' rect.Y + cornerRadius * 2);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: modeIndicator = DecToBin((int)EncodingMode.ECI' 4);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: modeIndicator += DecToBin((int)eciMode' 8);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: modeIndicator += DecToBin((int)encoding' 4);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: string modeIndicator = DecToBin((int)EncodingMode.Byte' 4);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: bitString += DecToBin(b' 8);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: var dataLength = eccInfo.TotalDataCodewords * 8;
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: bitString += new string('0'' Math.Min(lengthDiff' 4));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: bitString += new string('0'' 8 - (bitString.Length % 8));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: bitString += new string('0'' 8 - (bitString.Length % 8));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: (bitString.Length % 8) != 0
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: var bitStr = bitString.Substring(i * eccInfo.CodewordsInGroup1 * 8' eccInfo.CodewordsInGroup1 * 8);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: var bitStr = bitString.Substring(i * eccInfo.CodewordsInGroup1 * 8' eccInfo.CodewordsInGroup1 * 8);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: bitString = bitString.Substring(eccInfo.BlocksInGroup1 * eccInfo.CodewordsInGroup1 * 8);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: var bitStr = bitString.Substring(i * eccInfo.CodewordsInGroup2 * 8' eccInfo.CodewordsInGroup2 * 8);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: var bitStr = bitString.Substring(i * eccInfo.CodewordsInGroup2 * 8' eccInfo.CodewordsInGroup2 * 8);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: codeWordWithECC.Add(new CodewordBlock(2'                                        i + 1'                                        bitStr'                                        bitBlockList'                                        eccWordList'                                        bitBlockListDec'                                        eccWordListDec)                                  );
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GenerateQrCode,The following statement contains a magic number: version >= 7
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetFormatString,The following statement contains a magic number: fStr += DecToBin(maskVersion' 3);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetFormatString,The following statement contains a magic number: var fStrEcc = fStr.PadRight(15' '0').TrimStart('0');
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetFormatString,The following statement contains a magic number: fStrEcc.Length > 10
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetFormatString,The following statement contains a magic number: fStrEcc = fStrEcc.PadLeft(10' '0');
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetVersionString,The following statement contains a magic number: var vStr = DecToBin(version' 6);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetVersionString,The following statement contains a magic number: var vStrEcc = vStr.PadRight(18' '0').TrimStart('0');
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetVersionString,The following statement contains a magic number: vStrEcc.Length > 12
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetVersionString,The following statement contains a magic number: vStrEcc = vStrEcc.PadLeft(12' '0');
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateECCWords,The following statement contains a magic number: return leadTermSource.PolyItems.Select(x => DecToBin(x.Coefficient' 8)).ToList();
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateMessagePolynom,The following statement contains a magic number: messagePol.PolyItems.Add(new PolynomItem(BinToDec(bitString.Substring(0' 8))' i));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateMessagePolynom,The following statement contains a magic number: bitString = bitString.Remove(0' 8);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,BinaryStringToBitBlockList,The following statement contains a magic number: return new List<char>(bitString.ToCharArray()).Select((x' i) => new { Index = i' Value = x })                  .GroupBy(x => x.Index / 8)                  .Select(x => String.Join(""' x.Select(v => v.Value.ToString()).ToArray()))                  .ToList();
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,BinToDec,The following statement contains a magic number: return Convert.ToInt32(binStr' 2);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,DecToBin,The following statement contains a magic number: return Convert.ToString(decNum' 2);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: return 10;
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: version < 10
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetDataLength,The following statement contains a magic number: return forceUtf8 || IsUtf8(encoding' plainText) ? (codedText.Length / 8) : plainText.Length;
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: var dec = Convert.ToInt32(plainText.Substring(0' 3));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: codeText += DecToBin(dec' 10);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: plainText = plainText.Substring(3);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: plainText.Length >= 3
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: codeText += DecToBin(dec' 7);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: plainText.Length == 2
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: var token = plainText.Substring(0' 2);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: var dec = alphanumEncDict[token[0]] * 45 + alphanumEncDict[token[1]];
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: codeText += DecToBin(dec' 11);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: plainText = plainText.Substring(2);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: plainText.Length >= 2
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: codeText += DecToBin(alphanumEncDict[plainText[0]]' 6);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryECI,The following statement contains a magic number: codeText += DecToBin(_byte' 8);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryByte,The following statement contains a magic number: codeText += DecToBin(b' 8);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,MultiplyGeneratorPolynomByLeadterm,The following statement contains a magic number: var polItemRes = new PolynomItem(                        (polItemBase.Coefficient + leadTerm.Coefficient) % 255'                      polItemBase.Exponent - lowerExponentBy                  );
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ShrinkAlphaExp,The following statement contains a magic number: return (int)((alphaExp % 256) + Math.Floor((double)(alphaExp / 256)));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ShrinkAlphaExp,The following statement contains a magic number: return (int)((alphaExp % 256) + Math.Floor((double)(alphaExp / 256)));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: var p = new Point(alignmentPatternBaseValues[i + x] - 2' alignmentPatternBaseValues[i + y] - 2);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: var p = new Point(alignmentPatternBaseValues[i + x] - 2' alignmentPatternBaseValues[i + y] - 2);
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: y < 7
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: x < 7
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: localAlignmentPatternTable.Add(new AlignmentPattern()                  {                      Version = (i + 7) / 7'                      PatternPositions = points                  }                  );
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: localAlignmentPatternTable.Add(new AlignmentPattern()                  {                      Version = (i + 7) / 7'                      PatternPositions = points                  }                  );
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: i < (7 * 40)
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: i < (7 * 40)
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: localCapacityECCTable.AddRange(                  new[]                  {                      new ECCInfo(                          (i+24) / 24'                          ECCLevel.L'                          capacityECCBaseValues[i]'                          capacityECCBaseValues[i+1]'                          capacityECCBaseValues[i+2]'                          capacityECCBaseValues[i+3]'                          capacityECCBaseValues[i+4]'                          capacityECCBaseValues[i+5])'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.M'                          totalDataCodewords: capacityECCBaseValues[i+6]'                          eccPerBlock: capacityECCBaseValues[i+7]'                          blocksInGroup1: capacityECCBaseValues[i+8]'                          codewordsInGroup1: capacityECCBaseValues[i+9]'                          blocksInGroup2: capacityECCBaseValues[i+10]'                          codewordsInGroup2: capacityECCBaseValues[i+11]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.Q'                          totalDataCodewords: capacityECCBaseValues[i+12]'                          eccPerBlock: capacityECCBaseValues[i+13]'                          blocksInGroup1: capacityECCBaseValues[i+14]'                          codewordsInGroup1: capacityECCBaseValues[i+15]'                          blocksInGroup2: capacityECCBaseValues[i+16]'                          codewordsInGroup2: capacityECCBaseValues[i+17]                      )'                      new ECCInfo                      (                          version: (i + 24) / 24'                          errorCorrectionLevel: ECCLevel.H'                          totalDataCodewords: capacityECCBaseValues[i+18]'                          eccPerBlock: capacityECCBaseValues[i+19]'                          blocksInGroup1: capacityECCBaseValues[i+20]'                          codewordsInGroup1: capacityECCBaseValues[i+21]'                          blocksInGroup2: capacityECCBaseValues[i+22]'                          codewordsInGroup2: capacityECCBaseValues[i+23]                      )                  });
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: i < (4 * 6 * 40)
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: i < (4 * 6 * 40)
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: i < (4 * 6 * 40)
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: localCapacityTable.Add(new VersionInfo(                        (i + 16) / 16'                      new List<VersionInfoDetails>                      {                          new VersionInfoDetails(                               ECCLevel.L'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+1] }'                                   { EncodingMode.Byte' capacityBaseValues[i+2] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+3] }'                              }                          )'                          new VersionInfoDetails(                               ECCLevel.M'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+4] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+5] }'                                   { EncodingMode.Byte' capacityBaseValues[i+6] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+7] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.Q'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+8] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+9] }'                                   { EncodingMode.Byte' capacityBaseValues[i+10] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+11] }'                               }                          )'                          new VersionInfoDetails(                               ECCLevel.H'                               new Dictionary<EncodingMode'int>(){                                   { EncodingMode.Numeric' capacityBaseValues[i+12] }'                                   { EncodingMode.Alphanumeric' capacityBaseValues[i+13] }'                                   { EncodingMode.Byte' capacityBaseValues[i+14] }'                                   { EncodingMode.Kanji' capacityBaseValues[i+15] }'                               }                          )                      }                  ));
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: i < (16 * 40)
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: i < (16 * 40)
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: gfItem *= 2;
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: gfItem ^= 285;
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: gfItem > 255
Magic Number,QRCoder,QRCodeGenerator,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: i < 256
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,AddQuietZone,The following statement contains a magic number: var quietLine = new bool[qrCode.ModuleMatrix.Count + 8];
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,AddQuietZone,The following statement contains a magic number: i < 4
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,AddQuietZone,The following statement contains a magic number: i < 4
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,AddQuietZone,The following statement contains a magic number: i < qrCode.ModuleMatrix.Count - 4
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceVersion,The following statement contains a magic number: qrCode.ModuleMatrix[y + size - 11][x] = vStr[x * 3 + y] == '1';
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceVersion,The following statement contains a magic number: qrCode.ModuleMatrix[y + size - 11][x] = vStr[x * 3 + y] == '1';
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceVersion,The following statement contains a magic number: qrCode.ModuleMatrix[x][y + size - 11] = vStr[x * 3 + y] == '1';
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceVersion,The following statement contains a magic number: qrCode.ModuleMatrix[x][y + size - 11] = vStr[x * 3 + y] == '1';
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceVersion,The following statement contains a magic number: y < 3
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceVersion,The following statement contains a magic number: x < 6
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var modules = new['] {                      { 8' 0' size - 1' 8 }'                      { 8' 1' size - 2' 8 }'                      { 8' 2' size - 3' 8 }'                      { 8' 3' size - 4' 8 }'                      { 8' 4' size - 5' 8 }'                      { 8' 5' size - 6' 8 }'                      { 8' 7' size - 7' 8 }'                      { 8' 8' size - 8' 8 }'                      { 7' 8' 8' size - 7 }'                      { 5' 8' 8' size - 6 }'                      { 4' 8' 8' size - 5 }'                      { 3' 8' 8' size - 4 }'                      { 2' 8' 8' size - 3 }'                      { 1' 8' 8' size - 2 }'                      { 0' 8' 8' size - 1 } };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var p2 = new Point(modules[i' 2]' modules[i' 3]);
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: var p2 = new Point(modules[i' 2]' modules[i' 3]);
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFormat,The following statement contains a magic number: i < 15
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,MaskCode,The following statement contains a magic number: var formatStr = GetFormatString(eccLevel' Convert.ToInt32((pattern.Name.Substring(7' 1)))-1);
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,MaskCode,The following statement contains a magic number: version >= 7
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,MaskCode,The following statement contains a magic number: pattern.Name.Length == 8 && pattern.Name.StartsWith("Pattern")
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceDataWords,The following statement contains a magic number: x = 5;
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceDataWords,The following statement contains a magic number: x == 6
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveSeperatorAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(7' 0' 1' 8)'                      new Rectangle(0' 7' 7' 1)'                      new Rectangle(0' size-8' 8' 1)'                      new Rectangle(7' size-7' 1' 7)'                      new Rectangle(size-8' 0' 1' 8)'                      new Rectangle(size-7' 7' 7' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(8' 0' 1' 6)'                      new Rectangle(8' 7' 1' 1)'                      new Rectangle(0' 8' 6' 1)'                      new Rectangle(7' 8' 2' 1)'                      new Rectangle(size-8' 8' 8' 1)'                      new Rectangle(8' size-7' 1' 7)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(size-11' 0' 3' 6)'                      new Rectangle(0' size-11' 6' 3)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(size-11' 0' 3' 6)'                      new Rectangle(0' size-11' 6' 3)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(size-11' 0' 3' 6)'                      new Rectangle(0' size-11' 6' 3)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(size-11' 0' 3' 6)'                      new Rectangle(0' size-11' 6' 3)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(size-11' 0' 3' 6)'                      new Rectangle(0' size-11' 6' 3)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(size-11' 0' 3' 6)'                      new Rectangle(0' size-11' 6' 3)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ReserveVersionAreas,The following statement contains a magic number: version >= 7
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceDarkModule,The following statement contains a magic number: qrCode.ModuleMatrix[4 * version + 9][8] = true;
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceDarkModule,The following statement contains a magic number: qrCode.ModuleMatrix[4 * version + 9][8] = true;
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceDarkModule,The following statement contains a magic number: qrCode.ModuleMatrix[4 * version + 9][8] = true;
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceDarkModule,The following statement contains a magic number: blockedModules.Add(new Rectangle(8' 4 * version + 9' 1' 1));
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceDarkModule,The following statement contains a magic number: blockedModules.Add(new Rectangle(8' 4 * version + 9' 1' 1));
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceDarkModule,The following statement contains a magic number: blockedModules.Add(new Rectangle(8' 4 * version + 9' 1' 1));
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFinderPatterns,The following statement contains a magic number: int[] locations = { 0' 0' size - 7' 0' 0' size - 7 };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFinderPatterns,The following statement contains a magic number: int[] locations = { 0' 0' size - 7' 0' 0' size - 7 };
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFinderPatterns,The following statement contains a magic number: !(((x == 1 || x == 5) && y > 0 && y < 6) || (x > 0 && x < 6 && (y == 1 || y == 5)))
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFinderPatterns,The following statement contains a magic number: !(((x == 1 || x == 5) && y > 0 && y < 6) || (x > 0 && x < 6 && (y == 1 || y == 5)))
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFinderPatterns,The following statement contains a magic number: !(((x == 1 || x == 5) && y > 0 && y < 6) || (x > 0 && x < 6 && (y == 1 || y == 5)))
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFinderPatterns,The following statement contains a magic number: !(((x == 1 || x == 5) && y > 0 && y < 6) || (x > 0 && x < 6 && (y == 1 || y == 5)))
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFinderPatterns,The following statement contains a magic number: y < 7
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFinderPatterns,The following statement contains a magic number: x < 7
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFinderPatterns,The following statement contains a magic number: blockedModules.Add(new Rectangle(locations[i]' locations[i + 1]' 7' 7));
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFinderPatterns,The following statement contains a magic number: blockedModules.Add(new Rectangle(locations[i]' locations[i + 1]' 7' 7));
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceFinderPatterns,The following statement contains a magic number: i < 6
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceAlignmentPatterns,The following statement contains a magic number: var alignmentPatternRect = new Rectangle(loc.X' loc.Y' 5' 5);
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceAlignmentPatterns,The following statement contains a magic number: var alignmentPatternRect = new Rectangle(loc.X' loc.Y' 5' 5);
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceAlignmentPatterns,The following statement contains a magic number: y == 0 || y == 4 || x == 0 || x == 4 || (x == 2 && y == 2)
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceAlignmentPatterns,The following statement contains a magic number: y == 0 || y == 4 || x == 0 || x == 4 || (x == 2 && y == 2)
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceAlignmentPatterns,The following statement contains a magic number: y == 0 || y == 4 || x == 0 || x == 4 || (x == 2 && y == 2)
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceAlignmentPatterns,The following statement contains a magic number: y == 0 || y == 4 || x == 0 || x == 4 || (x == 2 && y == 2)
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceAlignmentPatterns,The following statement contains a magic number: y < 5
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceAlignmentPatterns,The following statement contains a magic number: x < 5
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceAlignmentPatterns,The following statement contains a magic number: blockedModules.Add(new Rectangle(loc.X' loc.Y' 5' 5));
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceAlignmentPatterns,The following statement contains a magic number: blockedModules.Add(new Rectangle(loc.X' loc.Y' 5' 5));
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceTimingPatterns,The following statement contains a magic number: qrCode.ModuleMatrix[6][i] = true;
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceTimingPatterns,The following statement contains a magic number: qrCode.ModuleMatrix[i][6] = true;
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceTimingPatterns,The following statement contains a magic number: i % 2 == 0
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceTimingPatterns,The following statement contains a magic number: i < size - 8
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceTimingPatterns,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(6' 8' 1' size-16)'                      new Rectangle(8' 6' size-16' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceTimingPatterns,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(6' 8' 1' size-16)'                      new Rectangle(8' 6' size-16' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceTimingPatterns,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(6' 8' 1' size-16)'                      new Rectangle(8' 6' size-16' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceTimingPatterns,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(6' 8' 1' size-16)'                      new Rectangle(8' 6' size-16' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceTimingPatterns,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(6' 8' 1' size-16)'                      new Rectangle(8' 6' size-16' 1)                  });
Magic Number,QRCoder,ModulePlacer,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlaceTimingPatterns,The following statement contains a magic number: blockedModules.AddRange(new[]{                      new Rectangle(6' 8' 1' size-16)'                      new Rectangle(8' 6' size-16' 1)                  });
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern1,The following statement contains a magic number: return (x + y) % 2 == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern2,The following statement contains a magic number: return y % 2 == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern3,The following statement contains a magic number: return x % 3 == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern4,The following statement contains a magic number: return (x + y) % 3 == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern5,The following statement contains a magic number: return ((int)(Math.Floor(y / 2d) + Math.Floor(x / 3d)) % 2) == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern5,The following statement contains a magic number: return ((int)(Math.Floor(y / 2d) + Math.Floor(x / 3d)) % 2) == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern5,The following statement contains a magic number: return ((int)(Math.Floor(y / 2d) + Math.Floor(x / 3d)) % 2) == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern6,The following statement contains a magic number: return ((x * y) % 2) + ((x * y) % 3) == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern6,The following statement contains a magic number: return ((x * y) % 2) + ((x * y) % 3) == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern7,The following statement contains a magic number: return (((x * y) % 2) + ((x * y) % 3)) % 2 == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern7,The following statement contains a magic number: return (((x * y) % 2) + ((x * y) % 3)) % 2 == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern7,The following statement contains a magic number: return (((x * y) % 2) + ((x * y) % 3)) % 2 == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern8,The following statement contains a magic number: return (((x + y) % 2) + ((x * y) % 3)) % 2 == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern8,The following statement contains a magic number: return (((x + y) % 2) + ((x * y) % 3)) % 2 == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Pattern8,The following statement contains a magic number: return (((x + y) % 2) + ((x * y) % 3)) % 2 == 0;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: score1 += 3;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: modInRow == 5
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: score1 += 3;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: modInColumn == 5
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: score2 += 3;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: score3 += 40;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  qrCode.ModuleMatrix[y][x + 2] &&                                  qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  !qrCode.ModuleMatrix[y][x + 7] &&                                  !qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  !qrCode.ModuleMatrix[y][x + 10]) ||                                  (!qrCode.ModuleMatrix[y][x] &&                                  !qrCode.ModuleMatrix[y][x + 1] &&                                  !qrCode.ModuleMatrix[y][x + 2] &&                                  !qrCode.ModuleMatrix[y][x + 3] &&                                  qrCode.ModuleMatrix[y][x + 4] &&                                  !qrCode.ModuleMatrix[y][x + 5] &&                                  qrCode.ModuleMatrix[y][x + 6] &&                                  qrCode.ModuleMatrix[y][x + 7] &&                                  qrCode.ModuleMatrix[y][x + 8] &&                                  !qrCode.ModuleMatrix[y][x + 9] &&                                  qrCode.ModuleMatrix[y][x + 10])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: score3 += 40;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: (qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  qrCode.ModuleMatrix[x + 2][y] &&                                  qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  !qrCode.ModuleMatrix[x + 7][y] &&                                  !qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  !qrCode.ModuleMatrix[x + 10][y]) ||                                  (!qrCode.ModuleMatrix[x][y] &&                                  !qrCode.ModuleMatrix[x + 1][y] &&                                  !qrCode.ModuleMatrix[x + 2][y] &&                                  !qrCode.ModuleMatrix[x + 3][y] &&                                  qrCode.ModuleMatrix[x + 4][y] &&                                  !qrCode.ModuleMatrix[x + 5][y] &&                                  qrCode.ModuleMatrix[x + 6][y] &&                                  qrCode.ModuleMatrix[x + 7][y] &&                                  qrCode.ModuleMatrix[x + 8][y] &&                                  !qrCode.ModuleMatrix[x + 9][y] &&                                  qrCode.ModuleMatrix[x + 10][y])
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: x < size - 10
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: var percent = (blackModules / (qrCode.ModuleMatrix.Count * qrCode.ModuleMatrix.Count)) * 100;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: var prevMultipleOf5 = Math.Abs((int) Math.Floor(percent/5)*5 - 50)/5;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: var prevMultipleOf5 = Math.Abs((int) Math.Floor(percent/5)*5 - 50)/5;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: var prevMultipleOf5 = Math.Abs((int) Math.Floor(percent/5)*5 - 50)/5;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: var prevMultipleOf5 = Math.Abs((int) Math.Floor(percent/5)*5 - 50)/5;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: var nextMultipleOf5 = Math.Abs((int)Math.Floor(percent / 5) * 5 -45)/5;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: var nextMultipleOf5 = Math.Abs((int)Math.Floor(percent / 5) * 5 -45)/5;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: var nextMultipleOf5 = Math.Abs((int)Math.Floor(percent / 5) * 5 -45)/5;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: var nextMultipleOf5 = Math.Abs((int)Math.Floor(percent / 5) * 5 -45)/5;
Magic Number,QRCoder,MaskPattern,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,Score,The following statement contains a magic number: score4 = Math.Min(prevMultipleOf5' nextMultipleOf5)*10;
Magic Number,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The following statement contains a magic number: var offset = drawQuietZones ? 0 : 4;
Magic Number,QRCoder,SvgQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The following statement contains a magic number: var drawableModulesCount = this.QrCodeData.ModuleMatrix.Count - (drawQuietZones ? 0 : offset * 2);
Magic Number,QRCoder,XamlQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\XamlQRCode.cs,GetGraphic,The following statement contains a magic number: var offsetModules = drawQuietZones ? 0 : 4;
Magic Number,QRCoder,XamlQRCode,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\XamlQRCode.cs,GetDrawableModulesCount,The following statement contains a magic number: return this.QrCodeData.ModuleMatrix.Count - (drawQuietZones ? 0 : 8);
Magic Number,QRCoder.Framework4._0Methods,Stream4Methods,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\Framework4.0Methods\Stream4Methods.cs,CopyTo,The following statement contains a magic number: byte[] buffer = new byte[16 * 1024];
Magic Number,QRCoder.Framework4._0Methods,Stream4Methods,D:\research\architectureSmells\repos\codebude_QRCoder\QRCoder\Framework4.0Methods\Stream4Methods.cs,CopyTo,The following statement contains a magic number: byte[] buffer = new byte[16 * 1024];
