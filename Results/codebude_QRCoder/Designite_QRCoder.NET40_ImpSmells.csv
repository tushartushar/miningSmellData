Implementation smell,Namespace,Class,File,Method,Description
Complex Method,QRCoder,Base64QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\Base64QRCode.cs,BitmapToBase64,Cyclomatic complexity of the method is 12
Complex Method,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,Cyclomatic complexity of the method is 17
Long Parameter List,QRCoder,Base64QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\Base64QRCode.cs,GetGraphic,The method has 5 parameters.
Long Parameter List,QRCoder,Base64QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\Base64QRCode.cs,GetGraphic,The method has 5 parameters.
Long Parameter List,QRCoder,Base64QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\Base64QRCode.cs,GetGraphic,The method has 8 parameters.
Long Parameter List,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The method has 7 parameters.
Long Statement,QRCoder,Base64QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\Base64QRCode.cs,GetGraphic,The length of the statement  "	return this.GetGraphic (pixelsPerModule' ColorTranslator.FromHtml (darkColorHtmlHex)' ColorTranslator.FromHtml (lightColorHtmlHex)' drawQuietZones' imgType); " is 157.
Long Statement,QRCoder,Base64QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\Base64QRCode.cs,GetGraphic,The length of the statement  "	Bitmap bmp = qr.GetGraphic (pixelsPerModule' darkColor' lightColor' icon' iconSizePercent' iconBorderWidth' drawQuietZones); " is 124.
Long Statement,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,GetGraphic,The length of the statement  "				var module = this.QrCodeData.ModuleMatrix [(x + pixelsPerModule) / pixelsPerModule - 1] [(y + pixelsPerModule) / pixelsPerModule - 1]; " is 134.
Long Statement,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,HexColorToByteArray,The length of the statement  "		byteColor [2 - i] = byte.Parse (colorString.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture); " is 162.
Long Statement,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The length of the statement  "	return this.GetGraphic (pixelsPerModule' ColorTranslator.FromHtml (darkColorHtmlHex)' ColorTranslator.FromHtml (lightColorHtmlHex)' drawQuietZones); " is 148.
Long Statement,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The length of the statement  "			var module = this.QrCodeData.ModuleMatrix [(y + pixelsPerModule) / pixelsPerModule - 1] [(x + pixelsPerModule) / pixelsPerModule - 1]; " is 134.
Long Statement,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The length of the statement  "				gfx.FillRectangle (new SolidBrush (darkColor)' new Rectangle (x - offset' y - offset' pixelsPerModule' pixelsPerModule)); " is 121.
Long Statement,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The length of the statement  "				gfx.FillRectangle (new SolidBrush (lightColor)' new Rectangle (x - offset' y - offset' pixelsPerModule' pixelsPerModule)); " is 122.
Long Statement,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The length of the statement  "		var centerDest = new RectangleF (iconX - iconBorderWidth' iconY - iconBorderWidth' iconDestWidth + iconBorderWidth * 2' iconDestHeight + iconBorderWidth * 2); " is 158.
Long Statement,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The length of the statement  "			var module = this.QrCodeData.ModuleMatrix [(y + pixelsPerModule) / pixelsPerModule - 1] [(x + pixelsPerModule) / pixelsPerModule - 1]; " is 134.
Long Statement,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The length of the statement  "	roundedRect.AddArc (rect.X + rect.Width - cornerRadius * 2' rect.Y + rect.Height - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 0' 90); " is 144.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The length of the statement  "	ModulePlacer.PlaceAlignmentPatterns (ref qr' this.alignmentPatternTable.Where (x => x.Version == version).Select (x => x.PatternPositions).First ()' ref blockedModules); " is 169.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateECCWords,The length of the statement  "		messagePolynom.PolyItems [i] = new PolynomItem (messagePolynom.PolyItems [i].Coefficient' messagePolynom.PolyItems [i].Exponent + eccWords); " is 140.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateECCWords,The length of the statement  "		generatorPolynom.PolyItems [i] = new PolynomItem (generatorPolynom.PolyItems [i].Coefficient' generatorPolynom.PolyItems [i].Exponent + (messagePolynom.PolyItems.Count - 1)); " is 174.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateECCWords,The length of the statement  "	for (var i = 0; (leadTermSource.PolyItems.Count > 0 && leadTermSource.PolyItems [leadTermSource.PolyItems.Count - 1].Exponent > 0); i++) { " is 138.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateECCWords,The length of the statement  "			leadTermSource.PolyItems.Add (new PolynomItem (0' leadTermSource.PolyItems [leadTermSource.PolyItems.Count - 1].Exponent - 1)); " is 127.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateECCWords,The length of the statement  "			var resPoly = this.MultiplyGeneratorPolynomByLeadterm (generatorPolynom' this.ConvertToAlphaNotation (leadTermSource).PolyItems [0]' i); " is 136.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ConvertToAlphaNotation,The length of the statement  "		newPoly.PolyItems.Add (new PolynomItem ((poly.PolyItems [i].Coefficient != 0 ? this.GetAlphaExpFromIntVal (poly.PolyItems [i].Coefficient) : 0)' poly.PolyItems [i].Exponent)); " is 175.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ConvertToDecNotation,The length of the statement  "		newPoly.PolyItems.Add (new PolynomItem (this.GetIntValFromAlphaExp (poly.PolyItems [i].Coefficient)' poly.PolyItems [i].Exponent)); " is 131.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetVersion,The length of the statement  "	var version = this.capacityTable.Where (x => x.Details.Count (y => (y.ErrorCorrectionLevel == eccLevel && y.CapacityDict [encMode] >= Convert.ToInt32 (length))) > 0).Select (x => new { " is 184.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryByte,The length of the statement  "		codeBytes = utf8BOM ? Encoding.UTF8.GetPreamble ().Concat (Encoding.UTF8.GetBytes (plainText)).ToArray () : Encoding.UTF8.GetBytes (plainText); " is 143.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,XORPolynoms,The length of the statement  "		var polItemRes = new PolynomItem (longPoly.PolyItems [i].Coefficient ^ (shortPoly.PolyItems.Count > i ? shortPoly.PolyItems [i].Coefficient : 0)' messagePolynom.PolyItems [0].Exponent - i); " is 189.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,MultiplyGeneratorPolynomByLeadterm,The length of the statement  "		var polItemRes = new PolynomItem ((polItemBase.Coefficient + leadTerm.Coefficient) % 255' polItemBase.Exponent - lowerExponentBy); " is 130.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,MultiplyAlphaPolynoms,The length of the statement  "			var polItemRes = new PolynomItem (ShrinkAlphaExp (polItemBase.Coefficient + polItemMulti.Coefficient)' (polItemBase.Exponent + polItemMulti.Exponent)); " is 151.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,MultiplyAlphaPolynoms,The length of the statement  "	var exponentsToGlue = resultPolynom.PolyItems.GroupBy (x => x.Exponent).Where (x => x.Count () > 1).Select (x => x.First ().Exponent); " is 134.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,MultiplyAlphaPolynoms,The length of the statement  "		var coefficient = resultPolynom.PolyItems.Where (x => x.Exponent == exponent).Aggregate (0' (current' polynomOld) => current ^ this.GetIntValFromAlphaExp (polynomOld.Coefficient)); " is 180.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlphanumEncDict,The length of the statement  "	//alphanumEncTable.ToList().Select((x' i) => new { Chr = x' Index = i }).ToList().ForEach(x => this.alphanumEncDict.Add(x.Chr' x.Index)); " is 137.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The length of the statement  "			new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])' " is 252.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The length of the statement  "			new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])' " is 392.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The length of the statement  "			new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])' " is 396.
Long Statement,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The length of the statement  "			new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23]) " is 395.
Long Statement,QRCoder,SvgQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "	var viewBox = new Size (pixelsPerModule * this.QrCodeData.ModuleMatrix.Count' pixelsPerModule * this.QrCodeData.ModuleMatrix.Count); " is 132.
Long Statement,QRCoder,SvgQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "	var viewBox = new Size (pixelsPerModule * this.QrCodeData.ModuleMatrix.Count' pixelsPerModule * this.QrCodeData.ModuleMatrix.Count); " is 132.
Long Statement,QRCoder,SvgQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "	var viewBox = new Size (pixelsPerModule * this.QrCodeData.ModuleMatrix.Count' pixelsPerModule * this.QrCodeData.ModuleMatrix.Count); " is 132.
Long Statement,QRCoder,SvgQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "	return this.GetGraphic (viewBox' ColorTranslator.ToHtml (Color.FromArgb (darkColor.ToArgb ()))' ColorTranslator.ToHtml (Color.FromArgb (lightColor.ToArgb ()))' drawQuietZones); " is 176.
Long Statement,QRCoder,SvgQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "	var svgFile = new StringBuilder (@"<svg version=""1.1"" baseProfile=""full"" width=""" + viewBox.Width + @""" height=""" + viewBox.Height + @""" xmlns=""http://www.w3.org/2000/svg"">"); " is 185.
Long Statement,QRCoder,SvgQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "	var unitsPerModule = (int)Math.Floor (Convert.ToDouble (Math.Min (viewBox.Width' viewBox.Height)) / this.QrCodeData.ModuleMatrix.Count); " is 136.
Long Statement,QRCoder,SvgQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "	svgFile.AppendLine (@"<rect x=""" + (0 - offset) + @""" y=""" + (0 - offset) + @""" width=""" + (viewBox.Width - offset) + @""" height=""" + (viewBox.Height - offset) + @""" fill=""" + lightColorHex + @""" />"); " is 211.
Long Statement,QRCoder,SvgQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "			var module = this.QrCodeData.ModuleMatrix [(y + unitsPerModule) / unitsPerModule - 1] [(x + unitsPerModule) / unitsPerModule - 1]; " is 130.
Long Statement,QRCoder,SvgQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\SvgQRCode.cs,GetGraphic,The length of the statement  "				svgFile.AppendLine (@"<rect x=""" + (x - offset) + @""" y=""" + (y - offset) + @""" width=""" + unitsPerModule + @""" height=""" + unitsPerModule + @""" fill=""" + (module ? darkColorHex : lightColorHex) + @""" />"); " is 216.
Long Statement,QRCoder,UnityQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\UnityQRCode.cs,GetGraphic,The length of the statement  "			var module = this.QrCodeData.ModuleMatrix [(y + pixelsPerModule) / pixelsPerModule - 1] [(x + pixelsPerModule) / pixelsPerModule - 1]; " is 134.
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,GetGraphic,The following statement contains a magic number: for (var x = sideLength - 1; x >= 0; x = x - pixelsPerModule) {  	for (int pm = 0; pm < pixelsPerModule; pm++) {  		for (var y = 0; y < sideLength; y = y + pixelsPerModule) {  			var module = this.QrCodeData.ModuleMatrix [(x + pixelsPerModule) / pixelsPerModule - 1] [(y + pixelsPerModule) / pixelsPerModule - 1];  			for (int i = 0; i < pixelsPerModule; i++) {  				bmp.AddRange (module ? moduleDark : moduleLight);  			}  		}  		if (sideLength % 4 != 0) {  			for (int i = 0; i < sideLength % 4; i++) {  				bmp.Add (0x00);  			}  		}  	}  }  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,GetGraphic,The following statement contains a magic number: for (var x = sideLength - 1; x >= 0; x = x - pixelsPerModule) {  	for (int pm = 0; pm < pixelsPerModule; pm++) {  		for (var y = 0; y < sideLength; y = y + pixelsPerModule) {  			var module = this.QrCodeData.ModuleMatrix [(x + pixelsPerModule) / pixelsPerModule - 1] [(y + pixelsPerModule) / pixelsPerModule - 1];  			for (int i = 0; i < pixelsPerModule; i++) {  				bmp.AddRange (module ? moduleDark : moduleLight);  			}  		}  		if (sideLength % 4 != 0) {  			for (int i = 0; i < sideLength % 4; i++) {  				bmp.Add (0x00);  			}  		}  	}  }  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,GetGraphic,The following statement contains a magic number: for (int pm = 0; pm < pixelsPerModule; pm++) {  	for (var y = 0; y < sideLength; y = y + pixelsPerModule) {  		var module = this.QrCodeData.ModuleMatrix [(x + pixelsPerModule) / pixelsPerModule - 1] [(y + pixelsPerModule) / pixelsPerModule - 1];  		for (int i = 0; i < pixelsPerModule; i++) {  			bmp.AddRange (module ? moduleDark : moduleLight);  		}  	}  	if (sideLength % 4 != 0) {  		for (int i = 0; i < sideLength % 4; i++) {  			bmp.Add (0x00);  		}  	}  }  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,GetGraphic,The following statement contains a magic number: for (int pm = 0; pm < pixelsPerModule; pm++) {  	for (var y = 0; y < sideLength; y = y + pixelsPerModule) {  		var module = this.QrCodeData.ModuleMatrix [(x + pixelsPerModule) / pixelsPerModule - 1] [(y + pixelsPerModule) / pixelsPerModule - 1];  		for (int i = 0; i < pixelsPerModule; i++) {  			bmp.AddRange (module ? moduleDark : moduleLight);  		}  	}  	if (sideLength % 4 != 0) {  		for (int i = 0; i < sideLength % 4; i++) {  			bmp.Add (0x00);  		}  	}  }  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,GetGraphic,The following statement contains a magic number: if (sideLength % 4 != 0) {  	for (int i = 0; i < sideLength % 4; i++) {  		bmp.Add (0x00);  	}  }  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,GetGraphic,The following statement contains a magic number: if (sideLength % 4 != 0) {  	for (int i = 0; i < sideLength % 4; i++) {  		bmp.Add (0x00);  	}  }  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,GetGraphic,The following statement contains a magic number: for (int i = 0; i < sideLength % 4; i++) {  	bmp.Add (0x00);  }  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,HexColorToByteArray,The following statement contains a magic number: for (int i = 0; i < byteColor.Length; i++)  	byteColor [2 - i] = byte.Parse (colorString.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,HexColorToByteArray,The following statement contains a magic number: for (int i = 0; i < byteColor.Length; i++)  	byteColor [2 - i] = byte.Parse (colorString.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,HexColorToByteArray,The following statement contains a magic number: for (int i = 0; i < byteColor.Length; i++)  	byteColor [2 - i] = byte.Parse (colorString.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,HexColorToByteArray,The following statement contains a magic number: byteColor [2 - i] = byte.Parse (colorString.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,HexColorToByteArray,The following statement contains a magic number: byteColor [2 - i] = byte.Parse (colorString.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,HexColorToByteArray,The following statement contains a magic number: byteColor [2 - i] = byte.Parse (colorString.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,IntTo4Byte,The following statement contains a magic number: unchecked {  	bytes [1] = (byte)(inp >> 8);  	bytes [0] = (byte)(inp);  }  
Magic Number,QRCoder,BitmapByteQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\BitmapByteQRCode.cs,IntTo4Byte,The following statement contains a magic number: bytes [1] = (byte)(inp >> 8);  
Magic Number,QRCoder,QRCodeData,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeData.cs,ModulesPerSideFromVersion,The following statement contains a magic number: return 21 + (version - 1) * 4;  
Magic Number,QRCoder,QRCodeData,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeData.cs,ModulesPerSideFromVersion,The following statement contains a magic number: return 21 + (version - 1) * 4;  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: if (drawIconFlag) {  	iconDestWidth = iconSizePercent * bmp.Width / 100f;  	iconDestHeight = drawIconFlag ? iconDestWidth * icon.Height / icon.Width : 0;  	iconX = (bmp.Width - iconDestWidth) / 2;  	iconY = (bmp.Height - iconDestHeight) / 2;  	var centerDest = new RectangleF (iconX - iconBorderWidth' iconY - iconBorderWidth' iconDestWidth + iconBorderWidth * 2' iconDestHeight + iconBorderWidth * 2);  	iconPath = this.CreateRoundedRectanglePath (centerDest' iconBorderWidth * 2);  }  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: if (drawIconFlag) {  	iconDestWidth = iconSizePercent * bmp.Width / 100f;  	iconDestHeight = drawIconFlag ? iconDestWidth * icon.Height / icon.Width : 0;  	iconX = (bmp.Width - iconDestWidth) / 2;  	iconY = (bmp.Height - iconDestHeight) / 2;  	var centerDest = new RectangleF (iconX - iconBorderWidth' iconY - iconBorderWidth' iconDestWidth + iconBorderWidth * 2' iconDestHeight + iconBorderWidth * 2);  	iconPath = this.CreateRoundedRectanglePath (centerDest' iconBorderWidth * 2);  }  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: if (drawIconFlag) {  	iconDestWidth = iconSizePercent * bmp.Width / 100f;  	iconDestHeight = drawIconFlag ? iconDestWidth * icon.Height / icon.Width : 0;  	iconX = (bmp.Width - iconDestWidth) / 2;  	iconY = (bmp.Height - iconDestHeight) / 2;  	var centerDest = new RectangleF (iconX - iconBorderWidth' iconY - iconBorderWidth' iconDestWidth + iconBorderWidth * 2' iconDestHeight + iconBorderWidth * 2);  	iconPath = this.CreateRoundedRectanglePath (centerDest' iconBorderWidth * 2);  }  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: if (drawIconFlag) {  	iconDestWidth = iconSizePercent * bmp.Width / 100f;  	iconDestHeight = drawIconFlag ? iconDestWidth * icon.Height / icon.Width : 0;  	iconX = (bmp.Width - iconDestWidth) / 2;  	iconY = (bmp.Height - iconDestHeight) / 2;  	var centerDest = new RectangleF (iconX - iconBorderWidth' iconY - iconBorderWidth' iconDestWidth + iconBorderWidth * 2' iconDestHeight + iconBorderWidth * 2);  	iconPath = this.CreateRoundedRectanglePath (centerDest' iconBorderWidth * 2);  }  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: if (drawIconFlag) {  	iconDestWidth = iconSizePercent * bmp.Width / 100f;  	iconDestHeight = drawIconFlag ? iconDestWidth * icon.Height / icon.Width : 0;  	iconX = (bmp.Width - iconDestWidth) / 2;  	iconY = (bmp.Height - iconDestHeight) / 2;  	var centerDest = new RectangleF (iconX - iconBorderWidth' iconY - iconBorderWidth' iconDestWidth + iconBorderWidth * 2' iconDestHeight + iconBorderWidth * 2);  	iconPath = this.CreateRoundedRectanglePath (centerDest' iconBorderWidth * 2);  }  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: iconX = (bmp.Width - iconDestWidth) / 2;  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: iconY = (bmp.Height - iconDestHeight) / 2;  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,GetGraphic,The following statement contains a magic number: iconPath = this.CreateRoundedRectanglePath (centerDest' iconBorderWidth * 2);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X' rect.Y' cornerRadius * 2' cornerRadius * 2' 180' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X' rect.Y' cornerRadius * 2' cornerRadius * 2' 180' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X' rect.Y' cornerRadius * 2' cornerRadius * 2' 180' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X' rect.Y' cornerRadius * 2' cornerRadius * 2' 180' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine (rect.X + cornerRadius' rect.Y' rect.Right - cornerRadius * 2' rect.Y);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X + rect.Width - cornerRadius * 2' rect.Y' cornerRadius * 2' cornerRadius * 2' 270' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X + rect.Width - cornerRadius * 2' rect.Y' cornerRadius * 2' cornerRadius * 2' 270' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X + rect.Width - cornerRadius * 2' rect.Y' cornerRadius * 2' cornerRadius * 2' 270' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X + rect.Width - cornerRadius * 2' rect.Y' cornerRadius * 2' cornerRadius * 2' 270' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X + rect.Width - cornerRadius * 2' rect.Y' cornerRadius * 2' cornerRadius * 2' 270' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine (rect.Right' rect.Y + cornerRadius * 2' rect.Right' rect.Y + rect.Height - cornerRadius * 2);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine (rect.Right' rect.Y + cornerRadius * 2' rect.Right' rect.Y + rect.Height - cornerRadius * 2);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X + rect.Width - cornerRadius * 2' rect.Y + rect.Height - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 0' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X + rect.Width - cornerRadius * 2' rect.Y + rect.Height - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 0' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X + rect.Width - cornerRadius * 2' rect.Y + rect.Height - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 0' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X + rect.Width - cornerRadius * 2' rect.Y + rect.Height - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 0' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X + rect.Width - cornerRadius * 2' rect.Y + rect.Height - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 0' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine (rect.Right - cornerRadius * 2' rect.Bottom' rect.X + cornerRadius * 2' rect.Bottom);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine (rect.Right - cornerRadius * 2' rect.Bottom' rect.X + cornerRadius * 2' rect.Bottom);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X' rect.Bottom - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 90' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X' rect.Bottom - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 90' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X' rect.Bottom - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 90' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X' rect.Bottom - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 90' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddArc (rect.X' rect.Bottom - cornerRadius * 2' cornerRadius * 2' cornerRadius * 2' 90' 90);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine (rect.X' rect.Bottom - cornerRadius * 2' rect.X' rect.Y + cornerRadius * 2);  
Magic Number,QRCoder,QRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCode.cs,CreateRoundedRectanglePath,The following statement contains a magic number: roundedRect.AddLine (rect.X' rect.Bottom - cornerRadius * 2' rect.X' rect.Y + cornerRadius * 2);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: if (lengthDiff > 0)  	bitString += new string ('0'' Math.Min (lengthDiff' 4));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: bitString += new string ('0'' Math.Min (lengthDiff' 4));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: if ((bitString.Length % 8) != 0)  	bitString += new string ('0'' 8 - (bitString.Length % 8));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: if ((bitString.Length % 8) != 0)  	bitString += new string ('0'' 8 - (bitString.Length % 8));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: if ((bitString.Length % 8) != 0)  	bitString += new string ('0'' 8 - (bitString.Length % 8));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: bitString += new string ('0'' 8 - (bitString.Length % 8));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: bitString += new string ('0'' 8 - (bitString.Length % 8));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: for (var i = 0; i < eccInfo.BlocksInGroup1; i++) {  	var bitStr = bitString.Substring (i * eccInfo.CodewordsInGroup1 * 8' eccInfo.CodewordsInGroup1 * 8);  	var bitBlockList = this.BinaryStringToBitBlockList (bitStr);  	var bitBlockListDec = this.BinaryStringListToDecList (bitBlockList);  	var eccWordList = this.CalculateECCWords (bitStr' eccInfo);  	var eccWordListDec = this.BinaryStringListToDecList (eccWordList);  	codeWordWithECC.Add (new CodewordBlock (1' i + 1' bitStr' bitBlockList' eccWordList' bitBlockListDec' eccWordListDec));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: for (var i = 0; i < eccInfo.BlocksInGroup1; i++) {  	var bitStr = bitString.Substring (i * eccInfo.CodewordsInGroup1 * 8' eccInfo.CodewordsInGroup1 * 8);  	var bitBlockList = this.BinaryStringToBitBlockList (bitStr);  	var bitBlockListDec = this.BinaryStringListToDecList (bitBlockList);  	var eccWordList = this.CalculateECCWords (bitStr' eccInfo);  	var eccWordListDec = this.BinaryStringListToDecList (eccWordList);  	codeWordWithECC.Add (new CodewordBlock (1' i + 1' bitStr' bitBlockList' eccWordList' bitBlockListDec' eccWordListDec));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: bitString = bitString.Substring (eccInfo.BlocksInGroup1 * eccInfo.CodewordsInGroup1 * 8);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: for (var i = 0; i < eccInfo.BlocksInGroup2; i++) {  	var bitStr = bitString.Substring (i * eccInfo.CodewordsInGroup2 * 8' eccInfo.CodewordsInGroup2 * 8);  	var bitBlockList = this.BinaryStringToBitBlockList (bitStr);  	var bitBlockListDec = this.BinaryStringListToDecList (bitBlockList);  	var eccWordList = this.CalculateECCWords (bitStr' eccInfo);  	var eccWordListDec = this.BinaryStringListToDecList (eccWordList);  	codeWordWithECC.Add (new CodewordBlock (2' i + 1' bitStr' bitBlockList' eccWordList' bitBlockListDec' eccWordListDec));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: for (var i = 0; i < eccInfo.BlocksInGroup2; i++) {  	var bitStr = bitString.Substring (i * eccInfo.CodewordsInGroup2 * 8' eccInfo.CodewordsInGroup2 * 8);  	var bitBlockList = this.BinaryStringToBitBlockList (bitStr);  	var bitBlockListDec = this.BinaryStringListToDecList (bitBlockList);  	var eccWordList = this.CalculateECCWords (bitStr' eccInfo);  	var eccWordListDec = this.BinaryStringListToDecList (eccWordList);  	codeWordWithECC.Add (new CodewordBlock (2' i + 1' bitStr' bitBlockList' eccWordList' bitBlockListDec' eccWordListDec));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: for (var i = 0; i < eccInfo.BlocksInGroup2; i++) {  	var bitStr = bitString.Substring (i * eccInfo.CodewordsInGroup2 * 8' eccInfo.CodewordsInGroup2 * 8);  	var bitBlockList = this.BinaryStringToBitBlockList (bitStr);  	var bitBlockListDec = this.BinaryStringListToDecList (bitBlockList);  	var eccWordList = this.CalculateECCWords (bitStr' eccInfo);  	var eccWordListDec = this.BinaryStringListToDecList (eccWordList);  	codeWordWithECC.Add (new CodewordBlock (2' i + 1' bitStr' bitBlockList' eccWordList' bitBlockListDec' eccWordListDec));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: codeWordWithECC.Add (new CodewordBlock (2' i + 1' bitStr' bitBlockList' eccWordList' bitBlockListDec' eccWordListDec));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateQrCode,The following statement contains a magic number: if (version >= 7) {  	var versionString = GetVersionString (version);  	ModulePlacer.PlaceVersion (ref qr' versionString);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetFormatString,The following statement contains a magic number: fStr += DecToBin (maskVersion' 3);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetFormatString,The following statement contains a magic number: while (fStrEcc.Length > 10) {  	var sb = new StringBuilder ();  	generator = generator.PadRight (fStrEcc.Length' '0');  	for (var i = 0; i < fStrEcc.Length; i++)  		sb.Append ((Convert.ToInt32 (fStrEcc [i]) ^ Convert.ToInt32 (generator [i])).ToString ());  	fStrEcc = sb.ToString ().TrimStart ('0');  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetFormatString,The following statement contains a magic number: fStrEcc = fStrEcc.PadLeft (10' '0');  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetVersionString,The following statement contains a magic number: while (vStrEcc.Length > 12) {  	var sb = new StringBuilder ();  	generator = generator.PadRight (vStrEcc.Length' '0');  	for (var i = 0; i < vStrEcc.Length; i++)  		sb.Append ((Convert.ToInt32 (vStrEcc [i]) ^ Convert.ToInt32 (generator [i])).ToString ());  	vStrEcc = sb.ToString ().TrimStart ('0');  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetVersionString,The following statement contains a magic number: vStrEcc = vStrEcc.PadLeft (12' '0');  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateECCWords,The following statement contains a magic number: return leadTermSource.PolyItems.Select (x => DecToBin (x.Coefficient' 8)).ToList ();  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateMessagePolynom,The following statement contains a magic number: for (var i = bitString.Length / 8 - 1; i >= 0; i--) {  	messagePol.PolyItems.Add (new PolynomItem (this.BinToDec (bitString.Substring (0' 8))' i));  	bitString = bitString.Remove (0' 8);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateMessagePolynom,The following statement contains a magic number: for (var i = bitString.Length / 8 - 1; i >= 0; i--) {  	messagePol.PolyItems.Add (new PolynomItem (this.BinToDec (bitString.Substring (0' 8))' i));  	bitString = bitString.Remove (0' 8);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateMessagePolynom,The following statement contains a magic number: for (var i = bitString.Length / 8 - 1; i >= 0; i--) {  	messagePol.PolyItems.Add (new PolynomItem (this.BinToDec (bitString.Substring (0' 8))' i));  	bitString = bitString.Remove (0' 8);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateMessagePolynom,The following statement contains a magic number: messagePol.PolyItems.Add (new PolynomItem (this.BinToDec (bitString.Substring (0' 8))' i));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CalculateMessagePolynom,The following statement contains a magic number: bitString = bitString.Remove (0' 8);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,BinaryStringToBitBlockList,The following statement contains a magic number: return new List<char> (bitString.ToCharArray ()).Select ((x' i) => new {  	Index = i'  	Value = x  }).GroupBy (x => x.Index / 8).Select (x => String.Join (""' x.Select (v => v.Value.ToString ()).ToArray ())).ToList ();  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,BinToDec,The following statement contains a magic number: return Convert.ToInt32 (binStr' 2);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,DecToBin,The following statement contains a magic number: return Convert.ToString (decNum' 2);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 10) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 10;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 9;  	else  		return 8;  } else if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Numeric))  	return 10;  else if (encMode.Equals (EncodingMode.Alphanumeric))  	return 9;  else  	return 8;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Numeric))  	return 10;  else if (encMode.Equals (EncodingMode.Alphanumeric))  	return 9;  else  	return 8;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Numeric))  	return 10;  else if (encMode.Equals (EncodingMode.Alphanumeric))  	return 9;  else  	return 8;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: return 10;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Alphanumeric))  	return 9;  else  	return 8;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Alphanumeric))  	return 9;  else  	return 8;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: return 9;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: return 8;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (version < 27) {  	if (encMode.Equals (EncodingMode.Numeric))  		return 12;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 11;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 10;  } else {  	if (encMode.Equals (EncodingMode.Numeric))  		return 14;  	else if (encMode.Equals (EncodingMode.Alphanumeric))  		return 13;  	else if (encMode.Equals (EncodingMode.Byte))  		return 16;  	else  		return 12;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Numeric))  	return 12;  else if (encMode.Equals (EncodingMode.Alphanumeric))  	return 11;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 10;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Numeric))  	return 12;  else if (encMode.Equals (EncodingMode.Alphanumeric))  	return 11;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 10;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Numeric))  	return 12;  else if (encMode.Equals (EncodingMode.Alphanumeric))  	return 11;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 10;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Numeric))  	return 12;  else if (encMode.Equals (EncodingMode.Alphanumeric))  	return 11;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 10;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: return 12;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Alphanumeric))  	return 11;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 10;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Alphanumeric))  	return 11;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 10;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Alphanumeric))  	return 11;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 10;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: return 11;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 10;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 10;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: return 16;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: return 10;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Numeric))  	return 14;  else if (encMode.Equals (EncodingMode.Alphanumeric))  	return 13;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 12;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Numeric))  	return 14;  else if (encMode.Equals (EncodingMode.Alphanumeric))  	return 13;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 12;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Numeric))  	return 14;  else if (encMode.Equals (EncodingMode.Alphanumeric))  	return 13;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 12;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Numeric))  	return 14;  else if (encMode.Equals (EncodingMode.Alphanumeric))  	return 13;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 12;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: return 14;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Alphanumeric))  	return 13;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 12;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Alphanumeric))  	return 13;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 12;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Alphanumeric))  	return 13;  else if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 12;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: return 13;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 12;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: if (encMode.Equals (EncodingMode.Byte))  	return 16;  else  	return 12;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: return 16;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetCountIndicatorLength,The following statement contains a magic number: return 12;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,GetDataLength,The following statement contains a magic number: return forceUtf8 || this.IsUtf8 (encoding' plainText) ? (codedText.Length / 8) : plainText.Length;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: while (plainText.Length >= 3) {  	var dec = Convert.ToInt32 (plainText.Substring (0' 3));  	codeText += DecToBin (dec' 10);  	plainText = plainText.Substring (3);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: while (plainText.Length >= 3) {  	var dec = Convert.ToInt32 (plainText.Substring (0' 3));  	codeText += DecToBin (dec' 10);  	plainText = plainText.Substring (3);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: while (plainText.Length >= 3) {  	var dec = Convert.ToInt32 (plainText.Substring (0' 3));  	codeText += DecToBin (dec' 10);  	plainText = plainText.Substring (3);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: while (plainText.Length >= 3) {  	var dec = Convert.ToInt32 (plainText.Substring (0' 3));  	codeText += DecToBin (dec' 10);  	plainText = plainText.Substring (3);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: codeText += DecToBin (dec' 10);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: plainText = plainText.Substring (3);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: if (plainText.Length == 2) {  	var dec = Convert.ToInt32 (plainText.Substring (0' plainText.Length));  	codeText += DecToBin (dec' 7);  } else if (plainText.Length == 1) {  	var dec = Convert.ToInt32 (plainText.Substring (0' plainText.Length));  	codeText += DecToBin (dec' 4);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: if (plainText.Length == 2) {  	var dec = Convert.ToInt32 (plainText.Substring (0' plainText.Length));  	codeText += DecToBin (dec' 7);  } else if (plainText.Length == 1) {  	var dec = Convert.ToInt32 (plainText.Substring (0' plainText.Length));  	codeText += DecToBin (dec' 4);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: if (plainText.Length == 2) {  	var dec = Convert.ToInt32 (plainText.Substring (0' plainText.Length));  	codeText += DecToBin (dec' 7);  } else if (plainText.Length == 1) {  	var dec = Convert.ToInt32 (plainText.Substring (0' plainText.Length));  	codeText += DecToBin (dec' 4);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: codeText += DecToBin (dec' 7);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: if (plainText.Length == 1) {  	var dec = Convert.ToInt32 (plainText.Substring (0' plainText.Length));  	codeText += DecToBin (dec' 4);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryNumeric,The following statement contains a magic number: codeText += DecToBin (dec' 4);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: while (plainText.Length >= 2) {  	var token = plainText.Substring (0' 2);  	var dec = this.alphanumEncDict [token [0]] * 45 + this.alphanumEncDict [token [1]];  	codeText += DecToBin (dec' 11);  	plainText = plainText.Substring (2);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: while (plainText.Length >= 2) {  	var token = plainText.Substring (0' 2);  	var dec = this.alphanumEncDict [token [0]] * 45 + this.alphanumEncDict [token [1]];  	codeText += DecToBin (dec' 11);  	plainText = plainText.Substring (2);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: while (plainText.Length >= 2) {  	var token = plainText.Substring (0' 2);  	var dec = this.alphanumEncDict [token [0]] * 45 + this.alphanumEncDict [token [1]];  	codeText += DecToBin (dec' 11);  	plainText = plainText.Substring (2);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: while (plainText.Length >= 2) {  	var token = plainText.Substring (0' 2);  	var dec = this.alphanumEncDict [token [0]] * 45 + this.alphanumEncDict [token [1]];  	codeText += DecToBin (dec' 11);  	plainText = plainText.Substring (2);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: while (plainText.Length >= 2) {  	var token = plainText.Substring (0' 2);  	var dec = this.alphanumEncDict [token [0]] * 45 + this.alphanumEncDict [token [1]];  	codeText += DecToBin (dec' 11);  	plainText = plainText.Substring (2);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: codeText += DecToBin (dec' 11);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: plainText = plainText.Substring (2);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: if (plainText.Length > 0) {  	codeText += DecToBin (this.alphanumEncDict [plainText [0]]' 6);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryAlphanumeric,The following statement contains a magic number: codeText += DecToBin (this.alphanumEncDict [plainText [0]]' 6);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryByte,The following statement contains a magic number: foreach (var b in codeBytes)  	codeText += DecToBin (b' 8);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,PlainTextToBinaryByte,The following statement contains a magic number: codeText += DecToBin (b' 8);  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,MultiplyGeneratorPolynomByLeadterm,The following statement contains a magic number: foreach (var polItemBase in genPolynom.PolyItems) {  	var polItemRes = new PolynomItem ((polItemBase.Coefficient + leadTerm.Coefficient) % 255' polItemBase.Exponent - lowerExponentBy);  	resultPolynom.PolyItems.Add (polItemRes);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ShrinkAlphaExp,The following statement contains a magic number: return (int)((alphaExp % 256) + Math.Floor ((double)(alphaExp / 256)));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,ShrinkAlphaExp,The following statement contains a magic number: return (int)((alphaExp % 256) + Math.Floor ((double)(alphaExp / 256)));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var i = 0; i < (7 * 40); i = i + 7) {  	var points = new List<Point> ();  	for (var x = 0; x < 7; x++) {  		if (this.alignmentPatternBaseValues [i + x] != 0) {  			for (var y = 0; y < 7; y++) {  				if (this.alignmentPatternBaseValues [i + y] != 0) {  					var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  					if (!points.Contains (p))  						points.Add (p);  				}  			}  		}  	}  	this.alignmentPatternTable.Add (new AlignmentPattern () {  		Version = (i + 7) / 7'  		PatternPositions = points  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var i = 0; i < (7 * 40); i = i + 7) {  	var points = new List<Point> ();  	for (var x = 0; x < 7; x++) {  		if (this.alignmentPatternBaseValues [i + x] != 0) {  			for (var y = 0; y < 7; y++) {  				if (this.alignmentPatternBaseValues [i + y] != 0) {  					var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  					if (!points.Contains (p))  						points.Add (p);  				}  			}  		}  	}  	this.alignmentPatternTable.Add (new AlignmentPattern () {  		Version = (i + 7) / 7'  		PatternPositions = points  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var i = 0; i < (7 * 40); i = i + 7) {  	var points = new List<Point> ();  	for (var x = 0; x < 7; x++) {  		if (this.alignmentPatternBaseValues [i + x] != 0) {  			for (var y = 0; y < 7; y++) {  				if (this.alignmentPatternBaseValues [i + y] != 0) {  					var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  					if (!points.Contains (p))  						points.Add (p);  				}  			}  		}  	}  	this.alignmentPatternTable.Add (new AlignmentPattern () {  		Version = (i + 7) / 7'  		PatternPositions = points  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var i = 0; i < (7 * 40); i = i + 7) {  	var points = new List<Point> ();  	for (var x = 0; x < 7; x++) {  		if (this.alignmentPatternBaseValues [i + x] != 0) {  			for (var y = 0; y < 7; y++) {  				if (this.alignmentPatternBaseValues [i + y] != 0) {  					var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  					if (!points.Contains (p))  						points.Add (p);  				}  			}  		}  	}  	this.alignmentPatternTable.Add (new AlignmentPattern () {  		Version = (i + 7) / 7'  		PatternPositions = points  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var i = 0; i < (7 * 40); i = i + 7) {  	var points = new List<Point> ();  	for (var x = 0; x < 7; x++) {  		if (this.alignmentPatternBaseValues [i + x] != 0) {  			for (var y = 0; y < 7; y++) {  				if (this.alignmentPatternBaseValues [i + y] != 0) {  					var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  					if (!points.Contains (p))  						points.Add (p);  				}  			}  		}  	}  	this.alignmentPatternTable.Add (new AlignmentPattern () {  		Version = (i + 7) / 7'  		PatternPositions = points  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var i = 0; i < (7 * 40); i = i + 7) {  	var points = new List<Point> ();  	for (var x = 0; x < 7; x++) {  		if (this.alignmentPatternBaseValues [i + x] != 0) {  			for (var y = 0; y < 7; y++) {  				if (this.alignmentPatternBaseValues [i + y] != 0) {  					var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  					if (!points.Contains (p))  						points.Add (p);  				}  			}  		}  	}  	this.alignmentPatternTable.Add (new AlignmentPattern () {  		Version = (i + 7) / 7'  		PatternPositions = points  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var i = 0; i < (7 * 40); i = i + 7) {  	var points = new List<Point> ();  	for (var x = 0; x < 7; x++) {  		if (this.alignmentPatternBaseValues [i + x] != 0) {  			for (var y = 0; y < 7; y++) {  				if (this.alignmentPatternBaseValues [i + y] != 0) {  					var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  					if (!points.Contains (p))  						points.Add (p);  				}  			}  		}  	}  	this.alignmentPatternTable.Add (new AlignmentPattern () {  		Version = (i + 7) / 7'  		PatternPositions = points  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var i = 0; i < (7 * 40); i = i + 7) {  	var points = new List<Point> ();  	for (var x = 0; x < 7; x++) {  		if (this.alignmentPatternBaseValues [i + x] != 0) {  			for (var y = 0; y < 7; y++) {  				if (this.alignmentPatternBaseValues [i + y] != 0) {  					var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  					if (!points.Contains (p))  						points.Add (p);  				}  			}  		}  	}  	this.alignmentPatternTable.Add (new AlignmentPattern () {  		Version = (i + 7) / 7'  		PatternPositions = points  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var i = 0; i < (7 * 40); i = i + 7) {  	var points = new List<Point> ();  	for (var x = 0; x < 7; x++) {  		if (this.alignmentPatternBaseValues [i + x] != 0) {  			for (var y = 0; y < 7; y++) {  				if (this.alignmentPatternBaseValues [i + y] != 0) {  					var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  					if (!points.Contains (p))  						points.Add (p);  				}  			}  		}  	}  	this.alignmentPatternTable.Add (new AlignmentPattern () {  		Version = (i + 7) / 7'  		PatternPositions = points  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: i = i + 7
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var x = 0; x < 7; x++) {  	if (this.alignmentPatternBaseValues [i + x] != 0) {  		for (var y = 0; y < 7; y++) {  			if (this.alignmentPatternBaseValues [i + y] != 0) {  				var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  				if (!points.Contains (p))  					points.Add (p);  			}  		}  	}  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var x = 0; x < 7; x++) {  	if (this.alignmentPatternBaseValues [i + x] != 0) {  		for (var y = 0; y < 7; y++) {  			if (this.alignmentPatternBaseValues [i + y] != 0) {  				var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  				if (!points.Contains (p))  					points.Add (p);  			}  		}  	}  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var x = 0; x < 7; x++) {  	if (this.alignmentPatternBaseValues [i + x] != 0) {  		for (var y = 0; y < 7; y++) {  			if (this.alignmentPatternBaseValues [i + y] != 0) {  				var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  				if (!points.Contains (p))  					points.Add (p);  			}  		}  	}  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var x = 0; x < 7; x++) {  	if (this.alignmentPatternBaseValues [i + x] != 0) {  		for (var y = 0; y < 7; y++) {  			if (this.alignmentPatternBaseValues [i + y] != 0) {  				var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  				if (!points.Contains (p))  					points.Add (p);  			}  		}  	}  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: if (this.alignmentPatternBaseValues [i + x] != 0) {  	for (var y = 0; y < 7; y++) {  		if (this.alignmentPatternBaseValues [i + y] != 0) {  			var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  			if (!points.Contains (p))  				points.Add (p);  		}  	}  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: if (this.alignmentPatternBaseValues [i + x] != 0) {  	for (var y = 0; y < 7; y++) {  		if (this.alignmentPatternBaseValues [i + y] != 0) {  			var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  			if (!points.Contains (p))  				points.Add (p);  		}  	}  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: if (this.alignmentPatternBaseValues [i + x] != 0) {  	for (var y = 0; y < 7; y++) {  		if (this.alignmentPatternBaseValues [i + y] != 0) {  			var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  			if (!points.Contains (p))  				points.Add (p);  		}  	}  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var y = 0; y < 7; y++) {  	if (this.alignmentPatternBaseValues [i + y] != 0) {  		var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  		if (!points.Contains (p))  			points.Add (p);  	}  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var y = 0; y < 7; y++) {  	if (this.alignmentPatternBaseValues [i + y] != 0) {  		var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  		if (!points.Contains (p))  			points.Add (p);  	}  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: for (var y = 0; y < 7; y++) {  	if (this.alignmentPatternBaseValues [i + y] != 0) {  		var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  		if (!points.Contains (p))  			points.Add (p);  	}  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: if (this.alignmentPatternBaseValues [i + y] != 0) {  	var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  	if (!points.Contains (p))  		points.Add (p);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: if (this.alignmentPatternBaseValues [i + y] != 0) {  	var p = new Point (this.alignmentPatternBaseValues [i + x] - 2' this.alignmentPatternBaseValues [i + y] - 2);  	if (!points.Contains (p))  		points.Add (p);  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: this.alignmentPatternTable.Add (new AlignmentPattern () {  	Version = (i + 7) / 7'  	PatternPositions = points  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAlignmentPatternTable,The following statement contains a magic number: this.alignmentPatternTable.Add (new AlignmentPattern () {  	Version = (i + 7) / 7'  	PatternPositions = points  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: for (var i = 0; i < (4 * 6 * 40); i = i + (4 * 6)) {  	this.capacityECCTable.AddRange (new[] {  		new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  		new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  	});  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: i = i + (4 * 6)
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: i = i + (4 * 6)
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityECCTable,The following statement contains a magic number: this.capacityECCTable.AddRange (new[] {  	new ECCInfo ((i + 24) / 24' ECCLevel.L' this.capacityECCBaseValues [i]' this.capacityECCBaseValues [i + 1]' this.capacityECCBaseValues [i + 2]' this.capacityECCBaseValues [i + 3]' this.capacityECCBaseValues [i + 4]' this.capacityECCBaseValues [i + 5])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.M' totalDataCodewords: this.capacityECCBaseValues [i + 6]' eccPerBlock: this.capacityECCBaseValues [i + 7]' blocksInGroup1: this.capacityECCBaseValues [i + 8]' codewordsInGroup1: this.capacityECCBaseValues [i + 9]' blocksInGroup2: this.capacityECCBaseValues [i + 10]' codewordsInGroup2: this.capacityECCBaseValues [i + 11])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.Q' totalDataCodewords: this.capacityECCBaseValues [i + 12]' eccPerBlock: this.capacityECCBaseValues [i + 13]' blocksInGroup1: this.capacityECCBaseValues [i + 14]' codewordsInGroup1: this.capacityECCBaseValues [i + 15]' blocksInGroup2: this.capacityECCBaseValues [i + 16]' codewordsInGroup2: this.capacityECCBaseValues [i + 17])'  	new ECCInfo (version: (i + 24) / 24' errorCorrectionLevel: ECCLevel.H' totalDataCodewords: this.capacityECCBaseValues [i + 18]' eccPerBlock: this.capacityECCBaseValues [i + 19]' blocksInGroup1: this.capacityECCBaseValues [i + 20]' codewordsInGroup1: this.capacityECCBaseValues [i + 21]' blocksInGroup2: this.capacityECCBaseValues [i + 22]' codewordsInGroup2: this.capacityECCBaseValues [i + 23])  });  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: for (var i = 0; i < (16 * 40); i = i + 16) {  	this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  		new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 1]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 2]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 3]  			}'  		})'  		new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 4]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 5]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 6]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 7]  			}'  		})'  		new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 8]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 9]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 10]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 11]  			}'  		})'  		new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  			{  				EncodingMode.Numeric'  				this.capacityBaseValues [i + 12]  			}'  			{  				EncodingMode.Alphanumeric'  				this.capacityBaseValues [i + 13]  			}'  			{  				EncodingMode.Byte'  				this.capacityBaseValues [i + 14]  			}'  			{  				EncodingMode.Kanji'  				this.capacityBaseValues [i + 15]  			}'  		})  	}));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: i = i + 16
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateCapacityTable,The following statement contains a magic number: this.capacityTable.Add (new VersionInfo ((i + 16) / 16' new List<VersionInfoDetails> {  	new VersionInfoDetails (ECCLevel.L' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 1]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 2]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 3]  		}'  	})'  	new VersionInfoDetails (ECCLevel.M' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 4]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 5]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 6]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 7]  		}'  	})'  	new VersionInfoDetails (ECCLevel.Q' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 8]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 9]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 10]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 11]  		}'  	})'  	new VersionInfoDetails (ECCLevel.H' new Dictionary<EncodingMode' int> () {  		{  			EncodingMode.Numeric'  			this.capacityBaseValues [i + 12]  		}'  		{  			EncodingMode.Alphanumeric'  			this.capacityBaseValues [i + 13]  		}'  		{  			EncodingMode.Byte'  			this.capacityBaseValues [i + 14]  		}'  		{  			EncodingMode.Kanji'  			this.capacityBaseValues [i + 15]  		}'  	})  }));  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: for (var i = 0; i < 256; i++) {  	var gfItem = (int)Math.Pow (2' i);  	if (i > 7) {  		gfItem = this.galoisField [i - 1].IntegerValue * 2;  	}  	if (gfItem > 255) {  		gfItem = gfItem ^ 285;  	}  	this.galoisField.Add (new Antilog (i' gfItem));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: for (var i = 0; i < 256; i++) {  	var gfItem = (int)Math.Pow (2' i);  	if (i > 7) {  		gfItem = this.galoisField [i - 1].IntegerValue * 2;  	}  	if (gfItem > 255) {  		gfItem = gfItem ^ 285;  	}  	this.galoisField.Add (new Antilog (i' gfItem));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: for (var i = 0; i < 256; i++) {  	var gfItem = (int)Math.Pow (2' i);  	if (i > 7) {  		gfItem = this.galoisField [i - 1].IntegerValue * 2;  	}  	if (gfItem > 255) {  		gfItem = gfItem ^ 285;  	}  	this.galoisField.Add (new Antilog (i' gfItem));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: for (var i = 0; i < 256; i++) {  	var gfItem = (int)Math.Pow (2' i);  	if (i > 7) {  		gfItem = this.galoisField [i - 1].IntegerValue * 2;  	}  	if (gfItem > 255) {  		gfItem = gfItem ^ 285;  	}  	this.galoisField.Add (new Antilog (i' gfItem));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: for (var i = 0; i < 256; i++) {  	var gfItem = (int)Math.Pow (2' i);  	if (i > 7) {  		gfItem = this.galoisField [i - 1].IntegerValue * 2;  	}  	if (gfItem > 255) {  		gfItem = gfItem ^ 285;  	}  	this.galoisField.Add (new Antilog (i' gfItem));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: for (var i = 0; i < 256; i++) {  	var gfItem = (int)Math.Pow (2' i);  	if (i > 7) {  		gfItem = this.galoisField [i - 1].IntegerValue * 2;  	}  	if (gfItem > 255) {  		gfItem = gfItem ^ 285;  	}  	this.galoisField.Add (new Antilog (i' gfItem));  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: if (i > 7) {  	gfItem = this.galoisField [i - 1].IntegerValue * 2;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: if (i > 7) {  	gfItem = this.galoisField [i - 1].IntegerValue * 2;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: gfItem = this.galoisField [i - 1].IntegerValue * 2;  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: if (gfItem > 255) {  	gfItem = gfItem ^ 285;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: if (gfItem > 255) {  	gfItem = gfItem ^ 285;  }  
Magic Number,QRCoder,QRCodeGenerator,F:\newReposMay17\codebude_QRCoder\QRCoder\QRCodeGenerator.cs,CreateAntilogTable,The following statement contains a magic number: gfItem = gfItem ^ 285;  
Magic Number,QRCoder,UnityQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\UnityQRCode.cs,HexToColor,The following statement contains a magic number: if (hexColor.Length == 8) {  	a = byte.Parse (hexColor.Substring (6' 2)' System.Globalization.NumberStyles.HexNumber);  }  
Magic Number,QRCoder,UnityQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\UnityQRCode.cs,HexToColor,The following statement contains a magic number: if (hexColor.Length == 8) {  	a = byte.Parse (hexColor.Substring (6' 2)' System.Globalization.NumberStyles.HexNumber);  }  
Magic Number,QRCoder,UnityQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\UnityQRCode.cs,HexToColor,The following statement contains a magic number: if (hexColor.Length == 8) {  	a = byte.Parse (hexColor.Substring (6' 2)' System.Globalization.NumberStyles.HexNumber);  }  
Magic Number,QRCoder,UnityQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\UnityQRCode.cs,HexToColor,The following statement contains a magic number: a = byte.Parse (hexColor.Substring (6' 2)' System.Globalization.NumberStyles.HexNumber);  
Magic Number,QRCoder,UnityQRCode,F:\newReposMay17\codebude_QRCoder\QRCoder\UnityQRCode.cs,HexToColor,The following statement contains a magic number: a = byte.Parse (hexColor.Substring (6' 2)' System.Globalization.NumberStyles.HexNumber);  
