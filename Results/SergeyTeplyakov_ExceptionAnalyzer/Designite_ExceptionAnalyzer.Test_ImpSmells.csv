Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TestHelper,DiagnosticVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,VerifyDiagnosticResults,Cyclomatic complexity of the method is 10
Long Parameter List,TestHelper,CodeFixVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\CodeFixVerifier.cs,VerifyFix,The method has 7 parameters. Parameters: language' analyzer' codeFixProvider' oldSource' newSource' codeFixIndex' allowNewCompilerDiagnostics
Long Statement,ExceptionAnalyzer.Test,TracingExceptionMessageAnalyzerTests,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\TracingExceptionMessageAnalyzerTests.cs,NoWarningForWritingExMessage,The length of the statement  "               catch(Exception ex) {Console.WriteLine(ex.Message); Console.WriteLine(ex); Console.WriteLine(ex.InnerException); throw;} " is 120.
Long Statement,ExceptionAnalyzer.Test,ThrowExAnalyzerTests,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\ThrowExAnalyzerTests.cs,TestWarningWithLocationAndFix,The length of the statement  "            var fixtest = test.Replace("catch(Exception ex) {Console.WriteLine(ex); throw ex;}"' @"catch(Exception ex) {Console.WriteLine(ex); throw; }"); " is 142.
Long Statement,TestHelper,CodeFixVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\CodeFixVerifier.cs,AssertHasWarning,The length of the statement  "            Assert.AreEqual(positions.Count' diagnostics.Length' $"Expected {positions.Count} but got {diagnostics.Length} warnings!"); " is 123.
Long Statement,TestHelper,CodeFixVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\CodeFixVerifier.cs,VerifyCSharpFix,The length of the statement  "            VerifyFix(LanguageNames.CSharp' GetCSharpDiagnosticAnalyzer()' GetCSharpCodeFixProvider()' oldSource' newSource' codeFixIndex' allowNewCompilerDiagnostics); " is 156.
Long Statement,TestHelper,CodeFixVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\CodeFixVerifier.cs,VerifyBasicFix,The length of the statement  "            VerifyFix(LanguageNames.VisualBasic' GetBasicDiagnosticAnalyzer()' GetBasicCodeFixProvider()' oldSource' newSource' codeFixIndex' allowNewCompilerDiagnostics); " is 159.
Long Statement,TestHelper,CodeFixVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\CodeFixVerifier.cs,VerifyFix,The length of the statement  "                    document = document.WithSyntaxRoot(Formatter.Format(document.GetSyntaxRootAsync().Result' Formatter.Annotation' document.Project.Solution.Workspace)); " is 150.
Long Statement,TestHelper,DiagnosticVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,VerifyDiagnosticResults,The length of the statement  "                    string.Format("Mismatch between number of diagnostics returned' expected \"{0}\" acutal \"{1}\"\r\n\r\nDiagnostics:\r\n{2}\r\n"' expectedCount' actualCount' diagnosticsOutput)); " is 177.
Long Statement,TestHelper,DiagnosticVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,VerifyDiagnosticLocation,The length of the statement  "            Assert.IsTrue(actualSpan.Path == expected.Path || (actualSpan.Path != null && actualSpan.Path.Contains("Test0.") && expected.Path.Contains("Test."))' " is 149.
Long Statement,TestHelper,DiagnosticVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,VerifyDiagnosticLocation,The length of the statement  "                string.Format("Expected diagnostic to be in file \"{0}\" was actually in file \"{1}\"\r\n\r\nDiagnostic:\r\n    {2}\r\n"' " is 121.
Long Statement,TestHelper,DiagnosticVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,VerifyDiagnosticLocation,The length of the statement  "                        string.Format("Expected diagnostic to be on line \"{0}\" was actually on line \"{1}\"\r\n\r\nDiagnostic:\r\n    {2}\r\n"' " is 121.
Long Statement,TestHelper,DiagnosticVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,VerifyDiagnosticLocation,The length of the statement  "                        string.Format("Expected diagnostic to start at column \"{0}\" was actually at column \"{1}\"\r\n\r\nDiagnostic:\r\n    {2}\r\n"' " is 128.
Long Statement,TestHelper,DiagnosticVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,FormatDiagnostics,The length of the statement  "                                string.Format("Test base does not currently handle diagnostics in metadata locations. Diagnostic in metadata:\r\n"' diagnostics[i])); " is 133.
Long Statement,TestHelper,DiagnosticVerifier,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\Verifiers\DiagnosticVerifier.cs,FormatDiagnostics,The length of the statement  "                            string resultMethodName = diagnostics[i].Location.SourceTree.FilePath.EndsWith(".cs") ? "GetCSharpResultAt" : "GetBasicResultAt"; " is 129.
Magic Number,ExceptionAnalyzer.Test,GenericCatchBlockAnalyzerTests,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\GenericCatchBlockAnalyzerTests.cs,TestWarningWithFix,The following statement contains a magic number: var expected = new DiagnosticResult              {                  Id = GenericCatchBlockAnalyzer.DiagnosticId'                  Message = "Catching everything considered harmful!\r\n Are you not curious at all about exception type?"'                  Severity = DiagnosticSeverity.Warning'                  Locations =                      new[] {                              new DiagnosticResultLocation("Test0.cs"' 14' 13)                          }              };
Magic Number,ExceptionAnalyzer.Test,GenericCatchBlockAnalyzerTests,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\GenericCatchBlockAnalyzerTests.cs,TestWarningWithFix,The following statement contains a magic number: var expected = new DiagnosticResult              {                  Id = GenericCatchBlockAnalyzer.DiagnosticId'                  Message = "Catching everything considered harmful!\r\n Are you not curious at all about exception type?"'                  Severity = DiagnosticSeverity.Warning'                  Locations =                      new[] {                              new DiagnosticResultLocation("Test0.cs"' 14' 13)                          }              };
Magic Number,ExceptionAnalyzer.Test,ThrowExAnalyzerTests,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\ThrowExAnalyzerTests.cs,TestWarningWithLocationAndFix,The following statement contains a magic number: var expected = new DiagnosticResult              {                  Id = ThrowExAnalyzer.DiagnosticId'                  Message = ThrowExAnalyzer.MessageFormat'                  Severity = DiagnosticSeverity.Warning'                  Locations =                      new[] {                              new DiagnosticResultLocation("Test0.cs"' 16' 63)                          }              };
Magic Number,ExceptionAnalyzer.Test,ThrowExAnalyzerTests,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\ThrowExAnalyzerTests.cs,TestWarningWithLocationAndFix,The following statement contains a magic number: var expected = new DiagnosticResult              {                  Id = ThrowExAnalyzer.DiagnosticId'                  Message = ThrowExAnalyzer.MessageFormat'                  Severity = DiagnosticSeverity.Warning'                  Locations =                      new[] {                              new DiagnosticResultLocation("Test0.cs"' 16' 63)                          }              };
Magic Number,ExceptionAnalyzer.Test,ThrowExAnalyzerTests,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\ThrowExAnalyzerTests.cs,FixShouldRemoveExIfNeverUsed,The following statement contains a magic number: Assert.AreEqual(2' GetSortedDiagnostics(test).Length);
Magic Number,ExceptionAnalyzer.Test,ThrowExAnalyzerTests,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\ThrowExAnalyzerTests.cs,FixShouldPreserveMoreComplexTrivia,The following statement contains a magic number: Assert.AreEqual(2' GetSortedDiagnostics(test).Length);
Magic Number,ExceptionAnalyzer.Test,EmptyCatchBlockAnalyzerTests,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\EmptyCatchBlockAnalyzerTests.cs,TestWarningOnEmptyBlock,The following statement contains a magic number: var expected = new DiagnosticResult              {                  Id = EmptyCatchBlockAnalyzer.DiagnosticId'                  Message = "'catch' block is empty. Do you really know what the app state is?"'                  Severity = DiagnosticSeverity.Warning'                  Locations =                      new[] {                              new DiagnosticResultLocation("Test0.cs"' 17' 21)                          }              };
Magic Number,ExceptionAnalyzer.Test,EmptyCatchBlockAnalyzerTests,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\EmptyCatchBlockAnalyzerTests.cs,TestWarningOnEmptyBlock,The following statement contains a magic number: var expected = new DiagnosticResult              {                  Id = EmptyCatchBlockAnalyzer.DiagnosticId'                  Message = "'catch' block is empty. Do you really know what the app state is?"'                  Severity = DiagnosticSeverity.Warning'                  Locations =                      new[] {                              new DiagnosticResultLocation("Test0.cs"' 17' 21)                          }              };
Magic Number,ExceptionAnalyzer.Test,EmptyCatchBlockAnalyzerTests,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\EmptyCatchBlockAnalyzerTests.cs,TestWarningOnEmptyBlockThatCatchesException,The following statement contains a magic number: var expected = new DiagnosticResult              {                  Id = EmptyCatchBlockAnalyzer.DiagnosticId'                  Message = "'catch(System.Exception)' block is empty. Do you really know what the app state is?"'                  Severity = DiagnosticSeverity.Warning'                  Locations =                      new[] {                              new DiagnosticResultLocation("Test0.cs"' 10' 13)                          }              };
Magic Number,ExceptionAnalyzer.Test,EmptyCatchBlockAnalyzerTests,D:\research\architectureSmells\repos1\SergeyTeplyakov_ExceptionAnalyzer\src\ExceptionAnalyzer\ExceptionAnalyzer.Test\EmptyCatchBlockAnalyzerTests.cs,TestWarningOnEmptyBlockThatCatchesException,The following statement contains a magic number: var expected = new DiagnosticResult              {                  Id = EmptyCatchBlockAnalyzer.DiagnosticId'                  Message = "'catch(System.Exception)' block is empty. Do you really know what the app state is?"'                  Severity = DiagnosticSeverity.Warning'                  Locations =                      new[] {                              new DiagnosticResultLocation("Test0.cs"' 10' 13)                          }              };
