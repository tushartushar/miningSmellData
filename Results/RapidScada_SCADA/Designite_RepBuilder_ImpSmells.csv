Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Utils.Report,ExcelRepBuilder,C:\repos\RapidScada_SCADA\Report\RepBuilder\ExcelRepBuilder.cs,SetAttribute,The method has 5 parameters. Parameters: xmlNode' localName' namespaceURI' value' removeEmpty
Magic Number,Utils.Report,WordRepBuilder,C:\repos\RapidScada_SCADA\Report\RepBuilder\WordRepBuilder.cs,XmlDocProc,The following statement contains a magic number: if (xmlNode.Name == ElemName)              {                  // поиск директив преобразований элементов                  string nodeVal = xmlNode.InnerText;                  string attrVal;                  if (FindAttr(nodeVal' "repRow"' out attrVal))                  {                      if (nodeVal.Length < 8 /*"repRow=".Length + 1*/ + attrVal.Length)                          xmlNode.InnerText = "";                      else                          xmlNode.InnerText = nodeVal.Substring(8 + attrVal.Length);                      ProcRow(xmlNode' attrVal);                  }                  else if (FindAttr(nodeVal' "repVal"' out attrVal))                      ProcVal(xmlNode' attrVal);              }              else              {                  // рекурсивный перебор потомков текущего элемента                  XmlNodeList children = xmlNode.ChildNodes;                  foreach (XmlNode node in children)                      XmlDocProc(node);              }
Magic Number,Utils.Report,WordRepBuilder,C:\repos\RapidScada_SCADA\Report\RepBuilder\WordRepBuilder.cs,XmlDocProc,The following statement contains a magic number: if (xmlNode.Name == ElemName)              {                  // поиск директив преобразований элементов                  string nodeVal = xmlNode.InnerText;                  string attrVal;                  if (FindAttr(nodeVal' "repRow"' out attrVal))                  {                      if (nodeVal.Length < 8 /*"repRow=".Length + 1*/ + attrVal.Length)                          xmlNode.InnerText = "";                      else                          xmlNode.InnerText = nodeVal.Substring(8 + attrVal.Length);                      ProcRow(xmlNode' attrVal);                  }                  else if (FindAttr(nodeVal' "repVal"' out attrVal))                      ProcVal(xmlNode' attrVal);              }              else              {                  // рекурсивный перебор потомков текущего элемента                  XmlNodeList children = xmlNode.ChildNodes;                  foreach (XmlNode node in children)                      XmlDocProc(node);              }
