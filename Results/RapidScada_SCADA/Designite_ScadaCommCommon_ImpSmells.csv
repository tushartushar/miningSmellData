Implementation smell,Namespace,Class,File,Method,Description
Long Method,Scada.Comm,Settings,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Settings.cs,LoadCommLine,The method has 126 lines of code.
Long Method,Scada.Comm,Settings,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Settings.cs,Save,The method has 104 lines of code.
Long Method,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The method has 289 lines of code.
Long Method,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The method has 314 lines of code.
Long Method,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The method has 319 lines of code.
Long Method,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The method has 337 lines of code.
Long Method,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The method has 129 lines of code.
Complex Method,Scada.Comm,Settings,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Settings.cs,LoadCommLine,Cyclomatic complexity of the method is 17
Complex Method,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,BindTag,Cyclomatic complexity of the method is 9
Long Parameter List,Scada.Comm,CommUtils,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\CommUtils.cs,SaveCmd,The method has 5 parameters. Parameters: cmdDir' sender' cmdType' cmdParams' msg
Long Parameter List,Scada.Comm,SerialPortUtils,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\SerialPortUtils.cs,WriteToSerialPort,The method has 6 parameters. Parameters: serialPort' buffer' index' count' logFormat' logText
Long Parameter List,Scada.Comm,SerialPortUtils,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\SerialPortUtils.cs,WriteToSerialPort,The method has 5 parameters. Parameters: serialPort' buffer' index' count' logText
Long Parameter List,Scada.Comm,SerialPortUtils,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\SerialPortUtils.cs,ReadFromSerialPort,The method has 8 parameters. Parameters: serialPort' buffer' index' count' timeout' wait' logFormat' logText
Long Parameter List,Scada.Comm,SerialPortUtils,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\SerialPortUtils.cs,ReadFromSerialPort,The method has 7 parameters. Parameters: serialPort' buffer' index' count' timeout' wait' logText
Long Parameter List,Scada.Comm,SerialPortUtils,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\SerialPortUtils.cs,ReadFromSerialPort,The method has 9 parameters. Parameters: serialPort' buffer' index' maxCount' stopCode' timeout' wait' logFormat' logText
Long Parameter List,Scada.Comm,SerialPortUtils,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\SerialPortUtils.cs,ReadFromSerialPort,The method has 8 parameters. Parameters: serialPort' buffer' index' maxCount' stopCode' timeout' wait' logText
Long Parameter List,Scada.Comm,SerialPortUtils,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\SerialPortUtils.cs,ReadLinesFromSerialPort,The method has 6 parameters. Parameters: serialPort' timeout' wait' endLine' endFound' logText
Long Parameter List,Scada.Comm,SerialPortUtils,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\SerialPortUtils.cs,ReadLinesFromSerialPort,The method has 6 parameters. Parameters: serialPort' timeout' wait' endLines' endFound' logText
Long Parameter List,Scada.Comm.Channels,CommChannelLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\CommChannelLogic.cs,ExecProcIncomingReq,The method has 5 parameters. Parameters: kpLogic' buffer' offset' count' targetKP
Long Parameter List,Scada.Comm.Channels,Connection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\Connection.cs,BuildReadLogText,The method has 5 parameters. Parameters: buffer' offset' count' readCnt' logFormat
Long Parameter List,Scada.Comm.Channels,Connection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\Connection.cs,Read,The method has 6 parameters. Parameters: buffer' offset' count' timeout' logFormat' logText
Long Parameter List,Scada.Comm.Channels,Connection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\Connection.cs,Read,The method has 8 parameters. Parameters: buffer' offset' maxCount' timeout' stopCond' stopReceived' logFormat' logText
Long Parameter List,Scada.Comm.Channels,Connection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\Connection.cs,Read,The method has 6 parameters. Parameters: buffer' offset' maxCount' timeout' stopCond' stopReceived
Long Parameter List,Scada.Comm.Channels,Connection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\Connection.cs,Write,The method has 5 parameters. Parameters: buffer' offset' count' logFormat' logText
Long Parameter List,Scada.Comm.Channels,SerialConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\SerialConnection.cs,Read,The method has 6 parameters. Parameters: buffer' offset' count' timeout' logFormat' logText
Long Parameter List,Scada.Comm.Channels,SerialConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\SerialConnection.cs,Read,The method has 8 parameters. Parameters: buffer' offset' maxCount' timeout' stopCond' stopReceived' logFormat' logText
Long Parameter List,Scada.Comm.Channels,SerialConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\SerialConnection.cs,Write,The method has 5 parameters. Parameters: buffer' offset' count' logFormat' logText
Long Parameter List,Scada.Comm.Channels,TcpConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\TcpConnection.cs,Read,The method has 6 parameters. Parameters: buffer' offset' count' timeout' logFormat' logText
Long Parameter List,Scada.Comm.Channels,TcpConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\TcpConnection.cs,Read,The method has 8 parameters. Parameters: buffer' offset' maxCount' timeout' stopCond' stopReceived' logFormat' logText
Long Parameter List,Scada.Comm.Channels,TcpConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\TcpConnection.cs,Write,The method has 5 parameters. Parameters: buffer' offset' count' logFormat' logText
Long Parameter List,Scada.Comm.Channels,UdpConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UdpConnection.cs,Read,The method has 6 parameters. Parameters: buffer' offset' count' timeout' logFormat' logText
Long Parameter List,Scada.Comm.Channels,UdpConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UdpConnection.cs,Read,The method has 8 parameters. Parameters: buffer' offset' maxCount' timeout' stopCond' stopReceived' logFormat' logText
Long Parameter List,Scada.Comm.Channels,UdpConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UdpConnection.cs,Write,The method has 5 parameters. Parameters: buffer' offset' count' logFormat' logText
Long Statement,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The length of the statement  "            this.lblPortName.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The length of the statement  "            this.lblStopBits.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The length of the statement  "            this.lblParity.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 145.
Long Statement,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The length of the statement  "            this.lblDataBits.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The length of the statement  "            this.lblBaudRate.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The length of the statement  "            this.lblBehavior.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The length of the statement  "            this.toolTip.SetToolTip(this.pbBehaviorHint' "Master - SCADA-Коммуникатор отправляет запрос устройству и получает ответ.\r\nSlave" + " is 132.
Long Statement,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The length of the statement  "            this.toolTip.SetToolTip(this.pbDevSelModeHint' "Способ привязки полученных данных к КП в режиме Slave:\r\nПо IP-адресу - удалённый " + " is 134.
Long Statement,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The length of the statement  "            this.lblDevSelMode.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 149.
Long Statement,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The length of the statement  "            this.lblBehavior.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The length of the statement  "            this.toolTip.SetToolTip(this.pbRemoteIpAddressHint' "Удалённый IP-адрес по умолчанию.\r\nМожет использоваться' например' если устройства" + " is 139.
Long Statement,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The length of the statement  "            this.toolTip.SetToolTip(this.pbLocalUdpPortHint' "Локальный UDP-порт для входящих соединений.\r\nВходящие соединения должны быть разр" + " is 136.
Long Statement,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The length of the statement  "            this.lblRemoteIpAddress.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 154.
Long Statement,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The length of the statement  "            this.lblRemoteUdpPort.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The length of the statement  "            this.lblLocalUdpPort.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 151.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FrmCommTcpServerProps)); " is 141.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The length of the statement  "            this.toolTip.SetToolTip(this.pbBehaviorHint' "Master - после установки соединения SCADA-Коммуникатор отправляет запрос устройст" + " is 130.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The length of the statement  "            this.lblDevSelMode.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 149.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The length of the statement  "            this.lblConnMode.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The length of the statement  "            this.lblBehavior.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The length of the statement  "            this.toolTip.SetToolTip(this.pbTcpPortHint' "Локальный TCP-порт для входящих соединений.\r\nВходящие соединения должны быть разр" + " is 131.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The length of the statement  "            this.lblTcpPort.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 146.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The length of the statement  "            this.lblInactiveTime.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 151.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FrmCommTcpClientProps)); " is 141.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The length of the statement  "            this.toolTip.SetToolTip(this.pbBehaviorHint' "Master - SCADA-Коммуникатор отправляет запрос устройству и получает ответ.\r\nSlave" + " is 132.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The length of the statement  "            this.lblConnMode.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The length of the statement  "            this.lblBehavior.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The length of the statement  "            this.toolTip.SetToolTip(this.pbStayConnectedHint' "Если параметр установлен' то соединение между сеансами связи сохраняется.\r\nВ прот" + " is 137.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The length of the statement  "            this.chkStayConnected.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The length of the statement  "            this.toolTip.SetToolTip(this.pbReconnectAfterHint' "Задаёт интервал времени для повторного подключения после неудачной попытки."); " is 130.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The length of the statement  "            this.lblReconnectAfter.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 153.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The length of the statement  "            this.lblTcpPort.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 146.
Long Statement,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The length of the statement  "            this.lblHost.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 143.
Complex Conditional,Scada.Comm.Channels,SerialConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\SerialConnection.cs,Read,The conditional expression  "readCnt <= maxCount && !stopReceived && startDT <= nowDT && nowDT <= stopDT"  is complex.
Complex Conditional,Scada.Comm.Channels,TcpConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\TcpConnection.cs,Read,The conditional expression  "readCnt < maxCount && !stopReceived && startDT <= nowDT && nowDT <= stopDT"  is complex.
Complex Conditional,Scada.Comm.Channels,UdpConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UdpConnection.cs,Read,The conditional expression  "readCnt < maxCount && !stopReceived && startDT <= nowDT && nowDT <= stopDT"  is complex.
Empty Catch Block,Scada.Comm.Channels,SerialConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\SerialConnection.cs,Read,The method has an empty catch block.
Empty Catch Block,Scada.Comm.Channels,SerialConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\SerialConnection.cs,Close,The method has an empty catch block.
Empty Catch Block,Scada.Comm.Channels,TcpConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\TcpConnection.cs,Read,The method has an empty catch block.
Empty Catch Block,Scada.Comm.Channels,TcpConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\TcpConnection.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,Scada.Comm.Channels,TcpConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\TcpConnection.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,Scada.Comm.Channels,UdpConnection,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UdpConnection.cs,Close,The method has an empty catch block.
Magic Number,Scada.Comm,CommUtils,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\CommUtils.cs,BytesToString,The following statement contains a magic number: for (int i = index; i < n; i++)              {                  byte b = buffer[i];                    if (b >= 32)                  {                      sbResult.Append(Encoding.Default.GetString(buffer' i' 1));                  }                  else if (notSkip)                  {                      sbResult.Append("<");                      sbResult.Append(b.ToString("X2"));                      sbResult.Append(">");                  }              }
Magic Number,Scada.Comm,CommUtils,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\CommUtils.cs,SaveCmd,The following statement contains a magic number: try              {                  if (cmdDir == "")                  {                      msg = Localization.UseRussian ?                          "Невозможно записать команду' т.к. директория команд неопределена." :                          "Unable to write a command because the command directory is undefined.";                      return false;                  }                    // формирование содержимого файла команды                  StringBuilder sbCmd = new StringBuilder();                  sbCmd                      .AppendLine("[Command]")                      .AppendLine("Target=ScadaCommSvc")                      .Append("Sender=").AppendLine(sender)                      .Append("User=").AppendLine(Environment.UserName)                      .Append("DateTime=").AppendLine(DateTime.Now.ToString(DateTimeFormatInfo.InvariantInfo))                      .Append("LifeTime=").AppendLine(CmdLifeTime.ToString())                      .Append("CmdType=").AppendLine(cmdType);                  foreach (string param in cmdParams)                      sbCmd.AppendLine(param);                  sbCmd.AppendLine("End=");                    // формирование имени файла команды                  string fileName = ""; // имя файла команды                    lock (cmdLock)                  {                      int num = cmdFileNum;                        do                      {                          string name = cmdDir + "cmd" + AddZeros(num' 3) + ".dat";                          if (!File.Exists(name))                              fileName = name;                          else if (++num > MaxCmdFileNum)                              num = 1;                      } while (fileName == "" && num != cmdFileNum);                        cmdFileNum = num < MaxCmdFileNum ? num + 1 : 1;                  }                    if (fileName == "")                  {                      msg = Localization.UseRussian ?                          "Невозможно записать команду' т.к. отсутствуют доступные имена файлов команд." :                          "Unable to write a command because available command file names are missing.";                      return false;                  }                    // запись команды                  using (FileStream fileStream =                       new FileStream(fileName' FileMode.CreateNew' FileAccess.Write' FileShare.ReadWrite))                  {                      using (StreamWriter streamWriter = new StreamWriter(fileStream' Encoding.Default))                      {                          streamWriter.Write(sbCmd.ToString());                      }                  }                    msg = Localization.UseRussian ?                      "Команда отправлена успешно." :                       "The command has been sent successfully";                  return true;              }              catch (Exception ex)              {                  msg = (Localization.UseRussian ?                      "Ошибка при записи команды: " :                       "Error saving command: ") + ex.Message;                  return false;              }
Magic Number,Scada.Comm,CommonParams,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Settings.cs,SetToDefault,The following statement contains a magic number: ServerPort = 10000;
Magic Number,Scada.Comm,CommonParams,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Settings.cs,SetToDefault,The following statement contains a magic number: ServerTimeout = 10000;
Magic Number,Scada.Comm,CommonParams,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Settings.cs,SetToDefault,The following statement contains a magic number: WaitForStop = 1000;
Magic Number,Scada.Comm,CommonParams,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Settings.cs,SetToDefault,The following statement contains a magic number: SendAllDataPer = 60;
Magic Number,Scada.Comm,CommLine,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Settings.cs,CommLine,The following statement contains a magic number: ReqTriesCnt = 3;
Magic Number,Scada.Comm.Channels,Settings,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\CommSerialLogic.cs,Settings,The following statement contains a magic number: BaudRate = 9600;
Magic Number,Scada.Comm.Channels,Settings,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\CommSerialLogic.cs,Settings,The following statement contains a magic number: DataBits = 8;
Magic Number,Scada.Comm.Channels,Settings,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\CommSerialLogic.cs,Settings,The following statement contains a magic number: TcpPort = 502;
Magic Number,Scada.Comm.Channels,Settings,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\CommSerialLogic.cs,Settings,The following statement contains a magic number: InactiveTime = 60;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,FrmCommSerialProps_Load,The following statement contains a magic number: cbParity.SetSelectedItem(settings.Parity' new Dictionary<string' int>()                   { { "Even"' 0 }' { "Odd"' 1 }' { "None"' 2 }' { "Mark"' 3 }' { "Space"' 4 } });
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,FrmCommSerialProps_Load,The following statement contains a magic number: cbParity.SetSelectedItem(settings.Parity' new Dictionary<string' int>()                   { { "Even"' 0 }' { "Odd"' 1 }' { "None"' 2 }' { "Mark"' 3 }' { "Space"' 4 } });
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,FrmCommSerialProps_Load,The following statement contains a magic number: cbParity.SetSelectedItem(settings.Parity' new Dictionary<string' int>()                   { { "Even"' 0 }' { "Odd"' 1 }' { "None"' 2 }' { "Mark"' 3 }' { "Space"' 4 } });
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,FrmCommSerialProps_Load,The following statement contains a magic number: cbStopBits.SetSelectedItem(settings.StopBits' new Dictionary<string' int>()                   { { "One"' 0 }' { "OnePointFive"' 1 }' { "Two"' 2 } });
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,btnOK_Click,The following statement contains a magic number: if (modified)              {                  settings.PortName = cbPortName.Text;                  settings.BaudRate = int.Parse(cbBaudRate.Text);                  settings.DataBits = int.Parse(cbDataBits.Text);                  settings.Parity = (Parity)cbParity.GetSelectedItem(new Dictionary<int' object>()                       { { 0' Parity.Even }' { 1' Parity.Odd }' { 2' Parity.None }' { 3' Parity.Mark }' { 4' Parity.Space } });                  settings.StopBits = (StopBits)cbStopBits.GetSelectedItem(new Dictionary<int' object>()                       { { 0' StopBits.One }' { 1' StopBits.OnePointFive }' { 2' StopBits.Two } });                  settings.DtrEnable = chkDtrEnable.Checked;                  settings.RtsEnable = chkRtsEnable.Checked;                  settings.Behavior = cbBehavior.ParseText<CommChannelLogic.OperatingBehaviors>();                    settings.SetCommCnlParams(commCnlParams);              }
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,btnOK_Click,The following statement contains a magic number: if (modified)              {                  settings.PortName = cbPortName.Text;                  settings.BaudRate = int.Parse(cbBaudRate.Text);                  settings.DataBits = int.Parse(cbDataBits.Text);                  settings.Parity = (Parity)cbParity.GetSelectedItem(new Dictionary<int' object>()                       { { 0' Parity.Even }' { 1' Parity.Odd }' { 2' Parity.None }' { 3' Parity.Mark }' { 4' Parity.Space } });                  settings.StopBits = (StopBits)cbStopBits.GetSelectedItem(new Dictionary<int' object>()                       { { 0' StopBits.One }' { 1' StopBits.OnePointFive }' { 2' StopBits.Two } });                  settings.DtrEnable = chkDtrEnable.Checked;                  settings.RtsEnable = chkRtsEnable.Checked;                  settings.Behavior = cbBehavior.ParseText<CommChannelLogic.OperatingBehaviors>();                    settings.SetCommCnlParams(commCnlParams);              }
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,btnOK_Click,The following statement contains a magic number: if (modified)              {                  settings.PortName = cbPortName.Text;                  settings.BaudRate = int.Parse(cbBaudRate.Text);                  settings.DataBits = int.Parse(cbDataBits.Text);                  settings.Parity = (Parity)cbParity.GetSelectedItem(new Dictionary<int' object>()                       { { 0' Parity.Even }' { 1' Parity.Odd }' { 2' Parity.None }' { 3' Parity.Mark }' { 4' Parity.Space } });                  settings.StopBits = (StopBits)cbStopBits.GetSelectedItem(new Dictionary<int' object>()                       { { 0' StopBits.One }' { 1' StopBits.OnePointFive }' { 2' StopBits.Two } });                  settings.DtrEnable = chkDtrEnable.Checked;                  settings.RtsEnable = chkRtsEnable.Checked;                  settings.Behavior = cbBehavior.ParseText<CommChannelLogic.OperatingBehaviors>();                    settings.SetCommCnlParams(commCnlParams);              }
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,btnOK_Click,The following statement contains a magic number: if (modified)              {                  settings.PortName = cbPortName.Text;                  settings.BaudRate = int.Parse(cbBaudRate.Text);                  settings.DataBits = int.Parse(cbDataBits.Text);                  settings.Parity = (Parity)cbParity.GetSelectedItem(new Dictionary<int' object>()                       { { 0' Parity.Even }' { 1' Parity.Odd }' { 2' Parity.None }' { 3' Parity.Mark }' { 4' Parity.Space } });                  settings.StopBits = (StopBits)cbStopBits.GetSelectedItem(new Dictionary<int' object>()                       { { 0' StopBits.One }' { 1' StopBits.OnePointFive }' { 2' StopBits.Two } });                  settings.DtrEnable = chkDtrEnable.Checked;                  settings.RtsEnable = chkRtsEnable.Checked;                  settings.Behavior = cbBehavior.ParseText<CommChannelLogic.OperatingBehaviors>();                    settings.SetCommCnlParams(commCnlParams);              }
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(197' 284);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(197' 284);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 3;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(116' 284);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(116' 284);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.TabIndex = 2;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbPort.Location = new System.Drawing.Point(12' 12);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbPort.Location = new System.Drawing.Point(12' 12);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbPort.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbPort.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbPort.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbPort.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbPort.Size = new System.Drawing.Size(260' 207);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbPort.Size = new System.Drawing.Size(260' 207);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblPortName.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblPortName.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblPortName.Size = new System.Drawing.Size(78' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblPortName.Size = new System.Drawing.Size(78' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.chkRtsEnable.Location = new System.Drawing.Point(63' 177);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.chkRtsEnable.Location = new System.Drawing.Point(63' 177);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.chkRtsEnable.Size = new System.Drawing.Size(48' 17);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.chkRtsEnable.Size = new System.Drawing.Size(48' 17);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.chkRtsEnable.TabIndex = 11;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.chkDtrEnable.Location = new System.Drawing.Point(62' 154);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.chkDtrEnable.Location = new System.Drawing.Point(62' 154);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.chkDtrEnable.Size = new System.Drawing.Size(49' 17);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.chkDtrEnable.Size = new System.Drawing.Size(49' 17);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.chkDtrEnable.TabIndex = 10;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbStopBits.Location = new System.Drawing.Point(97' 127);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbStopBits.Location = new System.Drawing.Point(97' 127);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbStopBits.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbStopBits.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbStopBits.TabIndex = 9;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblStopBits.Location = new System.Drawing.Point(13' 130);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblStopBits.Location = new System.Drawing.Point(13' 130);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblStopBits.Size = new System.Drawing.Size(78' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblStopBits.Size = new System.Drawing.Size(78' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblStopBits.TabIndex = 8;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbParity.Location = new System.Drawing.Point(97' 100);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbParity.Location = new System.Drawing.Point(97' 100);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbParity.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbParity.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbParity.TabIndex = 7;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblParity.Location = new System.Drawing.Point(13' 104);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblParity.Location = new System.Drawing.Point(13' 104);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblParity.Size = new System.Drawing.Size(78' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblParity.Size = new System.Drawing.Size(78' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblParity.TabIndex = 6;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDataBits.Location = new System.Drawing.Point(97' 73);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDataBits.Location = new System.Drawing.Point(97' 73);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDataBits.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDataBits.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDataBits.TabIndex = 5;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDataBits.Location = new System.Drawing.Point(13' 77);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDataBits.Location = new System.Drawing.Point(13' 77);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDataBits.Size = new System.Drawing.Size(78' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDataBits.Size = new System.Drawing.Size(78' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDataBits.TabIndex = 4;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBaudRate.Location = new System.Drawing.Point(97' 46);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBaudRate.Location = new System.Drawing.Point(97' 46);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBaudRate.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBaudRate.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBaudRate.TabIndex = 3;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBaudRate.Location = new System.Drawing.Point(13' 50);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBaudRate.Location = new System.Drawing.Point(13' 50);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBaudRate.Size = new System.Drawing.Size(78' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBaudRate.Size = new System.Drawing.Size(78' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBaudRate.TabIndex = 2;
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbPortName.Location = new System.Drawing.Point(97' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbPortName.Location = new System.Drawing.Point(97' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbPortName.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbPortName.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Location = new System.Drawing.Point(12' 225);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Location = new System.Drawing.Point(12' 225);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Size = new System.Drawing.Size(260' 53);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Size = new System.Drawing.Size(260' 53);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Location = new System.Drawing.Point(97' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Location = new System.Drawing.Point(97' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Size = new System.Drawing.Size(78' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Size = new System.Drawing.Size(78' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(284' 319);
Magic Number,Scada.Comm.Channels.UI,FrmCommSerialProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommSerialProps.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(284' 319);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Location = new System.Drawing.Point(12' 12);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Location = new System.Drawing.Point(12' 12);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Size = new System.Drawing.Size(330' 80);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Size = new System.Drawing.Size(330' 80);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.Location = new System.Drawing.Point(301' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.Location = new System.Drawing.Point(301' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.TabIndex = 5;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbDevSelModeHint.Location = new System.Drawing.Point(301' 48);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbDevSelModeHint.Location = new System.Drawing.Point(301' 48);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbDevSelModeHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbDevSelModeHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbDevSelModeHint.TabIndex = 4;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDevSelMode.Location = new System.Drawing.Point(145' 46);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDevSelMode.Location = new System.Drawing.Point(145' 46);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDevSelMode.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDevSelMode.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDevSelMode.TabIndex = 3;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDevSelMode.Location = new System.Drawing.Point(13' 50);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDevSelMode.Location = new System.Drawing.Point(13' 50);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDevSelMode.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDevSelMode.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDevSelMode.TabIndex = 2;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Location = new System.Drawing.Point(145' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Location = new System.Drawing.Point(145' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(186' 214);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(186' 214);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.TabIndex = 2;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(267' 214);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(267' 214);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 3;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Location = new System.Drawing.Point(12' 104);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Location = new System.Drawing.Point(12' 104);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Size = new System.Drawing.Size(330' 104);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Size = new System.Drawing.Size(330' 104);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbRemoteIpAddressHint.Location = new System.Drawing.Point(301' 73);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbRemoteIpAddressHint.Location = new System.Drawing.Point(301' 73);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbRemoteIpAddressHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbRemoteIpAddressHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbRemoteIpAddressHint.TabIndex = 9;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbLocalUdpPortHint.Location = new System.Drawing.Point(301' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbLocalUdpPortHint.Location = new System.Drawing.Point(301' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbLocalUdpPortHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbLocalUdpPortHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbLocalUdpPortHint.TabIndex = 8;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblRemoteIpAddress.Location = new System.Drawing.Point(13' 75);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblRemoteIpAddress.Location = new System.Drawing.Point(13' 75);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblRemoteIpAddress.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblRemoteIpAddress.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblRemoteIpAddress.TabIndex = 4;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.numLocalUdpPort.Location = new System.Drawing.Point(145' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.numLocalUdpPort.Location = new System.Drawing.Point(145' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.numLocalUdpPort.Maximum = new decimal(new int[] {              65535'              0'              0'              0});
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.numLocalUdpPort.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.numLocalUdpPort.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbRemoteUdpPortHint.Location = new System.Drawing.Point(301' 47);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbRemoteUdpPortHint.Location = new System.Drawing.Point(301' 47);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbRemoteUdpPortHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbRemoteUdpPortHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.pbRemoteUdpPortHint.TabIndex = 5;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.numRemoteUdpPort.Location = new System.Drawing.Point(145' 45);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.numRemoteUdpPort.Location = new System.Drawing.Point(145' 45);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.numRemoteUdpPort.Maximum = new decimal(new int[] {              65535'              0'              0'              0});
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.numRemoteUdpPort.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.numRemoteUdpPort.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.numRemoteUdpPort.TabIndex = 3;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.txtRemoteIpAddress.Location = new System.Drawing.Point(145' 71);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.txtRemoteIpAddress.Location = new System.Drawing.Point(145' 71);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.txtRemoteIpAddress.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.txtRemoteIpAddress.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.txtRemoteIpAddress.TabIndex = 5;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblRemoteUdpPort.Location = new System.Drawing.Point(13' 49);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblRemoteUdpPort.Location = new System.Drawing.Point(13' 49);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblRemoteUdpPort.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblRemoteUdpPort.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblRemoteUdpPort.TabIndex = 2;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblLocalUdpPort.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblLocalUdpPort.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblLocalUdpPort.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.lblLocalUdpPort.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.toolTip.AutoPopDelay = 30000;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.toolTip.InitialDelay = 500;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.toolTip.ReshowDelay = 100;
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(354' 249);
Magic Number,Scada.Comm.Channels.UI,FrmCommUdpProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommUdpProps.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(354' 249);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,FrmCommTcpServerProps_Load,The following statement contains a magic number: cbDevSelMode.SetSelectedItem(settings.DevSelMode' new Dictionary<string' int>()                   { { "ByIPAddress"' 0 }' { "ByFirstPackage"' 1 }' { "ByDeviceLibrary"' 2 } });
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,btnOK_Click,The following statement contains a magic number: if (modified)              {                  settings.Behavior = cbBehavior.ParseText<CommChannelLogic.OperatingBehaviors>();                  settings.ConnMode = (CommTcpChannelLogic.ConnectionModes)cbConnMode.GetSelectedItem(                      new Dictionary<int' object>() {                           { 0' CommTcpChannelLogic.ConnectionModes.Individual }'                           { 1' CommTcpChannelLogic.ConnectionModes.Shared } });                  settings.DevSelMode = (CommTcpServerLogic.DeviceSelectionModes)cbDevSelMode.GetSelectedItem(                      new Dictionary<int' object>() {                           { 0' CommTcpServerLogic.DeviceSelectionModes.ByIPAddress }'                           { 1' CommTcpServerLogic.DeviceSelectionModes.ByFirstPackage }'                           { 2' CommTcpServerLogic.DeviceSelectionModes.ByDeviceLibrary } });                  settings.TcpPort = Convert.ToInt32(numTcpPort.Value);                  settings.InactiveTime = Convert.ToInt32(numInactiveTime.Value);                    settings.SetCommCnlParams(commCnlParams);              }
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Location = new System.Drawing.Point(12' 12);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Location = new System.Drawing.Point(12' 12);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Size = new System.Drawing.Size(330' 107);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Size = new System.Drawing.Size(330' 107);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.Location = new System.Drawing.Point(301' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.Location = new System.Drawing.Point(301' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.TabIndex = 8;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbDevSelModeHint.Location = new System.Drawing.Point(301' 75);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbDevSelModeHint.Location = new System.Drawing.Point(301' 75);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbDevSelModeHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbDevSelModeHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbDevSelModeHint.TabIndex = 7;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDevSelMode.Location = new System.Drawing.Point(145' 73);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDevSelMode.Location = new System.Drawing.Point(145' 73);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDevSelMode.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDevSelMode.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbDevSelMode.TabIndex = 6;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDevSelMode.Location = new System.Drawing.Point(13' 77);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDevSelMode.Location = new System.Drawing.Point(13' 77);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDevSelMode.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDevSelMode.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblDevSelMode.TabIndex = 5;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbConnModeHint.Location = new System.Drawing.Point(301' 48);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbConnModeHint.Location = new System.Drawing.Point(301' 48);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbConnModeHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbConnModeHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbConnModeHint.TabIndex = 4;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbConnMode.Location = new System.Drawing.Point(145' 46);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbConnMode.Location = new System.Drawing.Point(145' 46);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbConnMode.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbConnMode.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbConnMode.TabIndex = 3;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblConnMode.Location = new System.Drawing.Point(13' 50);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblConnMode.Location = new System.Drawing.Point(13' 50);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblConnMode.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblConnMode.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblConnMode.TabIndex = 2;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Location = new System.Drawing.Point(145' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Location = new System.Drawing.Point(145' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(186' 209);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(186' 209);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.TabIndex = 2;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(267' 209);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(267' 209);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 3;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Location = new System.Drawing.Point(12' 125);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Location = new System.Drawing.Point(12' 125);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Size = new System.Drawing.Size(330' 78);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Size = new System.Drawing.Size(330' 78);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbInactiveTimeHint.Location = new System.Drawing.Point(301' 47);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbInactiveTimeHint.Location = new System.Drawing.Point(301' 47);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbInactiveTimeHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbInactiveTimeHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbInactiveTimeHint.TabIndex = 9;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbTcpPortHint.Location = new System.Drawing.Point(301' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbTcpPortHint.Location = new System.Drawing.Point(301' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbTcpPortHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbTcpPortHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.pbTcpPortHint.TabIndex = 8;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.numTcpPort.Location = new System.Drawing.Point(145' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.numTcpPort.Location = new System.Drawing.Point(145' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.numTcpPort.Maximum = new decimal(new int[] {              65535'              0'              0'              0});
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.numTcpPort.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.numTcpPort.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.numInactiveTime.Location = new System.Drawing.Point(145' 45);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.numInactiveTime.Location = new System.Drawing.Point(145' 45);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.numInactiveTime.Maximum = new decimal(new int[] {              3600'              0'              0'              0});
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.numInactiveTime.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.numInactiveTime.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.numInactiveTime.TabIndex = 3;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblTcpPort.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblTcpPort.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblTcpPort.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblTcpPort.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblInactiveTime.Location = new System.Drawing.Point(13' 49);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblInactiveTime.Location = new System.Drawing.Point(13' 49);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblInactiveTime.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblInactiveTime.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.lblInactiveTime.TabIndex = 2;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.toolTip.AutoPopDelay = 30000;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.toolTip.InitialDelay = 500;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.toolTip.ReshowDelay = 100;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(354' 244);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpServerProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpServerProps.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(354' 244);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Location = new System.Drawing.Point(12' 12);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Location = new System.Drawing.Point(12' 12);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Size = new System.Drawing.Size(330' 80);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbMode.Size = new System.Drawing.Size(330' 80);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.Location = new System.Drawing.Point(301' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.Location = new System.Drawing.Point(301' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbBehaviorHint.TabIndex = 5;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbConnModeHint.Location = new System.Drawing.Point(301' 48);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbConnModeHint.Location = new System.Drawing.Point(301' 48);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbConnModeHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbConnModeHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbConnModeHint.TabIndex = 4;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.cbConnMode.Location = new System.Drawing.Point(145' 46);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.cbConnMode.Location = new System.Drawing.Point(145' 46);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.cbConnMode.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.cbConnMode.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.cbConnMode.TabIndex = 3;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblConnMode.Location = new System.Drawing.Point(13' 50);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblConnMode.Location = new System.Drawing.Point(13' 50);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblConnMode.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblConnMode.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblConnMode.TabIndex = 2;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Location = new System.Drawing.Point(145' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Location = new System.Drawing.Point(145' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.cbBehavior.Size = new System.Drawing.Size(150' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblBehavior.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(186' 238);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(186' 238);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.TabIndex = 2;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(267' 238);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(267' 238);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 3;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Location = new System.Drawing.Point(12' 104);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Location = new System.Drawing.Point(12' 104);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Padding = new System.Windows.Forms.Padding(10' 3' 10' 10);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Size = new System.Drawing.Size(330' 128);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.gbConnection.Size = new System.Drawing.Size(330' 128);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbStayConnectedHint.Location = new System.Drawing.Point(301' 99);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbStayConnectedHint.Location = new System.Drawing.Point(301' 99);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbStayConnectedHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbStayConnectedHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbStayConnectedHint.TabIndex = 11;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.chkStayConnected.Location = new System.Drawing.Point(25' 99);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.chkStayConnected.Location = new System.Drawing.Point(25' 99);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.chkStayConnected.Size = new System.Drawing.Size(134' 17);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.chkStayConnected.Size = new System.Drawing.Size(134' 17);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.chkStayConnected.TabIndex = 6;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbReconnectAfterHint.Location = new System.Drawing.Point(301' 73);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbReconnectAfterHint.Location = new System.Drawing.Point(301' 73);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbReconnectAfterHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbReconnectAfterHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbReconnectAfterHint.TabIndex = 9;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblReconnectAfter.Location = new System.Drawing.Point(13' 75);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblReconnectAfter.Location = new System.Drawing.Point(13' 75);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblReconnectAfter.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblReconnectAfter.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblReconnectAfter.TabIndex = 4;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numReconnectAfter.Location = new System.Drawing.Point(145' 71);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numReconnectAfter.Location = new System.Drawing.Point(145' 71);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numReconnectAfter.Maximum = new decimal(new int[] {              3600'              0'              0'              0});
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numReconnectAfter.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numReconnectAfter.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numReconnectAfter.TabIndex = 5;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numReconnectAfter.Value = new decimal(new int[] {              30'              0'              0'              0});
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbHostHint.Location = new System.Drawing.Point(301' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbHostHint.Location = new System.Drawing.Point(301' 21);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbHostHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbHostHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbHostHint.TabIndex = 6;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbTcpPortHint.Location = new System.Drawing.Point(301' 47);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbTcpPortHint.Location = new System.Drawing.Point(301' 47);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbTcpPortHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbTcpPortHint.Size = new System.Drawing.Size(16' 16);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.pbTcpPortHint.TabIndex = 5;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numTcpPort.Location = new System.Drawing.Point(145' 45);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numTcpPort.Location = new System.Drawing.Point(145' 45);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numTcpPort.Maximum = new decimal(new int[] {              65535'              0'              0'              0});
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numTcpPort.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numTcpPort.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numTcpPort.TabIndex = 3;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.numTcpPort.Value = new decimal(new int[] {              502'              0'              0'              0});
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.txtHost.Location = new System.Drawing.Point(145' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.txtHost.Location = new System.Drawing.Point(145' 19);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.txtHost.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.txtHost.Size = new System.Drawing.Size(150' 20);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblTcpPort.Location = new System.Drawing.Point(13' 49);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblTcpPort.Location = new System.Drawing.Point(13' 49);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblTcpPort.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblTcpPort.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblTcpPort.TabIndex = 2;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblHost.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblHost.Location = new System.Drawing.Point(13' 23);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblHost.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.lblHost.Size = new System.Drawing.Size(126' 13);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.toolTip.AutoPopDelay = 30000;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.toolTip.InitialDelay = 500;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.toolTip.ReshowDelay = 100;
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(354' 273);
Magic Number,Scada.Comm.Channels.UI,FrmCommTcpClientProps,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Channels\UI\FrmCommTcpClientProps.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(354' 273);
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
Magic Number,Scada.Comm.Devices,KPLogic,C:\repos\RapidScada_SCADA\ScadaComm\ScadaCommCommon\Devices\KPLogic.cs,AppendKPTagsInfo,The following statement contains a magic number: if (KPTags.Length == 0)              {                  sb.AppendLine(Localization.UseRussian ? "Теги КП отсутствуют" : "No device tags");              }              else              {                  sb.AppendLine(Localization.UseRussian ? "Текущие данные тегов КП" : "Current device tags data");                    bool writeGroups = TagGroups.Length > 0; // вывод тегов КП по группам                  string[] colSig;  // столбец сигналов                  string[] colName; // столбец наименований                  string[] colVal;  // столбец значений                  string[] colCnl;  // столбец каналов                  int rowCnt;       // количество строк                    if (tagTable == null)                  {                      // формирование таблицы текущих значений тегов КП                      tagTable = new string[4][];                      tagTableColLen = new int[4];                      rowCnt = writeGroups ? KPTags.Length + TagGroups.Length + 1 : KPTags.Length + 1;                        tagTable[0] = colSig = new string[rowCnt];                      tagTable[1] = colName = new string[rowCnt];                      tagTable[2] = colVal = new string[rowCnt];                      tagTable[3] = colCnl = new string[rowCnt];                        if (Localization.UseRussian)                      {                          colSig[0] = "Сигнал";                          colName[0] = "Наименование";                          colVal[0] = "Значение";                          colCnl[0] = "Канал";                      }                      else                      {                          colSig[0] = "Signal";                          colName[0] = "Name";                          colVal[0] = "Value";                          colCnl[0] = "Channel";                      }                        if (writeGroups)                      {                          int i = 1;                          foreach (TagGroup tagGroup in TagGroups)                          {                              colSig[i] = "*";                              colName[i] = tagGroup.Name;                              colVal[i] = "";                              colCnl[i] = "";                              i++;                                foreach (KPTag kpTag in tagGroup.KPTags)                              {                                  colSig[i] = kpTag.Signal.ToString();                                  colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                                  i++;                              }                          }                      }                      else                      {                          for (int i = 1; i < rowCnt; i++)                          {                              KPTag kpTag = KPTags[i - 1];                              colSig[i] = kpTag.Signal.ToString();                              colCnl[i] = kpTag.CnlNum <= 0 ? "" : kpTag.CnlNum.ToString();                          }                      }                        // вычисление ширины столбцов                      tagTableColLen[0] = GetMaxLength(colSig);                      tagTableColLen[3] = GetMaxLength(colCnl);                  }                  else                  {                      colSig = tagTable[0];                      colName = tagTable[1];                      colVal = tagTable[2];                      colCnl = tagTable[3];                      rowCnt = colSig.Length;                  }                    // заполнение столбцов наименований и значений' вычисление их ширины                  for (int i = 1' paramInd = 0; i < rowCnt; i++)                  {                      if (colSig[i] != "*")                      {                          KPTag kpTag = KPTags[paramInd];                          colName[i] = kpTag.Name;                          colVal[i] = ConvertTagDataToStr(kpTag.Signal' curData[paramInd]);                          paramInd++;                      }                  }                    tagTableColLen[1] = GetMaxLength(colName);                  tagTableColLen[2] = GetMaxLength(colVal);                    // добавление текстового представления таблицы в конструктор строки                  int lenSig = tagTableColLen[0];                  int lenName = tagTableColLen[1];                  int lenVal = tagTableColLen[2];                  int lenCnl = tagTableColLen[3];                  string br = (new StringBuilder()).Append("+-")                      .Append(new string('-'' lenSig)).Append("-+-")                      .Append(new string('-'' lenName)).Append("-+-")                      .Append(new string('-'' lenVal)).Append("-+-")                      .Append(new string('-'' lenCnl)).Append("-+").ToString();                    sb.AppendLine(br);                  string grBeg = new string('*'' lenSig + 2) + " ";                    for (int i = 0; i < rowCnt; i++)                  {                      if (colSig[i] == "*")                      {                          if (colName[i] == "")                          {                              sb.Append("| ").Append(new string('*'' br.Length - 4)).Append(" |").AppendLine();                          }                          else                          {                              string s = "| " + grBeg + colName[i] + " ";                              sb.Append(s).Append(new string('*'' br.Length - s.Length - 2)).Append(" |").AppendLine();                          }                      }                      else                      {                          sb.Append("| ")                              .Append(colSig[i].PadLeft(lenSig)).Append(" | ")                              .Append(colName[i].PadRight(lenName)).Append(" | ")                              .Append(colVal[i].PadLeft(lenVal)).Append(" | ")                              .Append(colCnl[i].PadLeft(lenCnl)).Append(" |").AppendLine();                      }                      sb.AppendLine(br);                  }              }
