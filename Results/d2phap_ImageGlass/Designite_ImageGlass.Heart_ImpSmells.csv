Implementation smell,Namespace,Class,File,Method,Description
Long Method,ImageGlass.Heart,Photo,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Photo.cs,Load,The method has 171 lines of code.
Complex Method,ImageGlass.Heart,Factory,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Factory.cs,UpdateQueueList,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.Heart,Helpers,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Helpers.cs,GetOrientationDegree,Cyclomatic complexity of the method is 9
Complex Method,ImageGlass.Heart,Photo,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Photo.cs,Load,Cyclomatic complexity of the method is 8
Long Parameter List,ImageGlass.Heart,Photo,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Photo.cs,Load,The method has 7 parameters. Parameters: filename' size' colorProfileName' isApplyColorProfileForAll' quality' useEmbeddedThumbnails' channel
Long Parameter List,ImageGlass.Heart,Photo,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Photo.cs,LoadAsync,The method has 6 parameters. Parameters: filename' size' colorProfileName' isApplyColorProfileForAll' quality' channel
Long Statement,ImageGlass.Heart,Photo,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Photo.cs,LoadAsync,The length of the statement  "                bitmap = Load(filename' size' colorProfileName' isApplyColorProfileForAll' quality' useEmbeddedThumbnails: false' channel: channel); " is 132.
Magic Number,ImageGlass.Heart,BitmapBooster,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\BitmapBooster.cs,Get,The following statement contains a magic number: int ofs = str * y + x * 4;
Magic Number,ImageGlass.Heart,BitmapBooster,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\BitmapBooster.cs,Get,The following statement contains a magic number: return Color.FromArgb(                      o[ofs + 3]'                      o[ofs + 2]'                      o[ofs + 1]'                      o[ofs + 0]);
Magic Number,ImageGlass.Heart,BitmapBooster,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\BitmapBooster.cs,Get,The following statement contains a magic number: return Color.FromArgb(                      o[ofs + 3]'                      o[ofs + 2]'                      o[ofs + 1]'                      o[ofs + 0]);
Magic Number,ImageGlass.Heart,BitmapBooster,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\BitmapBooster.cs,Set,The following statement contains a magic number: int ofs = str * y + x * 4;
Magic Number,ImageGlass.Heart,BitmapBooster,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\BitmapBooster.cs,Set,The following statement contains a magic number: o[ofs + 3] = c.A;
Magic Number,ImageGlass.Heart,BitmapBooster,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\BitmapBooster.cs,Set,The following statement contains a magic number: o[ofs + 2] = c.R;
Magic Number,ImageGlass.Heart,BitmapBooster,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\BitmapBooster.cs,Set,The following statement contains a magic number: ((byte*)dst)[str * y + x * 4 + 3] = alpha;
Magic Number,ImageGlass.Heart,BitmapBooster,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\BitmapBooster.cs,Set,The following statement contains a magic number: ((byte*)dst)[str * y + x * 4 + 3] = alpha;
Magic Number,ImageGlass.Heart,Factory,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Factory.cs,UpdateQueueList,The following statement contains a magic number: var maxCachedItems = this.MaxQueue * 2 + 1;
Magic Number,ImageGlass.Heart,Factory,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Factory.cs,StartImageBooster,The following statement contains a magic number: await Task.Delay(10);
Magic Number,ImageGlass.Heart,Helpers,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Helpers.cs,PrefixLongPath,The following statement contains a magic number: path.Length > 255 && !path.StartsWith(LONG_PATH_PREFIX)
Magic Number,ImageGlass.Heart,Photo,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Photo.cs,Load,The following statement contains a magic number: switch (ext)              {                  case ".GIF":                      // Note: Using FileStream is much faster than using MagickImageCollection                      using (FileStream fs = new FileStream(filename' FileMode.Open' FileAccess.Read))                      {                          var ms = new MemoryStream();                          fs.CopyTo(ms);                          ms.Position = 0;                            bitmap = new Bitmap(ms' true);                      }                      break;                    case ".ICO":                      using (var imgColl = new MagickImageCollection(filename' settings))                      {                          if (imgColl.Count > 0)                          {                              // Get the biggest image in the collection                              using (var imgM = imgColl.OrderByDescending(frame => frame.Width).First())                              {                                  using (var channelImgM = ApplyColorChannel((MagickImage)imgM))                                  {                                      bitmap = channelImgM.ToBitmap();                                  }                              }                          }                      }                      break;                    case ".TIF":                      using (var imgColl = new MagickImageCollection(filename' settings))                      {                          bitmap = imgColl.ToBitmap();                      }                      break;                    default:                        // Issue #530: ImageMagick falls over if the file path is longer than the (old)                      // windows limit of 260 characters. Workaround is to read the file bytes' but                       // that requires using the "long path name" prefix to succeed.                      if (filename.Length > 255)                      {                          filename = Helpers.PrefixLongPath(filename);                          var allbytes = File.ReadAllBytes(filename);                          using (var imgM = new MagickImage(allbytes' settings))                          {                              PreprocesMagickImage(imgM);                              using (var channelImgM = ApplyColorChannel(imgM))                              {                                  bitmap = channelImgM.ToBitmap();                              }                          }                      }                      else                      {                          using (var imgM = new MagickImage(filename' settings))                          {                              PreprocesMagickImage(imgM);                              using (var channelImgM = ApplyColorChannel(imgM))                              {                                  bitmap = channelImgM.ToBitmap();                              }                          }                      }                        break;              }
Magic Number,ImageGlass.Heart,Photo,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Photo.cs,GetThumbnail,The following statement contains a magic number: Bitmap bmp = Load(filename'                      size: size'                      quality: 75'                      useEmbeddedThumbnails: useEmbeddedThumbnails);
Magic Number,ImageGlass.Heart,Photo,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Photo.cs,GetThumbnailAsync,The following statement contains a magic number: await Task.Run(() =>              {                  bmp = Load(filename'                      size: size'                      quality: 75'                      useEmbeddedThumbnails: useEmbeddedThumbnails);                }).ConfigureAwait(false);
Magic Number,ImageGlass.Heart,Photo,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Photo.cs,RotateImage,The following statement contains a magic number: await Task.Run(() =>              {                  using (var imgM = new MagickImage(srcFileName))                  {                      imgM.Rotate(degrees);                      imgM.Quality = 100;                        bitmap = imgM.ToBitmap();                  }              });
Magic Number,ImageGlass.Heart,Photo,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Photo.cs,RotateImage,The following statement contains a magic number: await Task.Run(() =>              {                  using (var imgM = new MagickImage(srcBitmap))                  {                      imgM.Rotate(degrees);                      imgM.Quality = 100;                        bitmap = imgM.ToBitmap();                  }              });
Magic Number,ImageGlass.Heart,Photo,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.Heart\Photo.cs,Flip,The following statement contains a magic number: imgM.Quality = 100;
