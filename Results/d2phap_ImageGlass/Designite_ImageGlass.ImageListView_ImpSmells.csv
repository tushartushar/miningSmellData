Implementation smell,Namespace,Class,File,Method,Description
Long Method,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The method has 141 lines of code.
Long Method,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The method has 138 lines of code.
Long Method,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The method has 101 lines of code.
Long Method,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The method has 191 lines of code.
Long Method,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The method has 175 lines of code.
Long Method,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The method has 147 lines of code.
Long Method,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The method has 201 lines of code.
Long Method,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The method has 142 lines of code.
Long Method,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The method has 234 lines of code.
Long Method,ImageGlass.ImageListView,ImageListViewItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetSubItemText,The method has 117 lines of code.
Long Method,ImageGlass.ImageListView,ImageListViewItemComparer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemCollection.cs,Compare,The method has 104 lines of code.
Long Method,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The method has 253 lines of code.
Long Method,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The method has 246 lines of code.
Long Method,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseUp,The method has 171 lines of code.
Long Method,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The method has 119 lines of code.
Complex Method,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,Cyclomatic complexity of the method is 11
Complex Method,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,Cyclomatic complexity of the method is 31
Complex Method,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,EnsureVisible,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,OnMouseWheel,Cyclomatic complexity of the method is 10
Complex Method,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,Dispose,Cyclomatic complexity of the method is 12
Complex Method,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,Cyclomatic complexity of the method is 9
Complex Method,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_RunWorkerCompleted,Cyclomatic complexity of the method is 17
Complex Method,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,RunWorker,Cyclomatic complexity of the method is 9
Complex Method,ImageGlass.ImageListView,QueuedBackgroundWorker,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorker.cs,Run,Cyclomatic complexity of the method is 9
Complex Method,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,Cyclomatic complexity of the method is 39
Complex Method,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,Cyclomatic complexity of the method is 26
Complex Method,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,Cyclomatic complexity of the method is 9
Complex Method,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,UpdateTimerCallback,Cyclomatic complexity of the method is 13
Complex Method,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,Cyclomatic complexity of the method is 26
Complex Method,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,Cyclomatic complexity of the method is 9
Complex Method,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,Cyclomatic complexity of the method is 23
Complex Method,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,Cyclomatic complexity of the method is 28
Complex Method,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,Cyclomatic complexity of the method is 11
Complex Method,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,Cyclomatic complexity of the method is 29
Complex Method,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,Cyclomatic complexity of the method is 9
Complex Method,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,Cyclomatic complexity of the method is 26
Complex Method,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,Cyclomatic complexity of the method is 36
Complex Method,ImageGlass.ImageListView,ImageListViewColumnHeader,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColumnHeader.cs,AutoFit,Cyclomatic complexity of the method is 11
Complex Method,ImageGlass.ImageListView,ImageListViewItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetSubItemText,Cyclomatic complexity of the method is 42
Complex Method,ImageGlass.ImageListView,ImageListViewItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,Cyclomatic complexity of the method is 18
Complex Method,ImageGlass.ImageListView,ImageListViewItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateDetailsInternal,Cyclomatic complexity of the method is 27
Complex Method,ImageGlass.ImageListView,ImageListViewItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateGroup,Cyclomatic complexity of the method is 25
Complex Method,ImageGlass.ImageListView,ImageListViewItemCollection,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemCollection.cs,InsertInternal,Cyclomatic complexity of the method is 14
Complex Method,ImageGlass.ImageListView,ImageListViewItemCollection,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemCollection.cs,Sort,Cyclomatic complexity of the method is 10
Complex Method,ImageGlass.ImageListView,ImageListViewItemCollection,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemCollection.cs,AddRemoveGroupItem,Cyclomatic complexity of the method is 11
Complex Method,ImageGlass.ImageListView,ImageListViewItemComparer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemCollection.cs,CompareStrings,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListViewItemComparer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemCollection.cs,Compare,Cyclomatic complexity of the method is 28
Complex Method,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateScrollBars,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,Cyclomatic complexity of the method is 19
Complex Method,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateGroups,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderColumnHeaders,Cyclomatic complexity of the method is 12
Complex Method,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderGalleryImage,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderPane,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderItems,Cyclomatic complexity of the method is 18
Complex Method,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawBackground,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,Cyclomatic complexity of the method is 40
Complex Method,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,Cyclomatic complexity of the method is 10
Complex Method,ImageGlass.ImageListView,ItemDrawOrderComparer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,Compare,Cyclomatic complexity of the method is 30
Complex Method,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,Cyclomatic complexity of the method is 42
Complex Method,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseUp,Cyclomatic complexity of the method is 34
Complex Method,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,KeyDown,Cyclomatic complexity of the method is 15
Complex Method,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,DragDrop,Cyclomatic complexity of the method is 12
Complex Method,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,DragOver,Cyclomatic complexity of the method is 15
Complex Method,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,ApplyNavKey,Cyclomatic complexity of the method is 18
Complex Method,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,Cyclomatic complexity of the method is 11
Complex Method,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,Cyclomatic complexity of the method is 13
Complex Method,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,Cyclomatic complexity of the method is 11
Complex Method,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,Cyclomatic complexity of the method is 13
Complex Method,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,Cyclomatic complexity of the method is 18
Long Parameter List,ImageGlass.ImageListView,CacheItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,CacheItem,The method has 5 parameters. Parameters: extension' smallIcon' largeIcon' filetype' state
Long Parameter List,ImageGlass.ImageListView,CacheItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,CacheItem,The method has 7 parameters. Parameters: guid' size' image' state' useEmbeddedThumbnails' autoRotate' useWIC
Long Parameter List,ImageGlass.ImageListView,FileSystemAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptors.cs,GetThumbnail,The method has 5 parameters. Parameters: key' size' useEmbeddedThumbnails' useExifOrientation' useWIC
Long Parameter List,ImageGlass.ImageListView,URIAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptors.cs,GetThumbnail,The method has 5 parameters. Parameters: key' size' useEmbeddedThumbnails' useExifOrientation' useWIC
Long Parameter List,ImageGlass.ImageListView,CacheRequest,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheMetadata.cs,CacheRequest,The method has 8 parameters. Parameters: guid' adaptor' key' size' useEmbeddedThumbnails' autoRotate' useWIC' requestType
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,Add,The method has 7 parameters. Parameters: guid' adaptor' key' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,Add,The method has 8 parameters. Parameters: guid' adaptor' key' thumbSize' thumb' useEmbeddedThumbnails' autoRotate' useWIC
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToGalleryCache,The method has 7 parameters. Parameters: guid' adaptor' key' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToRendererCache,The method has 7 parameters. Parameters: guid' adaptor' key' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetRendererImage,The method has 5 parameters. Parameters: guid' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetGalleryImage,The method has 5 parameters. Parameters: guid' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetImage,The method has 6 parameters. Parameters: guid' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC' clone
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetCacheState,The method has 5 parameters. Parameters: guid' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetKey,The method has 5 parameters. Parameters: guid' size' useEmbeddedThumbnails' autoRotate' useWIC
Long Parameter List,ImageGlass.ImageListView,ImageListViewItemAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptor.cs,GetThumbnail,The method has 5 parameters. Parameters: key' size' useEmbeddedThumbnails' useExifOrientation' useWIC
Long Parameter List,ImageGlass.ImageListView,QueuedWorkerCompletedEventArgs,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorkerEvents.cs,QueuedWorkerCompletedEventArgs,The method has 5 parameters. Parameters: argument' result' priority' error' cancelled
Long Parameter List,ImageGlass.ImageListView,ShellInfoExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ShellInfoExtractor.cs,SHGetFileInfo,The method has 5 parameters. Parameters: pszPath' dwFileAttributes' psfi' cbFileInfo' uFlags
Long Parameter List,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawImageWithReflection,The method has 7 parameters. Parameters: g' img' x' y' width' height' reflection
Long Parameter List,ImageGlass.ImageListView,HitInfo,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\HitInfo.cs,HitInfo,The method has 10 parameters. Parameters: itemIndex' checkBoxHit' group' column' columnSeparator' subItemIndex' paneBorder' inItemArea' inHeaderArea' inPaneArea
Long Parameter List,ImageGlass.ImageListView,ImageListViewColumnHeader,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColumnHeader.cs,ImageListViewColumnHeader,The method has 5 parameters. Parameters: type' text' width' displayIndex' visible
Long Parameter List,ImageGlass.ImageListView,ImageListViewItemCollection,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemCollection.cs,Insert,The method has 5 parameters. Parameters: index' key' text' initialThumbnail' adaptor
Long Parameter List,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawSubItemItemOverlay,The method has 6 parameters. Parameters: g' item' state' subItemIndex' subItemHovered' bounds
Long Parameter List,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,FromImage,The method has 5 parameters. Parameters: image' size' useEmbeddedThumbnails' useExifOrientation' useWIC
Long Parameter List,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,FromFile,The method has 5 parameters. Parameters: filename' size' useEmbeddedThumbnails' useExifOrientation' useWIC
Long Parameter List,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,DrawStringPair,The method has 7 parameters. Parameters: g' r' caption' text' font' captionBrush' textBrush
Long Parameter List,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The method has 5 parameters. Parameters: x' y' width' height' radius
Long Parameter List,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,FillRoundedRectangle,The method has 7 parameters. Parameters: graphics' brush' x' y' width' height' radius
Long Parameter List,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,FillRoundedRectangle,The method has 7 parameters. Parameters: graphics' brush' x' y' width' height' radius
Long Parameter List,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,DrawRoundedRectangle,The method has 7 parameters. Parameters: graphics' pen' x' y' width' height' radius
Long Parameter List,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,DrawRoundedRectangle,The method has 7 parameters. Parameters: graphics' pen' x' y' width' height' radius
Long Identifier,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,,The length of the parameter mSelectionRectangleBorderColor is 30.
Long Identifier,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,,The length of the parameter lastMouseDownInColumnHeaderArea is 31.
Long Statement,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ClearThumbnailCache,The length of the statement  "                        thumbnailCache.Add(item.Guid' item.Adaptor' item.VirtualItemKey' mThumbnailSize' mUseEmbeddedThumbnails' AutoRotateThumbnails' (mUseWIC == UseWIC.Auto || mUseWIC == UseWIC.ThumbnailsOnly)); " is 189.
Long Statement,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The length of the statement  "                        if (ScrollOrientation == ScrollOrientation.HorizontalScroll || (ScrollOrientation == ScrollOrientation.VerticalScroll && col <= layoutManager.Cols)) " is 148.
Long Statement,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ResumePaint,The length of the statement  "            System.Diagnostics.Debug.Assert(rendererSuspendCount > 0' "Suspend count does not match resume count."' "ResumePaint() must be matched by a prior SuspendPaint() call."); " is 169.
Long Statement,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,IsInputKey,The length of the statement  "            if ((keyData & Keys.Left) == Keys.Left || (keyData & Keys.Right) == Keys.Right || (keyData & Keys.Up) == Keys.Up || (keyData & Keys.Down) == Keys.Down) " is 151.
Long Statement,ImageGlass.ImageListView,FileSystemAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptors.cs,GetDetails,The length of the statement  "                    details.Add(new Utility.Tuple<ColumnType' string' object>(ColumnType.FilePath' string.Empty' info.DirectoryName ?? "")); " is 120.
Long Statement,ImageGlass.ImageListView,FileSystemAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptors.cs,GetDetails,The length of the statement  "                    details.Add(new Utility.Tuple<ColumnType' string' object>(ColumnType.Dimensions' string.Empty' new Size(metadata.Width' metadata.Height))); " is 139.
Long Statement,ImageGlass.ImageListView,FileSystemAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptors.cs,GetDetails,The length of the statement  "                    details.Add(new Utility.Tuple<ColumnType' string' object>(ColumnType.Resolution' string.Empty' new SizeF((float)metadata.DPIX' (float)metadata.DPIY))); " is 151.
Long Statement,ImageGlass.ImageListView,FileSystemAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptors.cs,GetDetails,The length of the statement  "                    details.Add(new Utility.Tuple<ColumnType' string' object>(ColumnType.ImageDescription' string.Empty' metadata.ImageDescription ?? "")); " is 135.
Long Statement,ImageGlass.ImageListView,FileSystemAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptors.cs,GetDetails,The length of the statement  "                    details.Add(new Utility.Tuple<ColumnType' string' object>(ColumnType.EquipmentModel' string.Empty' metadata.EquipmentModel ?? "")); " is 131.
Long Statement,ImageGlass.ImageListView,FileSystemAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptors.cs,GetDetails,The length of the statement  "                    details.Add(new Utility.Tuple<ColumnType' string' object>(ColumnType.Copyright' string.Empty' metadata.Copyright ?? "")); " is 121.
Long Statement,ImageGlass.ImageListView,FileSystemAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptors.cs,GetDetails,The length of the statement  "                    details.Add(new Utility.Tuple<ColumnType' string' object>(ColumnType.ExposureTime' string.Empty' (float)metadata.ExposureTime)); " is 128.
Long Statement,ImageGlass.ImageListView,FileSystemAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptors.cs,GetDetails,The length of the statement  "                    details.Add(new Utility.Tuple<ColumnType' string' object>(ColumnType.ISOSpeed' string.Empty' (ushort)metadata.ISOSpeed)); " is 121.
Long Statement,ImageGlass.ImageListView,FileSystemAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptors.cs,GetDetails,The length of the statement  "                    details.Add(new Utility.Tuple<ColumnType' string' object>(ColumnType.UserComment' string.Empty' metadata.Comment ?? "")); " is 121.
Long Statement,ImageGlass.ImageListView,FileSystemAdaptor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemAdaptors.cs,GetDetails,The length of the statement  "                    details.Add(new Utility.Tuple<ColumnType' string' object>(ColumnType.FocalLength' string.Empty' (float)metadata.FocalLength)); " is 126.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The length of the statement  "                if (existing != null && existing.Size == request.Size && existing.UseEmbeddedThumbnails == request.UseEmbeddedThumbnails && existing.AutoRotate == request.AutoRotate && existing.UseWIC == request.UseWIC) " is 203.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The length of the statement  "                if (canProcess && (CacheMode == CacheMode.OnDemand) && mImageListView != null && !mImageListView.IsItemVisible(request.Guid)) " is 125.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The length of the statement  "                if (existing != null && existing.Guid == request.Guid && existing.Size == request.Size && existing.UseEmbeddedThumbnails == request.UseEmbeddedThumbnails && existing.AutoRotate == request.AutoRotate && existing.UseWIC == request.UseWIC) " is 236.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The length of the statement  "                if (existing != null && existing.Guid == request.Guid && existing.Size == request.Size && existing.UseEmbeddedThumbnails == request.UseEmbeddedThumbnails && existing.AutoRotate == request.AutoRotate && existing.UseWIC == request.UseWIC) " is 236.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_RunWorkerCompleted,The length of the statement  "                mImageListView.OnThumbnailCachedInternal(result.Guid' result.Image' result.Size' request.RequestType == RequestType.Thumbnail); " is 127.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_DoWork,The length of the statement  "            string diskCacheKey = GetKey(request.Guid' request.Size' request.UseEmbeddedThumbnails' request.AutoRotate' request.UseWIC); " is 124.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_DoWork,The length of the statement  "                thumb = request.Adaptor.GetThumbnail(request.VirtualItemKey' request.Size' request.UseEmbeddedThumbnails' request.AutoRotate' request.UseWIC); " is 142.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_DoWork,The length of the statement  "                result = new CacheItem(request.Guid' request.Size' null' CacheState.Error' request.UseEmbeddedThumbnails' request.AutoRotate' request.UseWIC); " is 142.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_DoWork,The length of the statement  "                result = new CacheItem(request.Guid' request.Size' thumb' CacheState.Cached' request.UseEmbeddedThumbnails' request.AutoRotate' request.UseWIC); " is 144.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,IsPurgeNeeded,The length of the statement  "            return ((CacheLimitAsMemory != 0 && MemoryUsedByRemoved > CacheLimitAsMemory / 4) || (CacheLimitAsItemCount != 0 && removedItems.Count > CacheLimitAsItemCount / 4)); " is 165.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,IsCacheLimitExceeded,The length of the statement  "            return ((CacheLimitAsMemory != 0 && MemoryUsedByRemoved > CacheLimitAsMemory) || (CacheLimitAsItemCount != 0 && removedItems.Count > CacheLimitAsItemCount)); " is 157.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,Add,The length of the statement  "            RunWorker(new CacheRequest(guid' adaptor' key' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC' RequestType.Thumbnail)); " is 125.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,Add,The length of the statement  "            thumbCache.Add(guid' new CacheItem(guid' thumbSize' thumb' CacheState.Cached' useEmbeddedThumbnails' autoRotate' useWIC)); " is 122.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToGalleryCache,The length of the statement  "            if (galleryItem != null && galleryItem.Guid == guid && galleryItem.Image != null && galleryItem.Size == thumbSize && galleryItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && galleryItem.AutoRotate == autoRotate && galleryItem.UseWIC == useWIC) " is 248.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToGalleryCache,The length of the statement  "            RunWorker(new CacheRequest(guid' adaptor' key' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC' RequestType.Gallery)' 2); " is 126.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToRendererCache,The length of the statement  "            if (rendererItem != null && rendererItem.Guid == guid && rendererItem.Image != null && rendererItem.Size == thumbSize && rendererItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && rendererItem.AutoRotate == autoRotate && rendererItem.UseWIC == useWIC) " is 255.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToRendererCache,The length of the statement  "            RunWorker(new CacheRequest(guid' adaptor' key' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC' RequestType.Renderer)' 1); " is 127.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetRendererImage,The length of the statement  "            if (rendererItem != null && rendererItem.Guid == guid && rendererItem.Image != null && rendererItem.Size == thumbSize && rendererItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && rendererItem.AutoRotate == autoRotate && rendererItem.UseWIC == useWIC) " is 255.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetGalleryImage,The length of the statement  "            if (galleryItem != null && galleryItem.Guid == guid && galleryItem.Image != null && galleryItem.Size == thumbSize && galleryItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && galleryItem.AutoRotate == autoRotate && galleryItem.UseWIC == useWIC) " is 248.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetImage,The length of the statement  "            if (thumbCache.TryGetValue(guid' out item) && item != null && item.Image != null && item.Size == thumbSize && item.UseEmbeddedThumbnails == useEmbeddedThumbnails && item.AutoRotate == autoRotate && item.UseWIC == useWIC) " is 220.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetCacheState,The length of the statement  "            if (thumbCache.TryGetValue(guid' out item) && item != null && item.Size == thumbSize && item.UseEmbeddedThumbnails == useEmbeddedThumbnails && item.AutoRotate == autoRotate && item.UseWIC == useWIC) " is 198.
Long Statement,ImageGlass.ImageListView,QueuedBackgroundWorker,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorker.cs,RunWorkerAsync,The length of the statement  "				throw new ArgumentException ("priority must be between 0 and " + (priorityQueues - 1).ToString () + "  inclusive."' "priority"); " is 128.
Long Statement,ImageGlass.ImageListView,QueuedBackgroundWorker,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorker.cs,CancelAsync,The length of the statement  "				throw new ArgumentException ("priority must be between 0 and " + (priorityQueues - 1).ToString () + "  inclusive."' "priority"); " is 128.
Long Statement,ImageGlass.ImageListView,QueuedBackgroundWorker,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorker.cs,Run,The length of the statement  "						QueuedWorkerCompletedEventArgs workCompletedArg = new QueuedWorkerCompletedEventArgs (request' doWorkArg.Result' priority' error' doWorkArg.Cancel); " is 148.
Long Statement,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The length of the statement  "                string s = string.Format("Total: {0}\r\nCache: {1}\r\nCache*: {2}"' Utility.FormatSize(baseMem)' Utility.FormatSize(mem)' Utility.FormatSize(ImageListView.thumbnailCache.MemoryUsed)); " is 183.
Long Statement,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        RectangleF rt = new RectangleF(bounds.Left + offset.Width' bounds.Top + offset.Height' uicolumns[0].Width - 2 * offset.Width' bounds.Height - 2 * offset.Height); " is 161.
Long Statement,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                            new Rectangle(bounds.X + padding' bounds.Y + padding' bounds.Width - 2 * padding' bounds.Height - 2 * padding - mReflectionSize)' " is 129.
Long Statement,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGalleryImage,The length of the statement  "                    Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.X + itemMargin.Width' bounds.Y + itemMargin.Height' bounds.Width - 2 * itemMargin.Width' bounds.Height - 2 * itemMargin.Height - mReflectionSize)' 50.0f' 100.0f); " is 234.
Long Statement,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The length of the statement  "                    Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.Location + itemMargin' bounds.Size - itemMargin - itemMargin)' 50.0f' 0.0f); " is 148.
Long Statement,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The length of the statement  "                    if (ImageListView.Columns.HasType(ColumnType.Name) && ImageListView.Columns[ColumnType.Name].Visible && bounds.Height > 0) " is 122.
Long Statement,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The length of the statement  "                    if (ImageListView.Columns.HasType(ColumnType.FileType) && ImageListView.Columns[ColumnType.FileType].Visible && bounds.Height > 0 && !string.IsNullOrEmpty(fileType)) " is 165.
Long Statement,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGroupHeader,The length of the statement  "                            g.DrawString(name' (ImageListView.GroupHeaderFont == null ? ImageListView.Font : ImageListView.GroupHeaderFont)' bText' bounds' sf); " is 132.
Long Statement,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        using (Brush bDisabled = new LinearGradientBrush(bounds' ImageListView.Colors.DisabledColor1' ImageListView.Colors.DisabledColor2' LinearGradientMode.Vertical)) " is 160.
Long Statement,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        (!ImageListView.Focused && ((state & ItemState.Selected) != ItemState.None) && ((state & ItemState.Hovered) != ItemState.None))) " is 128.
Long Statement,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        using (Brush bSelected = new LinearGradientBrush(bounds' ImageListView.Colors.SelectedColor1' ImageListView.Colors.SelectedColor2' LinearGradientMode.Vertical)) " is 160.
Long Statement,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        using (Brush bGray64 = new LinearGradientBrush(bounds' ImageListView.Colors.UnFocusedColor1' ImageListView.Colors.UnFocusedColor2' LinearGradientMode.Vertical)) " is 160.
Long Statement,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        using (Brush bHovered = new LinearGradientBrush(bounds' ImageListView.Colors.HoverColor1' ImageListView.Colors.HoverColor2' LinearGradientMode.Vertical)) " is 153.
Long Statement,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        Rectangle pos = Utility.GetSizedImageBounds(img' new Rectangle(bounds.Location + itemPadding' ImageListView.ThumbnailSize)' 0.0f' 50.0f); " is 137.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,MeasureItem,The length of the statement  "                    itemSize.Height += textHeight + System.Math.Max(4' textHeight / 3) + itemPadding.Height; // textHeight / 3 = vertical space between thumbnail and text " is 150.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        rt = new RectangleF(bounds.Left + itemPadding.Width' bounds.Top + 3 * itemPadding.Height + ImageListView.ThumbnailSize.Height' ImageListView.ThumbnailSize.Width' szt.Height); " is 174.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        RectangleF rt = new RectangleF(bounds.Left + offset.Width' bounds.Top + offset.Height' uicolumns[0].Width - 2 * offset.Width' bounds.Height - 2 * offset.Height); " is 161.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGalleryImage,The length of the statement  "                    Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.Location + itemMargin' bounds.Size - itemMargin - itemMargin)); " is 135.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The length of the statement  "                    Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.Location + itemMargin' bounds.Size - itemMargin - itemMargin)' 50.0f' 0.0f); " is 148.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The length of the statement  "                    if (ImageListView.Columns.HasType(ColumnType.Name) && ImageListView.Columns[ColumnType.Name].Visible && bounds.Height > 0) " is 122.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The length of the statement  "                        int y = Utility.DrawStringPair(g' bounds' ""' text' ImageListView.Font' SystemBrushes.GrayText' SystemBrushes.WindowText); " is 122.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The length of the statement  "                    if (ImageListView.Columns.HasType(ColumnType.FileType) && ImageListView.Columns[ColumnType.FileType].Visible && bounds.Height > 0 && !string.IsNullOrEmpty(fileType)) " is 165.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The length of the statement  "                    using (Brush bHovered = new LinearGradientBrush(bounds' Color.FromArgb(16' SystemColors.Highlight)' Color.FromArgb(64' SystemColors.Highlight)' LinearGradientMode.Vertical)) " is 173.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The length of the statement  "                    using (Brush bNormal = new LinearGradientBrush(bounds' Color.FromArgb(32' SystemColors.Control)' Color.FromArgb(196' SystemColors.Control)' LinearGradientMode.Vertical)) " is 169.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The length of the statement  "                using (Brush bBorder = new LinearGradientBrush(bounds' Color.FromArgb(196' SystemColors.Control)' Color.FromArgb(32' SystemColors.Control)' LinearGradientMode.Vertical)) " is 169.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The length of the statement  "                        g.DrawString(column.Text' (ImageListView.ColumnHeaderFont == null ? ImageListView.Font : ImageListView.ColumnHeaderFont)' " is 121.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnExtender,The length of the statement  "                using (Brush bBack = new LinearGradientBrush(bounds' Color.FromArgb(32' SystemColors.Control)' Color.FromArgb(196' SystemColors.Control)' LinearGradientMode.Vertical)) " is 167.
Long Statement,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnExtender,The length of the statement  "                using (Brush bBorder = new LinearGradientBrush(bounds' Color.FromArgb(196' SystemColors.Control)' Color.FromArgb(32' SystemColors.Control)' LinearGradientMode.Vertical)) " is 169.
Long Statement,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                            using (Brush bDisabled = new LinearGradientBrush(bounds' ImageListView.Colors.DisabledColor1' ImageListView.Colors.DisabledColor2' LinearGradientMode.Vertical)) " is 160.
Long Statement,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                            (!ImageListView.Focused && ((state & ItemState.Selected) != ItemState.None) && ((state & ItemState.Hovered) != ItemState.None))) " is 128.
Long Statement,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                            using (Brush bSelected = new LinearGradientBrush(bounds' ImageListView.Colors.SelectedColor1' ImageListView.Colors.SelectedColor2' LinearGradientMode.Vertical)) " is 160.
Long Statement,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                            using (Brush bGray64 = new LinearGradientBrush(bounds' ImageListView.Colors.UnFocusedColor1' ImageListView.Colors.UnFocusedColor2' LinearGradientMode.Vertical)) " is 160.
Long Statement,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                            using (Brush bHovered = new LinearGradientBrush(bounds' ImageListView.Colors.HoverColor1' ImageListView.Colors.HoverColor2' LinearGradientMode.Vertical)) " is 153.
Long Statement,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The length of the statement  "                            TextFormatFlags.EndEllipsis | TextFormatFlags.VerticalCenter | TextFormatFlags.SingleLine | TextFormatFlags.PreserveGraphicsClipping); " is 134.
Long Statement,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                            //Rectangle pos = Utility.GetSizedImageBounds(img' new Rectangle(bounds.Location + itemPadding' ImageListView.ThumbnailSize)); " is 126.
Long Statement,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        //    TextFormatFlags.EndEllipsis | TextFormatFlags.HorizontalCenter | TextFormatFlags.VerticalCenter | TextFormatFlags.SingleLine | TextFormatFlags.PreserveGraphicsClipping); " is 175.
Long Statement,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        Rectangle rt = new Rectangle(bounds.Left + offset.Width' bounds.Top + offset.Height' firstWidth - 2 * offset.Width' bounds.Height - 2 * offset.Height); " is 151.
Long Statement,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                                        TextFormatFlags.EndEllipsis | TextFormatFlags.VerticalCenter | TextFormatFlags.SingleLine | TextFormatFlags.PreserveGraphicsClipping); " is 134.
Long Statement,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                                        TextFormatFlags.EndEllipsis | TextFormatFlags.VerticalCenter | TextFormatFlags.SingleLine | TextFormatFlags.PreserveGraphicsClipping); " is 134.
Long Statement,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGroupHeader,The length of the statement  "                        TextFormatFlags.EndEllipsis | TextFormatFlags.VerticalCenter | TextFormatFlags.SingleLine | TextFormatFlags.PreserveGraphicsClipping); " is 134.
Long Statement,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The length of the statement  "                    using (Brush bHovered = new LinearGradientBrush(bounds' ImageListView.Colors.ColumnHeaderHoverColor1' ImageListView.Colors.ColumnHeaderHoverColor2' LinearGradientMode.Vertical)) " is 177.
Long Statement,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The length of the statement  "                    using (Brush bNormal = new LinearGradientBrush(bounds' ImageListView.Colors.ColumnHeaderBackColor1' ImageListView.Colors.ColumnHeaderBackColor2' LinearGradientMode.Vertical)) " is 174.
Long Statement,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The length of the statement  "                            g.DrawString(column.Text' (ImageListView.ColumnHeaderFont == null ? ImageListView.Font : ImageListView.ColumnHeaderFont)' bText' bounds' sf); " is 141.
Long Statement,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnExtender,The length of the statement  "                using (Brush bNormal = new LinearGradientBrush(bounds' ImageListView.Colors.ColumnHeaderBackColor1' ImageListView.Colors.ColumnHeaderBackColor2' LinearGradientMode.Vertical)) " is 174.
Long Statement,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                    Rectangle textBounds = new Rectangle(bounds.Left + 3' bounds.Bottom - (textHeight + 3)' bounds.Width - 2 * 3' textHeight); " is 122.
Long Statement,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        imgBounds = new Rectangle(bounds.Left + 3' bounds.Top + 3' ImageListView.ThumbnailSize.Width' ImageListView.ThumbnailSize.Height); " is 130.
Long Statement,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        Utility.DrawRoundedRectangle(g' pBorder' imgOutline.Left' imgOutline.Top' imgOutline.Width - 1' imgOutline.Height - 1' 3); " is 122.
Long Statement,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The length of the statement  "                        TextFormatFlags.EndEllipsis | TextFormatFlags.HorizontalCenter | TextFormatFlags.VerticalCenter | TextFormatFlags.PreserveGraphicsClipping); " is 140.
Long Statement,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGalleryImage,The length of the statement  "                    Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.Location + itemMargin' bounds.Size - itemMargin - itemMargin)); " is 135.
Long Statement,ImageGlass.ImageListView,ImageListViewItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The length of the statement  "                    if (mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 32 && mImageListView.ThumbnailSize.Height > 32) " is 124.
Long Statement,ImageGlass.ImageListView,ImageListViewItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The length of the statement  "                    mImageListView.AutoRotateThumbnails' mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.ThumbnailsOnly' false); " is 132.
Long Statement,ImageGlass.ImageListView,ImageListViewItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The length of the statement  "                if (img == null && mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 16 && mImageListView.ThumbnailSize.Height > 16) " is 139.
Long Statement,ImageGlass.ImageListView,ImageListViewItemCollection,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemCollection.cs,Sort,The length of the statement  "                if ((mImageListView.GroupOrder == SortOrder.None || mImageListView.GroupColumn < 0 || mImageListView.GroupColumn >= mImageListView.Columns.Count) && " is 148.
Long Statement,ImageGlass.ImageListView,ImageListViewItemCollection,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemCollection.cs,Sort,The length of the statement  "                   (mImageListView.SortOrder == SortOrder.None || mImageListView.SortColumn < 0 || mImageListView.SortColumn >= mImageListView.Columns.Count)) " is 139.
Long Statement,ImageGlass.ImageListView,ImageListViewItemCollection,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemCollection.cs,Sort,The length of the statement  "                mItems.Sort(new ImageListViewItemComparer(groupColumn' mImageListView.GroupOrder' sortColumn' mImageListView.SortOrder)); " is 121.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The length of the statement  "                if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter) " is 136.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The length of the statement  "                else if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight) " is 138.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The length of the statement  "                if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft) " is 130.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The length of the statement  "                else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter) " is 141.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The length of the statement  "            else if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft) " is 135.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The length of the statement  "            else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter) " is 141.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The length of the statement  "            else // if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight) " is 141.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The length of the statement  "            else if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.BottomRight) " is 141.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The length of the statement  "            else if (alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.MiddleRight) " is 141.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The length of the statement  "            else // if (alignment == ContentAlignment.TopLeft || alignment == ContentAlignment.TopCenter || alignment == ContentAlignment.TopRight) " is 135.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateScrollBars,The length of the statement  "            mImageListView.hScrollBar.Width = mImageListView.ClientRectangle.Width - (mImageListView.vScrollBar.Visible ? mImageListView.vScrollBar.Width : 0); " is 147.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateScrollBars,The length of the statement  "            mImageListView.vScrollBar.Height = mImageListView.ClientRectangle.Height - (mImageListView.hScrollBar.Visible ? mImageListView.hScrollBar.Height : 0); " is 150.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                            mFirstPartiallyVisible = group.FirstItemIndex + (int)System.Math.Floor((float)(ItemAreaBounds.Left - group.itemBounds.Left) / (float)mItemSizeWithMargin.Width) * group.itemRows; " is 177.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                            mFirstVisible = group.FirstItemIndex + (int)System.Math.Ceiling((float)(ItemAreaBounds.Left - group.itemBounds.Left) / (float)mItemSizeWithMargin.Width) * group.itemRows; " is 170.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                            mFirstPartiallyVisible = group.FirstItemIndex + (int)System.Math.Floor((float)(ItemAreaBounds.Top - group.itemBounds.Top) / (float)mItemSizeWithMargin.Height) * group.itemCols; " is 176.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                            mFirstVisible = group.FirstItemIndex + (int)System.Math.Ceiling((float)(ItemAreaBounds.Top - group.itemBounds.Top) / (float)mItemSizeWithMargin.Height) * group.itemCols; " is 169.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                        mLastPartiallyVisible = group.FirstItemIndex + (int)System.Math.Ceiling((float)((ItemAreaBounds.Left - group.itemBounds.Left) + mItemAreaBounds.Width) / (float)mItemSizeWithMargin.Width) * group.itemRows - 1; " is 208.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                        mLastVisible = group.FirstItemIndex + (int)System.Math.Floor((float)((ItemAreaBounds.Left - group.itemBounds.Left) + mItemAreaBounds.Width) / (float)mItemSizeWithMargin.Width) * group.itemRows - 1; " is 197.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                        mLastPartiallyVisible = group.FirstItemIndex + (int)System.Math.Ceiling((float)((ItemAreaBounds.Top - group.itemBounds.Top) + mItemAreaBounds.Height) / (float)mItemSizeWithMargin.Height) * group.itemCols - 1; " is 208.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                        mLastVisible = group.FirstItemIndex + (int)System.Math.Floor((float)((ItemAreaBounds.Top - group.itemBounds.Top) + mItemAreaBounds.Height) / (float)mItemSizeWithMargin.Height) * group.itemCols - 1; " is 197.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                    mFirstPartiallyVisible = (int)System.Math.Floor((float)mImageListView.ViewOffset.X / (float)mItemSizeWithMargin.Width) * mDisplayedRows; " is 136.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                    mLastPartiallyVisible = (int)System.Math.Ceiling((float)(mImageListView.ViewOffset.X + mItemAreaBounds.Width) / (float)mItemSizeWithMargin.Width) * mDisplayedRows - 1; " is 167.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                    mFirstVisible = (int)System.Math.Ceiling((float)mImageListView.ViewOffset.X / (float)mItemSizeWithMargin.Width) * mDisplayedRows; " is 129.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                    mLastVisible = (int)System.Math.Floor((float)(mImageListView.ViewOffset.X + mItemAreaBounds.Width) / (float)mItemSizeWithMargin.Width) * mDisplayedRows - 1; " is 156.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                    mFirstPartiallyVisible = (int)System.Math.Floor((float)mImageListView.ViewOffset.Y / (float)mItemSizeWithMargin.Height) * mDisplayedCols; " is 137.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                    mLastPartiallyVisible = (int)System.Math.Ceiling((float)(mImageListView.ViewOffset.Y + mItemAreaBounds.Height) / (float)mItemSizeWithMargin.Height) * mDisplayedCols - 1; " is 169.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                    mFirstVisible = (int)System.Math.Ceiling((float)mImageListView.ViewOffset.Y / (float)mItemSizeWithMargin.Height) * mDisplayedCols; " is 130.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "                    mLastVisible = (int)System.Math.Floor((float)(mImageListView.ViewOffset.Y + mItemAreaBounds.Height) / (float)mItemSizeWithMargin.Height) * mDisplayedCols - 1; " is 158.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateGroups,The length of the statement  "                    group.itemBounds = new Rectangle(x' y' group.itemCols * mItemSizeWithMargin.Width' group.itemRows * mItemSizeWithMargin.Height); " is 128.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateGroups,The length of the statement  "                    group.itemBounds = new Rectangle(x' y' group.itemCols * mItemSizeWithMargin.Width' group.itemRows * mItemSizeWithMargin.Height); " is 128.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,GetImageAsync,The length of the statement  "                    ImageListView.AutoRotateThumbnails' ImageListView.UseWIC == UseWIC.Auto || ImageListView.UseWIC == UseWIC.ThumbnailsOnly); " is 122.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderItems,The length of the statement  "                for (int i = ImageListView.layoutManager.FirstPartiallyVisible; i <= ImageListView.layoutManager.LastPartiallyVisible; i++) " is 123.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderScrollbarFiller,The length of the statement  "                Rectangle filler = new Rectangle(bounds.Right' bounds.Bottom' ImageListView.vScrollBar.Width' ImageListView.hScrollBar.Height); " is 127.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,GetGalleryImageAsync,The length of the statement  "                    ImageListView.AutoRotateThumbnails' ImageListView.UseWIC == UseWIC.Auto || ImageListView.UseWIC == UseWIC.ThumbnailsOnly); " is 122.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,MeasureItem,The length of the statement  "                    itemSize = new Size(colWidth' textHeight + 2 * textHeight / 6); // textHeight / 6 = vertical space between item border and text " is 127.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,MeasureItem,The length of the statement  "                    itemSize.Height += textHeight + System.Math.Max(4' textHeight / 3); // textHeight / 3 = vertical space between thumbnail and text " is 129.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawBorder,The length of the statement  "                    Border3DStyle style = (ImageListView.BorderStyle == BorderStyle.FixedSingle) ? Border3DStyle.Flat : Border3DStyle.SunkenInner; " is 126.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                    using (Brush bDisabled = new LinearGradientBrush(bounds' ImageListView.Colors.DisabledColor1' ImageListView.Colors.DisabledColor2' LinearGradientMode.Vertical)) " is 160.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                    (!ImageListView.Focused && ((state & ItemState.Selected) != ItemState.None) && ((state & ItemState.Hovered) != ItemState.None))) " is 128.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                    using (Brush bSelected = new LinearGradientBrush(bounds' ImageListView.Colors.SelectedColor1' ImageListView.Colors.SelectedColor2' LinearGradientMode.Vertical)) " is 160.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                    using (Brush bGray64 = new LinearGradientBrush(bounds' ImageListView.Colors.UnFocusedColor1' ImageListView.Colors.UnFocusedColor2' LinearGradientMode.Vertical)) " is 160.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                    using (Brush bHovered = new LinearGradientBrush(bounds' ImageListView.Colors.HoverColor1' ImageListView.Colors.HoverColor2' LinearGradientMode.Vertical)) " is 153.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                        Rectangle pos = Utility.GetSizedImageBounds(img' new Rectangle(bounds.Location + itemPadding' ImageListView.ThumbnailSize)); " is 124.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                    Rectangle rt = new Rectangle(bounds.Left + itemPadding.Width' bounds.Top + 2 * itemPadding.Height + ImageListView.ThumbnailSize.Height' ImageListView.ThumbnailSize.Width' szt.Height); " is 183.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                        TextFormatFlags.EndEllipsis | TextFormatFlags.HorizontalCenter | TextFormatFlags.VerticalCenter | TextFormatFlags.SingleLine); " is 126.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                        RectangleF rt = new RectangleF(bounds.Left + offset.Width' bounds.Top + offset.Height' firstWidth - 2 * offset.Width' bounds.Height - 2 * offset.Height); " is 153.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                        Utility.DrawRoundedRectangle(g' pWhite128' bounds.Left + 1' bounds.Top + 1' bounds.Width - 3' bounds.Height - 3' (ImageListView.View == View.Details ? 2 : 4)); " is 159.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                        Utility.DrawRoundedRectangle(g' pHighlight128' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' (ImageListView.View == View.Details ? 2 : 4)); " is 155.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                        Utility.DrawRoundedRectangle(g' pHighlight128' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' (ImageListView.View == View.Details ? 2 : 4)); " is 155.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                        Utility.DrawRoundedRectangle(g' pGray128' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' (ImageListView.View == View.Details ? 2 : 4)); " is 150.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                        Utility.DrawRoundedRectangle(g' pGray64' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' (ImageListView.View == View.Details ? 2 : 4)); " is 149.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The length of the statement  "                        Utility.DrawRoundedRectangle(g' pHighlight64' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' (ImageListView.View == View.Details ? 2 : 4)); " is 154.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawGroupHeader,The length of the statement  "                using (Pen pSpep = new Pen(new LinearGradientBrush(bounds' ImageListView.Colors.ColumnSeparatorColor' Color.Transparent' LinearGradientMode.Horizontal))) " is 153.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawGroupHeader,The length of the statement  "                            g.DrawString(name' (ImageListView.GroupHeaderFont == null ? ImageListView.Font : ImageListView.GroupHeaderFont)' bText' bounds' sf); " is 132.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnHeader,The length of the statement  "                    using (Brush bHovered = new LinearGradientBrush(bounds' ImageListView.Colors.ColumnHeaderHoverColor1' ImageListView.Colors.ColumnHeaderHoverColor2' LinearGradientMode.Vertical)) " is 177.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnHeader,The length of the statement  "                    using (Brush bNormal = new LinearGradientBrush(bounds' ImageListView.Colors.ColumnHeaderBackColor1' ImageListView.Colors.ColumnHeaderBackColor2' LinearGradientMode.Vertical)) " is 174.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnHeader,The length of the statement  "                using (Brush bBorder = new LinearGradientBrush(bounds' ImageListView.Colors.ColumnHeaderBackColor2' ImageListView.Colors.ColumnHeaderBackColor1' LinearGradientMode.Vertical)) " is 174.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnHeader,The length of the statement  "                            g.DrawString(column.Text' (ImageListView.ColumnHeaderFont == null ? ImageListView.Font : ImageListView.ColumnHeaderFont)' bText' bounds' sf); " is 141.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The length of the statement  "                    Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.Location + itemMargin' bounds.Size - itemMargin - itemMargin)' 50.0f' 0.0f); " is 148.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The length of the statement  "                    if (ImageListView.Columns.HasType(ColumnType.Name) && ImageListView.Columns[ColumnType.Name].Visible && bounds.Height > 0) " is 122.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The length of the statement  "                    if (ImageListView.Columns.HasType(ColumnType.FileType) && ImageListView.Columns[ColumnType.FileType].Visible && bounds.Height > 0 && !string.IsNullOrEmpty(fileType)) " is 165.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawGalleryImage,The length of the statement  "                //    Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.Location + itemMargin' bounds.Size - itemMargin - itemMargin)); " is 141.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnExtender,The length of the statement  "                using (Brush bBack = new LinearGradientBrush(bounds' ImageListView.Colors.ColumnHeaderBackColor1' ImageListView.Colors.ColumnHeaderBackColor2' LinearGradientMode.Vertical)) " is 172.
Long Statement,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnExtender,The length of the statement  "                using (Brush bBorder = new LinearGradientBrush(bounds' ImageListView.Colors.ColumnHeaderBackColor2' ImageListView.Colors.ColumnHeaderBackColor1' LinearGradientMode.Vertical)) " is 174.
Long Statement,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The length of the statement  "                else if (MouseSelecting && mImageListView.ScrollOrientation == ScrollOrientation.HorizontalScroll && !scrollTimer.Enabled) " is 122.
Long Statement,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The length of the statement  "                    SelectionRectangle = new Rectangle(Math.Min(pt1.X' pt2.X)' Math.Min(pt1.Y' pt2.Y)' Math.Abs(pt1.X - pt2.X)' Math.Abs(pt1.Y - pt2.Y)); " is 133.
Long Statement,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The length of the statement  "                            List<int> indices = group.ItemIndicesInRectangle(SelectionRectangle' mImageListView.ScrollOrientation' mImageListView.layoutManager.ItemSizeWithMargin); " is 152.
Long Statement,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,ApplyNavKey,The length of the statement  "                    else if (key == Keys.PageDown && index < mImageListView.Items.Count - mImageListView.layoutManager.Cols * (mImageListView.layoutManager.Rows - 1)) " is 146.
Complex Conditional,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,IsInputKey,The conditional expression  "(keyData & Keys.Left) == Keys.Left || (keyData & Keys.Right) == Keys.Right || (keyData & Keys.Up) == Keys.Up || (keyData & Keys.Down) == Keys.Down"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewGroup,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroup.cs,ItemIndicesInRectangle,The conditional expression  "rec.Top <= itemBounds.Bottom && rec.Bottom >= itemBounds.Top &&                      rec.Left <= itemBounds.Right && rec.Right >= itemBounds.Left"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The conditional expression  "existing != null && existing.Size == request.Size && existing.UseEmbeddedThumbnails == request.UseEmbeddedThumbnails && existing.AutoRotate == request.AutoRotate && existing.UseWIC == request.UseWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The conditional expression  "canProcess && (CacheMode == CacheMode.OnDemand) && mImageListView != null && !mImageListView.IsItemVisible(request.Guid)"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The conditional expression  "existing != null && existing.Guid == request.Guid && existing.Size == request.Size && existing.UseEmbeddedThumbnails == request.UseEmbeddedThumbnails && existing.AutoRotate == request.AutoRotate && existing.UseWIC == request.UseWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The conditional expression  "existing != null && existing.Guid == request.Guid && existing.Size == request.Size && existing.UseEmbeddedThumbnails == request.UseEmbeddedThumbnails && existing.AutoRotate == request.AutoRotate && existing.UseWIC == request.UseWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToGalleryCache,The conditional expression  "galleryItem != null && galleryItem.Guid == guid && galleryItem.Image != null && galleryItem.Size == thumbSize && galleryItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && galleryItem.AutoRotate == autoRotate && galleryItem.UseWIC == useWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToRendererCache,The conditional expression  "rendererItem != null && rendererItem.Guid == guid && rendererItem.Image != null && rendererItem.Size == thumbSize && rendererItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && rendererItem.AutoRotate == autoRotate && rendererItem.UseWIC == useWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetRendererImage,The conditional expression  "rendererItem != null && rendererItem.Guid == guid && rendererItem.Image != null && rendererItem.Size == thumbSize && rendererItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && rendererItem.AutoRotate == autoRotate && rendererItem.UseWIC == useWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetGalleryImage,The conditional expression  "galleryItem != null && galleryItem.Guid == guid && galleryItem.Image != null && galleryItem.Size == thumbSize && galleryItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && galleryItem.AutoRotate == autoRotate && galleryItem.UseWIC == useWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetImage,The conditional expression  "thumbCache.TryGetValue(guid' out item) && item != null && item.Image != null && item.Size == thumbSize && item.UseEmbeddedThumbnails == useEmbeddedThumbnails && item.AutoRotate == autoRotate && item.UseWIC == useWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetCacheState,The conditional expression  "thumbCache.TryGetValue(guid' out item) && item != null && item.Size == thumbSize && item.UseEmbeddedThumbnails == useEmbeddedThumbnails && item.AutoRotate == autoRotate && item.UseWIC == useWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The conditional expression  "ImageListView.SortColumn >= 0 && ImageListView.SortColumn < ImageListView.Columns.Count &&                              ImageListView.Columns[ImageListView.SortColumn].Guid == column.Guid &&                              ImageListView.SortOrder != SortOrder.None &&                              (state & ItemState.Hovered) == ItemState.None && (state & ItemState.Selected) == ItemState.None"  is complex.
Complex Conditional,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The conditional expression  "ImageListView.Columns.HasType(ColumnType.FileType) && ImageListView.Columns[ColumnType.FileType].Visible && bounds.Height > 0 && !string.IsNullOrEmpty(fileType)"  is complex.
Complex Conditional,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The conditional expression  "column.Visible &&                              column.Type != ColumnType.Custom &&                              column.Type != ColumnType.FileType &&                              column.Type != ColumnType.DateAccessed &&                              column.Type != ColumnType.FileName &&                              column.Type != ColumnType.FilePath &&                              column.Type != ColumnType.Name"  is complex.
Complex Conditional,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The conditional expression  "(ImageListView.Focused && ((state & ItemState.Selected) != ItemState.None)) ||                          (!ImageListView.Focused && ((state & ItemState.Selected) != ItemState.None) && ((state & ItemState.Hovered) != ItemState.None))"  is complex.
Complex Conditional,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The conditional expression  "ImageListView.Columns.HasType(ColumnType.FileType) && ImageListView.Columns[ColumnType.FileType].Visible && bounds.Height > 0 && !string.IsNullOrEmpty(fileType)"  is complex.
Complex Conditional,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The conditional expression  "column.Visible &&                              column.Type != ColumnType.Custom &&                              column.Type != ColumnType.FileType &&                              column.Type != ColumnType.DateAccessed &&                              column.Type != ColumnType.FileName &&                              column.Type != ColumnType.FilePath &&                              column.Type != ColumnType.Name"  is complex.
Complex Conditional,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The conditional expression  "(ImageListView.Focused && ((state & ItemState.Selected) != ItemState.None)) ||                              (!ImageListView.Focused && ((state & ItemState.Selected) != ItemState.None) && ((state & ItemState.Hovered) != ItemState.None))"  is complex.
Complex Conditional,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The conditional expression  "ImageListView.SortOrder != SortOrder.None &&                                  ImageListView.SortColumn >= 0 && ImageListView.SortColumn < ImageListView.Columns.Count &&                                  ImageListView.Columns[ImageListView.SortColumn].Guid == column.Guid"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The conditional expression  "img == null && mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 16 && mImageListView.ThumbnailSize.Height > 16"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewItemCollection,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItemCollection.cs,Sort,The conditional expression  "(mImageListView.GroupOrder == SortOrder.None || mImageListView.GroupColumn < 0 || mImageListView.GroupColumn >= mImageListView.Columns.Count) &&                     (mImageListView.SortOrder == SortOrder.None || mImageListView.SortColumn < 0 || mImageListView.SortColumn >= mImageListView.Columns.Count)"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The conditional expression  "mImageListView.View != View.Details && mImageListView.CheckBoxAlignment == mImageListView.IconAlignment &&                  mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The conditional expression  "(mImageListView.View == View.Gallery && group.itemBounds.Left > ItemAreaBounds.Right) ||                          (mImageListView.View != View.Gallery && group.itemBounds.Top > ItemAreaBounds.Bottom)"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The conditional expression  "(mImageListView.View == View.Gallery && group.itemBounds.Right < ItemAreaBounds.Left) ||                          (mImageListView.View != View.Gallery && group.itemBounds.Bottom < ItemAreaBounds.Top)"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The conditional expression  "mFirstPartiallyVisible >= 0 &&                  mLastPartiallyVisible >= 0 &&                  mFirstPartiallyVisible <= mImageListView.Items.Count - 1 &&                  mLastPartiallyVisible <= mImageListView.Items.Count - 1"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The conditional expression  "(ImageListView.Focused && ((state & ItemState.Selected) != ItemState.None)) ||                      (!ImageListView.Focused && ((state & ItemState.Selected) != ItemState.None) && ((state & ItemState.Hovered) != ItemState.None))"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The conditional expression  "ImageListView.SortOrder != SortOrder.None &&                              ImageListView.SortColumn >= 0 && ImageListView.SortColumn < ImageListView.Columns.Count &&                              (state & ItemState.Hovered) == ItemState.None && (state & ItemState.Selected) == ItemState.None &&                              ImageListView.Columns[ImageListView.SortColumn].Guid == column.Guid"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The conditional expression  "ImageListView.Columns.HasType(ColumnType.FileType) && ImageListView.Columns[ColumnType.FileType].Visible && bounds.Height > 0 && !string.IsNullOrEmpty(fileType)"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The conditional expression  "column.Visible &&                              column.Type != ColumnType.Custom &&                              column.Type != ColumnType.FileType &&                              column.Type != ColumnType.DateAccessed &&                              column.Type != ColumnType.FileName &&                              column.Type != ColumnType.FilePath &&                              column.Type != ColumnType.Name"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewSelectedItemEnumerator,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewSelectedItemCollection.cs,MoveNext,The conditional expression  "current == -1 ||                          owner[current].Guid == lastItem ||                          owner[current].Selected == false ||                          owner[current].Enabled == false"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The conditional expression  "i >= 0 && i <= mImageListView.Items.Count - 1 &&                                      !highlightedItems.ContainsKey(mImageListView.Items[i]) &&                                      mImageListView.Items[i].Enabled"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The conditional expression  "i >= 0 && i <= mImageListView.Items.Count - 1 &&                                      !highlightedItems.ContainsKey(mImageListView.Items[i]) &&                                      mImageListView.Items[i].Enabled"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The conditional expression  "mImageListView.ScrollOrientation == ScrollOrientation.VerticalScroll &&                              (startCol >= 0 || endCol >= 0) && (startRow >= 0 || endRow >= 0) &&                              (startCol <= mImageListView.layoutManager.Cols - 1 || endCol <= mImageListView.layoutManager.Cols - 1)"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The conditional expression  "i >= 0 && i <= mImageListView.Items.Count - 1 &&                                          !highlightedItems.ContainsKey(mImageListView.Items[i]) &&                                          mImageListView.Items[i].Enabled"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The conditional expression  "!MouseSelecting && !DraggingSeperator && !ResizingPane &&                      inItemArea && lastMouseDownInItemArea &&                      (LeftButton || RightButton) &&                      ((Math.Abs(e.Location.X - lastMouseDownLocation.X) > SelectionTolerance ||                      Math.Abs(e.Location.Y - lastMouseDownLocation.Y) > SelectionTolerance))"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The conditional expression  "!MouseSelecting && !DraggingSeperator && !ResizingPane &&                      inHeaderArea && lastMouseDownInColumnHeaderArea && lastMouseDownOverSeparator && LeftButton &&                      mImageListView.AllowColumnResize && HoveredSeparator != null"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The conditional expression  "!MouseSelecting && !DraggingSeperator && !ResizingPane &&                      inPaneArea && lastMouseDownInPaneArea && lastMouseDownOverPaneBorder && LeftButton &&                      mImageListView.AllowPaneResize && HoveredPaneBorder != false"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The conditional expression  "!ReferenceEquals(HoveredItem' oldHoveredItem) ||                      (HoveredSubItem != oldHoveredSubItem) ||                      !ReferenceEquals(HoveredColumn' oldHoveredColumn) ||                      !ReferenceEquals(HoveredSeparator' oldHoveredSeparator)"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The conditional expression  "(mImageListView.AllowColumnResize && HoveredSeparator != null) ||                          (mImageListView.AllowPaneResize && HoveredPaneBorder != false)"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The conditional expression  "!((inHeaderArea && (DraggingSeperator || HoveredSeparator != null)) ||                          (inPaneArea && (ResizingPane || HoveredPaneBorder != false)))"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseUp,The conditional expression  "mImageListView.AllowCheckBoxClick && lastMouseDownInItemArea &&                      lastMouseDownOverCheckBox && HoveredItem != null && overCheckBox && LeftButton"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseUp,The conditional expression  "lastMouseDownInItemArea && lastMouseDownOverItem && HoveredItem != null && LeftButton"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseUp,The conditional expression  "lastMouseDownInItemArea && lastMouseDownOverItem && HoveredItem != null && RightButton"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseUp,The conditional expression  "lastMouseDownInItemArea && inItemArea && HoveredItem == null && (LeftButton || RightButton)"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseUp,The conditional expression  "lastMouseDownInColumnHeaderArea && lastMouseDownOverColumn &&                      mImageListView.AllowColumnClick && HoveredColumn != null && HoveredSeparator == null"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseDoubleClick,The conditional expression  "lastMouseDownInColumnHeaderArea && lastMouseDownOverSeparator &&                      mImageListView.AllowColumnClick && HoveredSeparator != null"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseLeave,The conditional expression  "HoveredItem != null || HoveredColumn != null || HoveredSeparator != null || HoveredPaneBorder != false"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,KeyDown,The conditional expression  "(ShiftKey || ControlKey) && mImageListView.Items.Count != 0 &&                      mImageListView.Items.FocusedItem == null"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,DragOver,The conditional expression  "e.Data.GetDataPresent(DataFormats.FileDrop) &&                      (mImageListView.AllowDrop || (mImageListView.AllowDrag && selfDragging))"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,DragOver,The conditional expression  "selfDragging && (dragDropTarget.Selected ||                              (!dragCaretOnRight && index > 0 && mImageListView.Items[index - 1].Selected) ||                              (dragCaretOnRight && index < mImageListView.Items.Count - 1 && mImageListView.Items[index + 1].Selected))"  is complex.
Complex Conditional,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The conditional expression  "bmp.Decoder == null ||                          (bmp.Decoder.Preview == null && bmp.Decoder.Frames == null) ||                          useEmbeddedThumbnails == UseEmbeddedThumbnails.Always"  is complex.
Complex Conditional,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The conditional expression  "header[0] == 0x89 && header[1] == 0x50 && header[2] == 0x4E && header[3] == 0x47 &&                  header[4] == 0x0D && header[5] == 0x0A && header[6] == 0x1A && header[7] == 0x0A"  is complex.
Complex Conditional,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The conditional expression  "header[0] == 0xD7 && header[1] == 0xCD && header[2] == 0xC6 && header[3] == 0x9A"  is complex.
Complex Conditional,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The conditional expression  "header[0] == 0x01 && header[1] == 0x00 && header[2] == 0x00 && header[3] == 0x00"  is complex.
Complex Conditional,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The conditional expression  "header[0] == 0x00 && header[1] == 0x00 && header[2] == 0x01 && header[3] == 0x00"  is complex.
Complex Conditional,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The conditional expression  "header[0] == 0x00 && header[1] == 0x00 && header[2] == 0x02 && header[3] == 0x00"  is complex.
Empty Catch Block,ImageGlass.ImageListView,QueuedBackgroundWorker,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorker.cs,OnRunWorkerCompleted,The method has an empty catch block.
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: buffer = new byte[8];
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: read = stream.Read(buffer' 0' 8);
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: read != 8
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: writeOffset += 24 + length;
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: buffer = new byte[8];
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: read = stream.Read(buffer' 0' 8);
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: read != 8
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: buffer = new byte[4096];
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: read = stream.Read(buffer' 0' 4096);
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Write,The following statement contains a magic number: stream.Write(BitConverter.GetBytes(data.Length)' 0' 8);
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Write,The following statement contains a magic number: buffer = new byte[4096];
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Write,The following statement contains a magic number: int read = data.Read(buffer' 0' 4096);
Magic Number,ImageGlass.ImageListView,DiskCache,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Write,The following statement contains a magic number: writeOffset += 24 + totalRead;
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ResetHeaderFont,The following statement contains a magic number: ColumnHeaderFont = new Font("Microsoft Sans Serif"' 8.25f);
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mCacheLimitAsMemory = 20 * 1024 * 1024;
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mCacheLimitAsMemory = 20 * 1024 * 1024;
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mCacheLimitAsMemory = 20 * 1024 * 1024;
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: GroupHeaderFont = new Font("Microsoft Sans Serif"' 8.25f' FontStyle.Bold);
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: ColumnHeaderFont = new Font("Microsoft Sans Serif"' 8.25f);
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mPaneWidth = 240;
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: Size = new Size(120' 100);
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: Size = new Size(120' 100);
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mCheckBoxPadding = new Size(2' 2);
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mCheckBoxPadding = new Size(2' 2);
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mIconPadding = new Size(2' 2);
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mIconPadding = new Size(2' 2);
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mThumbnailSize = new Size(96' 96);
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mThumbnailSize = new Size(96' 96);
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: pt.X >= x && pt.X < x + col.Width + SeparatorSize / 2
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2
Magic Number,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: diskCache = new DiskCache(string.Empty' 100 * 1024 * 1024' DiskCache.SyncBehavior.SyncNone' 32);
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: diskCache = new DiskCache(string.Empty' 100 * 1024 * 1024' DiskCache.SyncBehavior.SyncNone' 32);
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: diskCache = new DiskCache(string.Empty' 100 * 1024 * 1024' DiskCache.SyncBehavior.SyncNone' 32);
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: diskCache = new DiskCache(string.Empty' 100 * 1024 * 1024' DiskCache.SyncBehavior.SyncNone' 32);
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: CacheLimitAsMemory = 20 * 1024 * 1024;
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: CacheLimitAsMemory = 20 * 1024 * 1024;
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: CacheLimitAsMemory = 20 * 1024 * 1024;
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,IsPurgeNeeded,The following statement contains a magic number: return ((CacheLimitAsMemory != 0 && MemoryUsedByRemoved > CacheLimitAsMemory / 4) || (CacheLimitAsItemCount != 0 && removedItems.Count > CacheLimitAsItemCount / 4));
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,IsPurgeNeeded,The following statement contains a magic number: return ((CacheLimitAsMemory != 0 && MemoryUsedByRemoved > CacheLimitAsMemory / 4) || (CacheLimitAsItemCount != 0 && removedItems.Count > CacheLimitAsItemCount / 4));
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetImageMemorySize,The following statement contains a magic number: return width * height * 24 / 8;
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetImageMemorySize,The following statement contains a magic number: return width * height * 24 / 8;
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToGalleryCache,The following statement contains a magic number: RunWorker(new CacheRequest(guid' adaptor' key' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC' RequestType.Gallery)' 2);
Magic Number,ImageGlass.ImageListView,QueuedBackgroundWorker,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorker.cs,QueuedBackgroundWorker,The following statement contains a magic number: threadCount = 5;
Magic Number,ImageGlass.ImageListView,QueuedBackgroundWorker,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorker.cs,QueuedBackgroundWorker,The following statement contains a magic number: priorityQueues = 5;
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,ExifURational,The following statement contains a magic number: return BitConverter.ToUInt32(value' 0).ToString() + "/" +                      BitConverter.ToUInt32(value' 4).ToString();
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,ExifRational,The following statement contains a magic number: return BitConverter.ToInt32(value' 0).ToString() + "/" +                      BitConverter.ToInt32(value' 4).ToString();
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,ExifDouble,The following statement contains a magic number: uint den = BitConverter.ToUInt32(value' 4);
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
Magic Number,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,ConvertFileTime,The following statement contains a magic number: long longTime = (((long)ft.dwHighDateTime) << 32) | ((uint)ft.dwLowDateTime);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mBorderColor = Color.FromArgb(64' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mUnFocusedColor1 = Color.FromArgb(16' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mUnFocusedColor2 = Color.FromArgb(64' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mUnFocusedBorderColor = Color.FromArgb(128' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mHoverColor1 = Color.FromArgb(8' SystemColors.Highlight);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mHoverColor2 = Color.FromArgb(64' SystemColors.Highlight);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mHoverBorderColor = Color.FromArgb(64' SystemColors.Highlight);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mSelectedColor1 = Color.FromArgb(16' SystemColors.Highlight);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mSelectedColor2 = Color.FromArgb(128' SystemColors.Highlight);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mSelectedBorderColor = Color.FromArgb(128' SystemColors.Highlight);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mDisabledColor2 = Color.FromArgb(32' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mDisabledBorderColor = Color.FromArgb(32' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mDisabledForeColor = Color.FromArgb(128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mDisabledForeColor = Color.FromArgb(128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mDisabledForeColor = Color.FromArgb(128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mImageInnerBorderColor = Color.FromArgb(128' Color.White);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mImageOuterBorderColor = Color.FromArgb(128' Color.Gray);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mColumnHeaderBackColor1 = Color.FromArgb(32' SystemColors.Control);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mColumnHeaderBackColor2 = Color.FromArgb(196' SystemColors.Control);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mColumnHeaderHoverColor1 = Color.FromArgb(16' SystemColors.Highlight);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mColumnHeaderHoverColor2 = Color.FromArgb(64' SystemColors.Highlight);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mColumnSelectColor = Color.FromArgb(16' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mColumnSeparatorColor = Color.FromArgb(32' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mPaneBackColor = Color.FromArgb(16' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mPaneSeparatorColor = Color.FromArgb(128' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mPaneLabelColor = Color.FromArgb(196' Color.Black);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mSelectionRectangleColor1 = Color.FromArgb(128' SystemColors.Highlight);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mSelectionRectangleColor2 = Color.FromArgb(128' SystemColors.Highlight);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledBackColor = Color.FromArgb(220' 220' 220);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledBackColor = Color.FromArgb(220' 220' 220);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledBackColor = Color.FromArgb(220' 220' 220);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ForeColor = Color.FromArgb(60' 60' 60);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ForeColor = Color.FromArgb(60' 60' 60);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ForeColor = Color.FromArgb(60' 60' 60);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.BorderColor = Color.FromArgb(187' 190' 183);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.BorderColor = Color.FromArgb(187' 190' 183);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.BorderColor = Color.FromArgb(187' 190' 183);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedColor1 = Color.FromArgb(235' 235' 235);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedColor1 = Color.FromArgb(235' 235' 235);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedColor1 = Color.FromArgb(235' 235' 235);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedColor2 = Color.FromArgb(217' 217' 217);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedColor2 = Color.FromArgb(217' 217' 217);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedColor2 = Color.FromArgb(217' 217' 217);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedBorderColor = Color.FromArgb(168' 169' 161);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedBorderColor = Color.FromArgb(168' 169' 161);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedBorderColor = Color.FromArgb(168' 169' 161);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedForeColor = Color.FromArgb(40' 40' 40);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedForeColor = Color.FromArgb(40' 40' 40);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedForeColor = Color.FromArgb(40' 40' 40);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedColor1 = Color.FromArgb(244' 125' 77);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedColor1 = Color.FromArgb(244' 125' 77);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedColor1 = Color.FromArgb(244' 125' 77);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb(235' 110' 60);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb(235' 110' 60);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb(235' 110' 60);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedBorderColor = Color.FromArgb(240' 119' 70);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedBorderColor = Color.FromArgb(240' 119' 70);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedBorderColor = Color.FromArgb(240' 119' 70);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledColor1 = Color.FromArgb(217' 217' 217);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledColor1 = Color.FromArgb(217' 217' 217);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledColor1 = Color.FromArgb(217' 217' 217);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledColor2 = Color.FromArgb(197' 197' 197);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledColor2 = Color.FromArgb(197' 197' 197);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledColor2 = Color.FromArgb(197' 197' 197);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledBorderColor = Color.FromArgb(128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledBorderColor = Color.FromArgb(128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledBorderColor = Color.FromArgb(128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledForeColor = Color.FromArgb(128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledForeColor = Color.FromArgb(128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledForeColor = Color.FromArgb(128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.InsertionCaretColor = Color.FromArgb(240' 119' 70);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.InsertionCaretColor = Color.FromArgb(240' 119' 70);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.InsertionCaretColor = Color.FromArgb(240' 119' 70);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.CellForeColor = Color.FromArgb(60' 60' 60);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.CellForeColor = Color.FromArgb(60' 60' 60);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.CellForeColor = Color.FromArgb(60' 60' 60);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb(247' 247' 247);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb(247' 247' 247);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb(247' 247' 247);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb(235' 235' 235);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb(235' 235' 235);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb(235' 235' 235);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb(245' 245' 245);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb(245' 245' 245);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb(245' 245' 245);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderForeColor = Color.FromArgb(60' 60' 60);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderForeColor = Color.FromArgb(60' 60' 60);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderForeColor = Color.FromArgb(60' 60' 60);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb(34' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb(34' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb(34' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb(34' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSeparatorColor = Color.FromArgb(106' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSeparatorColor = Color.FromArgb(106' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSeparatorColor = Color.FromArgb(106' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSeparatorColor = Color.FromArgb(106' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.mAlternateBackColor = Color.FromArgb(234' 234' 234);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.mAlternateBackColor = Color.FromArgb(234' 234' 234);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.mAlternateBackColor = Color.FromArgb(234' 234' 234);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.mAlternateCellForeColor = Color.FromArgb(40' 40' 40);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.mAlternateCellForeColor = Color.FromArgb(40' 40' 40);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.mAlternateCellForeColor = Color.FromArgb(40' 40' 40);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.PaneSeparatorColor = Color.FromArgb(216' 216' 216);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.PaneSeparatorColor = Color.FromArgb(216' 216' 216);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.PaneSeparatorColor = Color.FromArgb(216' 216' 216);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.PaneLabelColor = Color.FromArgb(156' 156' 156);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.PaneLabelColor = Color.FromArgb(156' 156' 156);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.PaneLabelColor = Color.FromArgb(156' 156' 156);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb(64' 240' 116' 68);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb(64' 240' 116' 68);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb(64' 240' 116' 68);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb(64' 240' 116' 68);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb(64' 240' 116' 68);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb(64' 240' 116' 68);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb(64' 240' 116' 68);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb(64' 240' 116' 68);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb(240' 119' 70);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb(240' 119' 70);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb(240' 119' 70);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.UnFocusedColor1 = Color.FromArgb(16' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.UnFocusedColor2 = Color.FromArgb(64' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.UnFocusedBorderColor = Color.FromArgb(128' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.HoverColor1 = Color.FromArgb(64' Color.White);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.HoverColor2 = Color.FromArgb(16' Color.White);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.HoverBorderColor = Color.FromArgb(64' SystemColors.Highlight);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor1 = Color.FromArgb(64' 96' 160);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor1 = Color.FromArgb(64' 96' 160);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor1 = Color.FromArgb(64' 96' 160);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb(64' 64' 96' 160);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb(64' 64' 96' 160);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb(64' 64' 96' 160);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb(64' 64' 96' 160);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedBorderColor = Color.FromArgb(128' SystemColors.Highlight);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.DisabledColor2 = Color.FromArgb(32' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.DisabledBorderColor = Color.FromArgb(96' SystemColors.GrayText);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.InsertionCaretColor = Color.FromArgb(96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.InsertionCaretColor = Color.FromArgb(96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.InsertionCaretColor = Color.FromArgb(96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ImageInnerBorderColor = Color.FromArgb(128' Color.White);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ImageOuterBorderColor = Color.FromArgb(128' Color.Gray);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb(32' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb(32' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb(32' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb(32' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb(196' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb(196' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb(196' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb(196' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor1 = Color.FromArgb(64' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor1 = Color.FromArgb(64' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor1 = Color.FromArgb(64' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor1 = Color.FromArgb(64' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb(196' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb(196' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb(196' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb(196' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb(96' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb(96' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb(96' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb(96' 128' 128' 128);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb(160' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb(160' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb(160' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb(160' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb(32' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb(32' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb(32' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb(32' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb(64' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb(64' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb(64' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,ImageListViewColor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb(64' 96' 144' 240);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: Rectangle r = new Rectangle(ItemAreaBounds.Right - 120' ItemAreaBounds.Top + 5' 115' (int)sz.Height);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: Rectangle r = new Rectangle(ItemAreaBounds.Right - 120' ItemAreaBounds.Top + 5' 115' (int)sz.Height);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: Rectangle r = new Rectangle(ItemAreaBounds.Right - 120' ItemAreaBounds.Top + 5' 115' (int)sz.Height);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r = new Rectangle(ItemAreaBounds.Right - 120' ItemAreaBounds.Top + 5 + (int)sz.Height + 10' 115' 125);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r = new Rectangle(ItemAreaBounds.Right - 120' ItemAreaBounds.Top + 5 + (int)sz.Height + 10' 115' 125);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r = new Rectangle(ItemAreaBounds.Right - 120' ItemAreaBounds.Top + 5 + (int)sz.Height + 10' 115' 125);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r = new Rectangle(ItemAreaBounds.Right - 120' ItemAreaBounds.Top + 5 + (int)sz.Height + 10' 115' 125);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r = new Rectangle(ItemAreaBounds.Right - 120' ItemAreaBounds.Top + 5 + (int)sz.Height + 10' 115' 125);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r = new Rectangle(r.Left + 5' r.Top + 5' 15' 15);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r = new Rectangle(r.Left + 5' r.Top + 5' 15' 15);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r = new Rectangle(r.Left + 5' r.Top + 5' 15' 15);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r = new Rectangle(r.Left + 5' r.Top + 5' 15' 15);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r.Offset(15' 0);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r.Offset(15' 0);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r.Offset(-30' 22);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r.Offset(-30' 22);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r.Offset(0' 12);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r.Offset(0' 20);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r.Offset(0' 12);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r.Offset(0' 12);
Magic Number,ImageGlass.ImageListView,DebugRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawOverlay,The following statement contains a magic number: r.Offset(0' 12);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,NewYear2010Renderer,The following statement contains a magic number: flake = CreateFlake(10' 3);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,NewYear2010Renderer,The following statement contains a magic number: flake = CreateFlake(10' 3);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: float h = (float)Math.Sin(Math.PI / 3.0) * (float)size;
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: PointF v1 = new PointF(-1.0f * (float)size / 2.0f' -h / 3.0f);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: PointF v1 = new PointF(-1.0f * (float)size / 2.0f' -h / 3.0f);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: PointF v2 = new PointF((float)size / 2f' -h / 3.0f);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: PointF v2 = new PointF((float)size / 2f' -h / 3.0f);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: PointF v3 = new PointF(0.0f' h * 2.0f / 3.0f);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: PointF v3 = new PointF(0.0f' h * 2.0f / 3.0f);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: int todivide = segments.Count / 2;
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: PointF pi1 = new PointF((p2.X - p1.X) / 3.0f + p1.X'                              (p2.Y - p1.Y) / 3.0f + p1.Y);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: PointF pi1 = new PointF((p2.X - p1.X) / 3.0f + p1.X'                              (p2.Y - p1.Y) / 3.0f + p1.Y);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: PointF pi2 = new PointF((p2.X - p1.X) * 2.0f / 3.0f + p1.X'                              (p2.Y - p1.Y) * 2.0f / 3.0f + p1.Y);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: PointF pi2 = new PointF((p2.X - p1.X) * 2.0f / 3.0f + p1.X'                              (p2.Y - p1.Y) * 2.0f / 3.0f + p1.Y);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: PointF pi2 = new PointF((p2.X - p1.X) * 2.0f / 3.0f + p1.X'                              (p2.Y - p1.Y) * 2.0f / 3.0f + p1.Y);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: PointF pi2 = new PointF((p2.X - p1.X) * 2.0f / 3.0f + p1.X'                              (p2.Y - p1.Y) * 2.0f / 3.0f + p1.Y);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateFlake,The following statement contains a magic number: double angle = Math.Atan2(p2.Y - p1.Y' p2.X - p1.X) - Math.PI / 3.0;
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateTerrain,The following statement contains a magic number: int width = 100;
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateTerrain,The following statement contains a magic number: int height = 10;
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateTerrain,The following statement contains a magic number: int count = 20;
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateTerrain,The following statement contains a magic number: int x = i * (width + 2 * step) / count - step;
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateTerrain,The following statement contains a magic number: int y = rnd.Next(-height / 2' height / 2);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateTerrain,The following statement contains a magic number: int y = rnd.Next(-height / 2' height / 2);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateTerrain,The following statement contains a magic number: path.AddLine(width + step' 0' width + step' 200);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateTerrain,The following statement contains a magic number: path.AddLine(width + step' 200' -step' 200);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,CreateTerrain,The following statement contains a magic number: path.AddLine(width + step' 200' -step' 200);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,UpdateTimerCallback,The following statement contains a magic number: snowFlake.Rotation = 360.0 * random.NextDouble();
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,UpdateTimerCallback,The following statement contains a magic number: snowFlake.Location = new Point(random.Next(displayBounds.Left' displayBounds.Right)' -20);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawSnowFlake,The following statement contains a magic number: g.TranslateTransform(-snowFlake.Size / 2' -snowFlake.Size / 2' MatrixOrder.Append);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawSnowFlake,The following statement contains a magic number: g.TranslateTransform(-snowFlake.Size / 2' -snowFlake.Size / 2' MatrixOrder.Append);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawSnowFlake,The following statement contains a magic number: g.ScaleTransform((float)snowFlake.Size / 6.0f' (float)snowFlake.Size / 6.0f);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawSnowFlake,The following statement contains a magic number: g.ScaleTransform((float)snowFlake.Size / 6.0f' (float)snowFlake.Size / 6.0f);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawTerrain,The following statement contains a magic number: g.ScaleTransform((float)rec.Width / 100.0f' 3.0f' MatrixOrder.Append);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawTerrain,The following statement contains a magic number: g.ScaleTransform((float)rec.Width / 100.0f' 3.0f' MatrixOrder.Append);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawTerrain,The following statement contains a magic number: g.TranslateTransform(0' rec.Height - 30' MatrixOrder.Append);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawTerrainOutline,The following statement contains a magic number: g.ScaleTransform((float)rec.Width / 100.0f' 3.0f' MatrixOrder.Append);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawTerrainOutline,The following statement contains a magic number: g.ScaleTransform((float)rec.Width / 100.0f' 3.0f' MatrixOrder.Append);
Magic Number,ImageGlass.ImageListView,NewYear2010Renderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawTerrainOutline,The following statement contains a magic number: g.TranslateTransform(0' rec.Height - 20' MatrixOrder.Append);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,NoirRenderer,The following statement contains a magic number: padding = 4;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Size offset = new Size(2' (bounds.Height - ImageListView.Font.Height) / 2);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Size offset = new Size(2' (bounds.Height - ImageListView.Font.Height) / 2);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: RectangleF rt = new RectangleF(bounds.Left + offset.Width' bounds.Top + offset.Height' uicolumns[0].Width - 2 * offset.Width' bounds.Height - 2 * offset.Height);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: RectangleF rt = new RectangleF(bounds.Left + offset.Width' bounds.Top + offset.Height' uicolumns[0].Width - 2 * offset.Width' bounds.Height - 2 * offset.Height);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt.Width = column.Width - 2 * offset.Width;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: foreColor = Color.FromArgb(128' 128' 128);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: foreColor = Color.FromArgb(128' 128' 128);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: foreColor = Color.FromArgb(128' 128' 128);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: int y = (int)(rt.Top + (rt.Height - ImageListView.RatingImage.Height) / 2.0f);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rating = 5;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rating > 5
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: i <= 5
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawLine(pen' bounds.Left + 1' bounds.Top + 1' bounds.Left + 1' bounds.Bottom - 2);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawLine(pen' bounds.Right - 1' bounds.Top + 1' bounds.Right - 1' bounds.Bottom - 2);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: int textOffset = 4;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawImageUnscaled(img' bounds.X + 4' bounds.Top + (bounds.Height - img.Height) / 2);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawImageUnscaled(img' bounds.X + 4' bounds.Top + (bounds.Height - img.Height) / 2);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: bounds.Width > 4
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnExtender,The following statement contains a magic number: g.DrawLine(pen' bounds.Left + 1' bounds.Top + 1' bounds.Left + 1' bounds.Bottom - 2);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnExtender,The following statement contains a magic number: g.DrawLine(pen' bounds.Right - 1' bounds.Top + 1' bounds.Right - 1' bounds.Bottom - 2);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGalleryImage,The following statement contains a magic number: Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.X + itemMargin.Width' bounds.Y + itemMargin.Height' bounds.Width - 2 * itemMargin.Width' bounds.Height - 2 * itemMargin.Height - mReflectionSize)' 50.0f' 100.0f);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGalleryImage,The following statement contains a magic number: Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.X + itemMargin.Width' bounds.Y + itemMargin.Height' bounds.Width - 2 * itemMargin.Width' bounds.Height - 2 * itemMargin.Height - mReflectionSize)' 50.0f' 100.0f);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGalleryImage,The following statement contains a magic number: Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.X + itemMargin.Width' bounds.Y + itemMargin.Height' bounds.Width - 2 * itemMargin.Width' bounds.Height - 2 * itemMargin.Height - mReflectionSize)' 50.0f' 100.0f);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGalleryImage,The following statement contains a magic number: Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.X + itemMargin.Width' bounds.Y + itemMargin.Height' bounds.Width - 2 * itemMargin.Width' bounds.Height - 2 * itemMargin.Height - mReflectionSize)' 50.0f' 100.0f);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: g.FillRectangle(bBorder' bounds.Right - 2' bounds.Top' 2' bounds.Height);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: g.FillRectangle(bBorder' bounds.Right - 2' bounds.Top' 2' bounds.Height);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Width -= 2;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.Location + itemMargin' bounds.Size - itemMargin - itemMargin)' 50.0f' 0.0f);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Width -= 2 * itemMargin.Width;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Y = pos.Height + 16;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Height -= pos.Height + 16;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Y += 2 * y;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Height -= 2 * y;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Y += 8;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Height -= 8;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGroupHeader,The following statement contains a magic number: bounds.Inflate(0' -4);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGroupHeader,The following statement contains a magic number: bounds.Width > 4
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawImageWithReflection,The following statement contains a magic number: int reflectionHeight = height / 2;
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawImageWithReflection,The following statement contains a magic number: g.DrawImage(img' x' y + height + height / 2 + 1' width' -height / 2);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawImageWithReflection,The following statement contains a magic number: g.DrawImage(img' x' y + height + height / 2 + 1' width' -height / 2);
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawImageWithReflection,The following statement contains a magic number: img.Width > 32 && img.Height > 32
Magic Number,ImageGlass.ImageListView,NoirRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawImageWithReflection,The following statement contains a magic number: img.Width > 32 && img.Height > 32
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,MeasureItem,The following statement contains a magic number: mTextHeight = (int)(5.8f * (float)CaptionFont.Height);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,MeasureItem,The following statement contains a magic number: Size itemPadding = new Size(4' 4);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,MeasureItem,The following statement contains a magic number: Size itemPadding = new Size(4' 4);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,MeasureItem,The following statement contains a magic number: itemSize.Width = ImageListView.ThumbnailSize.Width + 4 * itemPadding.Width + mTileWidth;
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,MeasureItem,The following statement contains a magic number: itemSize.Height = Math.Max(mTextHeight' ImageListView.ThumbnailSize.Height) + 2 * itemPadding.Height;
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Size itemPadding = new Size(4' 4);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Size itemPadding = new Size(4' 4);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.FillRoundedRectangle(g' bDisabled' bounds' 4);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.FillRoundedRectangle(g' bHovered' bounds' 4);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Rectangle pos = Utility.GetSizedImageBounds(img' new Rectangle(bounds.Location + itemPadding' ImageListView.ThumbnailSize)' 0.0f' 50.0f);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: System.Math.Min(ImageListView.ThumbnailSize.Width' ImageListView.ThumbnailSize.Height) > 32
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Math.Min(pos.Width' pos.Height) > 32
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt = new RectangleF(bounds.Left + 2 * itemPadding.Width + ImageListView.ThumbnailSize.Width'                              bounds.Top + itemPadding.Height + (Math.Max(ImageListView.ThumbnailSize.Height' mTextHeight) - mTextHeight) / 2'                              mTileWidth' lineHeight);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt = new RectangleF(bounds.Left + 2 * itemPadding.Width + ImageListView.ThumbnailSize.Width'                              bounds.Top + itemPadding.Height + (Math.Max(ImageListView.ThumbnailSize.Height' mTextHeight) - mTextHeight) / 2'                              mTileWidth' lineHeight);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt.Offset(0' 1.5f * lineHeight);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt.Offset(0' 1.1f * lineHeight);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt.Offset(0' 1.1f * lineHeight);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt.Offset(0' 1.1f * lineHeight);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pWhite128' bounds.Left + 1' bounds.Top + 1' bounds.Width - 3' bounds.Height - 3' 4);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pWhite128' bounds.Left + 1' bounds.Top + 1' bounds.Width - 3' bounds.Height - 3' 4);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pWhite128' bounds.Left + 1' bounds.Top + 1' bounds.Width - 3' bounds.Height - 3' 4);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pHighlight128' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' 4);
Magic Number,ImageGlass.ImageListView,TilesRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pHighlight64' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' 4);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Size itemPadding = new Size(4' 4);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Size itemPadding = new Size(4' 4);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt = new RectangleF(bounds.Left + itemPadding.Width' bounds.Top + 3 * itemPadding.Height + ImageListView.ThumbnailSize.Height' ImageListView.ThumbnailSize.Width' szt.Height);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt.Inflate(1' 2);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGalleryImage,The following statement contains a magic number: Math.Min(pos.Width' pos.Height) > 32
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: g.FillRectangle(bBorder' bounds.Right - 2' bounds.Top' 2' bounds.Height);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: g.FillRectangle(bBorder' bounds.Right - 2' bounds.Top' 2' bounds.Height);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Width -= 2;
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.Location + itemMargin' bounds.Size - itemMargin - itemMargin)' 50.0f' 0.0f);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: Math.Min(pos.Width' pos.Height) > 32
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Width -= 2 * itemMargin.Width;
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Y = pos.Height + 16;
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Height -= pos.Height + 16;
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Y += 2 * y;
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Height -= 2 * y;
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Y += 8;
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawPane,The following statement contains a magic number: bounds.Height -= 8;
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawLine(pSpep' bounds.Left + 1' bounds.Top + 1' bounds.Left + 1' bounds.Bottom - 2);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawLine(pSpep' bounds.Right - 1' bounds.Top + 1' bounds.Right - 1' bounds.Bottom - 2);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: int textOffset = 4;
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawImageUnscaled(img' bounds.X + 4' bounds.Top + (bounds.Height - img.Height) / 2);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawImageUnscaled(img' bounds.X + 4' bounds.Top + (bounds.Height - img.Height) / 2);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: bounds.Width > 4
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnExtender,The following statement contains a magic number: g.DrawLine(pSpep' bounds.Left + 1' bounds.Top + 1' bounds.Left + 1' bounds.Bottom - 2);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGroupHeader,The following statement contains a magic number: bounds.Inflate(0' -4);
Magic Number,ImageGlass.ImageListView,XPRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGroupHeader,The following statement contains a magic number: bounds.Width > 4
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,MeasureItem,The following statement contains a magic number: return ImageListView.ThumbnailSize + new Size(8' 8);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,MeasureItem,The following statement contains a magic number: return ImageListView.ThumbnailSize + new Size(8' 8);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: img = GetImageAsync(item' new Size(bounds.Width - 8' bounds.Height - 8));
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: img = GetImageAsync(item' new Size(bounds.Width - 8' bounds.Height - 8));
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Rectangle pos = Utility.GetSizedImageBounds(img' Rectangle.Inflate(bounds' -4' -4));
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Rectangle pos = Utility.GetSizedImageBounds(img' Rectangle.Inflate(bounds' -4' -4));
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: int delta = (ImageListView.Font.Height + 8) - (bounds.Height - imageHeight) / 2;
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: int delta = (ImageListView.Font.Height + 8) - (bounds.Height - imageHeight) / 2;
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: bounds.Height += 2 * delta;
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: (state & ItemState.Hovered) != ItemState.None &&                              (bounds.Height - imageHeight) / 2 < ImageListView.Font.Height + 8
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: (state & ItemState.Hovered) != ItemState.None &&                              (bounds.Height - imageHeight) / 2 < ImageListView.Font.Height + 8
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.FillRoundedRectangle(g' bDisabled' bounds' 5);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.FillRoundedRectangle(g' bHovered' bounds' 5);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: g.DrawRectangle(pInnerBorder' imageX + 1' imageY + 1' imageWidth - 2' imageHeight - 2);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: g.DrawRectangle(pInnerBorder' imageX + 1' imageY + 1' imageWidth - 2' imageHeight - 2);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: System.Math.Min(imageWidth' imageHeight) > 32
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Math.Min(imageWidth' imageHeight) > 32
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt = new RectangleF(bounds.Left + 4' bounds.Top + 4' bounds.Width - 8' (bounds.Height - imageHeight) / 2 - 8);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt = new RectangleF(bounds.Left + 4' bounds.Top + 4' bounds.Width - 8' (bounds.Height - imageHeight) / 2 - 8);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt = new RectangleF(bounds.Left + 4' bounds.Top + 4' bounds.Width - 8' (bounds.Height - imageHeight) / 2 - 8);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt = new RectangleF(bounds.Left + 4' bounds.Top + 4' bounds.Width - 8' (bounds.Height - imageHeight) / 2 - 8);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt = new RectangleF(bounds.Left + 4' bounds.Top + 4' bounds.Width - 8' (bounds.Height - imageHeight) / 2 - 8);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt.Y = bounds.Bottom - (bounds.Height - imageHeight) / 2 + 4;
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt.Y = bounds.Bottom - (bounds.Height - imageHeight) / 2 + 4;
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pWhite128' bounds.Left + 1' bounds.Top + 1' bounds.Width - 3' bounds.Height - 3' 4);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pWhite128' bounds.Left + 1' bounds.Top + 1' bounds.Width - 3' bounds.Height - 3' 4);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pWhite128' bounds.Left + 1' bounds.Top + 1' bounds.Width - 3' bounds.Height - 3' 4);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pHighlight128' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' 4);
Magic Number,ImageGlass.ImageListView,ZoomingRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pHighlight64' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' 4);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,ThemeRenderer,The following statement contains a magic number: rColumnHovered = GetRenderer("Header"' 1' 2);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,ThemeRenderer,The following statement contains a magic number: rColumnSorted = GetRenderer("Header"' 1' 4);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,ThemeRenderer,The following statement contains a magic number: rColumnSortedHovered = GetRenderer("Header"' 1' 5);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,ThemeRenderer,The following statement contains a magic number: rItemHovered = GetRenderer("Explorer::ListView"' 1' 2);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,ThemeRenderer,The following statement contains a magic number: rItemSelected = GetRenderer("Explorer::ListView"' 1' 3);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,ThemeRenderer,The following statement contains a magic number: rItemHoveredSelected = GetRenderer("Explorer::ListView"' 1' 6);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,ThemeRenderer,The following statement contains a magic number: rItemSelectedHidden = GetRenderer("Explorer::ListView"' 1' 5);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,ThemeRenderer,The following statement contains a magic number: rItemDisabled = GetRenderer("Explorer::ListView"' 1' 4);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,ThemeRenderer,The following statement contains a magic number: rGroupNormal = GetRenderer("Explorer::ListView"' 6' 1);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,ThemeRenderer,The following statement contains a magic number: rGroupLine = GetRenderer("Explorer::ListView"' 7' 1);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: sortBounds.Offset(bounds.X + (bounds.Width - sz.Width) / 2' 0);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: textBounds.Inflate(-3' 0);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: bounds.Width > 4
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,MeasureItem,The following statement contains a magic number: sz.Width += textHeight * 2 / 5;
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,MeasureItem,The following statement contains a magic number: sz.Width += textHeight * 2 / 5;
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,MeasureItem,The following statement contains a magic number: sz.Height -= textHeight / 2;
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Size itemPadding = new Size(5' 5);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Size itemPadding = new Size(5' 5);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Rectangle pos = Utility.GetSizedImageBounds(img'                                  new Rectangle(bounds.Location + itemPadding'                                  new Size(bounds.Width - 2 * itemPadding.Width' bounds.Height - 2 * itemPadding.Width)));
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Rectangle pos = Utility.GetSizedImageBounds(img'                                  new Rectangle(bounds.Location + itemPadding'                                  new Size(bounds.Width - 2 * itemPadding.Width' bounds.Height - 2 * itemPadding.Width)));
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: imgback.Inflate(3' 3);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: imgback.Inflate(3' 3);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: focusBounds.Inflate(-2' -2);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: focusBounds.Inflate(-2' -2);
Magic Number,ImageGlass.ImageListView,ThemeRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGroupHeader,The following statement contains a magic number: bounds.Inflate(-3' 0);
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawRectangle(pBorder' bounds.Left + 1' bounds.Top' bounds.Width - 2' bounds.Height - 2);
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawRectangle(pBorder' bounds.Left + 1' bounds.Top' bounds.Width - 2' bounds.Height - 2);
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: int offset = 4;
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: int width = bounds.Width - 2 * offset;
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawImageUnscaled(img' bounds.Right - offset - img.Width' bounds.Top + (bounds.Height - img.Height) / 2);
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnHeader,The following statement contains a magic number: bounds.Width > 4
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnExtender,The following statement contains a magic number: g.DrawRectangle(pBorder' bounds.Left + 1' bounds.Top' bounds.Width - 2' bounds.Height - 2);
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawColumnExtender,The following statement contains a magic number: g.DrawRectangle(pBorder' bounds.Left + 1' bounds.Top' bounds.Width - 2' bounds.Height - 2);
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: bool alternate = (item.Index % 2 == 1);
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: int offset = 2;
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: Rectangle rt = new Rectangle(bounds.Left + offset' bounds.Top' firstWidth - 2 * offset' bounds.Height);
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: rt.Width = column.Width - 2 * offset;
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: iconOffset += 2 * 16 + 3 * 2;
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: iconOffset += 2 * 16 + 3 * 2;
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: iconOffset += 2 * 16 + 3 * 2;
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: iconOffset += 2 * 16 + 3 * 2;
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: int y = (int)(rt.Top + (rt.Height - ImageListView.RatingImage.Height) / 2.0f);
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawItem,The following statement contains a magic number: i <= 5
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGalleryImage,The following statement contains a magic number: pos.Width > 32 && pos.Height > 32
Magic Number,ImageGlass.ImageListView,MeerkatRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderers.cs,DrawGalleryImage,The following statement contains a magic number: pos.Width > 32 && pos.Height > 32
Magic Number,ImageGlass.ImageListView,ImageListViewColumnHeader,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColumnHeader.cs,AutoFit,The following statement contains a magic number: width = mImageListView.RatingImage.Width * 5;
Magic Number,ImageGlass.ImageListView,ImageListViewColumnHeader,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColumnHeader.cs,AutoFit,The following statement contains a magic number: width += 2 * 16 + 3 * 2;
Magic Number,ImageGlass.ImageListView,ImageListViewColumnHeader,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColumnHeader.cs,AutoFit,The following statement contains a magic number: width += 2 * 16 + 3 * 2;
Magic Number,ImageGlass.ImageListView,ImageListViewColumnHeader,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColumnHeader.cs,AutoFit,The following statement contains a magic number: width += 2 * 16 + 3 * 2;
Magic Number,ImageGlass.ImageListView,ImageListViewColumnHeader,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColumnHeader.cs,AutoFit,The following statement contains a magic number: width += 2 * 16 + 3 * 2;
Magic Number,ImageGlass.ImageListView,ImageListViewColumnHeader,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColumnHeader.cs,AutoFit,The following statement contains a magic number: Width = width + 8;
Magic Number,ImageGlass.ImageListView,ImageListViewItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: mRating >= 1 && mRating <= 12
Magic Number,ImageGlass.ImageListView,ImageListViewItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateGroup,The following statement contains a magic number: switch (column.Type)              {                  case ColumnType.DateAccessed:                      groupInfo = Utility.GroupTextDate(DateAccessed);                      break;                  case ColumnType.DateCreated:                      groupInfo = Utility.GroupTextDate(DateCreated);                      break;                  case ColumnType.DateModified:                      groupInfo = Utility.GroupTextDate(DateModified);                      break;                  case ColumnType.Dimensions:                      groupInfo = Utility.GroupTextDimension(Dimensions);                      break;                  case ColumnType.FileName:                      groupInfo = Utility.GroupTextAlpha(FileName);                      break;                  case ColumnType.FilePath:                      groupInfo = Utility.GroupTextAlpha(FilePath);                      break;                  case ColumnType.FileSize:                      groupInfo = Utility.GroupTextFileSize(FileSize);                      break;                  case ColumnType.FileType:                      groupInfo = Utility.GroupTextAlpha(FileType);                      break;                  case ColumnType.Name:                      groupInfo = Utility.GroupTextAlpha(Text);                      break;                  case ColumnType.ImageDescription:                      groupInfo = Utility.GroupTextAlpha(ImageDescription);                      break;                  case ColumnType.EquipmentModel:                      groupInfo = Utility.GroupTextAlpha(EquipmentModel);                      break;                  case ColumnType.DateTaken:                      groupInfo = Utility.GroupTextDate(DateTaken);                      break;                  case ColumnType.Artist:                      groupInfo = Utility.GroupTextAlpha(Artist);                      break;                  case ColumnType.Copyright:                      groupInfo = Utility.GroupTextAlpha(Copyright);                      break;                  case ColumnType.UserComment:                      groupInfo = Utility.GroupTextAlpha(UserComment);                      break;                  case ColumnType.Software:                      groupInfo = Utility.GroupTextAlpha(Software);                      break;                  case ColumnType.Custom:                      groupInfo = Utility.GroupTextAlpha(GetSubItemText(column.Guid));                      break;                  case ColumnType.ISOSpeed:                      groupInfo = new Utility.Tuple<int' string>(ISOSpeed' ISOSpeed.ToString());                      break;                  case ColumnType.Rating:                      groupInfo = new Utility.Tuple<int' string>(Rating / 5' (Rating / 5).ToString());                      break;                  case ColumnType.FocalLength:                      groupInfo = new Utility.Tuple<int' string>((int)FocalLength' FocalLength.ToString());                      break;                  case ColumnType.ExposureTime:                      groupInfo = new Utility.Tuple<int' string>((int)ExposureTime' ExposureTime.ToString());                      break;                  case ColumnType.FNumber:                      groupInfo = new Utility.Tuple<int' string>((int)FNumber' FNumber.ToString());                      break;                  case ColumnType.Resolution:                      groupInfo = new Utility.Tuple<int' string>((int)Resolution.Width' Resolution.Width.ToString());                      break;                  default:                      groupInfo = new Utility.Tuple<int' string>(0' "Unknown");                      break;              }
Magic Number,ImageGlass.ImageListView,ImageListViewItem,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateGroup,The following statement contains a magic number: switch (column.Type)              {                  case ColumnType.DateAccessed:                      groupInfo = Utility.GroupTextDate(DateAccessed);                      break;                  case ColumnType.DateCreated:                      groupInfo = Utility.GroupTextDate(DateCreated);                      break;                  case ColumnType.DateModified:                      groupInfo = Utility.GroupTextDate(DateModified);                      break;                  case ColumnType.Dimensions:                      groupInfo = Utility.GroupTextDimension(Dimensions);                      break;                  case ColumnType.FileName:                      groupInfo = Utility.GroupTextAlpha(FileName);                      break;                  case ColumnType.FilePath:                      groupInfo = Utility.GroupTextAlpha(FilePath);                      break;                  case ColumnType.FileSize:                      groupInfo = Utility.GroupTextFileSize(FileSize);                      break;                  case ColumnType.FileType:                      groupInfo = Utility.GroupTextAlpha(FileType);                      break;                  case ColumnType.Name:                      groupInfo = Utility.GroupTextAlpha(Text);                      break;                  case ColumnType.ImageDescription:                      groupInfo = Utility.GroupTextAlpha(ImageDescription);                      break;                  case ColumnType.EquipmentModel:                      groupInfo = Utility.GroupTextAlpha(EquipmentModel);                      break;                  case ColumnType.DateTaken:                      groupInfo = Utility.GroupTextDate(DateTaken);                      break;                  case ColumnType.Artist:                      groupInfo = Utility.GroupTextAlpha(Artist);                      break;                  case ColumnType.Copyright:                      groupInfo = Utility.GroupTextAlpha(Copyright);                      break;                  case ColumnType.UserComment:                      groupInfo = Utility.GroupTextAlpha(UserComment);                      break;                  case ColumnType.Software:                      groupInfo = Utility.GroupTextAlpha(Software);                      break;                  case ColumnType.Custom:                      groupInfo = Utility.GroupTextAlpha(GetSubItemText(column.Guid));                      break;                  case ColumnType.ISOSpeed:                      groupInfo = new Utility.Tuple<int' string>(ISOSpeed' ISOSpeed.ToString());                      break;                  case ColumnType.Rating:                      groupInfo = new Utility.Tuple<int' string>(Rating / 5' (Rating / 5).ToString());                      break;                  case ColumnType.FocalLength:                      groupInfo = new Utility.Tuple<int' string>((int)FocalLength' FocalLength.ToString());                      break;                  case ColumnType.ExposureTime:                      groupInfo = new Utility.Tuple<int' string>((int)ExposureTime' ExposureTime.ToString());                      break;                  case ColumnType.FNumber:                      groupInfo = new Utility.Tuple<int' string>((int)FNumber' FNumber.ToString());                      break;                  case ColumnType.Resolution:                      groupInfo = new Utility.Tuple<int' string>((int)Resolution.Width' Resolution.Width.ToString());                      break;                  default:                      groupInfo = new Utility.Tuple<int' string>(0' "Unknown");                      break;              }
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: location.X += cachedItemMargin.Width / 2;
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: location.Y += cachedItemMargin.Height / 2;
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBoundsWithMargin,The following statement contains a magic number: rec.Inflate(cachedItemMargin.Width / 2' cachedItemMargin.Height / 2);
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBoundsWithMargin,The following statement contains a magic number: rec.Inflate(cachedItemMargin.Width / 2' cachedItemMargin.Height / 2);
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: Rectangle bounds = GetWidgetBounds(GetItemBounds(itemIndex)' new Size(16' 16)'                  mImageListView.CheckBoxPadding' mImageListView.CheckBoxAlignment);
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: Rectangle bounds = GetWidgetBounds(GetItemBounds(itemIndex)' new Size(16' 16)'                  mImageListView.CheckBoxPadding' mImageListView.CheckBoxAlignment);
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: bounds.X -= 8 + mImageListView.IconPadding.Width / 2;
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: bounds.X -= 8 + mImageListView.IconPadding.Width / 2;
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: Rectangle bounds = GetWidgetBounds(GetItemBounds(itemIndex)' new Size(16' 16)'                  mImageListView.IconPadding' mImageListView.IconAlignment);
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: Rectangle bounds = GetWidgetBounds(GetItemBounds(itemIndex)' new Size(16' 16)'                  mImageListView.IconPadding' mImageListView.IconAlignment);
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: bounds.X += 16 + 2;
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: bounds.X += 16 + 2;
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: bounds.Inflate(-2' -2);
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: bounds.Inflate(-2' -2);
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: y = bounds.Top + bounds.Height / 2 - size.Height / 2;
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: y = bounds.Top + bounds.Height / 2 - size.Height / 2;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderGroupHeaders,The following statement contains a magic number: g.RotateTransform(270);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderGalleryImage,The following statement contains a magic number: item != null && bounds.Width > 4 && bounds.Height > 4
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderGalleryImage,The following statement contains a magic number: item != null && bounds.Width > 4 && bounds.Height > 4
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderPane,The following statement contains a magic number: image = GetGalleryImageAsync(item' new Size(bounds.Width' 65535));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderPane,The following statement contains a magic number: item != null && bounds.Width > 4 && bounds.Height > 4
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderPane,The following statement contains a magic number: item != null && bounds.Width > 4 && bounds.Height > 4
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,RenderInsertionCaret,The following statement contains a magic number: bounds.Height = 2;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,MeasureGroupHeaderHeight,The following statement contains a magic number: return 24;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,MeasureColumnHeaderHeight,The following statement contains a magic number: return 24;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,MeasureItemMargin,The following statement contains a magic number: return new Size(2' 0);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,MeasureItem,The following statement contains a magic number: itemSize = new Size(colWidth' textHeight + 2 * textHeight / 6);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,MeasureItem,The following statement contains a magic number: itemSize = new Size(colWidth' textHeight + 2 * textHeight / 6);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Size itemPadding = new Size(4' 4);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Size itemPadding = new Size(4' 4);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: bool alternate = (item.Index % 2 == 1);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Utility.FillRoundedRectangle(g' bDisabled' bounds' (ImageListView.View == View.Details ? 2 : 4));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Utility.FillRoundedRectangle(g' bDisabled' bounds' (ImageListView.View == View.Details ? 2 : 4));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Utility.FillRoundedRectangle(g' bHovered' bounds' (ImageListView.View == View.Details ? 2 : 4));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Utility.FillRoundedRectangle(g' bHovered' bounds' (ImageListView.View == View.Details ? 2 : 4));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: System.Math.Min(ImageListView.ThumbnailSize.Width' ImageListView.ThumbnailSize.Height) > 32
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Math.Min(pos.Width' pos.Height) > 32
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Rectangle rt = new Rectangle(bounds.Left + itemPadding.Width' bounds.Top + 2 * itemPadding.Height + ImageListView.ThumbnailSize.Height' ImageListView.ThumbnailSize.Width' szt.Height);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pWhite128' bounds.Left + 1' bounds.Top + 1' bounds.Width - 3' bounds.Height - 3' (ImageListView.View == View.Details ? 2 : 4));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pWhite128' bounds.Left + 1' bounds.Top + 1' bounds.Width - 3' bounds.Height - 3' (ImageListView.View == View.Details ? 2 : 4));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pWhite128' bounds.Left + 1' bounds.Top + 1' bounds.Width - 3' bounds.Height - 3' (ImageListView.View == View.Details ? 2 : 4));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pWhite128' bounds.Left + 1' bounds.Top + 1' bounds.Width - 3' bounds.Height - 3' (ImageListView.View == View.Details ? 2 : 4));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pHighlight128' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' (ImageListView.View == View.Details ? 2 : 4));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pHighlight128' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' (ImageListView.View == View.Details ? 2 : 4));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pHighlight64' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' (ImageListView.View == View.Details ? 2 : 4));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawItem,The following statement contains a magic number: Utility.DrawRoundedRectangle(g' pHighlight64' bounds.Left' bounds.Top' bounds.Width - 1' bounds.Height - 1' (ImageListView.View == View.Details ? 2 : 4));
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawCheckBox,The following statement contains a magic number: PointF pt = new PointF((float)bounds.X + ((float)bounds.Width - (float)size.Width) / 2.0f'                      (float)bounds.Y + ((float)bounds.Height - (float)size.Height) / 2.0f);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawCheckBox,The following statement contains a magic number: PointF pt = new PointF((float)bounds.X + ((float)bounds.Width - (float)size.Width) / 2.0f'                      (float)bounds.Y + ((float)bounds.Height - (float)size.Height) / 2.0f);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawFileIcon,The following statement contains a magic number: PointF ptf = new PointF((float)bounds.X + ((float)bounds.Width - (float)size.Width) / 2.0f'                          (float)bounds.Y + ((float)bounds.Height - (float)size.Height) / 2.0f);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawFileIcon,The following statement contains a magic number: PointF ptf = new PointF((float)bounds.X + ((float)bounds.Width - (float)size.Width) / 2.0f'                          (float)bounds.Y + ((float)bounds.Height - (float)size.Height) / 2.0f);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawGroupHeader,The following statement contains a magic number: bounds.Inflate(0' -4);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawGroupHeader,The following statement contains a magic number: bounds.Width > 4
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawLine(pSpep' bounds.Left + 1' bounds.Top + 1' bounds.Left + 1' bounds.Bottom - 2);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawLine(pSpep' bounds.Right - 1' bounds.Top + 1' bounds.Right - 1' bounds.Bottom - 2);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnHeader,The following statement contains a magic number: int textOffset = 4;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawImageUnscaled(img' bounds.X + 4' bounds.Top + (bounds.Height - img.Height) / 2);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnHeader,The following statement contains a magic number: g.DrawImageUnscaled(img' bounds.X + 4' bounds.Top + (bounds.Height - img.Height) / 2);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnHeader,The following statement contains a magic number: bounds.Width > 4
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The following statement contains a magic number: g.FillRectangle(bBorder' bounds.Right - 2' bounds.Top' 2' bounds.Height);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The following statement contains a magic number: g.FillRectangle(bBorder' bounds.Right - 2' bounds.Top' 2' bounds.Height);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The following statement contains a magic number: bounds.Width -= 2;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The following statement contains a magic number: Rectangle pos = Utility.GetSizedImageBounds(image' new Rectangle(bounds.Location + itemMargin' bounds.Size - itemMargin - itemMargin)' 50.0f' 0.0f);
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The following statement contains a magic number: Math.Min(pos.Width' pos.Height) > 32
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The following statement contains a magic number: bounds.Width -= 2 * itemMargin.Width;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The following statement contains a magic number: bounds.Y = pos.Height + 16;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The following statement contains a magic number: bounds.Height -= pos.Height + 16;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The following statement contains a magic number: bounds.Y += 2 * y;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The following statement contains a magic number: bounds.Height -= 2 * y;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The following statement contains a magic number: bounds.Y += 8;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawPane,The following statement contains a magic number: bounds.Height -= 8;
Magic Number,ImageGlass.ImageListView,ImageListViewRenderer,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewRenderer.cs,DrawColumnExtender,The following statement contains a magic number: g.DrawLine(pSpep' bounds.Left + 1' bounds.Top + 1' bounds.Left + 1' bounds.Bottom - 2);
Magic Number,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,ImageListViewNavigationManager,The following statement contains a magic number: scrollTimer.Interval = 100;
Magic Number,ImageGlass.ImageListView,ImageListViewNavigationManager,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewNavigationManager.cs,MouseMove,The following statement contains a magic number: colwidth > 16
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnailBmp,The following statement contains a magic number: rotate % 180 != 0
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The following statement contains a magic number: rotate % 180 != 0
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The following statement contains a magic number: rotate % 180 != 0
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The following statement contains a magic number: rotate % 180 != 0
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: angle % 90 != 0
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: Math.Abs(angle) % 360 != 0
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: angle % 90 != 0
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: int thumbWidth = Math.Abs(angle) % 180 == 0 ? width : height;
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: int thumbHeight = Math.Abs(angle) % 180 == 0 ? height : width;
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: g.TranslateTransform(-sourceWidth / 2' -sourceHeight / 2' MatrixOrder.Append);
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: g.TranslateTransform(-sourceWidth / 2' -sourceHeight / 2' MatrixOrder.Append);
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: Math.Abs(angle) % 360 != 0
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: g.TranslateTransform(thumbWidth / 2' thumbHeight / 2' MatrixOrder.Append);
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: g.TranslateTransform(thumbWidth / 2' thumbHeight / 2' MatrixOrder.Append);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,FormatSize,The following statement contains a magic number: double mod = 1024;
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,FormatSize,The following statement contains a magic number: return string.Format("{0} {1}"' Math.Round(sized' 2)' units[i]);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: size < 10 * 1024
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: size < 10 * 1024
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: size.Width <= 32 && size.Height <= 32
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: size.Width <= 32 && size.Height <= 32
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: byte[] header = new byte[10];
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: string bmpHeader = Encoding.ASCII.GetString(header' 0' 2);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: string tiffHeader = Encoding.ASCII.GetString(header' 0' 4);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: header[0] == 0x89 && header[1] == 0x50 && header[2] == 0x4E && header[3] == 0x47 &&                  header[4] == 0x0D && header[5] == 0x0A && header[6] == 0x1A && header[7] == 0x0A
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: header[0] == 0x89 && header[1] == 0x50 && header[2] == 0x4E && header[3] == 0x47 &&                  header[4] == 0x0D && header[5] == 0x0A && header[6] == 0x1A && header[7] == 0x0A
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: header[0] == 0x89 && header[1] == 0x50 && header[2] == 0x4E && header[3] == 0x47 &&                  header[4] == 0x0D && header[5] == 0x0A && header[6] == 0x1A && header[7] == 0x0A
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: header[0] == 0x89 && header[1] == 0x50 && header[2] == 0x4E && header[3] == 0x47 &&                  header[4] == 0x0D && header[5] == 0x0A && header[6] == 0x1A && header[7] == 0x0A
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: header[0] == 0x89 && header[1] == 0x50 && header[2] == 0x4E && header[3] == 0x47 &&                  header[4] == 0x0D && header[5] == 0x0A && header[6] == 0x1A && header[7] == 0x0A
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: header[0] == 0x89 && header[1] == 0x50 && header[2] == 0x4E && header[3] == 0x47 &&                  header[4] == 0x0D && header[5] == 0x0A && header[6] == 0x1A && header[7] == 0x0A
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: string gifHeader = Encoding.ASCII.GetString(header' 0' 4);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: header[0] == 0xD7 && header[1] == 0xCD && header[2] == 0xC6 && header[3] == 0x9A
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: header[0] == 0xD7 && header[1] == 0xCD && header[2] == 0xC6 && header[3] == 0x9A
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: header[0] == 0x01 && header[1] == 0x00 && header[2] == 0x00 && header[3] == 0x00
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: header[0] == 0x01 && header[1] == 0x00 && header[2] == 0x00 && header[3] == 0x00
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: header[0] == 0x00 && header[1] == 0x00 && header[2] == 0x01 && header[3] == 0x00
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: header[0] == 0x00 && header[1] == 0x00 && header[2] == 0x01 && header[3] == 0x00
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: string hdrHeader = Encoding.ASCII.GetString(header' 2' 8);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: string hdrHeader = Encoding.ASCII.GetString(header' 2' 8);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetSizedImageBounds,The following statement contains a magic number: hAlign < 0 || hAlign > 100.0f
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetSizedImageBounds,The following statement contains a magic number: vAlign < 0 || vAlign > 100.0f
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetSizedImageBounds,The following statement contains a magic number: int x = fit.Left + (int)(hAlign / 100.0f * (float)(fit.Width - scaled.Width));
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetSizedImageBounds,The following statement contains a magic number: int y = fit.Top + (int)(vAlign / 100.0f * (float)(fit.Height - scaled.Height));
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetSizedImageBounds,The following statement contains a magic number: return GetSizedImageBounds(image' fit' 50.0f' 50.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetSizedImageBounds,The following statement contains a magic number: return GetSizedImageBounds(image' fit' 50.0f' 50.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x + width - 2 * radius' y' 2 * radius' 2 * radius' 270.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x + width - 2 * radius' y' 2 * radius' 2 * radius' 270.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x + width - 2 * radius' y' 2 * radius' 2 * radius' 270.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x + width - 2 * radius' y' 2 * radius' 2 * radius' 270.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x + width - 2 * radius' y' 2 * radius' 2 * radius' 270.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x' y + height - 2 * radius' 2 * radius' 2 * radius' 90.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x' y + height - 2 * radius' 2 * radius' 2 * radius' 90.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x' y + height - 2 * radius' 2 * radius' 2 * radius' 90.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x' y + height - 2 * radius' 2 * radius' 2 * radius' 90.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x' y + height - 2 * radius' 2 * radius' 2 * radius' 90.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x' y' 2 * radius' 2 * radius' 180.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x' y' 2 * radius' 2 * radius' 180.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x' y' 2 * radius' 2 * radius' 180.0f' 90.0f);
Magic Number,ImageGlass.ImageListView,Utility,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc(x' y' 2 * radius' 2 * radius' 180.0f' 90.0f);
Duplicate Code,ImageGlass.ImageListView,ImageListView,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((77' 97)' (128' 148))
Duplicate Code,ImageGlass.ImageListView,ThumbnailExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The method contains a code clone-set at the following line numbers (starting from the method definition): ((22' 45)' (66' 89))
Missing Default,ImageGlass.ImageListView,MetadataExtractor,D:\research\architectureSmells\repos\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following switch statement is missing a default case: switch (prop.Id)                      {                          case TagImageDescription:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  ImageDescription = str;                              }                              break;                          case TagArtist:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Artist = str;                              }                              break;                          case TagEquipmentManufacturer:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentManufacturer = str;                              }                              break;                          case TagEquipmentModel:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  EquipmentModel = str;                              }                              break;                          case TagDateTimeOriginal:                              dateTime = ExifDateTime(prop.Value);                              if (dateTime != DateTime.MinValue)                              {                                  DateTaken = dateTime;                              }                              break;                          case TagExposureTime:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      ExposureTime = dVal;                                  }                              }                              break;                          case TagFNumber:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FNumber = dVal;                                  }                              }                              break;                          case TagISOSpeed:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal != 0)                                  {                                      ISOSpeed = iVal;                                  }                              }                              break;                          case TagCopyright:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Copyright = str;                              }                              break;                          case TagRating:                              if (Rating == 0 && prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  if (iVal == 1)                                      Rating = 1;                                  else if (iVal == 2)                                      Rating = 25;                                  else if (iVal == 3)                                      Rating = 50;                                  else if (iVal == 4)                                      Rating = 75;                                  else if (iVal == 5)                                      Rating = 99;                              }                              break;                          case TagRatingPercent:                              if (prop.Value.Length == 2)                              {                                  iVal = ExifUShort(prop.Value);                                  Rating = iVal;                              }                              break;                          case TagUserComment:                              str = ExifAscii(prop.Value);                              if (str != String.Empty)                              {                                  Comment = str;                              }                              break;                          case TagSoftware:                              str = ExifAscii(prop.Value).Trim();                              if (str != String.Empty)                              {                                  Software = str;                              }                              break;                          case TagFocalLength:                              if (prop.Value.Length == 8)                              {                                  dVal = ExifDouble(prop.Value);                                  if (dVal != 0.0)                                  {                                      FocalLength = dVal;                                  }                              }                              break;                      }
