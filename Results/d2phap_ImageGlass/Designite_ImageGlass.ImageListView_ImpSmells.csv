Implementation smell,Namespace,Class,File,Method,Description
Long Method,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The method has 113 lines of code.
Long Method,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The method has 117 lines of code.
Long Method,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetSubItemText,The method has 109 lines of code.
Complex Method,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,Cyclomatic complexity of the method is 31
Complex Method,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,OnMouseWheel,Cyclomatic complexity of the method is 10
Complex Method,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,Dispose,Cyclomatic complexity of the method is 12
Complex Method,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,Cyclomatic complexity of the method is 9
Complex Method,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_RunWorkerCompleted,Cyclomatic complexity of the method is 16
Complex Method,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_DoWork,Cyclomatic complexity of the method is 10
Complex Method,ImageGlass.ImageListView,ShellInfoExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ShellInfoExtractor.cs,FromFile,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,Cyclomatic complexity of the method is 75
Complex Method,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,Cyclomatic complexity of the method is 24
Complex Method,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ToString,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetSubItemText,Cyclomatic complexity of the method is 31
Complex Method,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,Cyclomatic complexity of the method is 12
Complex Method,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateDetailsInternal,Cyclomatic complexity of the method is 72
Complex Method,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateGroup,Cyclomatic complexity of the method is 73
Complex Method,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateScrollBars,Cyclomatic complexity of the method is 8
Complex Method,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,Cyclomatic complexity of the method is 20
Complex Method,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnailBmp,Cyclomatic complexity of the method is 15
Complex Method,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,Cyclomatic complexity of the method is 16
Complex Method,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,Cyclomatic complexity of the method is 13
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,Add,The method has 7 parameters.
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,Add,The method has 8 parameters.
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToGalleryCache,The method has 7 parameters.
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToRendererCache,The method has 7 parameters.
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetRendererImage,The method has 5 parameters.
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetGalleryImage,The method has 5 parameters.
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetImage,The method has 6 parameters.
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetCacheState,The method has 5 parameters.
Long Parameter List,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetKey,The method has 5 parameters.
Long Parameter List,ImageGlass.ImageListView,QueuedWorkerCompletedEventArgs,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorkerEvents.cs,QueuedWorkerCompletedEventArgs,The method has 5 parameters.
Long Parameter List,ImageGlass.ImageListView,ShellInfoExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ShellInfoExtractor.cs,SHGetFileInfo,The method has 5 parameters.
Long Parameter List,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,FromImage,The method has 5 parameters.
Long Parameter List,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,FromFile,The method has 5 parameters.
Long Parameter List,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,DrawStringPair,The method has 7 parameters.
Long Parameter List,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The method has 5 parameters.
Long Parameter List,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,FillRoundedRectangle,The method has 7 parameters.
Long Parameter List,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,FillRoundedRectangle,The method has 7 parameters.
Long Parameter List,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,DrawRoundedRectangle,The method has 7 parameters.
Long Parameter List,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,DrawRoundedRectangle,The method has 7 parameters.
Long Statement,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ClearThumbnailCache,The length of the statement  "				thumbnailCache.Add (item.Guid' item.Adaptor' item.VirtualItemKey' mThumbnailSize' mUseEmbeddedThumbnails' AutoRotateThumbnails' (mUseWIC == UseWIC.Auto || mUseWIC == UseWIC.ThumbnailsOnly)); " is 190.
Long Statement,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The length of the statement  "				if (ScrollOrientation == ScrollOrientation.HorizontalScroll || (ScrollOrientation == ScrollOrientation.VerticalScroll && col <= layoutManager.Cols)) { " is 150.
Long Statement,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ResumePaint,The length of the statement  "	System.Diagnostics.Debug.Assert (rendererSuspendCount > 0' "Suspend count does not match resume count."' "ResumePaint() must be matched by a prior SuspendPaint() call."); " is 170.
Long Statement,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,IsInputKey,The length of the statement  "	if ((keyData & Keys.Left) == Keys.Left || (keyData & Keys.Right) == Keys.Right || (keyData & Keys.Up) == Keys.Up || (keyData & Keys.Down) == Keys.Down) " is 151.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The length of the statement  "		if (existing != null && existing.Size == request.Size && existing.UseEmbeddedThumbnails == request.UseEmbeddedThumbnails && existing.AutoRotate == request.AutoRotate && existing.UseWIC == request.UseWIC) " is 203.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The length of the statement  "		if (canProcess && (CacheMode == CacheMode.OnDemand) && mImageListView != null && !mImageListView.IsItemVisible (request.Guid)) " is 126.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The length of the statement  "		if (existing != null && existing.Guid == request.Guid && existing.Size == request.Size && existing.UseEmbeddedThumbnails == request.UseEmbeddedThumbnails && existing.AutoRotate == request.AutoRotate && existing.UseWIC == request.UseWIC) " is 236.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The length of the statement  "		if (existing != null && existing.Guid == request.Guid && existing.Size == request.Size && existing.UseEmbeddedThumbnails == request.UseEmbeddedThumbnails && existing.AutoRotate == request.AutoRotate && existing.UseWIC == request.UseWIC) " is 236.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_RunWorkerCompleted,The length of the statement  "		mImageListView.OnThumbnailCachedInternal (result.Guid' result.Image' result.Size' request.RequestType == RequestType.Thumbnail); " is 128.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_DoWork,The length of the statement  "	string diskCacheKey = GetKey (request.Guid' request.Size' request.UseEmbeddedThumbnails' request.AutoRotate' request.UseWIC); " is 125.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_DoWork,The length of the statement  "		thumb = request.Adaptor.GetThumbnail (request.VirtualItemKey' request.Size' request.UseEmbeddedThumbnails' request.AutoRotate' request.UseWIC); " is 143.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_DoWork,The length of the statement  "		result = new CacheItem (request.Guid' request.Size' null' CacheState.Error' request.UseEmbeddedThumbnails' request.AutoRotate' request.UseWIC); " is 143.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,bw_DoWork,The length of the statement  "		result = new CacheItem (request.Guid' request.Size' thumb' CacheState.Cached' request.UseEmbeddedThumbnails' request.AutoRotate' request.UseWIC); " is 145.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,IsPurgeNeeded,The length of the statement  "	return ((CacheLimitAsMemory != 0 && MemoryUsedByRemoved > CacheLimitAsMemory / 4) || (CacheLimitAsItemCount != 0 && removedItems.Count > CacheLimitAsItemCount / 4)); " is 165.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,IsCacheLimitExceeded,The length of the statement  "	return ((CacheLimitAsMemory != 0 && MemoryUsedByRemoved > CacheLimitAsMemory) || (CacheLimitAsItemCount != 0 && removedItems.Count > CacheLimitAsItemCount)); " is 157.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,Add,The length of the statement  "	RunWorker (new CacheRequest (guid' adaptor' key' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC' RequestType.Thumbnail)); " is 127.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,Add,The length of the statement  "	thumbCache.Add (guid' new CacheItem (guid' thumbSize' thumb' CacheState.Cached' useEmbeddedThumbnails' autoRotate' useWIC)); " is 124.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToGalleryCache,The length of the statement  "	if (galleryItem != null && galleryItem.Guid == guid && galleryItem.Image != null && galleryItem.Size == thumbSize && galleryItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && galleryItem.AutoRotate == autoRotate && galleryItem.UseWIC == useWIC) " is 248.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToGalleryCache,The length of the statement  "	RunWorker (new CacheRequest (guid' adaptor' key' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC' RequestType.Gallery)' 2); " is 128.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToRendererCache,The length of the statement  "	if (rendererItem != null && rendererItem.Guid == guid && rendererItem.Image != null && rendererItem.Size == thumbSize && rendererItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && rendererItem.AutoRotate == autoRotate && rendererItem.UseWIC == useWIC) " is 255.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToRendererCache,The length of the statement  "	RunWorker (new CacheRequest (guid' adaptor' key' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC' RequestType.Renderer)' 1); " is 129.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetRendererImage,The length of the statement  "	if (rendererItem != null && rendererItem.Guid == guid && rendererItem.Image != null && rendererItem.Size == thumbSize && rendererItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && rendererItem.AutoRotate == autoRotate && rendererItem.UseWIC == useWIC) " is 255.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetGalleryImage,The length of the statement  "	if (galleryItem != null && galleryItem.Guid == guid && galleryItem.Image != null && galleryItem.Size == thumbSize && galleryItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && galleryItem.AutoRotate == autoRotate && galleryItem.UseWIC == useWIC) " is 248.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetImage,The length of the statement  "	if (thumbCache.TryGetValue (guid' out item) && item != null && item.Image != null && item.Size == thumbSize && item.UseEmbeddedThumbnails == useEmbeddedThumbnails && item.AutoRotate == autoRotate && item.UseWIC == useWIC) " is 221.
Long Statement,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetCacheState,The length of the statement  "	if (thumbCache.TryGetValue (guid' out item) && item != null && item.Size == thumbSize && item.UseEmbeddedThumbnails == useEmbeddedThumbnails && item.AutoRotate == autoRotate && item.UseWIC == useWIC) " is 199.
Long Statement,ImageGlass.ImageListView,OpenFileDialogEditor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\OpenFileDialogEditor.cs,EditValue,The length of the statement  "			dlg.Filter = "All image files (*.bmp' *.gif' *.jpg' *.jepg' *.jpe' *.jif' *.png' *.tif' *.tiff' *.tga)|" + "*.bmp;*.gif;*.jpg;*.jepg;*.jpe;*.jif;*.png;*.tif;*.tiff;*.tga|" + "BMP (*.bmp)|*.bmp|GIF (*.gif)|*.gif|JPEG (*.jpg' *.jepg' *.jpe' *.jif)|*.jpg;*.jepg;*.jpe;*.jif|" + "PNG (*.png)|*.png|TIFF (*.tif' *.tiff)|*.tif;*.tiff|TGA (*.tga)|*.tga|All files (*.*)|*.*"; " is 367.
Long Statement,ImageGlass.ImageListView,QueuedBackgroundWorker,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorker.cs,RunWorkerAsync,The length of the statement  "		throw new ArgumentException ("priority must be between 0 and " + (priorityQueues - 1).ToString () + "  inclusive."' "priority"); " is 128.
Long Statement,ImageGlass.ImageListView,QueuedBackgroundWorker,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorker.cs,CancelAsync,The length of the statement  "		throw new ArgumentException ("priority must be between 0 and " + (priorityQueues - 1).ToString () + "  inclusive."' "priority"); " is 128.
Long Statement,ImageGlass.ImageListView,QueuedBackgroundWorker,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorker.cs,Run,The length of the statement  "				QueuedWorkerCompletedEventArgs workCompletedArg = new QueuedWorkerCompletedEventArgs (request' doWorkArg.Result' priority' error' doWorkArg.Cancel); " is 148.
Long Statement,ImageGlass.ImageListView,ShellInfoExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ShellInfoExtractor.cs,FromFile,The length of the statement  "		hImg = SHGetFileInfo (path' FileAttributes.Normal' out shinfo' structSize' SHGFI.Icon | SHGFI.LargeIcon | SHGFI.UseFileAttributes); " is 131.
Long Statement,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,Update,The length of the statement  "		mImageListView.metadataCache.Add (mGuid' mAdaptor' mVirtualItemKey' (mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.DetailsOnly)); " is 155.
Long Statement,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The length of the statement  "			if (mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 32 && mImageListView.ThumbnailSize.Height > 32) " is 124.
Long Statement,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The length of the statement  "		img = mImageListView.thumbnailCache.GetImage (Guid' mImageListView.ThumbnailSize' mImageListView.UseEmbeddedThumbnails' mImageListView.AutoRotateThumbnails' mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.ThumbnailsOnly' false); " is 252.
Long Statement,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The length of the statement  "		mImageListView.thumbnailCache.Add (Guid' mAdaptor' mVirtualItemKey' mImageListView.ThumbnailSize' mImageListView.UseEmbeddedThumbnails' mImageListView.AutoRotateThumbnails' (mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.ThumbnailsOnly)); " is 263.
Long Statement,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The length of the statement  "		if (img == null && mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 16 && mImageListView.ThumbnailSize.Height > 16) " is 139.
Long Statement,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateFileInfo,The length of the statement  "		UpdateDetailsInternal (Adaptor.GetDetails (mVirtualItemKey' (mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.DetailsOnly))); " is 148.
Long Statement,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateDetailsInternal,The length of the statement  "				ImageListView.ImageListViewColumnHeader column = new ImageListView.ImageListViewColumnHeader (ColumnType.Custom' label); " is 120.
Long Statement,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,Clone,The length of the statement  "		item.clonedThumbnail = mImageListView.thumbnailCache.GetImage (Guid' mImageListView.ThumbnailSize' mImageListView.UseEmbeddedThumbnails' mImageListView.AutoRotateThumbnails' mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.ThumbnailsOnly' true); " is 268.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The length of the statement  "	Rectangle bounds = GetWidgetBounds (GetItemBounds (itemIndex)' new Size (16' 16)' mImageListView.CheckBoxPadding' mImageListView.CheckBoxAlignment); " is 148.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The length of the statement  "	if (mImageListView.View != View.Details && mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) { " is 175.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The length of the statement  "		if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter) " is 136.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The length of the statement  "		else if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight) " is 138.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The length of the statement  "	Rectangle bounds = GetWidgetBounds (GetItemBounds (itemIndex)' new Size (16' 16)' mImageListView.IconPadding' mImageListView.IconAlignment); " is 140.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The length of the statement  "	else if (mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) { " is 141.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The length of the statement  "		if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft) " is 130.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The length of the statement  "		else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter) " is 141.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The length of the statement  "	else if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft) " is 135.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The length of the statement  "	else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter) " is 141.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The length of the statement  "		// if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight) " is 136.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The length of the statement  "	else if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.BottomRight) " is 141.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The length of the statement  "	else if (alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.MiddleRight) " is 141.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The length of the statement  "		// if (alignment == ContentAlignment.TopLeft || alignment == ContentAlignment.TopCenter || alignment == ContentAlignment.TopRight) " is 130.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateScrollBars,The length of the statement  "	mImageListView.hScrollBar.Width = mImageListView.ClientRectangle.Width - (mImageListView.vScrollBar.Visible ? mImageListView.vScrollBar.Width : 0); " is 147.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateScrollBars,The length of the statement  "	mImageListView.vScrollBar.Height = mImageListView.ClientRectangle.Height - (mImageListView.hScrollBar.Visible ? mImageListView.hScrollBar.Height : 0); " is 150.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "			if ((mImageListView.View == View.Gallery && group.itemBounds.Left > ItemAreaBounds.Right) || (mImageListView.View != View.Gallery && group.itemBounds.Top > ItemAreaBounds.Bottom)) " is 179.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "			if ((mImageListView.View == View.Gallery && group.itemBounds.Right < ItemAreaBounds.Left) || (mImageListView.View != View.Gallery && group.itemBounds.Bottom < ItemAreaBounds.Top)) " is 179.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "					mFirstPartiallyVisible = group.FirstItemIndex + (int)System.Math.Floor ((float)(ItemAreaBounds.Left - group.itemBounds.Left) / (float)mItemSizeWithMargin.Width) * group.itemRows; " is 178.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "					mFirstVisible = group.FirstItemIndex + (int)System.Math.Ceiling ((float)(ItemAreaBounds.Left - group.itemBounds.Left) / (float)mItemSizeWithMargin.Width) * group.itemRows; " is 171.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "					mFirstPartiallyVisible = group.FirstItemIndex + (int)System.Math.Floor ((float)(ItemAreaBounds.Top - group.itemBounds.Top) / (float)mItemSizeWithMargin.Height) * group.itemCols; " is 177.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "					mFirstVisible = group.FirstItemIndex + (int)System.Math.Ceiling ((float)(ItemAreaBounds.Top - group.itemBounds.Top) / (float)mItemSizeWithMargin.Height) * group.itemCols; " is 170.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "				mLastPartiallyVisible = group.FirstItemIndex + (int)System.Math.Ceiling ((float)((ItemAreaBounds.Left - group.itemBounds.Left) + mItemAreaBounds.Width) / (float)mItemSizeWithMargin.Width) * group.itemRows - 1; " is 209.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "				mLastVisible = group.FirstItemIndex + (int)System.Math.Floor ((float)((ItemAreaBounds.Left - group.itemBounds.Left) + mItemAreaBounds.Width) / (float)mItemSizeWithMargin.Width) * group.itemRows - 1; " is 198.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "				mLastPartiallyVisible = group.FirstItemIndex + (int)System.Math.Ceiling ((float)((ItemAreaBounds.Top - group.itemBounds.Top) + mItemAreaBounds.Height) / (float)mItemSizeWithMargin.Height) * group.itemCols - 1; " is 209.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "				mLastVisible = group.FirstItemIndex + (int)System.Math.Floor ((float)((ItemAreaBounds.Top - group.itemBounds.Top) + mItemAreaBounds.Height) / (float)mItemSizeWithMargin.Height) * group.itemCols - 1; " is 198.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "			mFirstPartiallyVisible = (int)System.Math.Floor ((float)mImageListView.ViewOffset.X / (float)mItemSizeWithMargin.Width) * mDisplayedRows; " is 137.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "			mLastPartiallyVisible = (int)System.Math.Ceiling ((float)(mImageListView.ViewOffset.X + mItemAreaBounds.Width) / (float)mItemSizeWithMargin.Width) * mDisplayedRows - 1; " is 168.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "			mFirstVisible = (int)System.Math.Ceiling ((float)mImageListView.ViewOffset.X / (float)mItemSizeWithMargin.Width) * mDisplayedRows; " is 130.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "			mLastVisible = (int)System.Math.Floor ((float)(mImageListView.ViewOffset.X + mItemAreaBounds.Width) / (float)mItemSizeWithMargin.Width) * mDisplayedRows - 1; " is 157.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "			mFirstPartiallyVisible = (int)System.Math.Floor ((float)mImageListView.ViewOffset.Y / (float)mItemSizeWithMargin.Height) * mDisplayedCols; " is 138.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "			mLastPartiallyVisible = (int)System.Math.Ceiling ((float)(mImageListView.ViewOffset.Y + mItemAreaBounds.Height) / (float)mItemSizeWithMargin.Height) * mDisplayedCols - 1; " is 170.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "			mFirstVisible = (int)System.Math.Ceiling ((float)mImageListView.ViewOffset.Y / (float)mItemSizeWithMargin.Height) * mDisplayedCols; " is 131.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "			mLastVisible = (int)System.Math.Floor ((float)(mImageListView.ViewOffset.Y + mItemAreaBounds.Height) / (float)mItemSizeWithMargin.Height) * mDisplayedCols - 1; " is 159.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The length of the statement  "	if (mFirstPartiallyVisible >= 0 && mLastPartiallyVisible >= 0 && mFirstPartiallyVisible <= mImageListView.Items.Count - 1 && mLastPartiallyVisible <= mImageListView.Items.Count - 1) { " is 183.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateGroups,The length of the statement  "			group.itemBounds = new Rectangle (x' y' group.itemCols * mItemSizeWithMargin.Width' group.itemRows * mItemSizeWithMargin.Height); " is 129.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateGroups,The length of the statement  "			group.itemBounds = new Rectangle (x' y' group.itemCols * mItemSizeWithMargin.Width' group.itemRows * mItemSizeWithMargin.Height); " is 129.
Long Statement,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateGroups,The length of the statement  "		group.isVisible = ItemAreaBounds.IntersectsWith (group.headerBounds) || ItemAreaBounds.IntersectsWith (group.itemBounds); " is 121.
Long Statement,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The length of the statement  "			if (bmp.Decoder == null || (bmp.Decoder.Preview == null && bmp.Decoder.Frames == null) || useEmbeddedThumbnails == UseEmbeddedThumbnails.Always) { " is 146.
Long Statement,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The length of the statement  "	if (header [0] == 0x89 && header [1] == 0x50 && header [2] == 0x4E && header [3] == 0x47 && header [4] == 0x0D && header [5] == 0x0A && header [6] == 0x1A && header [7] == 0x0A) " is 177.
Complex Conditional,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,IsInputKey,The conditional expression  "(keyData & Keys.Left) == Keys.Left || (keyData & Keys.Right) == Keys.Right || (keyData & Keys.Up) == Keys.Up || (keyData & Keys.Down) == Keys.Down"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The conditional expression  "existing != null && existing.Size == request.Size && existing.UseEmbeddedThumbnails == request.UseEmbeddedThumbnails && existing.AutoRotate == request.AutoRotate && existing.UseWIC == request.UseWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The conditional expression  "canProcess && (CacheMode == CacheMode.OnDemand) && mImageListView != null && !mImageListView.IsItemVisible (request.Guid)"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The conditional expression  "existing != null && existing.Guid == request.Guid && existing.Size == request.Size && existing.UseEmbeddedThumbnails == request.UseEmbeddedThumbnails && existing.AutoRotate == request.AutoRotate && existing.UseWIC == request.UseWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,CanContinueProcessing,The conditional expression  "existing != null && existing.Guid == request.Guid && existing.Size == request.Size && existing.UseEmbeddedThumbnails == request.UseEmbeddedThumbnails && existing.AutoRotate == request.AutoRotate && existing.UseWIC == request.UseWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToGalleryCache,The conditional expression  "galleryItem != null && galleryItem.Guid == guid && galleryItem.Image != null && galleryItem.Size == thumbSize && galleryItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && galleryItem.AutoRotate == autoRotate && galleryItem.UseWIC == useWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToRendererCache,The conditional expression  "rendererItem != null && rendererItem.Guid == guid && rendererItem.Image != null && rendererItem.Size == thumbSize && rendererItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && rendererItem.AutoRotate == autoRotate && rendererItem.UseWIC == useWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetRendererImage,The conditional expression  "rendererItem != null && rendererItem.Guid == guid && rendererItem.Image != null && rendererItem.Size == thumbSize && rendererItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && rendererItem.AutoRotate == autoRotate && rendererItem.UseWIC == useWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetGalleryImage,The conditional expression  "galleryItem != null && galleryItem.Guid == guid && galleryItem.Image != null && galleryItem.Size == thumbSize && galleryItem.UseEmbeddedThumbnails == useEmbeddedThumbnails && galleryItem.AutoRotate == autoRotate && galleryItem.UseWIC == useWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetImage,The conditional expression  "thumbCache.TryGetValue (guid' out item) && item != null && item.Image != null && item.Size == thumbSize && item.UseEmbeddedThumbnails == useEmbeddedThumbnails && item.AutoRotate == autoRotate && item.UseWIC == useWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetCacheState,The conditional expression  "thumbCache.TryGetValue (guid' out item) && item != null && item.Size == thumbSize && item.UseEmbeddedThumbnails == useEmbeddedThumbnails && item.AutoRotate == autoRotate && item.UseWIC == useWIC"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The conditional expression  "img == null && mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 16 && mImageListView.ThumbnailSize.Height > 16"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The conditional expression  "mImageListView.View != View.Details && mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The conditional expression  "(mImageListView.View == View.Gallery && group.itemBounds.Left > ItemAreaBounds.Right) || (mImageListView.View != View.Gallery && group.itemBounds.Top > ItemAreaBounds.Bottom)"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The conditional expression  "(mImageListView.View == View.Gallery && group.itemBounds.Right < ItemAreaBounds.Left) || (mImageListView.View != View.Gallery && group.itemBounds.Bottom < ItemAreaBounds.Top)"  is complex.
Complex Conditional,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,UpdateVisibleItems,The conditional expression  "mFirstPartiallyVisible >= 0 && mLastPartiallyVisible >= 0 && mFirstPartiallyVisible <= mImageListView.Items.Count - 1 && mLastPartiallyVisible <= mImageListView.Items.Count - 1"  is complex.
Complex Conditional,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The conditional expression  "bmp.Decoder == null || (bmp.Decoder.Preview == null && bmp.Decoder.Frames == null) || useEmbeddedThumbnails == UseEmbeddedThumbnails.Always"  is complex.
Complex Conditional,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The conditional expression  "header [0] == 0x89 && header [1] == 0x50 && header [2] == 0x4E && header [3] == 0x47 && header [4] == 0x0D && header [5] == 0x0A && header [6] == 0x1A && header [7] == 0x0A"  is complex.
Complex Conditional,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The conditional expression  "header [0] == 0xD7 && header [1] == 0xCD && header [2] == 0xC6 && header [3] == 0x9A"  is complex.
Complex Conditional,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The conditional expression  "header [0] == 0x01 && header [1] == 0x00 && header [2] == 0x00 && header [3] == 0x00"  is complex.
Complex Conditional,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The conditional expression  "header [0] == 0x00 && header [1] == 0x00 && header [2] == 0x01 && header [3] == 0x00"  is complex.
Complex Conditional,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The conditional expression  "header [0] == 0x00 && header [1] == 0x00 && header [2] == 0x02 && header [3] == 0x00"  is complex.
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: try {  	writeOffset = 0;  	stream.Seek (0' SeekOrigin.Begin);  	while (stream.Position < stream.Length) {  		int read;  		byte[] buffer;  		buffer = new byte[mKeySize];  		read = stream.Read (buffer' 0' mKeySize);  		if (read != mKeySize)  			break;  		string id = Encoding.ASCII.GetString (buffer);  		buffer = new byte[8];  		read = stream.Read (buffer' 0' 8);  		if (read != 8)  			break;  		long length = BitConverter.ToInt64 (buffer' 0);  		CacheItem item = new CacheItem (id' writeOffset' length);  		if (index.ContainsKey (id))  			index [id] = item;  		else  			index.Add (id' item);  		stream.Seek (length' SeekOrigin.Current);  		writeOffset += 24 + length;  	}  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: try {  	writeOffset = 0;  	stream.Seek (0' SeekOrigin.Begin);  	while (stream.Position < stream.Length) {  		int read;  		byte[] buffer;  		buffer = new byte[mKeySize];  		read = stream.Read (buffer' 0' mKeySize);  		if (read != mKeySize)  			break;  		string id = Encoding.ASCII.GetString (buffer);  		buffer = new byte[8];  		read = stream.Read (buffer' 0' 8);  		if (read != 8)  			break;  		long length = BitConverter.ToInt64 (buffer' 0);  		CacheItem item = new CacheItem (id' writeOffset' length);  		if (index.ContainsKey (id))  			index [id] = item;  		else  			index.Add (id' item);  		stream.Seek (length' SeekOrigin.Current);  		writeOffset += 24 + length;  	}  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: try {  	writeOffset = 0;  	stream.Seek (0' SeekOrigin.Begin);  	while (stream.Position < stream.Length) {  		int read;  		byte[] buffer;  		buffer = new byte[mKeySize];  		read = stream.Read (buffer' 0' mKeySize);  		if (read != mKeySize)  			break;  		string id = Encoding.ASCII.GetString (buffer);  		buffer = new byte[8];  		read = stream.Read (buffer' 0' 8);  		if (read != 8)  			break;  		long length = BitConverter.ToInt64 (buffer' 0);  		CacheItem item = new CacheItem (id' writeOffset' length);  		if (index.ContainsKey (id))  			index [id] = item;  		else  			index.Add (id' item);  		stream.Seek (length' SeekOrigin.Current);  		writeOffset += 24 + length;  	}  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: try {  	writeOffset = 0;  	stream.Seek (0' SeekOrigin.Begin);  	while (stream.Position < stream.Length) {  		int read;  		byte[] buffer;  		buffer = new byte[mKeySize];  		read = stream.Read (buffer' 0' mKeySize);  		if (read != mKeySize)  			break;  		string id = Encoding.ASCII.GetString (buffer);  		buffer = new byte[8];  		read = stream.Read (buffer' 0' 8);  		if (read != 8)  			break;  		long length = BitConverter.ToInt64 (buffer' 0);  		CacheItem item = new CacheItem (id' writeOffset' length);  		if (index.ContainsKey (id))  			index [id] = item;  		else  			index.Add (id' item);  		stream.Seek (length' SeekOrigin.Current);  		writeOffset += 24 + length;  	}  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: while (stream.Position < stream.Length) {  	int read;  	byte[] buffer;  	buffer = new byte[mKeySize];  	read = stream.Read (buffer' 0' mKeySize);  	if (read != mKeySize)  		break;  	string id = Encoding.ASCII.GetString (buffer);  	buffer = new byte[8];  	read = stream.Read (buffer' 0' 8);  	if (read != 8)  		break;  	long length = BitConverter.ToInt64 (buffer' 0);  	CacheItem item = new CacheItem (id' writeOffset' length);  	if (index.ContainsKey (id))  		index [id] = item;  	else  		index.Add (id' item);  	stream.Seek (length' SeekOrigin.Current);  	writeOffset += 24 + length;  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: while (stream.Position < stream.Length) {  	int read;  	byte[] buffer;  	buffer = new byte[mKeySize];  	read = stream.Read (buffer' 0' mKeySize);  	if (read != mKeySize)  		break;  	string id = Encoding.ASCII.GetString (buffer);  	buffer = new byte[8];  	read = stream.Read (buffer' 0' 8);  	if (read != 8)  		break;  	long length = BitConverter.ToInt64 (buffer' 0);  	CacheItem item = new CacheItem (id' writeOffset' length);  	if (index.ContainsKey (id))  		index [id] = item;  	else  		index.Add (id' item);  	stream.Seek (length' SeekOrigin.Current);  	writeOffset += 24 + length;  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: while (stream.Position < stream.Length) {  	int read;  	byte[] buffer;  	buffer = new byte[mKeySize];  	read = stream.Read (buffer' 0' mKeySize);  	if (read != mKeySize)  		break;  	string id = Encoding.ASCII.GetString (buffer);  	buffer = new byte[8];  	read = stream.Read (buffer' 0' 8);  	if (read != 8)  		break;  	long length = BitConverter.ToInt64 (buffer' 0);  	CacheItem item = new CacheItem (id' writeOffset' length);  	if (index.ContainsKey (id))  		index [id] = item;  	else  		index.Add (id' item);  	stream.Seek (length' SeekOrigin.Current);  	writeOffset += 24 + length;  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: while (stream.Position < stream.Length) {  	int read;  	byte[] buffer;  	buffer = new byte[mKeySize];  	read = stream.Read (buffer' 0' mKeySize);  	if (read != mKeySize)  		break;  	string id = Encoding.ASCII.GetString (buffer);  	buffer = new byte[8];  	read = stream.Read (buffer' 0' 8);  	if (read != 8)  		break;  	long length = BitConverter.ToInt64 (buffer' 0);  	CacheItem item = new CacheItem (id' writeOffset' length);  	if (index.ContainsKey (id))  		index [id] = item;  	else  		index.Add (id' item);  	stream.Seek (length' SeekOrigin.Current);  	writeOffset += 24 + length;  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: buffer = new byte[8];  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: read = stream.Read (buffer' 0' 8);  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: if (read != 8)  	break;  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,BuildIndex,The following statement contains a magic number: writeOffset += 24 + length;  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: try {  	CacheItem item;  	if (!index.TryGetValue (id' out item))  		return false;  	stream.Seek (item.Offset' SeekOrigin.Begin);  	int read;  	byte[] buffer;  	buffer = new byte[mKeySize];  	read = stream.Read (buffer' 0' mKeySize);  	if (read != mKeySize) {  		index.Remove (id);  		return false;  	}  	string checkid = Encoding.ASCII.GetString (buffer);  	if (checkid != item.ID) {  		index.Remove (id);  		return false;  	}  	buffer = new byte[8];  	read = stream.Read (buffer' 0' 8);  	if (read != 8) {  		index.Remove (id);  		return false;  	}  	long length = BitConverter.ToInt64 (buffer' 0);  	if (length != item.Length) {  		index.Remove (id);  		return false;  	}  	if (stream.Position + length > stream.Length) {  		index.Remove (id);  		return false;  	}  	data.Seek (0' SeekOrigin.Begin);  	data.SetLength (length);  	long totalRead = 0;  	buffer = new byte[4096];  	while (totalRead < length) {  		read = stream.Read (buffer' 0' 4096);  		data.Write (buffer' 0' read);  		totalRead += read;  	}  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: try {  	CacheItem item;  	if (!index.TryGetValue (id' out item))  		return false;  	stream.Seek (item.Offset' SeekOrigin.Begin);  	int read;  	byte[] buffer;  	buffer = new byte[mKeySize];  	read = stream.Read (buffer' 0' mKeySize);  	if (read != mKeySize) {  		index.Remove (id);  		return false;  	}  	string checkid = Encoding.ASCII.GetString (buffer);  	if (checkid != item.ID) {  		index.Remove (id);  		return false;  	}  	buffer = new byte[8];  	read = stream.Read (buffer' 0' 8);  	if (read != 8) {  		index.Remove (id);  		return false;  	}  	long length = BitConverter.ToInt64 (buffer' 0);  	if (length != item.Length) {  		index.Remove (id);  		return false;  	}  	if (stream.Position + length > stream.Length) {  		index.Remove (id);  		return false;  	}  	data.Seek (0' SeekOrigin.Begin);  	data.SetLength (length);  	long totalRead = 0;  	buffer = new byte[4096];  	while (totalRead < length) {  		read = stream.Read (buffer' 0' 4096);  		data.Write (buffer' 0' read);  		totalRead += read;  	}  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: try {  	CacheItem item;  	if (!index.TryGetValue (id' out item))  		return false;  	stream.Seek (item.Offset' SeekOrigin.Begin);  	int read;  	byte[] buffer;  	buffer = new byte[mKeySize];  	read = stream.Read (buffer' 0' mKeySize);  	if (read != mKeySize) {  		index.Remove (id);  		return false;  	}  	string checkid = Encoding.ASCII.GetString (buffer);  	if (checkid != item.ID) {  		index.Remove (id);  		return false;  	}  	buffer = new byte[8];  	read = stream.Read (buffer' 0' 8);  	if (read != 8) {  		index.Remove (id);  		return false;  	}  	long length = BitConverter.ToInt64 (buffer' 0);  	if (length != item.Length) {  		index.Remove (id);  		return false;  	}  	if (stream.Position + length > stream.Length) {  		index.Remove (id);  		return false;  	}  	data.Seek (0' SeekOrigin.Begin);  	data.SetLength (length);  	long totalRead = 0;  	buffer = new byte[4096];  	while (totalRead < length) {  		read = stream.Read (buffer' 0' 4096);  		data.Write (buffer' 0' read);  		totalRead += read;  	}  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: try {  	CacheItem item;  	if (!index.TryGetValue (id' out item))  		return false;  	stream.Seek (item.Offset' SeekOrigin.Begin);  	int read;  	byte[] buffer;  	buffer = new byte[mKeySize];  	read = stream.Read (buffer' 0' mKeySize);  	if (read != mKeySize) {  		index.Remove (id);  		return false;  	}  	string checkid = Encoding.ASCII.GetString (buffer);  	if (checkid != item.ID) {  		index.Remove (id);  		return false;  	}  	buffer = new byte[8];  	read = stream.Read (buffer' 0' 8);  	if (read != 8) {  		index.Remove (id);  		return false;  	}  	long length = BitConverter.ToInt64 (buffer' 0);  	if (length != item.Length) {  		index.Remove (id);  		return false;  	}  	if (stream.Position + length > stream.Length) {  		index.Remove (id);  		return false;  	}  	data.Seek (0' SeekOrigin.Begin);  	data.SetLength (length);  	long totalRead = 0;  	buffer = new byte[4096];  	while (totalRead < length) {  		read = stream.Read (buffer' 0' 4096);  		data.Write (buffer' 0' read);  		totalRead += read;  	}  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: try {  	CacheItem item;  	if (!index.TryGetValue (id' out item))  		return false;  	stream.Seek (item.Offset' SeekOrigin.Begin);  	int read;  	byte[] buffer;  	buffer = new byte[mKeySize];  	read = stream.Read (buffer' 0' mKeySize);  	if (read != mKeySize) {  		index.Remove (id);  		return false;  	}  	string checkid = Encoding.ASCII.GetString (buffer);  	if (checkid != item.ID) {  		index.Remove (id);  		return false;  	}  	buffer = new byte[8];  	read = stream.Read (buffer' 0' 8);  	if (read != 8) {  		index.Remove (id);  		return false;  	}  	long length = BitConverter.ToInt64 (buffer' 0);  	if (length != item.Length) {  		index.Remove (id);  		return false;  	}  	if (stream.Position + length > stream.Length) {  		index.Remove (id);  		return false;  	}  	data.Seek (0' SeekOrigin.Begin);  	data.SetLength (length);  	long totalRead = 0;  	buffer = new byte[4096];  	while (totalRead < length) {  		read = stream.Read (buffer' 0' 4096);  		data.Write (buffer' 0' read);  		totalRead += read;  	}  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: buffer = new byte[8];  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: read = stream.Read (buffer' 0' 8);  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: if (read != 8) {  	index.Remove (id);  	return false;  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: buffer = new byte[4096];  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: while (totalRead < length) {  	read = stream.Read (buffer' 0' 4096);  	data.Write (buffer' 0' read);  	totalRead += read;  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Read,The following statement contains a magic number: read = stream.Read (buffer' 0' 4096);  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Write,The following statement contains a magic number: try {  	stream.Seek (writeOffset' SeekOrigin.Begin);  	data.Seek (0' SeekOrigin.Begin);  	byte[] buffer;  	buffer = Encoding.ASCII.GetBytes (id);  	stream.Write (buffer' 0' buffer.Length);  	stream.Write (BitConverter.GetBytes (data.Length)' 0' 8);  	int totalRead = 0;  	buffer = new byte[4096];  	while (data.Position < data.Length) {  		int read = data.Read (buffer' 0' 4096);  		stream.Write (buffer' 0' read);  		totalRead += read;  	}  	CacheItem item = new CacheItem (id' writeOffset' totalRead);  	if (index.ContainsKey (id))  		index [id] = item;  	else  		index.Add (id' item);  	writeOffset += 24 + totalRead;  	if (writeOffset > mSize)  		writeOffset = 0;  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Write,The following statement contains a magic number: try {  	stream.Seek (writeOffset' SeekOrigin.Begin);  	data.Seek (0' SeekOrigin.Begin);  	byte[] buffer;  	buffer = Encoding.ASCII.GetBytes (id);  	stream.Write (buffer' 0' buffer.Length);  	stream.Write (BitConverter.GetBytes (data.Length)' 0' 8);  	int totalRead = 0;  	buffer = new byte[4096];  	while (data.Position < data.Length) {  		int read = data.Read (buffer' 0' 4096);  		stream.Write (buffer' 0' read);  		totalRead += read;  	}  	CacheItem item = new CacheItem (id' writeOffset' totalRead);  	if (index.ContainsKey (id))  		index [id] = item;  	else  		index.Add (id' item);  	writeOffset += 24 + totalRead;  	if (writeOffset > mSize)  		writeOffset = 0;  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Write,The following statement contains a magic number: try {  	stream.Seek (writeOffset' SeekOrigin.Begin);  	data.Seek (0' SeekOrigin.Begin);  	byte[] buffer;  	buffer = Encoding.ASCII.GetBytes (id);  	stream.Write (buffer' 0' buffer.Length);  	stream.Write (BitConverter.GetBytes (data.Length)' 0' 8);  	int totalRead = 0;  	buffer = new byte[4096];  	while (data.Position < data.Length) {  		int read = data.Read (buffer' 0' 4096);  		stream.Write (buffer' 0' read);  		totalRead += read;  	}  	CacheItem item = new CacheItem (id' writeOffset' totalRead);  	if (index.ContainsKey (id))  		index [id] = item;  	else  		index.Add (id' item);  	writeOffset += 24 + totalRead;  	if (writeOffset > mSize)  		writeOffset = 0;  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Write,The following statement contains a magic number: try {  	stream.Seek (writeOffset' SeekOrigin.Begin);  	data.Seek (0' SeekOrigin.Begin);  	byte[] buffer;  	buffer = Encoding.ASCII.GetBytes (id);  	stream.Write (buffer' 0' buffer.Length);  	stream.Write (BitConverter.GetBytes (data.Length)' 0' 8);  	int totalRead = 0;  	buffer = new byte[4096];  	while (data.Position < data.Length) {  		int read = data.Read (buffer' 0' 4096);  		stream.Write (buffer' 0' read);  		totalRead += read;  	}  	CacheItem item = new CacheItem (id' writeOffset' totalRead);  	if (index.ContainsKey (id))  		index [id] = item;  	else  		index.Add (id' item);  	writeOffset += 24 + totalRead;  	if (writeOffset > mSize)  		writeOffset = 0;  } finally {  	Monitor.Exit (lockObject);  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Write,The following statement contains a magic number: stream.Write (BitConverter.GetBytes (data.Length)' 0' 8);  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Write,The following statement contains a magic number: buffer = new byte[4096];  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Write,The following statement contains a magic number: while (data.Position < data.Length) {  	int read = data.Read (buffer' 0' 4096);  	stream.Write (buffer' 0' read);  	totalRead += read;  }  
Magic Number,ImageGlass.ImageListView,DiskCache,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\DiskCache.cs,Write,The following statement contains a magic number: writeOffset += 24 + totalRead;  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mCacheLimitAsMemory = 20 * 1024 * 1024;  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mCacheLimitAsMemory = 20 * 1024 * 1024;  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mCacheLimitAsMemory = 20 * 1024 * 1024;  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mPaneWidth = 240;  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: Size = new Size (120' 100);  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: Size = new Size (120' 100);  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mCheckBoxPadding = new Size (2' 2);  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mCheckBoxPadding = new Size (2' 2);  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mIconPadding = new Size (2' 2);  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mIconPadding = new Size (2' 2);  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mThumbnailSize = new Size (96' 96);  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,ImageListView,The following statement contains a magic number: mThumbnailSize = new Size (96' 96);  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: if (View == View.Details && pt.Y <= mRenderer.MeasureColumnHeaderHeight ()) {  	int i = 0;  	int x = layoutManager.ColumnHeaderBounds.Left;  	ImageListViewColumnHeader colIndex = null;  	ImageListViewColumnHeader sepIndex = null;  	if (AllowColumnClick || AllowColumnResize) {  		foreach (ImageListViewColumnHeader col in Columns.GetDisplayedColumns ()) {  			// Over a column?  			if (pt.X >= x && pt.X < x + col.Width + SeparatorSize / 2)  				colIndex = col;  			// Over a colummn separator?  			if (pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2)  				sepIndex = col;  			if (colIndex != null)  				break;  			x += col.Width;  			i++;  		}  	}  	hitInfo = new HitInfo (colIndex' sepIndex);  } else if (View == View.Pane && pt.X <= mPaneWidth) {  	bool overBorder = (pt.X >= mPaneWidth - PaneBorderSize);  	hitInfo = new HitInfo (overBorder);  } else {  	if (showGroups) {  		foreach (ImageListViewGroup @group in groups) {  			if (@group.headerBounds.Contains (pt)) {  				hitInfo = new HitInfo (@group);  				return;  			}  		}  	}  	int itemIndex = -1;  	bool checkBoxHit = false;  	int subItemIndex = -1;  	if (showGroups) {  		foreach (ImageListViewGroup @group in groups) {  			if (@group.itemBounds.Contains (pt)) {  				// Normalize to group item area coordinates  				pt.X -= @group.itemBounds.Left;  				pt.Y -= @group.itemBounds.Top;  				if (pt.X > 0 && pt.Y > 0) {  					int col = pt.X / layoutManager.ItemSizeWithMargin.Width;  					int row = pt.Y / layoutManager.ItemSizeWithMargin.Height;  					int index = @group.FirstItemIndex + row * @group.itemCols + col;  					if (index >= 0 && index <= Items.Count - 1) {  						Rectangle bounds = layoutManager.GetItemBounds (index);  						if (bounds.Contains (pt.X + @group.itemBounds.Left' pt.Y + @group.itemBounds.Top))  							itemIndex = index;  						if (ShowCheckBoxes) {  							Rectangle checkBoxBounds = layoutManager.GetCheckBoxBounds (index);  							if (checkBoxBounds.Contains (pt.X + @group.itemBounds.Left' pt.Y + @group.itemBounds.Top))  								checkBoxHit = true;  						}  					}  					// Calculate sub item index  					if (itemIndex != -1 && View == View.Details) {  						int xc1 = layoutManager.ColumnHeaderBounds.Left;  						int colIndex = 0;  						foreach (ImageListViewColumnHeader column in mColumns.GetDisplayedColumns ()) {  							int xc2 = xc1 + column.Width;  							if (pt.X >= xc1 && pt.X < xc2) {  								subItemIndex = colIndex;  								break;  							}  							colIndex++;  							xc1 = xc2;  						}  					}  				}  				break;  			}  		}  	} else {  		// Normalize to item area coordinates  		pt.X -= layoutManager.ItemAreaBounds.Left;  		pt.Y -= layoutManager.ItemAreaBounds.Top;  		if (pt.X > 0 && pt.Y > 0) {  			int col = (pt.X + mViewOffset.X) / layoutManager.ItemSizeWithMargin.Width;  			int row = (pt.Y + mViewOffset.Y) / layoutManager.ItemSizeWithMargin.Height;  			if (ScrollOrientation == ScrollOrientation.HorizontalScroll || (ScrollOrientation == ScrollOrientation.VerticalScroll && col <= layoutManager.Cols)) {  				int index = row * layoutManager.Cols + col;  				if (index >= 0 && index <= Items.Count - 1) {  					Rectangle bounds = layoutManager.GetItemBounds (index);  					if (bounds.Contains (pt.X + layoutManager.ItemAreaBounds.Left' pt.Y + layoutManager.ItemAreaBounds.Top))  						itemIndex = index;  					if (ShowCheckBoxes) {  						Rectangle checkBoxBounds = layoutManager.GetCheckBoxBounds (index);  						if (checkBoxBounds.Contains (pt.X + layoutManager.ItemAreaBounds.Left' pt.Y + layoutManager.ItemAreaBounds.Top))  							checkBoxHit = true;  					}  				}  			}  			// Calculate sub item index  			if (itemIndex != -1 && View == View.Details) {  				int xc1 = layoutManager.ColumnHeaderBounds.Left;  				int colIndex = 0;  				foreach (ImageListViewColumnHeader column in mColumns.GetDisplayedColumns ()) {  					int xc2 = xc1 + column.Width;  					if (pt.X >= xc1 && pt.X < xc2) {  						subItemIndex = colIndex;  						break;  					}  					colIndex++;  					xc1 = xc2;  				}  			}  		}  	}  	hitInfo = new HitInfo (itemIndex' subItemIndex' checkBoxHit);  }  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: if (View == View.Details && pt.Y <= mRenderer.MeasureColumnHeaderHeight ()) {  	int i = 0;  	int x = layoutManager.ColumnHeaderBounds.Left;  	ImageListViewColumnHeader colIndex = null;  	ImageListViewColumnHeader sepIndex = null;  	if (AllowColumnClick || AllowColumnResize) {  		foreach (ImageListViewColumnHeader col in Columns.GetDisplayedColumns ()) {  			// Over a column?  			if (pt.X >= x && pt.X < x + col.Width + SeparatorSize / 2)  				colIndex = col;  			// Over a colummn separator?  			if (pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2)  				sepIndex = col;  			if (colIndex != null)  				break;  			x += col.Width;  			i++;  		}  	}  	hitInfo = new HitInfo (colIndex' sepIndex);  } else if (View == View.Pane && pt.X <= mPaneWidth) {  	bool overBorder = (pt.X >= mPaneWidth - PaneBorderSize);  	hitInfo = new HitInfo (overBorder);  } else {  	if (showGroups) {  		foreach (ImageListViewGroup @group in groups) {  			if (@group.headerBounds.Contains (pt)) {  				hitInfo = new HitInfo (@group);  				return;  			}  		}  	}  	int itemIndex = -1;  	bool checkBoxHit = false;  	int subItemIndex = -1;  	if (showGroups) {  		foreach (ImageListViewGroup @group in groups) {  			if (@group.itemBounds.Contains (pt)) {  				// Normalize to group item area coordinates  				pt.X -= @group.itemBounds.Left;  				pt.Y -= @group.itemBounds.Top;  				if (pt.X > 0 && pt.Y > 0) {  					int col = pt.X / layoutManager.ItemSizeWithMargin.Width;  					int row = pt.Y / layoutManager.ItemSizeWithMargin.Height;  					int index = @group.FirstItemIndex + row * @group.itemCols + col;  					if (index >= 0 && index <= Items.Count - 1) {  						Rectangle bounds = layoutManager.GetItemBounds (index);  						if (bounds.Contains (pt.X + @group.itemBounds.Left' pt.Y + @group.itemBounds.Top))  							itemIndex = index;  						if (ShowCheckBoxes) {  							Rectangle checkBoxBounds = layoutManager.GetCheckBoxBounds (index);  							if (checkBoxBounds.Contains (pt.X + @group.itemBounds.Left' pt.Y + @group.itemBounds.Top))  								checkBoxHit = true;  						}  					}  					// Calculate sub item index  					if (itemIndex != -1 && View == View.Details) {  						int xc1 = layoutManager.ColumnHeaderBounds.Left;  						int colIndex = 0;  						foreach (ImageListViewColumnHeader column in mColumns.GetDisplayedColumns ()) {  							int xc2 = xc1 + column.Width;  							if (pt.X >= xc1 && pt.X < xc2) {  								subItemIndex = colIndex;  								break;  							}  							colIndex++;  							xc1 = xc2;  						}  					}  				}  				break;  			}  		}  	} else {  		// Normalize to item area coordinates  		pt.X -= layoutManager.ItemAreaBounds.Left;  		pt.Y -= layoutManager.ItemAreaBounds.Top;  		if (pt.X > 0 && pt.Y > 0) {  			int col = (pt.X + mViewOffset.X) / layoutManager.ItemSizeWithMargin.Width;  			int row = (pt.Y + mViewOffset.Y) / layoutManager.ItemSizeWithMargin.Height;  			if (ScrollOrientation == ScrollOrientation.HorizontalScroll || (ScrollOrientation == ScrollOrientation.VerticalScroll && col <= layoutManager.Cols)) {  				int index = row * layoutManager.Cols + col;  				if (index >= 0 && index <= Items.Count - 1) {  					Rectangle bounds = layoutManager.GetItemBounds (index);  					if (bounds.Contains (pt.X + layoutManager.ItemAreaBounds.Left' pt.Y + layoutManager.ItemAreaBounds.Top))  						itemIndex = index;  					if (ShowCheckBoxes) {  						Rectangle checkBoxBounds = layoutManager.GetCheckBoxBounds (index);  						if (checkBoxBounds.Contains (pt.X + layoutManager.ItemAreaBounds.Left' pt.Y + layoutManager.ItemAreaBounds.Top))  							checkBoxHit = true;  					}  				}  			}  			// Calculate sub item index  			if (itemIndex != -1 && View == View.Details) {  				int xc1 = layoutManager.ColumnHeaderBounds.Left;  				int colIndex = 0;  				foreach (ImageListViewColumnHeader column in mColumns.GetDisplayedColumns ()) {  					int xc2 = xc1 + column.Width;  					if (pt.X >= xc1 && pt.X < xc2) {  						subItemIndex = colIndex;  						break;  					}  					colIndex++;  					xc1 = xc2;  				}  			}  		}  	}  	hitInfo = new HitInfo (itemIndex' subItemIndex' checkBoxHit);  }  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: if (View == View.Details && pt.Y <= mRenderer.MeasureColumnHeaderHeight ()) {  	int i = 0;  	int x = layoutManager.ColumnHeaderBounds.Left;  	ImageListViewColumnHeader colIndex = null;  	ImageListViewColumnHeader sepIndex = null;  	if (AllowColumnClick || AllowColumnResize) {  		foreach (ImageListViewColumnHeader col in Columns.GetDisplayedColumns ()) {  			// Over a column?  			if (pt.X >= x && pt.X < x + col.Width + SeparatorSize / 2)  				colIndex = col;  			// Over a colummn separator?  			if (pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2)  				sepIndex = col;  			if (colIndex != null)  				break;  			x += col.Width;  			i++;  		}  	}  	hitInfo = new HitInfo (colIndex' sepIndex);  } else if (View == View.Pane && pt.X <= mPaneWidth) {  	bool overBorder = (pt.X >= mPaneWidth - PaneBorderSize);  	hitInfo = new HitInfo (overBorder);  } else {  	if (showGroups) {  		foreach (ImageListViewGroup @group in groups) {  			if (@group.headerBounds.Contains (pt)) {  				hitInfo = new HitInfo (@group);  				return;  			}  		}  	}  	int itemIndex = -1;  	bool checkBoxHit = false;  	int subItemIndex = -1;  	if (showGroups) {  		foreach (ImageListViewGroup @group in groups) {  			if (@group.itemBounds.Contains (pt)) {  				// Normalize to group item area coordinates  				pt.X -= @group.itemBounds.Left;  				pt.Y -= @group.itemBounds.Top;  				if (pt.X > 0 && pt.Y > 0) {  					int col = pt.X / layoutManager.ItemSizeWithMargin.Width;  					int row = pt.Y / layoutManager.ItemSizeWithMargin.Height;  					int index = @group.FirstItemIndex + row * @group.itemCols + col;  					if (index >= 0 && index <= Items.Count - 1) {  						Rectangle bounds = layoutManager.GetItemBounds (index);  						if (bounds.Contains (pt.X + @group.itemBounds.Left' pt.Y + @group.itemBounds.Top))  							itemIndex = index;  						if (ShowCheckBoxes) {  							Rectangle checkBoxBounds = layoutManager.GetCheckBoxBounds (index);  							if (checkBoxBounds.Contains (pt.X + @group.itemBounds.Left' pt.Y + @group.itemBounds.Top))  								checkBoxHit = true;  						}  					}  					// Calculate sub item index  					if (itemIndex != -1 && View == View.Details) {  						int xc1 = layoutManager.ColumnHeaderBounds.Left;  						int colIndex = 0;  						foreach (ImageListViewColumnHeader column in mColumns.GetDisplayedColumns ()) {  							int xc2 = xc1 + column.Width;  							if (pt.X >= xc1 && pt.X < xc2) {  								subItemIndex = colIndex;  								break;  							}  							colIndex++;  							xc1 = xc2;  						}  					}  				}  				break;  			}  		}  	} else {  		// Normalize to item area coordinates  		pt.X -= layoutManager.ItemAreaBounds.Left;  		pt.Y -= layoutManager.ItemAreaBounds.Top;  		if (pt.X > 0 && pt.Y > 0) {  			int col = (pt.X + mViewOffset.X) / layoutManager.ItemSizeWithMargin.Width;  			int row = (pt.Y + mViewOffset.Y) / layoutManager.ItemSizeWithMargin.Height;  			if (ScrollOrientation == ScrollOrientation.HorizontalScroll || (ScrollOrientation == ScrollOrientation.VerticalScroll && col <= layoutManager.Cols)) {  				int index = row * layoutManager.Cols + col;  				if (index >= 0 && index <= Items.Count - 1) {  					Rectangle bounds = layoutManager.GetItemBounds (index);  					if (bounds.Contains (pt.X + layoutManager.ItemAreaBounds.Left' pt.Y + layoutManager.ItemAreaBounds.Top))  						itemIndex = index;  					if (ShowCheckBoxes) {  						Rectangle checkBoxBounds = layoutManager.GetCheckBoxBounds (index);  						if (checkBoxBounds.Contains (pt.X + layoutManager.ItemAreaBounds.Left' pt.Y + layoutManager.ItemAreaBounds.Top))  							checkBoxHit = true;  					}  				}  			}  			// Calculate sub item index  			if (itemIndex != -1 && View == View.Details) {  				int xc1 = layoutManager.ColumnHeaderBounds.Left;  				int colIndex = 0;  				foreach (ImageListViewColumnHeader column in mColumns.GetDisplayedColumns ()) {  					int xc2 = xc1 + column.Width;  					if (pt.X >= xc1 && pt.X < xc2) {  						subItemIndex = colIndex;  						break;  					}  					colIndex++;  					xc1 = xc2;  				}  			}  		}  	}  	hitInfo = new HitInfo (itemIndex' subItemIndex' checkBoxHit);  }  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: if (AllowColumnClick || AllowColumnResize) {  	foreach (ImageListViewColumnHeader col in Columns.GetDisplayedColumns ()) {  		// Over a column?  		if (pt.X >= x && pt.X < x + col.Width + SeparatorSize / 2)  			colIndex = col;  		// Over a colummn separator?  		if (pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2)  			sepIndex = col;  		if (colIndex != null)  			break;  		x += col.Width;  		i++;  	}  }  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: if (AllowColumnClick || AllowColumnResize) {  	foreach (ImageListViewColumnHeader col in Columns.GetDisplayedColumns ()) {  		// Over a column?  		if (pt.X >= x && pt.X < x + col.Width + SeparatorSize / 2)  			colIndex = col;  		// Over a colummn separator?  		if (pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2)  			sepIndex = col;  		if (colIndex != null)  			break;  		x += col.Width;  		i++;  	}  }  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: if (AllowColumnClick || AllowColumnResize) {  	foreach (ImageListViewColumnHeader col in Columns.GetDisplayedColumns ()) {  		// Over a column?  		if (pt.X >= x && pt.X < x + col.Width + SeparatorSize / 2)  			colIndex = col;  		// Over a colummn separator?  		if (pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2)  			sepIndex = col;  		if (colIndex != null)  			break;  		x += col.Width;  		i++;  	}  }  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: foreach (ImageListViewColumnHeader col in Columns.GetDisplayedColumns ()) {  	// Over a column?  	if (pt.X >= x && pt.X < x + col.Width + SeparatorSize / 2)  		colIndex = col;  	// Over a colummn separator?  	if (pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2)  		sepIndex = col;  	if (colIndex != null)  		break;  	x += col.Width;  	i++;  }  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: foreach (ImageListViewColumnHeader col in Columns.GetDisplayedColumns ()) {  	// Over a column?  	if (pt.X >= x && pt.X < x + col.Width + SeparatorSize / 2)  		colIndex = col;  	// Over a colummn separator?  	if (pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2)  		sepIndex = col;  	if (colIndex != null)  		break;  	x += col.Width;  	i++;  }  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: foreach (ImageListViewColumnHeader col in Columns.GetDisplayedColumns ()) {  	// Over a column?  	if (pt.X >= x && pt.X < x + col.Width + SeparatorSize / 2)  		colIndex = col;  	// Over a colummn separator?  	if (pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2)  		sepIndex = col;  	if (colIndex != null)  		break;  	x += col.Width;  	i++;  }  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: if (pt.X >= x && pt.X < x + col.Width + SeparatorSize / 2)  	colIndex = col;  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: if (pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2)  	sepIndex = col;  
Magic Number,ImageGlass.ImageListView,ImageListView,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewGroupCollection.cs,HitTest,The following statement contains a magic number: if (pt.X > x + col.Width - SeparatorSize / 2 && pt.X < x + col.Width + SeparatorSize / 2)  	sepIndex = col;  
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: diskCache = new DiskCache (string.Empty' 100 * 1024 * 1024' DiskCache.SyncBehavior.SyncNone' 32);  
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: diskCache = new DiskCache (string.Empty' 100 * 1024 * 1024' DiskCache.SyncBehavior.SyncNone' 32);  
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: diskCache = new DiskCache (string.Empty' 100 * 1024 * 1024' DiskCache.SyncBehavior.SyncNone' 32);  
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: diskCache = new DiskCache (string.Empty' 100 * 1024 * 1024' DiskCache.SyncBehavior.SyncNone' 32);  
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: CacheLimitAsMemory = 20 * 1024 * 1024;  
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: CacheLimitAsMemory = 20 * 1024 * 1024;  
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,ImageListViewCacheThumbnail,The following statement contains a magic number: CacheLimitAsMemory = 20 * 1024 * 1024;  
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,IsPurgeNeeded,The following statement contains a magic number: return ((CacheLimitAsMemory != 0 && MemoryUsedByRemoved > CacheLimitAsMemory / 4) || (CacheLimitAsItemCount != 0 && removedItems.Count > CacheLimitAsItemCount / 4));  
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,IsPurgeNeeded,The following statement contains a magic number: return ((CacheLimitAsMemory != 0 && MemoryUsedByRemoved > CacheLimitAsMemory / 4) || (CacheLimitAsItemCount != 0 && removedItems.Count > CacheLimitAsItemCount / 4));  
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetImageMemorySize,The following statement contains a magic number: return width * height * 24 / 8;  
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,GetImageMemorySize,The following statement contains a magic number: return width * height * 24 / 8;  
Magic Number,ImageGlass.ImageListView,ImageListViewCacheThumbnail,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewCacheThumbnail.cs,AddToGalleryCache,The following statement contains a magic number: RunWorker (new CacheRequest (guid' adaptor' key' thumbSize' useEmbeddedThumbnails' autoRotate' useWIC' RequestType.Gallery)' 2);  
Magic Number,ImageGlass.ImageListView,QueuedBackgroundWorker,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorker.cs,QueuedBackgroundWorker,The following statement contains a magic number: threadCount = 5;  
Magic Number,ImageGlass.ImageListView,QueuedBackgroundWorker,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\QueuedBackgroundWorker.cs,QueuedBackgroundWorker,The following statement contains a magic number: priorityQueues = 5;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,ExifURational,The following statement contains a magic number: return BitConverter.ToUInt32 (value' 0).ToString () + "/" + BitConverter.ToUInt32 (value' 4).ToString ();  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,ExifRational,The following statement contains a magic number: return BitConverter.ToInt32 (value' 0).ToString () + "/" + BitConverter.ToInt32 (value' 4).ToString ();  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Value != null && prop.Value.Length != 0) {  		switch (prop.Id) {  		case TagImageDescription:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				ImageDescription = str;  			}  			break;  		case TagArtist:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Artist = str;  			}  			break;  		case TagEquipmentManufacturer:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentManufacturer = str;  			}  			break;  		case TagEquipmentModel:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				EquipmentModel = str;  			}  			break;  		case TagDateTimeOriginal:  			dateTime = ExifDateTime (prop.Value);  			if (dateTime != DateTime.MinValue) {  				DateTaken = dateTime;  			}  			break;  		case TagExposureTime:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					ExposureTime = dVal;  				}  			}  			break;  		case TagFNumber:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FNumber = dVal;  				}  			}  			break;  		case TagISOSpeed:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal != 0) {  					ISOSpeed = iVal;  				}  			}  			break;  		case TagCopyright:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Copyright = str;  			}  			break;  		case TagRating:  			if (Rating == 0 && prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				if (iVal == 1)  					Rating = 1;  				else if (iVal == 2)  					Rating = 25;  				else if (iVal == 3)  					Rating = 50;  				else if (iVal == 4)  					Rating = 75;  				else if (iVal == 5)  					Rating = 99;  			}  			break;  		case TagRatingPercent:  			if (prop.Value.Length == 2) {  				iVal = ExifUShort (prop.Value);  				Rating = iVal;  			}  			break;  		case TagUserComment:  			str = ExifAscii (prop.Value);  			if (str != String.Empty) {  				Comment = str;  			}  			break;  		case TagSoftware:  			str = ExifAscii (prop.Value).Trim ();  			if (str != String.Empty) {  				Software = str;  			}  			break;  		case TagFocalLength:  			if (prop.Value.Length == 8) {  				dVal = ExifDouble (prop.Value);  				if (dVal != 0.0) {  					FocalLength = dVal;  				}  			}  			break;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value != null && prop.Value.Length != 0) {  	switch (prop.Id) {  	case TagImageDescription:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			ImageDescription = str;  		}  		break;  	case TagArtist:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Artist = str;  		}  		break;  	case TagEquipmentManufacturer:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentManufacturer = str;  		}  		break;  	case TagEquipmentModel:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			EquipmentModel = str;  		}  		break;  	case TagDateTimeOriginal:  		dateTime = ExifDateTime (prop.Value);  		if (dateTime != DateTime.MinValue) {  			DateTaken = dateTime;  		}  		break;  	case TagExposureTime:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				ExposureTime = dVal;  			}  		}  		break;  	case TagFNumber:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FNumber = dVal;  			}  		}  		break;  	case TagISOSpeed:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal != 0) {  				ISOSpeed = iVal;  			}  		}  		break;  	case TagCopyright:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Copyright = str;  		}  		break;  	case TagRating:  		if (Rating == 0 && prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			if (iVal == 1)  				Rating = 1;  			else if (iVal == 2)  				Rating = 25;  			else if (iVal == 3)  				Rating = 50;  			else if (iVal == 4)  				Rating = 75;  			else if (iVal == 5)  				Rating = 99;  		}  		break;  	case TagRatingPercent:  		if (prop.Value.Length == 2) {  			iVal = ExifUShort (prop.Value);  			Rating = iVal;  		}  		break;  	case TagUserComment:  		str = ExifAscii (prop.Value);  		if (str != String.Empty) {  			Comment = str;  		}  		break;  	case TagSoftware:  		str = ExifAscii (prop.Value).Trim ();  		if (str != String.Empty) {  			Software = str;  		}  		break;  	case TagFocalLength:  		if (prop.Value.Length == 8) {  			dVal = ExifDouble (prop.Value);  			if (dVal != 0.0) {  				FocalLength = dVal;  			}  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value.Length == 8) {  	dVal = ExifDouble (prop.Value);  	if (dVal != 0.0) {  		ExposureTime = dVal;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value.Length == 8) {  	dVal = ExifDouble (prop.Value);  	if (dVal != 0.0) {  		FNumber = dVal;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value.Length == 2) {  	iVal = ExifUShort (prop.Value);  	if (iVal != 0) {  		ISOSpeed = iVal;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (Rating == 0 && prop.Value.Length == 2) {  	iVal = ExifUShort (prop.Value);  	if (iVal == 1)  		Rating = 1;  	else if (iVal == 2)  		Rating = 25;  	else if (iVal == 3)  		Rating = 50;  	else if (iVal == 4)  		Rating = 75;  	else if (iVal == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (Rating == 0 && prop.Value.Length == 2) {  	iVal = ExifUShort (prop.Value);  	if (iVal == 1)  		Rating = 1;  	else if (iVal == 2)  		Rating = 25;  	else if (iVal == 3)  		Rating = 50;  	else if (iVal == 4)  		Rating = 75;  	else if (iVal == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (Rating == 0 && prop.Value.Length == 2) {  	iVal = ExifUShort (prop.Value);  	if (iVal == 1)  		Rating = 1;  	else if (iVal == 2)  		Rating = 25;  	else if (iVal == 3)  		Rating = 50;  	else if (iVal == 4)  		Rating = 75;  	else if (iVal == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (Rating == 0 && prop.Value.Length == 2) {  	iVal = ExifUShort (prop.Value);  	if (iVal == 1)  		Rating = 1;  	else if (iVal == 2)  		Rating = 25;  	else if (iVal == 3)  		Rating = 50;  	else if (iVal == 4)  		Rating = 75;  	else if (iVal == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (Rating == 0 && prop.Value.Length == 2) {  	iVal = ExifUShort (prop.Value);  	if (iVal == 1)  		Rating = 1;  	else if (iVal == 2)  		Rating = 25;  	else if (iVal == 3)  		Rating = 50;  	else if (iVal == 4)  		Rating = 75;  	else if (iVal == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (Rating == 0 && prop.Value.Length == 2) {  	iVal = ExifUShort (prop.Value);  	if (iVal == 1)  		Rating = 1;  	else if (iVal == 2)  		Rating = 25;  	else if (iVal == 3)  		Rating = 50;  	else if (iVal == 4)  		Rating = 75;  	else if (iVal == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (Rating == 0 && prop.Value.Length == 2) {  	iVal = ExifUShort (prop.Value);  	if (iVal == 1)  		Rating = 1;  	else if (iVal == 2)  		Rating = 25;  	else if (iVal == 3)  		Rating = 50;  	else if (iVal == 4)  		Rating = 75;  	else if (iVal == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (Rating == 0 && prop.Value.Length == 2) {  	iVal = ExifUShort (prop.Value);  	if (iVal == 1)  		Rating = 1;  	else if (iVal == 2)  		Rating = 25;  	else if (iVal == 3)  		Rating = 50;  	else if (iVal == 4)  		Rating = 75;  	else if (iVal == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (Rating == 0 && prop.Value.Length == 2) {  	iVal = ExifUShort (prop.Value);  	if (iVal == 1)  		Rating = 1;  	else if (iVal == 2)  		Rating = 25;  	else if (iVal == 3)  		Rating = 50;  	else if (iVal == 4)  		Rating = 75;  	else if (iVal == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 1)  	Rating = 1;  else if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 1)  	Rating = 1;  else if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 1)  	Rating = 1;  else if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 1)  	Rating = 1;  else if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 1)  	Rating = 1;  else if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 1)  	Rating = 1;  else if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 1)  	Rating = 1;  else if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 1)  	Rating = 1;  else if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 2)  	Rating = 25;  else if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: Rating = 25;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 3)  	Rating = 50;  else if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: Rating = 50;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 4)  	Rating = 75;  else if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: Rating = 75;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (iVal == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value.Length == 2) {  	iVal = ExifUShort (prop.Value);  	Rating = iVal;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following statement contains a magic number: if (prop.Value.Length == 8) {  	dVal = ExifDouble (prop.Value);  	if (dVal != 0.0) {  		FocalLength = dVal;  	}  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (val != null) {  	ushort simpleRating = (ushort)val;  	if (simpleRating == 1)  		Rating = 1;  	else if (simpleRating == 2)  		Rating = 25;  	else if (simpleRating == 3)  		Rating = 50;  	else if (simpleRating == 4)  		Rating = 75;  	else if (simpleRating == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (val != null) {  	ushort simpleRating = (ushort)val;  	if (simpleRating == 1)  		Rating = 1;  	else if (simpleRating == 2)  		Rating = 25;  	else if (simpleRating == 3)  		Rating = 50;  	else if (simpleRating == 4)  		Rating = 75;  	else if (simpleRating == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (val != null) {  	ushort simpleRating = (ushort)val;  	if (simpleRating == 1)  		Rating = 1;  	else if (simpleRating == 2)  		Rating = 25;  	else if (simpleRating == 3)  		Rating = 50;  	else if (simpleRating == 4)  		Rating = 75;  	else if (simpleRating == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (val != null) {  	ushort simpleRating = (ushort)val;  	if (simpleRating == 1)  		Rating = 1;  	else if (simpleRating == 2)  		Rating = 25;  	else if (simpleRating == 3)  		Rating = 50;  	else if (simpleRating == 4)  		Rating = 75;  	else if (simpleRating == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (val != null) {  	ushort simpleRating = (ushort)val;  	if (simpleRating == 1)  		Rating = 1;  	else if (simpleRating == 2)  		Rating = 25;  	else if (simpleRating == 3)  		Rating = 50;  	else if (simpleRating == 4)  		Rating = 75;  	else if (simpleRating == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (val != null) {  	ushort simpleRating = (ushort)val;  	if (simpleRating == 1)  		Rating = 1;  	else if (simpleRating == 2)  		Rating = 25;  	else if (simpleRating == 3)  		Rating = 50;  	else if (simpleRating == 4)  		Rating = 75;  	else if (simpleRating == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (val != null) {  	ushort simpleRating = (ushort)val;  	if (simpleRating == 1)  		Rating = 1;  	else if (simpleRating == 2)  		Rating = 25;  	else if (simpleRating == 3)  		Rating = 50;  	else if (simpleRating == 4)  		Rating = 75;  	else if (simpleRating == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (val != null) {  	ushort simpleRating = (ushort)val;  	if (simpleRating == 1)  		Rating = 1;  	else if (simpleRating == 2)  		Rating = 25;  	else if (simpleRating == 3)  		Rating = 50;  	else if (simpleRating == 4)  		Rating = 75;  	else if (simpleRating == 5)  		Rating = 99;  }  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 1)  	Rating = 1;  else if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 1)  	Rating = 1;  else if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 1)  	Rating = 1;  else if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 1)  	Rating = 1;  else if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 1)  	Rating = 1;  else if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 1)  	Rating = 1;  else if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 1)  	Rating = 1;  else if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 1)  	Rating = 1;  else if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 2)  	Rating = 25;  else if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: Rating = 25;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 3)  	Rating = 50;  else if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: Rating = 50;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 4)  	Rating = 75;  else if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: Rating = 75;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: if (simpleRating == 5)  	Rating = 99;  
Magic Number,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaWpf,The following statement contains a magic number: Rating = 99;  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mBorderColor = Color.FromArgb (64' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mUnFocusedColor1 = Color.FromArgb (16' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mUnFocusedColor2 = Color.FromArgb (64' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mUnFocusedBorderColor = Color.FromArgb (128' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mHoverColor1 = Color.FromArgb (8' SystemColors.Highlight);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mHoverColor2 = Color.FromArgb (64' SystemColors.Highlight);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mHoverBorderColor = Color.FromArgb (64' SystemColors.Highlight);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mSelectedColor1 = Color.FromArgb (16' SystemColors.Highlight);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mSelectedColor2 = Color.FromArgb (128' SystemColors.Highlight);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mSelectedBorderColor = Color.FromArgb (128' SystemColors.Highlight);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mDisabledColor2 = Color.FromArgb (32' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mDisabledBorderColor = Color.FromArgb (32' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mDisabledForeColor = Color.FromArgb (128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mDisabledForeColor = Color.FromArgb (128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mDisabledForeColor = Color.FromArgb (128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mImageInnerBorderColor = Color.FromArgb (128' Color.White);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mImageOuterBorderColor = Color.FromArgb (128' Color.Gray);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mColumnHeaderBackColor1 = Color.FromArgb (32' SystemColors.Control);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mColumnHeaderBackColor2 = Color.FromArgb (196' SystemColors.Control);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mColumnHeaderHoverColor1 = Color.FromArgb (16' SystemColors.Highlight);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mColumnHeaderHoverColor2 = Color.FromArgb (64' SystemColors.Highlight);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mColumnSelectColor = Color.FromArgb (16' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mColumnSeparatorColor = Color.FromArgb (32' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mPaneBackColor = Color.FromArgb (16' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mPaneSeparatorColor = Color.FromArgb (128' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mPaneLabelColor = Color.FromArgb (196' Color.Black);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mSelectionRectangleColor1 = Color.FromArgb (128' SystemColors.Highlight);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,ImageListViewColor,The following statement contains a magic number: mSelectionRectangleColor2 = Color.FromArgb (128' SystemColors.Highlight);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledBackColor = Color.FromArgb (220' 220' 220);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledBackColor = Color.FromArgb (220' 220' 220);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledBackColor = Color.FromArgb (220' 220' 220);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ForeColor = Color.FromArgb (60' 60' 60);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ForeColor = Color.FromArgb (60' 60' 60);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ForeColor = Color.FromArgb (60' 60' 60);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.BorderColor = Color.FromArgb (187' 190' 183);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.BorderColor = Color.FromArgb (187' 190' 183);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.BorderColor = Color.FromArgb (187' 190' 183);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedColor1 = Color.FromArgb (235' 235' 235);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedColor1 = Color.FromArgb (235' 235' 235);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedColor1 = Color.FromArgb (235' 235' 235);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedColor2 = Color.FromArgb (217' 217' 217);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedColor2 = Color.FromArgb (217' 217' 217);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedColor2 = Color.FromArgb (217' 217' 217);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedBorderColor = Color.FromArgb (168' 169' 161);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedBorderColor = Color.FromArgb (168' 169' 161);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedBorderColor = Color.FromArgb (168' 169' 161);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedForeColor = Color.FromArgb (40' 40' 40);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedForeColor = Color.FromArgb (40' 40' 40);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.UnFocusedForeColor = Color.FromArgb (40' 40' 40);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedColor1 = Color.FromArgb (244' 125' 77);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedColor1 = Color.FromArgb (244' 125' 77);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedColor1 = Color.FromArgb (244' 125' 77);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb (235' 110' 60);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb (235' 110' 60);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb (235' 110' 60);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedBorderColor = Color.FromArgb (240' 119' 70);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedBorderColor = Color.FromArgb (240' 119' 70);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectedBorderColor = Color.FromArgb (240' 119' 70);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledColor1 = Color.FromArgb (217' 217' 217);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledColor1 = Color.FromArgb (217' 217' 217);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledColor1 = Color.FromArgb (217' 217' 217);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledColor2 = Color.FromArgb (197' 197' 197);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledColor2 = Color.FromArgb (197' 197' 197);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledColor2 = Color.FromArgb (197' 197' 197);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledBorderColor = Color.FromArgb (128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledBorderColor = Color.FromArgb (128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledBorderColor = Color.FromArgb (128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledForeColor = Color.FromArgb (128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledForeColor = Color.FromArgb (128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.DisabledForeColor = Color.FromArgb (128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.InsertionCaretColor = Color.FromArgb (240' 119' 70);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.InsertionCaretColor = Color.FromArgb (240' 119' 70);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.InsertionCaretColor = Color.FromArgb (240' 119' 70);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.CellForeColor = Color.FromArgb (60' 60' 60);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.CellForeColor = Color.FromArgb (60' 60' 60);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.CellForeColor = Color.FromArgb (60' 60' 60);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb (247' 247' 247);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb (247' 247' 247);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb (247' 247' 247);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb (235' 235' 235);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb (235' 235' 235);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb (235' 235' 235);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb (245' 245' 245);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb (245' 245' 245);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb (245' 245' 245);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderForeColor = Color.FromArgb (60' 60' 60);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderForeColor = Color.FromArgb (60' 60' 60);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnHeaderForeColor = Color.FromArgb (60' 60' 60);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb (34' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb (34' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb (34' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb (34' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSeparatorColor = Color.FromArgb (106' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSeparatorColor = Color.FromArgb (106' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSeparatorColor = Color.FromArgb (106' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.ColumnSeparatorColor = Color.FromArgb (106' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.mAlternateBackColor = Color.FromArgb (234' 234' 234);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.mAlternateBackColor = Color.FromArgb (234' 234' 234);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.mAlternateBackColor = Color.FromArgb (234' 234' 234);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.mAlternateCellForeColor = Color.FromArgb (40' 40' 40);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.mAlternateCellForeColor = Color.FromArgb (40' 40' 40);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.mAlternateCellForeColor = Color.FromArgb (40' 40' 40);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.PaneSeparatorColor = Color.FromArgb (216' 216' 216);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.PaneSeparatorColor = Color.FromArgb (216' 216' 216);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.PaneSeparatorColor = Color.FromArgb (216' 216' 216);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.PaneLabelColor = Color.FromArgb (156' 156' 156);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.PaneLabelColor = Color.FromArgb (156' 156' 156);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.PaneLabelColor = Color.FromArgb (156' 156' 156);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb (64' 240' 116' 68);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb (64' 240' 116' 68);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb (64' 240' 116' 68);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb (64' 240' 116' 68);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb (64' 240' 116' 68);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb (64' 240' 116' 68);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb (64' 240' 116' 68);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb (64' 240' 116' 68);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb (240' 119' 70);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb (240' 119' 70);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetMandarinTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb (240' 119' 70);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.UnFocusedColor1 = Color.FromArgb (16' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.UnFocusedColor2 = Color.FromArgb (64' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.UnFocusedBorderColor = Color.FromArgb (128' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.HoverColor1 = Color.FromArgb (64' Color.White);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.HoverColor2 = Color.FromArgb (16' Color.White);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.HoverBorderColor = Color.FromArgb (64' SystemColors.Highlight);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor1 = Color.FromArgb (64' 96' 160);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor1 = Color.FromArgb (64' 96' 160);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor1 = Color.FromArgb (64' 96' 160);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb (64' 64' 96' 160);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb (64' 64' 96' 160);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb (64' 64' 96' 160);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedColor2 = Color.FromArgb (64' 64' 96' 160);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectedBorderColor = Color.FromArgb (128' SystemColors.Highlight);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.DisabledColor2 = Color.FromArgb (32' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.DisabledBorderColor = Color.FromArgb (96' SystemColors.GrayText);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.InsertionCaretColor = Color.FromArgb (96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.InsertionCaretColor = Color.FromArgb (96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.InsertionCaretColor = Color.FromArgb (96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ImageInnerBorderColor = Color.FromArgb (128' Color.White);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ImageOuterBorderColor = Color.FromArgb (128' Color.Gray);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb (32' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb (32' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb (32' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor1 = Color.FromArgb (32' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb (196' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb (196' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb (196' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderBackColor2 = Color.FromArgb (196' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor1 = Color.FromArgb (64' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor1 = Color.FromArgb (64' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor1 = Color.FromArgb (64' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor1 = Color.FromArgb (64' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb (196' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb (196' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb (196' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnHeaderHoverColor2 = Color.FromArgb (196' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb (96' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb (96' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb (96' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.ColumnSelectColor = Color.FromArgb (96' 128' 128' 128);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb (160' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb (160' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb (160' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor1 = Color.FromArgb (160' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb (32' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb (32' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb (32' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleColor2 = Color.FromArgb (32' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb (64' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb (64' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb (64' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewColor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewColor.cs,GetNoirTheme,The following statement contains a magic number: c.SelectionRectangleBorderColor = Color.FromArgb (64' 96' 144' 240);  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 1 && mRating <= 12)  	mStarRating = 1;  else if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 13 && mRating <= 37)  	mStarRating = 2;  else if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: mStarRating = 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 38 && mRating <= 62)  	mStarRating = 3;  else if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: mStarRating = 3;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 63 && mRating <= 87)  	mStarRating = 4;  else if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: mStarRating = 4;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: if (mRating >= 88 && mRating <= 99)  	mStarRating = 5;  else  	mStarRating = 0;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateRating,The following statement contains a magic number: mStarRating = 5;  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The following statement contains a magic number: if (imageType == CachedImageType.SmallIcon || imageType == CachedImageType.LargeIcon) {  	if (string.IsNullOrEmpty (extension))  		return mImageListView.DefaultImage;  	CacheState state = mImageListView.shellInfoCache.GetCacheState (extension);  	if (state == CacheState.Cached) {  		if (imageType == CachedImageType.SmallIcon)  			return mImageListView.shellInfoCache.GetSmallIcon (extension);  		else  			return mImageListView.shellInfoCache.GetLargeIcon (extension);  	} else if (state == CacheState.Error) {  		if (mImageListView.RetryOnError) {  			mImageListView.shellInfoCache.Remove (extension);  			mImageListView.shellInfoCache.Add (extension);  		}  		return mImageListView.ErrorImage;  	} else {  		mImageListView.shellInfoCache.Add (extension);  		return mImageListView.DefaultImage;  	}  } else {  	Image img = null;  	CacheState state = ThumbnailCacheState;  	if (state == CacheState.Error) {  		if (string.IsNullOrEmpty (extension))  			return mImageListView.ErrorImage;  		if (mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 32 && mImageListView.ThumbnailSize.Height > 32)  			img = mImageListView.shellInfoCache.GetLargeIcon (extension);  		if (img == null && mImageListView.ShellIconFallback)  			img = mImageListView.shellInfoCache.GetSmallIcon (extension);  		if (img == null)  			img = mImageListView.ErrorImage;  		return img;  	}  	img = mImageListView.thumbnailCache.GetImage (Guid' mImageListView.ThumbnailSize' mImageListView.UseEmbeddedThumbnails' mImageListView.AutoRotateThumbnails' mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.ThumbnailsOnly' false);  	if (state == CacheState.Cached)  		return img;  	mImageListView.thumbnailCache.Add (Guid' mAdaptor' mVirtualItemKey' mImageListView.ThumbnailSize' mImageListView.UseEmbeddedThumbnails' mImageListView.AutoRotateThumbnails' (mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.ThumbnailsOnly));  	if (img == null && string.IsNullOrEmpty (extension))  		return mImageListView.DefaultImage;  	if (img == null && mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 16 && mImageListView.ThumbnailSize.Height > 16)  		img = mImageListView.shellInfoCache.GetLargeIcon (extension);  	if (img == null && mImageListView.ShellIconFallback)  		img = mImageListView.shellInfoCache.GetSmallIcon (extension);  	if (img == null)  		img = mImageListView.DefaultImage;  	return img;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The following statement contains a magic number: if (imageType == CachedImageType.SmallIcon || imageType == CachedImageType.LargeIcon) {  	if (string.IsNullOrEmpty (extension))  		return mImageListView.DefaultImage;  	CacheState state = mImageListView.shellInfoCache.GetCacheState (extension);  	if (state == CacheState.Cached) {  		if (imageType == CachedImageType.SmallIcon)  			return mImageListView.shellInfoCache.GetSmallIcon (extension);  		else  			return mImageListView.shellInfoCache.GetLargeIcon (extension);  	} else if (state == CacheState.Error) {  		if (mImageListView.RetryOnError) {  			mImageListView.shellInfoCache.Remove (extension);  			mImageListView.shellInfoCache.Add (extension);  		}  		return mImageListView.ErrorImage;  	} else {  		mImageListView.shellInfoCache.Add (extension);  		return mImageListView.DefaultImage;  	}  } else {  	Image img = null;  	CacheState state = ThumbnailCacheState;  	if (state == CacheState.Error) {  		if (string.IsNullOrEmpty (extension))  			return mImageListView.ErrorImage;  		if (mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 32 && mImageListView.ThumbnailSize.Height > 32)  			img = mImageListView.shellInfoCache.GetLargeIcon (extension);  		if (img == null && mImageListView.ShellIconFallback)  			img = mImageListView.shellInfoCache.GetSmallIcon (extension);  		if (img == null)  			img = mImageListView.ErrorImage;  		return img;  	}  	img = mImageListView.thumbnailCache.GetImage (Guid' mImageListView.ThumbnailSize' mImageListView.UseEmbeddedThumbnails' mImageListView.AutoRotateThumbnails' mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.ThumbnailsOnly' false);  	if (state == CacheState.Cached)  		return img;  	mImageListView.thumbnailCache.Add (Guid' mAdaptor' mVirtualItemKey' mImageListView.ThumbnailSize' mImageListView.UseEmbeddedThumbnails' mImageListView.AutoRotateThumbnails' (mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.ThumbnailsOnly));  	if (img == null && string.IsNullOrEmpty (extension))  		return mImageListView.DefaultImage;  	if (img == null && mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 16 && mImageListView.ThumbnailSize.Height > 16)  		img = mImageListView.shellInfoCache.GetLargeIcon (extension);  	if (img == null && mImageListView.ShellIconFallback)  		img = mImageListView.shellInfoCache.GetSmallIcon (extension);  	if (img == null)  		img = mImageListView.DefaultImage;  	return img;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The following statement contains a magic number: if (imageType == CachedImageType.SmallIcon || imageType == CachedImageType.LargeIcon) {  	if (string.IsNullOrEmpty (extension))  		return mImageListView.DefaultImage;  	CacheState state = mImageListView.shellInfoCache.GetCacheState (extension);  	if (state == CacheState.Cached) {  		if (imageType == CachedImageType.SmallIcon)  			return mImageListView.shellInfoCache.GetSmallIcon (extension);  		else  			return mImageListView.shellInfoCache.GetLargeIcon (extension);  	} else if (state == CacheState.Error) {  		if (mImageListView.RetryOnError) {  			mImageListView.shellInfoCache.Remove (extension);  			mImageListView.shellInfoCache.Add (extension);  		}  		return mImageListView.ErrorImage;  	} else {  		mImageListView.shellInfoCache.Add (extension);  		return mImageListView.DefaultImage;  	}  } else {  	Image img = null;  	CacheState state = ThumbnailCacheState;  	if (state == CacheState.Error) {  		if (string.IsNullOrEmpty (extension))  			return mImageListView.ErrorImage;  		if (mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 32 && mImageListView.ThumbnailSize.Height > 32)  			img = mImageListView.shellInfoCache.GetLargeIcon (extension);  		if (img == null && mImageListView.ShellIconFallback)  			img = mImageListView.shellInfoCache.GetSmallIcon (extension);  		if (img == null)  			img = mImageListView.ErrorImage;  		return img;  	}  	img = mImageListView.thumbnailCache.GetImage (Guid' mImageListView.ThumbnailSize' mImageListView.UseEmbeddedThumbnails' mImageListView.AutoRotateThumbnails' mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.ThumbnailsOnly' false);  	if (state == CacheState.Cached)  		return img;  	mImageListView.thumbnailCache.Add (Guid' mAdaptor' mVirtualItemKey' mImageListView.ThumbnailSize' mImageListView.UseEmbeddedThumbnails' mImageListView.AutoRotateThumbnails' (mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.ThumbnailsOnly));  	if (img == null && string.IsNullOrEmpty (extension))  		return mImageListView.DefaultImage;  	if (img == null && mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 16 && mImageListView.ThumbnailSize.Height > 16)  		img = mImageListView.shellInfoCache.GetLargeIcon (extension);  	if (img == null && mImageListView.ShellIconFallback)  		img = mImageListView.shellInfoCache.GetSmallIcon (extension);  	if (img == null)  		img = mImageListView.DefaultImage;  	return img;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The following statement contains a magic number: if (imageType == CachedImageType.SmallIcon || imageType == CachedImageType.LargeIcon) {  	if (string.IsNullOrEmpty (extension))  		return mImageListView.DefaultImage;  	CacheState state = mImageListView.shellInfoCache.GetCacheState (extension);  	if (state == CacheState.Cached) {  		if (imageType == CachedImageType.SmallIcon)  			return mImageListView.shellInfoCache.GetSmallIcon (extension);  		else  			return mImageListView.shellInfoCache.GetLargeIcon (extension);  	} else if (state == CacheState.Error) {  		if (mImageListView.RetryOnError) {  			mImageListView.shellInfoCache.Remove (extension);  			mImageListView.shellInfoCache.Add (extension);  		}  		return mImageListView.ErrorImage;  	} else {  		mImageListView.shellInfoCache.Add (extension);  		return mImageListView.DefaultImage;  	}  } else {  	Image img = null;  	CacheState state = ThumbnailCacheState;  	if (state == CacheState.Error) {  		if (string.IsNullOrEmpty (extension))  			return mImageListView.ErrorImage;  		if (mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 32 && mImageListView.ThumbnailSize.Height > 32)  			img = mImageListView.shellInfoCache.GetLargeIcon (extension);  		if (img == null && mImageListView.ShellIconFallback)  			img = mImageListView.shellInfoCache.GetSmallIcon (extension);  		if (img == null)  			img = mImageListView.ErrorImage;  		return img;  	}  	img = mImageListView.thumbnailCache.GetImage (Guid' mImageListView.ThumbnailSize' mImageListView.UseEmbeddedThumbnails' mImageListView.AutoRotateThumbnails' mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.ThumbnailsOnly' false);  	if (state == CacheState.Cached)  		return img;  	mImageListView.thumbnailCache.Add (Guid' mAdaptor' mVirtualItemKey' mImageListView.ThumbnailSize' mImageListView.UseEmbeddedThumbnails' mImageListView.AutoRotateThumbnails' (mImageListView.UseWIC == UseWIC.Auto || mImageListView.UseWIC == UseWIC.ThumbnailsOnly));  	if (img == null && string.IsNullOrEmpty (extension))  		return mImageListView.DefaultImage;  	if (img == null && mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 16 && mImageListView.ThumbnailSize.Height > 16)  		img = mImageListView.shellInfoCache.GetLargeIcon (extension);  	if (img == null && mImageListView.ShellIconFallback)  		img = mImageListView.shellInfoCache.GetSmallIcon (extension);  	if (img == null)  		img = mImageListView.DefaultImage;  	return img;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The following statement contains a magic number: if (state == CacheState.Error) {  	if (string.IsNullOrEmpty (extension))  		return mImageListView.ErrorImage;  	if (mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 32 && mImageListView.ThumbnailSize.Height > 32)  		img = mImageListView.shellInfoCache.GetLargeIcon (extension);  	if (img == null && mImageListView.ShellIconFallback)  		img = mImageListView.shellInfoCache.GetSmallIcon (extension);  	if (img == null)  		img = mImageListView.ErrorImage;  	return img;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The following statement contains a magic number: if (state == CacheState.Error) {  	if (string.IsNullOrEmpty (extension))  		return mImageListView.ErrorImage;  	if (mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 32 && mImageListView.ThumbnailSize.Height > 32)  		img = mImageListView.shellInfoCache.GetLargeIcon (extension);  	if (img == null && mImageListView.ShellIconFallback)  		img = mImageListView.shellInfoCache.GetSmallIcon (extension);  	if (img == null)  		img = mImageListView.ErrorImage;  	return img;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The following statement contains a magic number: if (mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 32 && mImageListView.ThumbnailSize.Height > 32)  	img = mImageListView.shellInfoCache.GetLargeIcon (extension);  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The following statement contains a magic number: if (mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 32 && mImageListView.ThumbnailSize.Height > 32)  	img = mImageListView.shellInfoCache.GetLargeIcon (extension);  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The following statement contains a magic number: if (img == null && mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 16 && mImageListView.ThumbnailSize.Height > 16)  	img = mImageListView.shellInfoCache.GetLargeIcon (extension);  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,GetCachedImage,The following statement contains a magic number: if (img == null && mImageListView.ShellIconFallback && mImageListView.ThumbnailSize.Width > 16 && mImageListView.ThumbnailSize.Height > 16)  	img = mImageListView.shellInfoCache.GetLargeIcon (extension);  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateGroup,The following statement contains a magic number: switch (column.Type) {  case ColumnType.DateAccessed:  	groupInfo = Utility.GroupTextDate (DateAccessed);  	break;  case ColumnType.DateCreated:  	groupInfo = Utility.GroupTextDate (DateCreated);  	break;  case ColumnType.DateModified:  	groupInfo = Utility.GroupTextDate (DateModified);  	break;  case ColumnType.Dimensions:  	groupInfo = Utility.GroupTextDimension (Dimensions);  	break;  case ColumnType.FileName:  	groupInfo = Utility.GroupTextAlpha (FileName);  	break;  case ColumnType.FilePath:  	groupInfo = Utility.GroupTextAlpha (FilePath);  	break;  case ColumnType.FileSize:  	groupInfo = Utility.GroupTextFileSize (FileSize);  	break;  case ColumnType.FileType:  	groupInfo = Utility.GroupTextAlpha (FileType);  	break;  case ColumnType.Name:  	groupInfo = Utility.GroupTextAlpha (Text);  	break;  case ColumnType.ImageDescription:  	groupInfo = Utility.GroupTextAlpha (ImageDescription);  	break;  case ColumnType.EquipmentModel:  	groupInfo = Utility.GroupTextAlpha (EquipmentModel);  	break;  case ColumnType.DateTaken:  	groupInfo = Utility.GroupTextDate (DateTaken);  	break;  case ColumnType.Artist:  	groupInfo = Utility.GroupTextAlpha (Artist);  	break;  case ColumnType.Copyright:  	groupInfo = Utility.GroupTextAlpha (Copyright);  	break;  case ColumnType.UserComment:  	groupInfo = Utility.GroupTextAlpha (UserComment);  	break;  case ColumnType.Software:  	groupInfo = Utility.GroupTextAlpha (Software);  	break;  case ColumnType.Custom:  	groupInfo = Utility.GroupTextAlpha (GetSubItemText (column.Guid));  	break;  case ColumnType.ISOSpeed:  	groupInfo = new Utility.Tuple<int' string> (ISOSpeed' ISOSpeed.ToString ());  	break;  case ColumnType.Rating:  	groupInfo = new Utility.Tuple<int' string> (Rating / 5' (Rating / 5).ToString ());  	break;  case ColumnType.FocalLength:  	groupInfo = new Utility.Tuple<int' string> ((int)FocalLength' FocalLength.ToString ());  	break;  case ColumnType.ExposureTime:  	groupInfo = new Utility.Tuple<int' string> ((int)ExposureTime' ExposureTime.ToString ());  	break;  case ColumnType.FNumber:  	groupInfo = new Utility.Tuple<int' string> ((int)FNumber' FNumber.ToString ());  	break;  case ColumnType.Resolution:  	groupInfo = new Utility.Tuple<int' string> ((int)Resolution.Width' Resolution.Width.ToString ());  	break;  default:  	groupInfo = new Utility.Tuple<int' string> (0' "Unknown");  	break;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateGroup,The following statement contains a magic number: switch (column.Type) {  case ColumnType.DateAccessed:  	groupInfo = Utility.GroupTextDate (DateAccessed);  	break;  case ColumnType.DateCreated:  	groupInfo = Utility.GroupTextDate (DateCreated);  	break;  case ColumnType.DateModified:  	groupInfo = Utility.GroupTextDate (DateModified);  	break;  case ColumnType.Dimensions:  	groupInfo = Utility.GroupTextDimension (Dimensions);  	break;  case ColumnType.FileName:  	groupInfo = Utility.GroupTextAlpha (FileName);  	break;  case ColumnType.FilePath:  	groupInfo = Utility.GroupTextAlpha (FilePath);  	break;  case ColumnType.FileSize:  	groupInfo = Utility.GroupTextFileSize (FileSize);  	break;  case ColumnType.FileType:  	groupInfo = Utility.GroupTextAlpha (FileType);  	break;  case ColumnType.Name:  	groupInfo = Utility.GroupTextAlpha (Text);  	break;  case ColumnType.ImageDescription:  	groupInfo = Utility.GroupTextAlpha (ImageDescription);  	break;  case ColumnType.EquipmentModel:  	groupInfo = Utility.GroupTextAlpha (EquipmentModel);  	break;  case ColumnType.DateTaken:  	groupInfo = Utility.GroupTextDate (DateTaken);  	break;  case ColumnType.Artist:  	groupInfo = Utility.GroupTextAlpha (Artist);  	break;  case ColumnType.Copyright:  	groupInfo = Utility.GroupTextAlpha (Copyright);  	break;  case ColumnType.UserComment:  	groupInfo = Utility.GroupTextAlpha (UserComment);  	break;  case ColumnType.Software:  	groupInfo = Utility.GroupTextAlpha (Software);  	break;  case ColumnType.Custom:  	groupInfo = Utility.GroupTextAlpha (GetSubItemText (column.Guid));  	break;  case ColumnType.ISOSpeed:  	groupInfo = new Utility.Tuple<int' string> (ISOSpeed' ISOSpeed.ToString ());  	break;  case ColumnType.Rating:  	groupInfo = new Utility.Tuple<int' string> (Rating / 5' (Rating / 5).ToString ());  	break;  case ColumnType.FocalLength:  	groupInfo = new Utility.Tuple<int' string> ((int)FocalLength' FocalLength.ToString ());  	break;  case ColumnType.ExposureTime:  	groupInfo = new Utility.Tuple<int' string> ((int)ExposureTime' ExposureTime.ToString ());  	break;  case ColumnType.FNumber:  	groupInfo = new Utility.Tuple<int' string> ((int)FNumber' FNumber.ToString ());  	break;  case ColumnType.Resolution:  	groupInfo = new Utility.Tuple<int' string> ((int)Resolution.Width' Resolution.Width.ToString ());  	break;  default:  	groupInfo = new Utility.Tuple<int' string> (0' "Unknown");  	break;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateGroup,The following statement contains a magic number: groupInfo = new Utility.Tuple<int' string> (Rating / 5' (Rating / 5).ToString ());  
Magic Number,ImageGlass.ImageListView,ImageListViewItem,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewItem.cs,UpdateGroup,The following statement contains a magic number: groupInfo = new Utility.Tuple<int' string> (Rating / 5' (Rating / 5).ToString ());  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: if (mImageListView.showGroups) {  	foreach (ImageListView.ImageListViewGroup group in mImageListView.groups) {  		if (itemIndex >= group.FirstItemIndex && itemIndex <= group.LastItemIndex) {  			location = group.itemBounds.Location;  			location.X += cachedItemMargin.Width / 2;  			location.Y += cachedItemMargin.Height / 2;  			if (mImageListView.View == View.Gallery)  				location.X += (itemIndex - group.FirstItemIndex) * mItemSizeWithMargin.Width;  			else {  				location.X += ((itemIndex - group.FirstItemIndex) % mDisplayedCols) * mItemSizeWithMargin.Width;  				location.Y += ((itemIndex - group.FirstItemIndex) / mDisplayedCols) * mItemSizeWithMargin.Height;  			}  			break;  		}  	}  } else {  	location = mItemAreaBounds.Location;  	location.X += cachedItemMargin.Width / 2 - mImageListView.ViewOffset.X;  	location.Y += cachedItemMargin.Height / 2 - mImageListView.ViewOffset.Y;  	if (mImageListView.View == View.Gallery)  		location.X += itemIndex * mItemSizeWithMargin.Width;  	else {  		location.X += (itemIndex % mDisplayedCols) * mItemSizeWithMargin.Width;  		location.Y += (itemIndex / mDisplayedCols) * mItemSizeWithMargin.Height;  	}  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: if (mImageListView.showGroups) {  	foreach (ImageListView.ImageListViewGroup group in mImageListView.groups) {  		if (itemIndex >= group.FirstItemIndex && itemIndex <= group.LastItemIndex) {  			location = group.itemBounds.Location;  			location.X += cachedItemMargin.Width / 2;  			location.Y += cachedItemMargin.Height / 2;  			if (mImageListView.View == View.Gallery)  				location.X += (itemIndex - group.FirstItemIndex) * mItemSizeWithMargin.Width;  			else {  				location.X += ((itemIndex - group.FirstItemIndex) % mDisplayedCols) * mItemSizeWithMargin.Width;  				location.Y += ((itemIndex - group.FirstItemIndex) / mDisplayedCols) * mItemSizeWithMargin.Height;  			}  			break;  		}  	}  } else {  	location = mItemAreaBounds.Location;  	location.X += cachedItemMargin.Width / 2 - mImageListView.ViewOffset.X;  	location.Y += cachedItemMargin.Height / 2 - mImageListView.ViewOffset.Y;  	if (mImageListView.View == View.Gallery)  		location.X += itemIndex * mItemSizeWithMargin.Width;  	else {  		location.X += (itemIndex % mDisplayedCols) * mItemSizeWithMargin.Width;  		location.Y += (itemIndex / mDisplayedCols) * mItemSizeWithMargin.Height;  	}  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: if (mImageListView.showGroups) {  	foreach (ImageListView.ImageListViewGroup group in mImageListView.groups) {  		if (itemIndex >= group.FirstItemIndex && itemIndex <= group.LastItemIndex) {  			location = group.itemBounds.Location;  			location.X += cachedItemMargin.Width / 2;  			location.Y += cachedItemMargin.Height / 2;  			if (mImageListView.View == View.Gallery)  				location.X += (itemIndex - group.FirstItemIndex) * mItemSizeWithMargin.Width;  			else {  				location.X += ((itemIndex - group.FirstItemIndex) % mDisplayedCols) * mItemSizeWithMargin.Width;  				location.Y += ((itemIndex - group.FirstItemIndex) / mDisplayedCols) * mItemSizeWithMargin.Height;  			}  			break;  		}  	}  } else {  	location = mItemAreaBounds.Location;  	location.X += cachedItemMargin.Width / 2 - mImageListView.ViewOffset.X;  	location.Y += cachedItemMargin.Height / 2 - mImageListView.ViewOffset.Y;  	if (mImageListView.View == View.Gallery)  		location.X += itemIndex * mItemSizeWithMargin.Width;  	else {  		location.X += (itemIndex % mDisplayedCols) * mItemSizeWithMargin.Width;  		location.Y += (itemIndex / mDisplayedCols) * mItemSizeWithMargin.Height;  	}  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: if (mImageListView.showGroups) {  	foreach (ImageListView.ImageListViewGroup group in mImageListView.groups) {  		if (itemIndex >= group.FirstItemIndex && itemIndex <= group.LastItemIndex) {  			location = group.itemBounds.Location;  			location.X += cachedItemMargin.Width / 2;  			location.Y += cachedItemMargin.Height / 2;  			if (mImageListView.View == View.Gallery)  				location.X += (itemIndex - group.FirstItemIndex) * mItemSizeWithMargin.Width;  			else {  				location.X += ((itemIndex - group.FirstItemIndex) % mDisplayedCols) * mItemSizeWithMargin.Width;  				location.Y += ((itemIndex - group.FirstItemIndex) / mDisplayedCols) * mItemSizeWithMargin.Height;  			}  			break;  		}  	}  } else {  	location = mItemAreaBounds.Location;  	location.X += cachedItemMargin.Width / 2 - mImageListView.ViewOffset.X;  	location.Y += cachedItemMargin.Height / 2 - mImageListView.ViewOffset.Y;  	if (mImageListView.View == View.Gallery)  		location.X += itemIndex * mItemSizeWithMargin.Width;  	else {  		location.X += (itemIndex % mDisplayedCols) * mItemSizeWithMargin.Width;  		location.Y += (itemIndex / mDisplayedCols) * mItemSizeWithMargin.Height;  	}  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: foreach (ImageListView.ImageListViewGroup group in mImageListView.groups) {  	if (itemIndex >= group.FirstItemIndex && itemIndex <= group.LastItemIndex) {  		location = group.itemBounds.Location;  		location.X += cachedItemMargin.Width / 2;  		location.Y += cachedItemMargin.Height / 2;  		if (mImageListView.View == View.Gallery)  			location.X += (itemIndex - group.FirstItemIndex) * mItemSizeWithMargin.Width;  		else {  			location.X += ((itemIndex - group.FirstItemIndex) % mDisplayedCols) * mItemSizeWithMargin.Width;  			location.Y += ((itemIndex - group.FirstItemIndex) / mDisplayedCols) * mItemSizeWithMargin.Height;  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: foreach (ImageListView.ImageListViewGroup group in mImageListView.groups) {  	if (itemIndex >= group.FirstItemIndex && itemIndex <= group.LastItemIndex) {  		location = group.itemBounds.Location;  		location.X += cachedItemMargin.Width / 2;  		location.Y += cachedItemMargin.Height / 2;  		if (mImageListView.View == View.Gallery)  			location.X += (itemIndex - group.FirstItemIndex) * mItemSizeWithMargin.Width;  		else {  			location.X += ((itemIndex - group.FirstItemIndex) % mDisplayedCols) * mItemSizeWithMargin.Width;  			location.Y += ((itemIndex - group.FirstItemIndex) / mDisplayedCols) * mItemSizeWithMargin.Height;  		}  		break;  	}  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: if (itemIndex >= group.FirstItemIndex && itemIndex <= group.LastItemIndex) {  	location = group.itemBounds.Location;  	location.X += cachedItemMargin.Width / 2;  	location.Y += cachedItemMargin.Height / 2;  	if (mImageListView.View == View.Gallery)  		location.X += (itemIndex - group.FirstItemIndex) * mItemSizeWithMargin.Width;  	else {  		location.X += ((itemIndex - group.FirstItemIndex) % mDisplayedCols) * mItemSizeWithMargin.Width;  		location.Y += ((itemIndex - group.FirstItemIndex) / mDisplayedCols) * mItemSizeWithMargin.Height;  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: if (itemIndex >= group.FirstItemIndex && itemIndex <= group.LastItemIndex) {  	location = group.itemBounds.Location;  	location.X += cachedItemMargin.Width / 2;  	location.Y += cachedItemMargin.Height / 2;  	if (mImageListView.View == View.Gallery)  		location.X += (itemIndex - group.FirstItemIndex) * mItemSizeWithMargin.Width;  	else {  		location.X += ((itemIndex - group.FirstItemIndex) % mDisplayedCols) * mItemSizeWithMargin.Width;  		location.Y += ((itemIndex - group.FirstItemIndex) / mDisplayedCols) * mItemSizeWithMargin.Height;  	}  	break;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: location.X += cachedItemMargin.Width / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: location.Y += cachedItemMargin.Height / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: location.X += cachedItemMargin.Width / 2 - mImageListView.ViewOffset.X;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBounds,The following statement contains a magic number: location.Y += cachedItemMargin.Height / 2 - mImageListView.ViewOffset.Y;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBoundsWithMargin,The following statement contains a magic number: rec.Inflate (cachedItemMargin.Width / 2' cachedItemMargin.Height / 2);  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetItemBoundsWithMargin,The following statement contains a magic number: rec.Inflate (cachedItemMargin.Width / 2' cachedItemMargin.Height / 2);  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: if (mImageListView.View != View.Details && mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) {  	ContentAlignment alignment = mImageListView.CheckBoxAlignment;  	if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  		bounds.X -= 8 + mImageListView.IconPadding.Width / 2;  	else if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  		bounds.X -= 16 + mImageListView.IconPadding.Width;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: if (mImageListView.View != View.Details && mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) {  	ContentAlignment alignment = mImageListView.CheckBoxAlignment;  	if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  		bounds.X -= 8 + mImageListView.IconPadding.Width / 2;  	else if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  		bounds.X -= 16 + mImageListView.IconPadding.Width;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: if (mImageListView.View != View.Details && mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) {  	ContentAlignment alignment = mImageListView.CheckBoxAlignment;  	if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  		bounds.X -= 8 + mImageListView.IconPadding.Width / 2;  	else if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  		bounds.X -= 16 + mImageListView.IconPadding.Width;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	bounds.X -= 8 + mImageListView.IconPadding.Width / 2;  else if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  	bounds.X -= 16 + mImageListView.IconPadding.Width;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	bounds.X -= 8 + mImageListView.IconPadding.Width / 2;  else if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  	bounds.X -= 16 + mImageListView.IconPadding.Width;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	bounds.X -= 8 + mImageListView.IconPadding.Width / 2;  else if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  	bounds.X -= 16 + mImageListView.IconPadding.Width;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: bounds.X -= 8 + mImageListView.IconPadding.Width / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: bounds.X -= 8 + mImageListView.IconPadding.Width / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  	bounds.X -= 16 + mImageListView.IconPadding.Width;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetCheckBoxBounds,The following statement contains a magic number: bounds.X -= 16 + mImageListView.IconPadding.Width;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (mImageListView.View == View.Details && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons)  	bounds.X += 16 + 2;  else if (mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) {  	ContentAlignment alignment = mImageListView.CheckBoxAlignment;  	if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  		bounds.X += 16 + mImageListView.IconPadding.Width;  	else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  		bounds.X += 8 + mImageListView.IconPadding.Width / 2;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (mImageListView.View == View.Details && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons)  	bounds.X += 16 + 2;  else if (mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) {  	ContentAlignment alignment = mImageListView.CheckBoxAlignment;  	if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  		bounds.X += 16 + mImageListView.IconPadding.Width;  	else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  		bounds.X += 8 + mImageListView.IconPadding.Width / 2;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (mImageListView.View == View.Details && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons)  	bounds.X += 16 + 2;  else if (mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) {  	ContentAlignment alignment = mImageListView.CheckBoxAlignment;  	if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  		bounds.X += 16 + mImageListView.IconPadding.Width;  	else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  		bounds.X += 8 + mImageListView.IconPadding.Width / 2;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (mImageListView.View == View.Details && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons)  	bounds.X += 16 + 2;  else if (mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) {  	ContentAlignment alignment = mImageListView.CheckBoxAlignment;  	if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  		bounds.X += 16 + mImageListView.IconPadding.Width;  	else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  		bounds.X += 8 + mImageListView.IconPadding.Width / 2;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (mImageListView.View == View.Details && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons)  	bounds.X += 16 + 2;  else if (mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) {  	ContentAlignment alignment = mImageListView.CheckBoxAlignment;  	if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  		bounds.X += 16 + mImageListView.IconPadding.Width;  	else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  		bounds.X += 8 + mImageListView.IconPadding.Width / 2;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: bounds.X += 16 + 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: bounds.X += 16 + 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) {  	ContentAlignment alignment = mImageListView.CheckBoxAlignment;  	if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  		bounds.X += 16 + mImageListView.IconPadding.Width;  	else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  		bounds.X += 8 + mImageListView.IconPadding.Width / 2;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) {  	ContentAlignment alignment = mImageListView.CheckBoxAlignment;  	if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  		bounds.X += 16 + mImageListView.IconPadding.Width;  	else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  		bounds.X += 8 + mImageListView.IconPadding.Width / 2;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (mImageListView.CheckBoxAlignment == mImageListView.IconAlignment && mImageListView.ShowCheckBoxes && mImageListView.ShowFileIcons) {  	ContentAlignment alignment = mImageListView.CheckBoxAlignment;  	if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  		bounds.X += 16 + mImageListView.IconPadding.Width;  	else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  		bounds.X += 8 + mImageListView.IconPadding.Width / 2;  }  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  	bounds.X += 16 + mImageListView.IconPadding.Width;  else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	bounds.X += 8 + mImageListView.IconPadding.Width / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  	bounds.X += 16 + mImageListView.IconPadding.Width;  else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	bounds.X += 8 + mImageListView.IconPadding.Width / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  	bounds.X += 16 + mImageListView.IconPadding.Width;  else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	bounds.X += 8 + mImageListView.IconPadding.Width / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: bounds.X += 16 + mImageListView.IconPadding.Width;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	bounds.X += 8 + mImageListView.IconPadding.Width / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	bounds.X += 8 + mImageListView.IconPadding.Width / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: bounds.X += 8 + mImageListView.IconPadding.Width / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetIconBounds,The following statement contains a magic number: bounds.X += 8 + mImageListView.IconPadding.Width / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (mImageListView.View == View.Details)  	bounds.Inflate (-2' -2);  else  	bounds.Inflate (-padding.Width' -padding.Height);  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (mImageListView.View == View.Details)  	bounds.Inflate (-2' -2);  else  	bounds.Inflate (-padding.Width' -padding.Height);  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: bounds.Inflate (-2' -2);  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: bounds.Inflate (-2' -2);  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (mImageListView.View == View.Details)  	x = bounds.Left;  else if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  	x = bounds.Left;  else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	x = bounds.Left + bounds.Width / 2 - size.Width / 2;  else  	// if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  	x = bounds.Right - size.Width;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (mImageListView.View == View.Details)  	x = bounds.Left;  else if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  	x = bounds.Left;  else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	x = bounds.Left + bounds.Width / 2 - size.Width / 2;  else  	// if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  	x = bounds.Right - size.Width;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  	x = bounds.Left;  else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	x = bounds.Left + bounds.Width / 2 - size.Width / 2;  else  	// if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  	x = bounds.Right - size.Width;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.TopLeft)  	x = bounds.Left;  else if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	x = bounds.Left + bounds.Width / 2 - size.Width / 2;  else  	// if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  	x = bounds.Right - size.Width;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	x = bounds.Left + bounds.Width / 2 - size.Width / 2;  else  	// if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  	x = bounds.Right - size.Width;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.TopCenter)  	x = bounds.Left + bounds.Width / 2 - size.Width / 2;  else  	// if (alignment == ContentAlignment.BottomRight || alignment == ContentAlignment.MiddleRight || alignment == ContentAlignment.TopRight)  	x = bounds.Right - size.Width;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: x = bounds.Left + bounds.Width / 2 - size.Width / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: x = bounds.Left + bounds.Width / 2 - size.Width / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (mImageListView.View == View.Details)  	y = bounds.Top + bounds.Height / 2 - size.Height / 2;  else if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.BottomRight)  	y = bounds.Bottom - size.Height;  else if (alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.MiddleRight)  	y = bounds.Top + bounds.Height / 2 - size.Height / 2;  else  	// if (alignment == ContentAlignment.TopLeft || alignment == ContentAlignment.TopCenter || alignment == ContentAlignment.TopRight)  	y = bounds.Top;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (mImageListView.View == View.Details)  	y = bounds.Top + bounds.Height / 2 - size.Height / 2;  else if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.BottomRight)  	y = bounds.Bottom - size.Height;  else if (alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.MiddleRight)  	y = bounds.Top + bounds.Height / 2 - size.Height / 2;  else  	// if (alignment == ContentAlignment.TopLeft || alignment == ContentAlignment.TopCenter || alignment == ContentAlignment.TopRight)  	y = bounds.Top;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (mImageListView.View == View.Details)  	y = bounds.Top + bounds.Height / 2 - size.Height / 2;  else if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.BottomRight)  	y = bounds.Bottom - size.Height;  else if (alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.MiddleRight)  	y = bounds.Top + bounds.Height / 2 - size.Height / 2;  else  	// if (alignment == ContentAlignment.TopLeft || alignment == ContentAlignment.TopCenter || alignment == ContentAlignment.TopRight)  	y = bounds.Top;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (mImageListView.View == View.Details)  	y = bounds.Top + bounds.Height / 2 - size.Height / 2;  else if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.BottomRight)  	y = bounds.Bottom - size.Height;  else if (alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.MiddleRight)  	y = bounds.Top + bounds.Height / 2 - size.Height / 2;  else  	// if (alignment == ContentAlignment.TopLeft || alignment == ContentAlignment.TopCenter || alignment == ContentAlignment.TopRight)  	y = bounds.Top;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: y = bounds.Top + bounds.Height / 2 - size.Height / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: y = bounds.Top + bounds.Height / 2 - size.Height / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.BottomRight)  	y = bounds.Bottom - size.Height;  else if (alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.MiddleRight)  	y = bounds.Top + bounds.Height / 2 - size.Height / 2;  else  	// if (alignment == ContentAlignment.TopLeft || alignment == ContentAlignment.TopCenter || alignment == ContentAlignment.TopRight)  	y = bounds.Top;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (alignment == ContentAlignment.BottomLeft || alignment == ContentAlignment.BottomCenter || alignment == ContentAlignment.BottomRight)  	y = bounds.Bottom - size.Height;  else if (alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.MiddleRight)  	y = bounds.Top + bounds.Height / 2 - size.Height / 2;  else  	// if (alignment == ContentAlignment.TopLeft || alignment == ContentAlignment.TopCenter || alignment == ContentAlignment.TopRight)  	y = bounds.Top;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.MiddleRight)  	y = bounds.Top + bounds.Height / 2 - size.Height / 2;  else  	// if (alignment == ContentAlignment.TopLeft || alignment == ContentAlignment.TopCenter || alignment == ContentAlignment.TopRight)  	y = bounds.Top;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: if (alignment == ContentAlignment.MiddleLeft || alignment == ContentAlignment.MiddleCenter || alignment == ContentAlignment.MiddleRight)  	y = bounds.Top + bounds.Height / 2 - size.Height / 2;  else  	// if (alignment == ContentAlignment.TopLeft || alignment == ContentAlignment.TopCenter || alignment == ContentAlignment.TopRight)  	y = bounds.Top;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: y = bounds.Top + bounds.Height / 2 - size.Height / 2;  
Magic Number,ImageGlass.ImageListView,ImageListViewLayoutManager,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ImageListViewLayoutManager.cs,GetWidgetBounds,The following statement contains a magic number: y = bounds.Top + bounds.Height / 2 - size.Height / 2;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnailBmp,The following statement contains a magic number: try {  	double scale;  	if (rotate % 180 != 0) {  		scale = Math.Min (size.Height / (double)image.Width' size.Width / (double)image.Height);  	} else {  		scale = Math.Min (size.Width / (double)image.Width' size.Height / (double)image.Height);  	}  	thumb = ScaleDownRotateBitmap (image' scale' rotate);  } catch {  	if (thumb != null)  		thumb.Dispose ();  	thumb = null;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnailBmp,The following statement contains a magic number: if (rotate % 180 != 0) {  	scale = Math.Min (size.Height / (double)image.Width' size.Width / (double)image.Height);  } else {  	scale = Math.Min (size.Width / (double)image.Width' size.Height / (double)image.Height);  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnailBmp,The following statement contains a magic number: try {  	double scale;  	if (rotate % 180 != 0) {  		scale = Math.Min (size.Height / (double)source.Width' size.Width / (double)source.Height);  	} else {  		scale = Math.Min (size.Width / (double)source.Width' size.Height / (double)source.Height);  	}  	thumb = ScaleDownRotateBitmap (source' scale' rotate);  } catch {  	if (thumb != null)  		thumb.Dispose ();  	thumb = null;  } finally {  	if (source != null)  		source.Dispose ();  	source = null;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnailBmp,The following statement contains a magic number: if (rotate % 180 != 0) {  	scale = Math.Min (size.Height / (double)source.Width' size.Width / (double)source.Height);  } else {  	scale = Math.Min (size.Width / (double)source.Width' size.Height / (double)source.Height);  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (data != null) {  	try {  		// read orientation metadata  		object obj = GetMetadataObject (data' WICPathOrientation);  		if (obj == null)  			return 0;  		ushort orientationFlag = (ushort)obj;  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	} catch {  		;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	// read orientation metadata  	object obj = GetMetadataObject (data' WICPathOrientation);  	if (obj == null)  		return 0;  	ushort orientationFlag = (ushort)obj;  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return -360;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return 180;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return -180;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return -90;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return 90;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return -270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The following statement contains a magic number: if (bmp.Thumbnail != null) {  	try {  		BitmapSource sourceWpf = bmp.Thumbnail;  		double scale;  		if (rotate % 180 != 0) {  			scale = Math.Min (size.Height / (double)sourceWpf.PixelWidth' size.Width / (double)sourceWpf.PixelHeight);  		} else {  			scale = Math.Min (size.Width / (double)sourceWpf.PixelWidth' size.Height / (double)sourceWpf.PixelHeight);  		}  		if (bmp.Decoder == null || (bmp.Decoder.Preview == null && bmp.Decoder.Frames == null) || useEmbeddedThumbnails == UseEmbeddedThumbnails.Always) {  			// Take the thumbnail if nothing else is available or if ALWAYS  			thumb = ConvertToBitmap (ScaleDownRotateBitmap (sourceWpf' scale' rotate));  		} else if (useEmbeddedThumbnails == UseEmbeddedThumbnails.Auto) {  			// Check that the embedded thumbnail is large enough.  			if ((float)scale <= 1.0f) {  				thumb = ConvertToBitmap (ScaleDownRotateBitmap (sourceWpf' scale' rotate));  			}  		}  	} catch {  		if (thumb != null) {  			thumb.Dispose ();  			thumb = null;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The following statement contains a magic number: try {  	BitmapSource sourceWpf = bmp.Thumbnail;  	double scale;  	if (rotate % 180 != 0) {  		scale = Math.Min (size.Height / (double)sourceWpf.PixelWidth' size.Width / (double)sourceWpf.PixelHeight);  	} else {  		scale = Math.Min (size.Width / (double)sourceWpf.PixelWidth' size.Height / (double)sourceWpf.PixelHeight);  	}  	if (bmp.Decoder == null || (bmp.Decoder.Preview == null && bmp.Decoder.Frames == null) || useEmbeddedThumbnails == UseEmbeddedThumbnails.Always) {  		// Take the thumbnail if nothing else is available or if ALWAYS  		thumb = ConvertToBitmap (ScaleDownRotateBitmap (sourceWpf' scale' rotate));  	} else if (useEmbeddedThumbnails == UseEmbeddedThumbnails.Auto) {  		// Check that the embedded thumbnail is large enough.  		if ((float)scale <= 1.0f) {  			thumb = ConvertToBitmap (ScaleDownRotateBitmap (sourceWpf' scale' rotate));  		}  	}  } catch {  	if (thumb != null) {  		thumb.Dispose ();  		thumb = null;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The following statement contains a magic number: if (rotate % 180 != 0) {  	scale = Math.Min (size.Height / (double)sourceWpf.PixelWidth' size.Width / (double)sourceWpf.PixelHeight);  } else {  	scale = Math.Min (size.Width / (double)sourceWpf.PixelWidth' size.Height / (double)sourceWpf.PixelHeight);  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The following statement contains a magic number: if (bmp.Decoder != null && bmp.Decoder.Preview != null && thumb == null) {  	try {  		BitmapSource sourceWpf = bmp.Decoder.Preview;  		double scale;  		if (rotate % 180 != 0) {  			scale = Math.Min (size.Height / (double)sourceWpf.PixelWidth' size.Width / (double)sourceWpf.PixelHeight);  		} else {  			scale = Math.Min (size.Width / (double)sourceWpf.PixelWidth' size.Height / (double)sourceWpf.PixelHeight);  		}  		if (bmp.Decoder.Frames == null || useEmbeddedThumbnails == UseEmbeddedThumbnails.Always) {  			// Take the thumbnail if nothing else is available or if ALWAYS  			thumb = ConvertToBitmap (ScaleDownRotateBitmap (sourceWpf' scale' rotate));  		} else if (useEmbeddedThumbnails == UseEmbeddedThumbnails.Auto) {  			// Check that the embedded thumbnail is large enough.  			if ((float)scale <= 1.0f) {  				thumb = ConvertToBitmap (ScaleDownRotateBitmap (sourceWpf' scale' rotate));  			}  		}  	} catch {  		if (thumb != null) {  			thumb.Dispose ();  			thumb = null;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The following statement contains a magic number: try {  	BitmapSource sourceWpf = bmp.Decoder.Preview;  	double scale;  	if (rotate % 180 != 0) {  		scale = Math.Min (size.Height / (double)sourceWpf.PixelWidth' size.Width / (double)sourceWpf.PixelHeight);  	} else {  		scale = Math.Min (size.Width / (double)sourceWpf.PixelWidth' size.Height / (double)sourceWpf.PixelHeight);  	}  	if (bmp.Decoder.Frames == null || useEmbeddedThumbnails == UseEmbeddedThumbnails.Always) {  		// Take the thumbnail if nothing else is available or if ALWAYS  		thumb = ConvertToBitmap (ScaleDownRotateBitmap (sourceWpf' scale' rotate));  	} else if (useEmbeddedThumbnails == UseEmbeddedThumbnails.Auto) {  		// Check that the embedded thumbnail is large enough.  		if ((float)scale <= 1.0f) {  			thumb = ConvertToBitmap (ScaleDownRotateBitmap (sourceWpf' scale' rotate));  		}  	}  } catch {  	if (thumb != null) {  		thumb.Dispose ();  		thumb = null;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The following statement contains a magic number: if (rotate % 180 != 0) {  	scale = Math.Min (size.Height / (double)sourceWpf.PixelWidth' size.Width / (double)sourceWpf.PixelHeight);  } else {  	scale = Math.Min (size.Width / (double)sourceWpf.PixelWidth' size.Height / (double)sourceWpf.PixelHeight);  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The following statement contains a magic number: if (bmp.Decoder != null && bmp.Decoder.Frames != null && thumb == null) {  	try {  		BitmapSource sourceWpf = bmp.Decoder.Frames [0];  		double scale;  		if (rotate % 180 != 0) {  			scale = Math.Min (size.Height / (double)sourceWpf.PixelWidth' size.Width / (double)sourceWpf.PixelHeight);  		} else {  			scale = Math.Min (size.Width / (double)sourceWpf.PixelWidth' size.Height / (double)sourceWpf.PixelHeight);  		}  		thumb = ConvertToBitmap (ScaleDownRotateBitmap (sourceWpf' scale' rotate));  	} catch {  		if (thumb != null) {  			thumb.Dispose ();  			thumb = null;  		}  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The following statement contains a magic number: try {  	BitmapSource sourceWpf = bmp.Decoder.Frames [0];  	double scale;  	if (rotate % 180 != 0) {  		scale = Math.Min (size.Height / (double)sourceWpf.PixelWidth' size.Width / (double)sourceWpf.PixelHeight);  	} else {  		scale = Math.Min (size.Width / (double)sourceWpf.PixelWidth' size.Height / (double)sourceWpf.PixelHeight);  	}  	thumb = ConvertToBitmap (ScaleDownRotateBitmap (sourceWpf' scale' rotate));  } catch {  	if (thumb != null) {  		thumb.Dispose ();  		thumb = null;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetThumbnail,The following statement contains a magic number: if (rotate % 180 != 0) {  	scale = Math.Min (size.Height / (double)sourceWpf.PixelWidth' size.Width / (double)sourceWpf.PixelHeight);  } else {  	scale = Math.Min (size.Width / (double)sourceWpf.PixelWidth' size.Height / (double)sourceWpf.PixelHeight);  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: if (angle % 90 != 0) {  	throw new ArgumentException ("Rotation angle should be a multiple of 90 degrees."' "angle");  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: if (Math.Abs (angle) % 360 != 0)  	transform.Children.Add (new RotateTransform (Math.Abs (angle)));  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: try {  	foreach (PropertyItem prop in img.PropertyItems) {  		if (prop.Id == TagOrientation) {  			ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  			if (orientationFlag == 1)  				return 0;  			else if (orientationFlag == 2)  				return -360;  			else if (orientationFlag == 3)  				return 180;  			else if (orientationFlag == 4)  				return -180;  			else if (orientationFlag == 5)  				return -90;  			else if (orientationFlag == 6)  				return 90;  			else if (orientationFlag == 7)  				return -270;  			else if (orientationFlag == 8)  				return 270;  		}  	}  } catch {  	;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: foreach (PropertyItem prop in img.PropertyItems) {  	if (prop.Id == TagOrientation) {  		ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  		if (orientationFlag == 1)  			return 0;  		else if (orientationFlag == 2)  			return -360;  		else if (orientationFlag == 3)  			return 180;  		else if (orientationFlag == 4)  			return -180;  		else if (orientationFlag == 5)  			return -90;  		else if (orientationFlag == 6)  			return 90;  		else if (orientationFlag == 7)  			return -270;  		else if (orientationFlag == 8)  			return 270;  	}  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (prop.Id == TagOrientation) {  	ushort orientationFlag = BitConverter.ToUInt16 (prop.Value' 0);  	if (orientationFlag == 1)  		return 0;  	else if (orientationFlag == 2)  		return -360;  	else if (orientationFlag == 3)  		return 180;  	else if (orientationFlag == 4)  		return -180;  	else if (orientationFlag == 5)  		return -90;  	else if (orientationFlag == 6)  		return 90;  	else if (orientationFlag == 7)  		return -270;  	else if (orientationFlag == 8)  		return 270;  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 1)  	return 0;  else if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 2)  	return -360;  else if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return -360;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 3)  	return 180;  else if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return 180;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 4)  	return -180;  else if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return -180;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 5)  	return -90;  else if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return -90;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 6)  	return 90;  else if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return 90;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 7)  	return -270;  else if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return -270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: if (orientationFlag == 8)  	return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,GetRotation,The following statement contains a magic number: return 270;  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: if (angle % 90 != 0) {  	throw new ArgumentException ("Rotation angle should be a multiple of 90 degrees."' "angle");  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (thumb)) {  	g.PixelOffsetMode = PixelOffsetMode.None;  	g.InterpolationMode = InterpolationMode.HighQualityBicubic;  	g.Clear (System.Drawing.Color.Transparent);  	g.TranslateTransform (-sourceWidth / 2' -sourceHeight / 2' MatrixOrder.Append);  	if (Math.Abs (angle) % 360 != 0)  		g.RotateTransform (Math.Abs (angle)' MatrixOrder.Append);  	if (angle < 0)  		xScale = -xScale;  	g.ScaleTransform ((float)xScale' (float)yScale' MatrixOrder.Append);  	g.TranslateTransform (thumbWidth / 2' thumbHeight / 2' MatrixOrder.Append);  	g.DrawImage (source' 0' 0);  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (thumb)) {  	g.PixelOffsetMode = PixelOffsetMode.None;  	g.InterpolationMode = InterpolationMode.HighQualityBicubic;  	g.Clear (System.Drawing.Color.Transparent);  	g.TranslateTransform (-sourceWidth / 2' -sourceHeight / 2' MatrixOrder.Append);  	if (Math.Abs (angle) % 360 != 0)  		g.RotateTransform (Math.Abs (angle)' MatrixOrder.Append);  	if (angle < 0)  		xScale = -xScale;  	g.ScaleTransform ((float)xScale' (float)yScale' MatrixOrder.Append);  	g.TranslateTransform (thumbWidth / 2' thumbHeight / 2' MatrixOrder.Append);  	g.DrawImage (source' 0' 0);  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (thumb)) {  	g.PixelOffsetMode = PixelOffsetMode.None;  	g.InterpolationMode = InterpolationMode.HighQualityBicubic;  	g.Clear (System.Drawing.Color.Transparent);  	g.TranslateTransform (-sourceWidth / 2' -sourceHeight / 2' MatrixOrder.Append);  	if (Math.Abs (angle) % 360 != 0)  		g.RotateTransform (Math.Abs (angle)' MatrixOrder.Append);  	if (angle < 0)  		xScale = -xScale;  	g.ScaleTransform ((float)xScale' (float)yScale' MatrixOrder.Append);  	g.TranslateTransform (thumbWidth / 2' thumbHeight / 2' MatrixOrder.Append);  	g.DrawImage (source' 0' 0);  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (thumb)) {  	g.PixelOffsetMode = PixelOffsetMode.None;  	g.InterpolationMode = InterpolationMode.HighQualityBicubic;  	g.Clear (System.Drawing.Color.Transparent);  	g.TranslateTransform (-sourceWidth / 2' -sourceHeight / 2' MatrixOrder.Append);  	if (Math.Abs (angle) % 360 != 0)  		g.RotateTransform (Math.Abs (angle)' MatrixOrder.Append);  	if (angle < 0)  		xScale = -xScale;  	g.ScaleTransform ((float)xScale' (float)yScale' MatrixOrder.Append);  	g.TranslateTransform (thumbWidth / 2' thumbHeight / 2' MatrixOrder.Append);  	g.DrawImage (source' 0' 0);  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (thumb)) {  	g.PixelOffsetMode = PixelOffsetMode.None;  	g.InterpolationMode = InterpolationMode.HighQualityBicubic;  	g.Clear (System.Drawing.Color.Transparent);  	g.TranslateTransform (-sourceWidth / 2' -sourceHeight / 2' MatrixOrder.Append);  	if (Math.Abs (angle) % 360 != 0)  		g.RotateTransform (Math.Abs (angle)' MatrixOrder.Append);  	if (angle < 0)  		xScale = -xScale;  	g.ScaleTransform ((float)xScale' (float)yScale' MatrixOrder.Append);  	g.TranslateTransform (thumbWidth / 2' thumbHeight / 2' MatrixOrder.Append);  	g.DrawImage (source' 0' 0);  }  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: g.TranslateTransform (-sourceWidth / 2' -sourceHeight / 2' MatrixOrder.Append);  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: g.TranslateTransform (-sourceWidth / 2' -sourceHeight / 2' MatrixOrder.Append);  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: if (Math.Abs (angle) % 360 != 0)  	g.RotateTransform (Math.Abs (angle)' MatrixOrder.Append);  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: g.TranslateTransform (thumbWidth / 2' thumbHeight / 2' MatrixOrder.Append);  
Magic Number,ImageGlass.ImageListView,ThumbnailExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\ThumbnailExtractor.cs,ScaleDownRotateBitmap,The following statement contains a magic number: g.TranslateTransform (thumbWidth / 2' thumbHeight / 2' MatrixOrder.Append);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,FormatSize,The following statement contains a magic number: return string.Format ("{0} {1}"' Math.Round (sized' 2)' units [i]);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 0) {  	order = 0;  	txt = "Not Yet";  } else if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (secs < 60) {  	order = 1;  	txt = "Just now";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day) {  	order = 2;  	txt = "Today";  } else if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: order = 2;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date.Year == now.Year && date.Month == now.Month && date.Day == now.Day - 1) {  	order = 3;  	txt = "Yesterday";  } else if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: order = 3;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart) {  	order = 4;  	txt = "This week";  } else if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: order = 4;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-7)) {  	order = 5;  	txt = "Last week";  } else if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: order = 5;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-14)) {  	order = 6;  	txt = "Two weeks ago";  } else if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: order = 6;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > weekStart.AddDays (-21)) {  	order = 7;  	txt = "Three weeks ago";  } else if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: order = 7;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > monthStart) {  	order = 8;  	txt = "Earlier this month";  } else if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: order = 8;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > monthStart.AddMonths (-1)) {  	order = 9;  	txt = "Last month";  } else if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: order = 9;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > yearStart) {  	order = 10;  	txt = "Earlier this year";  } else if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: order = 10;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: if (date > yearStart.AddYears (-1)) {  	order = 11;  	txt = "Last year";  } else {  	order = 12;  	txt = "Older";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: order = 11;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDate,The following statement contains a magic number: order = 12;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024) {  	order = 0;  	txt = "< 10 KB";  } else if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024) {  	order = 1;  	txt = "10 - 100 KB";  } else if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024) {  	order = 2;  	txt = "100 KB - 1 MB";  } else if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: order = 2;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 10 * 1024 * 1024) {  	order = 3;  	txt = "1 - 10 MB";  } else if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: order = 3;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 100 * 1024 * 1024) {  	order = 4;  	txt = "10 - 100 MB";  } else if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: order = 4;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: if (size < 1024 * 1024 * 1024) {  	order = 5;  	txt = "100 MB - 1 GB";  } else {  	order = 6;  	txt = "> 1 GB";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: order = 5;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextFileSize,The following statement contains a magic number: order = 6;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 32 && size.Height <= 32) {  	order = 0;  	txt = "Icon";  } else if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 32 && size.Height <= 32) {  	order = 0;  	txt = "Icon";  } else if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 32 && size.Height <= 32) {  	order = 0;  	txt = "Icon";  } else if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 32 && size.Height <= 32) {  	order = 0;  	txt = "Icon";  } else if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 32 && size.Height <= 32) {  	order = 0;  	txt = "Icon";  } else if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 32 && size.Height <= 32) {  	order = 0;  	txt = "Icon";  } else if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 32 && size.Height <= 32) {  	order = 0;  	txt = "Icon";  } else if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 32 && size.Height <= 32) {  	order = 0;  	txt = "Icon";  } else if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 32 && size.Height <= 32) {  	order = 0;  	txt = "Icon";  } else if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 32 && size.Height <= 32) {  	order = 0;  	txt = "Icon";  } else if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 32 && size.Height <= 32) {  	order = 0;  	txt = "Icon";  } else if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 240 && size.Height <= 240) {  	order = 1;  	txt = "Small";  } else if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 640 && size.Height <= 640) {  	order = 2;  	txt = "Medium";  } else if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: order = 2;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: if (size.Width <= 1280 && size.Height <= 1280) {  	order = 3;  	txt = "Large";  } else {  	order = 4;  	txt = "Very large";  }  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: order = 3;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GroupTextDimension,The following statement contains a magic number: order = 4;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x89 && header [1] == 0x50 && header [2] == 0x4E && header [3] == 0x47 && header [4] == 0x0D && header [5] == 0x0A && header [6] == 0x1A && header [7] == 0x0A)  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x89 && header [1] == 0x50 && header [2] == 0x4E && header [3] == 0x47 && header [4] == 0x0D && header [5] == 0x0A && header [6] == 0x1A && header [7] == 0x0A)  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x89 && header [1] == 0x50 && header [2] == 0x4E && header [3] == 0x47 && header [4] == 0x0D && header [5] == 0x0A && header [6] == 0x1A && header [7] == 0x0A)  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x89 && header [1] == 0x50 && header [2] == 0x4E && header [3] == 0x47 && header [4] == 0x0D && header [5] == 0x0A && header [6] == 0x1A && header [7] == 0x0A)  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x89 && header [1] == 0x50 && header [2] == 0x4E && header [3] == 0x47 && header [4] == 0x0D && header [5] == 0x0A && header [6] == 0x1A && header [7] == 0x0A)  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x89 && header [1] == 0x50 && header [2] == 0x4E && header [3] == 0x47 && header [4] == 0x0D && header [5] == 0x0A && header [6] == 0x1A && header [7] == 0x0A)  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0xD7 && header [1] == 0xCD && header [2] == 0xC6 && header [3] == 0x9A)  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0xD7 && header [1] == 0xCD && header [2] == 0xC6 && header [3] == 0x9A)  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x01 && header [1] == 0x00 && header [2] == 0x00 && header [3] == 0x00)  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x01 && header [1] == 0x00 && header [2] == 0x00 && header [3] == 0x00)  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x00 && header [1] == 0x00 && header [2] == 0x01 && header [3] == 0x00)  	// ICO  	return true;  else if (header [0] == 0x00 && header [1] == 0x00 && header [2] == 0x02 && header [3] == 0x00)  	// CUR  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x00 && header [1] == 0x00 && header [2] == 0x01 && header [3] == 0x00)  	// ICO  	return true;  else if (header [0] == 0x00 && header [1] == 0x00 && header [2] == 0x02 && header [3] == 0x00)  	// CUR  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x00 && header [1] == 0x00 && header [2] == 0x01 && header [3] == 0x00)  	// ICO  	return true;  else if (header [0] == 0x00 && header [1] == 0x00 && header [2] == 0x02 && header [3] == 0x00)  	// CUR  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x00 && header [1] == 0x00 && header [2] == 0x01 && header [3] == 0x00)  	// ICO  	return true;  else if (header [0] == 0x00 && header [1] == 0x00 && header [2] == 0x02 && header [3] == 0x00)  	// CUR  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x00 && header [1] == 0x00 && header [2] == 0x02 && header [3] == 0x00)  	// CUR  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,IsImage,The following statement contains a magic number: if (header [0] == 0x00 && header [1] == 0x00 && header [2] == 0x02 && header [3] == 0x00)  	// CUR  	return true;  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: if (radius > 0)  	path.AddArc (x + width - 2 * radius' y' 2 * radius' 2 * radius' 270.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: if (radius > 0)  	path.AddArc (x + width - 2 * radius' y' 2 * radius' 2 * radius' 270.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: if (radius > 0)  	path.AddArc (x + width - 2 * radius' y' 2 * radius' 2 * radius' 270.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc (x + width - 2 * radius' y' 2 * radius' 2 * radius' 270.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc (x + width - 2 * radius' y' 2 * radius' 2 * radius' 270.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc (x + width - 2 * radius' y' 2 * radius' 2 * radius' 270.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: if (radius > 0)  	path.AddArc (x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: if (radius > 0)  	path.AddArc (x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: if (radius > 0)  	path.AddArc (x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: if (radius > 0)  	path.AddArc (x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc (x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc (x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc (x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc (x + width - 2 * radius' y + height - 2 * radius' 2 * radius' 2 * radius' 0.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: if (radius > 0)  	path.AddArc (x' y + height - 2 * radius' 2 * radius' 2 * radius' 90.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: if (radius > 0)  	path.AddArc (x' y + height - 2 * radius' 2 * radius' 2 * radius' 90.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: if (radius > 0)  	path.AddArc (x' y + height - 2 * radius' 2 * radius' 2 * radius' 90.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc (x' y + height - 2 * radius' 2 * radius' 2 * radius' 90.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc (x' y + height - 2 * radius' 2 * radius' 2 * radius' 90.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc (x' y + height - 2 * radius' 2 * radius' 2 * radius' 90.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: if (radius > 0)  	path.AddArc (x' y' 2 * radius' 2 * radius' 180.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: if (radius > 0)  	path.AddArc (x' y' 2 * radius' 2 * radius' 180.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc (x' y' 2 * radius' 2 * radius' 180.0f' 90.0f);  
Magic Number,ImageGlass.ImageListView,Utility,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\Utility.cs,GetRoundedRectanglePath,The following statement contains a magic number: path.AddArc (x' y' 2 * radius' 2 * radius' 180.0f' 90.0f);  
Missing Default,ImageGlass.ImageListView,MetadataExtractor,F:\newReposMay17\d2phap_ImageGlass\Source\Components\ImageGlass.ImageListView\MetadataExtractor.cs,InitViaBmp,The following switch statement is missing a default case: switch (prop.Id) {  case TagImageDescription:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		ImageDescription = str;  	}  	break;  case TagArtist:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Artist = str;  	}  	break;  case TagEquipmentManufacturer:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentManufacturer = str;  	}  	break;  case TagEquipmentModel:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		EquipmentModel = str;  	}  	break;  case TagDateTimeOriginal:  	dateTime = ExifDateTime (prop.Value);  	if (dateTime != DateTime.MinValue) {  		DateTaken = dateTime;  	}  	break;  case TagExposureTime:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			ExposureTime = dVal;  		}  	}  	break;  case TagFNumber:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FNumber = dVal;  		}  	}  	break;  case TagISOSpeed:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal != 0) {  			ISOSpeed = iVal;  		}  	}  	break;  case TagCopyright:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Copyright = str;  	}  	break;  case TagRating:  	if (Rating == 0 && prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		if (iVal == 1)  			Rating = 1;  		else if (iVal == 2)  			Rating = 25;  		else if (iVal == 3)  			Rating = 50;  		else if (iVal == 4)  			Rating = 75;  		else if (iVal == 5)  			Rating = 99;  	}  	break;  case TagRatingPercent:  	if (prop.Value.Length == 2) {  		iVal = ExifUShort (prop.Value);  		Rating = iVal;  	}  	break;  case TagUserComment:  	str = ExifAscii (prop.Value);  	if (str != String.Empty) {  		Comment = str;  	}  	break;  case TagSoftware:  	str = ExifAscii (prop.Value).Trim ();  	if (str != String.Empty) {  		Software = str;  	}  	break;  case TagFocalLength:  	if (prop.Value.Length == 8) {  		dVal = ExifDouble (prop.Value);  		if (dVal != 0.0) {  			FocalLength = dVal;  		}  	}  	break;  }  
