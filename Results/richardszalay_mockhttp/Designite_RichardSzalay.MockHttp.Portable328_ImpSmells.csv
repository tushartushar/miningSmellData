Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RichardSzalay.MockHttp.Matchers,UrlMatcher,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\Matchers\UrlMatcher.cs,Matches,Cyclomatic complexity of the method is 8
Long Parameter List,RichardSzalay.MockHttp,MockedRequestExtensions,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\MockedRequestExtensions.cs,Respond,The method has 5 parameters. Parameters: source' statusCode' headers' mediaType' content
Long Parameter List,RichardSzalay.MockHttp,MockedRequestExtensions,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\MockedRequestExtensions.cs,Respond,The method has 5 parameters. Parameters: source' statusCode' headers' mediaType' content
Long Parameter List,RichardSzalay.MockHttp,MockedRequestExtensions,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\MockedRequestExtensions.cs,Respond,The method has 5 parameters. Parameters: source' statusCode' headers' mediaType' handler
Long Statement,RichardSzalay.MockHttp,MockHttpMessageHandler,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\MockHttpMessageHandler.cs,CreateDefaultFallbackMessage,The length of the statement  "                ReasonPhrase = $"No matching mock handler for \"{req.Method.ToString().ToUpperInvariant()} {req.RequestUri.AbsoluteUri}\""" is 122.
Long Statement,RichardSzalay.MockHttp,MockHttpMessageHandler,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\MockHttpMessageHandler.cs,VerifyNoOutstandingRequest,The length of the statement  "                throw new InvalidOperationException("There are " + outstandingRequests + " oustanding requests. Call Flush() to complete them");" is 128.
Long Statement,RichardSzalay.MockHttp,UriUtil,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\UriUtil.cs,TryParse,The length of the statement  "            bool isAndroidFalsePositive = systemResult && output.Scheme == "file" && !url.StartsWith("file://"' StringComparison.Ordinal);" is 126.
Magic Number,RichardSzalay.MockHttp,MockedRequest,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\MockedRequest.cs,MockedRequest,The following statement contains a magic number: string[] urlParts = StringUtil.Split(url' '?'' 2);
Magic Number,RichardSzalay.MockHttp,MockedRequest,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\MockedRequest.cs,MockedRequest,The following statement contains a magic number: urlParts.Length == 2
Magic Number,RichardSzalay.MockHttp,MockedRequest,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\MockedRequest.cs,MockedRequest,The following statement contains a magic number: urlParts.Length == 2
Magic Number,RichardSzalay.MockHttp.Matchers,HeadersMatcher,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\Matchers\HeadersMatcher.cs,ParseHeaders,The following statement contains a magic number: string[] parts = StringUtil.Split(line' ':'' 2);
Magic Number,RichardSzalay.MockHttp.Matchers,HeadersMatcher,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\Matchers\HeadersMatcher.cs,ParseHeaders,The following statement contains a magic number: parts.Length != 2
Magic Number,RichardSzalay.MockHttp.Matchers,QueryStringMatcher,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\Matchers\QueryStringMatcher.cs,ParseQueryString,The following statement contains a magic number: return input.TrimStart('?').Split('&')                 .Select(pair => StringUtil.Split(pair' '='' 2))                 .Select(pair => new KeyValuePair<string' string>(                     UrlDecode(pair[0])'                     pair.Length == 2 ? UrlDecode(pair[1]) : ""                     ))                 .ToList();
Magic Number,RichardSzalay.MockHttp.Matchers,QueryStringMatcher,C:\research\architectureSmells\repos\richardszalay_mockhttp\RichardSzalay.MockHttp.Shared\Matchers\QueryStringMatcher.cs,ParseQueryString,The following statement contains a magic number: return input.TrimStart('?').Split('&')                 .Select(pair => StringUtil.Split(pair' '='' 2))                 .Select(pair => new KeyValuePair<string' string>(                     UrlDecode(pair[0])'                     pair.Length == 2 ? UrlDecode(pair[1]) : ""                     ))                 .ToList();
