Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common.Impl,Filter,C:\repos\NeosIT_generic-exchange-transport-agent\NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common\Impl\Filter.cs,AppliesTo,Cyclomatic complexity of the method is 14
Long Parameter List,NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common.Impl,Filter,C:\repos\NeosIT_generic-exchange-transport-agent\NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common\Impl\Filter.cs,AppliesTo,The method has 5 parameters.
Long Statement,NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common.Impl,Filter,C:\repos\NeosIT_generic-exchange-transport-agent\NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common\Impl\Filter.cs,AppliesTo,The length of the statement  "	Logger.Debug (@"[GenericTransportAgent] Filter - MailItem Subject: ""{0}""; From: ""{1}""..."' emailItem.Message.Subject' emailItem.FromAddress.ToString ()); " is 157.
Long Statement,NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common.Impl,Filter,C:\repos\NeosIT_generic-exchange-transport-agent\NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common\Impl\Filter.cs,AppliesTo,The length of the statement  "		appliesTo = (null != emailItem.Message.To && 0 != emailItem.Message.To.Count && emailItem.Message.To.Any (rcpt => CheckForValue (rcpt.SmtpAddress' Operator' Value))); " is 166.
Long Statement,NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common.Impl,Filter,C:\repos\NeosIT_generic-exchange-transport-agent\NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common\Impl\Filter.cs,AppliesTo,The length of the statement  "		appliesTo = !lastExitCode.HasValue || (CheckForValue (lastExitCode.Value.ToString (CultureInfo.InvariantCulture)' Operator' Value)/* ||" is 135.
Missing Default,NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common.Impl,Filter,C:\repos\NeosIT_generic-exchange-transport-agent\NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common\Impl\Filter.cs,AppliesTo,The following switch statement is missing a default case: switch (On) {  case FilterKeyEnum.From:  	appliesTo = CheckForValue (emailItem.FromAddress.ToString ()' Operator' Value);  	break;  case FilterKeyEnum.To:  	appliesTo = (null != emailItem.Message.To && 0 != emailItem.Message.To.Count && emailItem.Message.To.Any (rcpt => CheckForValue (rcpt.SmtpAddress' Operator' Value)));  	break;  case FilterKeyEnum.Subject:  	appliesTo = CheckForValue (emailItem.Message.Subject' Operator' Value);  	break;  case FilterKeyEnum.LastExitCode:  	appliesTo = !lastExitCode.HasValue || (CheckForValue (lastExitCode.Value.ToString (CultureInfo.InvariantCulture)' Operator' Value)/* ||                                  CheckForValue(((int) ExitCodeEnum.CommandNotRun).ToString(CultureInfo.InvariantCulture)' Operator' Value)*/);  	break;  }  
Missing Default,NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common.Impl,Filter,C:\repos\NeosIT_generic-exchange-transport-agent\NeosIT.Exchange.GenericExchangeTransportAgent.Plugins.Common\Impl\Filter.cs,CheckForValue,The following switch statement is missing a default case: switch (@operator) {  case FilterOperatorEnum.StartsWith:  	return src.StartsWith (value' StringComparison.InvariantCultureIgnoreCase);  case FilterOperatorEnum.Equals:  	return src.Equals (value' StringComparison.InvariantCultureIgnoreCase);  case FilterOperatorEnum.NotEquals:  	return !src.Equals (value' StringComparison.InvariantCultureIgnoreCase);  case FilterOperatorEnum.EndsWith:  	return src.EndsWith (value' StringComparison.InvariantCultureIgnoreCase);  case FilterOperatorEnum.Regex:  	return Regex.IsMatch (src' value' RegexOptions.CultureInvariant | RegexOptions.IgnoreCase);  case FilterOperatorEnum.Contains:  	return src.Contains (value' StringComparison.InvariantCultureIgnoreCase);  }  
