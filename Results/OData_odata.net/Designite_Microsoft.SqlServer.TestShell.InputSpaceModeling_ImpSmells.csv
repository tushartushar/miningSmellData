Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PairwiseStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\PairwiseStrategy.cs,Explore,Cyclomatic complexity of the method is 17
Complex Method,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,ExpressionOperation,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\SymbolicConstraint.cs,Evaluate,Cyclomatic complexity of the method is 24
Complex Method,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,Vector,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\Vector.cs,IsEquivalent,Cyclomatic complexity of the method is 10
Long Parameter List,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethod,The method has 5 parameters. Parameters: type' name' types' isPublic' isStatic
Long Parameter List,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperty,The method has 6 parameters. Parameters: type' name' isPublic' isStatic' returnType' parameterTypes
Long Parameter List,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,RestrictCombinationsStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\RestrictCombinationsStrategy.cs,RestrictCombinationsStrategy,The method has 5 parameters. Parameters: wrappedStrategy' constraints' numberOfCombinationsAllowed' nextInt' targetDimensions
Long Identifier,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,DimensionIndexCombinationGenerator,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ExplorationHelpers\DimensionIndexCombinationGenerator.cs,Create,The length of the parameter extendedCoverageDimensionIndexSubsets is 37.
Long Identifier,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,DimensionIndexCombinationGenerator,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ExplorationHelpers\DimensionIndexCombinationGenerator.cs,Create,The length of the parameter noCoverageGuaranteeDimensionIndexes is 35.
Long Identifier,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,GroupByStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\GroupByStrategy.cs,,The length of the parameter _ensureSameValuesForCategorizedValues is 37.
Long Identifier,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PairwiseStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\PairwiseStrategy.cs,,The length of the parameter _extendedCoverageDimensionSubsets is 33.
Long Identifier,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PairwiseStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\PairwiseStrategy.cs,,The length of the parameter _noCoverageGuaranteeDimensions is 30.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetTypeOrThrow,The length of the statement  "                // devnote (sparra): Not throwing a custom error message here because this method is expected to be removed. See comments above. " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetAllInstanceProperties,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetAllInstanceProperties,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetPublicProperties,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetPublicProperties,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetPublicProperties,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetPublicProperties,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetPublicProperties,The length of the statement  "            // TypeInfo.DeclaredProperties and Type.GetRuntimeProperties return both public and private properties' so need to filter out only public ones. " is 143.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetPublicProperties,The length of the statement  "            IEnumerable<PropertyInfo> properties = declaredOnly ? type.GetTypeInfo().DeclaredProperties : type.GetRuntimeProperties(); " is 122.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetInstanceConstructors,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetInstanceConstructors,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetInstanceConstructor,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetInstanceConstructor,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethod,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethod,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethod,The length of the statement  "            return type.GetRuntimeMethods().Where(m => m.Name == name && (isPublic == null || m.IsPublic == isPublic) && (isStatic == null || m.IsStatic == isStatic)).SingleOrDefault(); " is 173.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethod,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethod,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetField,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetField,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetField,The length of the statement  "            return type.GetRuntimeFields().Where(f => f.Name == name && (isPublic == null || f.IsPublic == isPublic) && (isStatic == null || f.IsStatic == isStatic)).SingleOrDefault(); " is 172.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperty,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperty,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperty,The length of the statement  "            return type.GetRuntimeProperties().Where(p => p.Name == name && (isPublic == null || p.GetMethod.IsPublic == isPublic) && (isStatic == null || p.GetMethod.IsStatic == isStatic)).SingleOrDefault(); " is 196.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperty,The length of the statement  "            var propertyCandidates = type.GetRuntimeProperties().Where(p => p.Name == name && (isPublic == null || p.GetMethod.IsPublic == isPublic) && (isStatic == null || p.GetMethod.IsStatic == isStatic)); " is 196.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethods,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethods,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethods,The length of the statement  "            return type.GetRuntimeMethods().Where(m => (isPublic == null || m.IsPublic == isPublic) &&  (isStatic == null || m.IsStatic == isStatic)); " is 138.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetFields,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetFields,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetFields,The length of the statement  "            return type.GetRuntimeFields().Where(f => (isPublic == null || f.IsPublic == isPublic) && (isStatic == null || f.IsStatic == isStatic)); " is 136.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperties,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperties,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperties,The length of the statement  "            return type.GetRuntimeProperties().Where(p => (isPublic == null || p.GetMethod.IsPublic == isPublic) && (isStatic == null || p.GetMethod.IsStatic == isStatic)); " is 160.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetNestedTypes,The length of the statement  "            return type.GetTypeInfo().DeclaredNestedTypes.Where(t => isPublic == null || t.IsPublic == isPublic).Select(t => t.AsType()); " is 125.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetNestedTypes,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetNestedTypes,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,AllCombinationsStrategy<TCollection;TValue>,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\AllCombinationsStrategy.cs,Explore,The length of the statement  "			// specifies that the first two elements are included' but the last one is not. going through all binary numbers that take " is 122.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,CombinatorialStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\CombinatorialStrategy.cs,SetDefaultStrategies,The length of the statement  "						(IExplorationStrategy)typeof(ExhaustiveEnumStrategy<>).MakeGenericType(dim.Domain).GetInstanceConstructor(true' new Type[0]).Invoke(null)); " is 139.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,CombinatorialStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\CombinatorialStrategy.cs,SetDefaultStrategies,The length of the statement  "					_explorationStrategies.Add(QualifiedDimension.Create(dim' path)' new ExhaustiveIEnumerableStrategy<bool?>(true' false' null)); " is 126.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,CombinatorialStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\CombinatorialStrategy.cs,ImportSubMatrixStrategies,The length of the statement  "			_constraints.AddRange(sourceStrategy._constraints.Select<IConstraint' IConstraint>(c => new InnerSubMatrixWrapperConstraint(c' innerMatrixPath))); " is 146.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,DimensionIndexCombinationGenerator,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ExplorationHelpers\DimensionIndexCombinationGenerator.cs,Create,The length of the statement  "						new TranslatedDimensionIndexCombinationGenerator(new PrimitiveDimensionIndexCombinationGenerator(s.Item1.Count' s.Item2)' s.Item1) " is 130.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PartialVectorConstraintChecker,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ExplorationHelpers\PartialVectorConstraintChecker.cs,GetAllowedValueIndexesForDimension,The length of the statement  "			foreach (PossiblyExtendedConstraint constraint in _extendedConstraints.Where(c => c.IsRelevantConstraint(targetDimension' setDimensionIndexes))) " is 144.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PartialVectorConstraintChecker,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ExplorationHelpers\PartialVectorConstraintChecker.cs,GetIndexOfConstraintDimension,The length of the statement  "				dimension.FullyQualifiedName' constraint.GetType().Name' string.Join("'"' dimensionValues.Select(dv => dv.Dimension.FullyQualifiedName)))); " is 139.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PartialVectorConstraintChecker,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ExplorationHelpers\PartialVectorConstraintChecker.cs,ExtendConstraint,The length of the statement  "			ReadOnlyCollection<DimensionWithValues> dimensionValuesSubset = dimensionIndexes.Select(di => dimensionValues[di]).ToList().AsReadOnly(); " is 137.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PartialVectorConstraintChecker,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ExplorationHelpers\PartialVectorConstraintChecker.cs,ExtendConstraint,The length of the statement  "			foreach (ReadOnlyCollection<int> indexes in CombinatorialUtilities.GetAllIndexCombinations(dimensionValuesSubset.Select(dv => dv.Values.Count))) " is 144.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PossiblyExtendedConstraint,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ExplorationHelpers\PartialVectorConstraintChecker.cs,GetValueIndex,The length of the statement  "				return _dimensionIndexes[dimensionIndexIndex] == targetDimensionIndex ? targetDimensionIndexValue : combination[_dimensionIndexes[dimensionIndexIndex]]; " is 152.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PossiblyExtendedConstraint,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ExplorationHelpers\PartialVectorConstraintChecker.cs,GetValueIndexes,The length of the statement  "				return Enumerable.Range(0' _dimensionIndexes.Count).Select(i => GetValueIndex(i' combination' targetDimensionIndex' targetDimensionIndexValue)); " is 144.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PairwiseStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\PairwiseStrategy.cs,AddExtendedCoverageDimensionSubset,The length of the statement  "				throw new ArgumentOutOfRangeException("order"' "The given order " + order + " is less than or equal to the overall order " + Order); " is 132.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PairwiseStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\PairwiseStrategy.cs,AddExtendedCoverageDimensionSubset,The length of the statement  "				throw new ArgumentOutOfRangeException("order"' "The given order " + order + " is greater than the number of dimensions in the subset " + subsetCollection.Count); " is 161.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PairwiseStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\PairwiseStrategy.cs,GetIndexOfDimension,The length of the statement  "				targetDimension.FullyQualifiedName' origin' string.Join("'"' dimensionValues.Select(dv => dv.Dimension.FullyQualifiedName)))); " is 126.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PairwiseStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\PairwiseStrategy.cs,SelectNextValuesForCurrentDimensionCombination,The length of the statement  "				Debug.Assert(currentCombination[currentDimensionsToCover[currentIndex]] < currentCombination.GetDimensionSize(currentDimensionsToCover[currentIndex])); " is 151.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PairwiseStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\PairwiseStrategy.cs,SelectNextValuesForCurrentDimensionCombination,The length of the statement  "				if (currentCombination[currentDimensionsToCover[currentIndex]] == currentCombination.GetDimensionSize(currentDimensionsToCover[currentIndex]) - 1) " is 146.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,ParseableCollectionTypeConverter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ParseableCollection.cs,ConvertFrom,The length of the statement  "			if (valueAsString != null && valueAsString.StartsWith("("' StringComparison.OrdinalIgnoreCase) && valueAsString.EndsWith(")"' StringComparison.OrdinalIgnoreCase)) " is 162.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PointCategory<T>,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\PointCategory.cs,ToString,The length of the statement  "			// Limit the number of items to display in case it's a huge list (don't want to make the debugger stop responding if it's shown there) " is 134.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,RestrictCombinationsStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\RestrictCombinationsStrategy.cs,Explore,The length of the statement  "						// Exceeded allowed number of combinations - coerce the values for these dimensions to be one of encountered combinations " is 121.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,RestrictCombinationsStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\RestrictCombinationsStrategy.cs,Explore,The length of the statement  "						// I try to change as few of them as possible by getting a combination that already has most of the dimension values in there. " is 126.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,RestrictCombinationsStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\RestrictCombinationsStrategy.cs,Explore,The length of the statement  "							current.SetBaseValue(dimension' chosenCombination.GetBaseValue(dimension)' chosenCombination.GetBaseCategory(dimension)); " is 121.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,ThreeDimensionalConstraint<TFirstDomainType;TSecondDomainType;TThirdDomainType>,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ThreeDimensionalConstraint.cs,IsValid,The length of the statement  "			return IsValidValue(target.GetValue(_firstDimension)' target.GetValue(_secondDimension)' target.GetValue(_thirdDimension)); " is 123.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,TypeConversion,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\TypeConversion.cs,FromString,The length of the statement  "			return TypeConverterForGenericTypes.FillTargetType(Utilities.GetTypeConverter(targetType)' targetType).ConvertFrom(null' CultureInfo.InvariantCulture' sourceString); " is 165.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,TypeConversion,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\TypeConversion.cs,ToString,The length of the statement  "            return (string)TypeConverterForGenericTypes.FillTargetType(Utilities.GetTypeConverter(sourceObject.GetType())' sourceObject.GetType()).ConvertTo(null' CultureInfo.InvariantCulture' sourceObject' typeof(string)); " is 211.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,ValueFactoryWithOptionalConcreteValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ValueFactoryWithOptionalConcreteValue.cs,GetHashCode,The length of the statement  "			return unchecked(_isConcrete.GetHashCode() + _valueFactory.GetHashCode() + EqualsImplementationUtils.GetSafeHashValue(_value)); " is 127.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,Vector,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\Vector.cs,IsEquivalent,The length of the statement  "					else if (!EqualsImplementationUtils.SafeEquals(_dimensionValues[dimension].GetConcreteValue()' secondVector._dimensionValues[dimension].GetConcreteValue()) && " is 158.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,Vector,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\Vector.cs,GetBaseValue,The length of the statement  "				return GetValue(dimension.Path[0]).GetBaseValue(QualifiedDimension.Create(dimension.BaseDimension' dimension.Path.Skip(1))); " is 124.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,Vector,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\Vector.cs,GetBaseCategory,The length of the statement  "				throw new KeyNotFoundException(string.Format(CultureInfo.InvariantCulture' "Vector {0} has no value for dimension {1}"' this' dimension)); " is 138.
Long Statement,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,Vector,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\Vector.cs,GetBaseCategory,The length of the statement  "				return GetValue(dimension.Path[0]).GetBaseCategory(QualifiedDimension.Create(dimension.BaseDimension' dimension.Path.Skip(1))); " is 127.
Complex Conditional,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,RestrictCombinationsStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\RestrictCombinationsStrategy.cs,CountSatisfiedDimensions,The conditional expression  "(toModify.GetBaseCategory(dimension) != null && combination.GetBaseCategory(dimension) != null &&  					toModify.GetBaseCategory(dimension).Equals(combination.GetBaseCategory(dimension))) ||  					Object.Equals(toModify.GetBaseValue(dimension)' combination.GetBaseValue(dimension))"  is complex.
Magic Number,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,AllCombinationsStrategy<TCollection;TValue>,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\AllCombinationsStrategy.cs,AllCombinationsStrategy,The following statement contains a magic number: throw new ArgumentOutOfRangeException(string.Format(CultureInfo.InvariantCulture'  					"The given set has {0} values' which is more than the supported {1} values."' _possibleValues.Count' sizeof(ulong) * 8));
Magic Number,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,AllCombinationsStrategy<TCollection;TValue>,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\AllCombinationsStrategy.cs,AllCombinationsStrategy,The following statement contains a magic number: _possibleValues.Count >= sizeof(ulong) * 8
Magic Number,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PrimitiveDimensionIndexCombinationGenerator,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ExplorationHelpers\PrimitiveDimensionIndexCombinationGenerator.cs,Choose,The following statement contains a magic number: k > n / 2
Magic Number,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,CoveredPairwiseCombinations,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\PairwiseStrategy.cs,EncodeCombination,The following statement contains a magic number: List<int> ret = new List<int>(dimensionsOfInterest.Count * 2);
Magic Number,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,ParseableCollectionTypeConverter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\ParseableCollection.cs,ConvertFrom,The following statement contains a magic number: return TargetType.GetConstructors(BindingFlags.NonPublic | BindingFlags.Instance).Single().Invoke(new object[] {  					valueAsString.Substring(1' valueAsString.Length - 2).Split(''').Select(  					s => TypeConversion.FromString(TargetType.GetGenericArguments()[0]' s))  				});
Magic Number,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,PointCategory<T>,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\PointCategory.cs,ToString,The following statement contains a magic number: int upperLimit = Math.Min(10' _chosenPoints.Count);
Magic Number,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,ExpressionOperation,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\SymbolicConstraint.cs,Evaluate,The following statement contains a magic number: _operands.Count >= 3
Magic Number,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,ExpressionOperation,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\SymbolicConstraint.cs,Evaluate,The following statement contains a magic number: ExpressionConstant c3  				= _operands.Count > 2 ? _operands[2].Evaluate(convert) : null;
Magic Number,Microsoft.SqlServer.Test.TestShell.Core.InputSpaceModeling,ExpressionOperation,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\External\TestShell\InputSpaceModeling\SymbolicConstraint.cs,Evaluate,The following statement contains a magic number: ExpressionConstant c3  				= _operands.Count > 2 ? _operands[2].Evaluate(convert) : null;
