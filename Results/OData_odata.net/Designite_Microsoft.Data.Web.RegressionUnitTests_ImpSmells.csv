Implementation smell,Namespace,Class,File,Method,Description
Long Method,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceOpInvokeAndRights,The method has 158 lines of code.
Long Method,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The method has 135 lines of code.
Long Method,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ResourceAssociationSetEndShouldNotScanResourceTypeProperties,The method has 102 lines of code.
Long Parameter List,AstoriaUnitTests.Tests,TestDataService35,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,GetReadStream,The method has 5 parameters. Parameters: entity' streamProperty' etag' checkETagForEquality' operationContext
Long Parameter List,AstoriaUnitTests.Tests,TestDataService35,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,GetWriteStream,The method has 5 parameters. Parameters: entity' streamProperty' etag' checkETagForEquality' operationContext
Long Identifier,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,InvalidContentTypeTests,The length of the parameter invalidMimeForNonEntityResources is 32.
Long Identifier,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the parameter navigationPropertiesOnCustomer is 30.
Long Identifier,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseDateTimeOffsetInEFModelShouldThrowNotSupported,The length of the parameter objectContextMetadataConstructor is 32.
Long Identifier,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseDateTimeOffsetInEFModelShouldThrowNotSupported,The length of the parameter primitiveResourceTypeMappingType is 32.
Long Identifier,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseDateTimeOffsetInEFModelShouldThrowNotSupported,The length of the parameter primitiveResourceTypeMapPropertyInfo is 36.
Long Identifier,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseDateTimeOffsetInEFModelShouldThrowNotSupported,The length of the parameter objectContextServiceProviderType is 32.
Long Identifier,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ResourceAssociationSetEndShouldNotScanResourceTypeProperties,The length of the parameter loadPropertiesDeclaredOnOrderCalled is 35.
Long Identifier,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ResourceAssociationSetEndShouldNotScanResourceTypeProperties,The length of the parameter loadPropertiesDeclaredOnCustomerCalled is 38.
Long Identifier,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ResourceAssociationSetEndShouldNotScanResourceTypeProperties,The length of the parameter loadPropertiesDeclaredOnOrderDetailCalled is 41.
Long Identifier,AstoriaUnitTests.Tests,MyServiceOperationDS,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,,The length of the parameter serviceOperationRightsDictionary is 32.
Long Identifier,AstoriaUnitTests.Tests,ServiceOpAndChangeInterceptorService,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,,The length of the parameter InvokeInterceptorsOnLinkDelete is 30.
Long Identifier,AstoriaUnitTests.Tests,TestDataService15,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,,The length of the parameter onStartProcessRequestMethodCalled is 33.
Long Identifier,AstoriaUnitTests.Tests,TestDataService26,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,,The length of the parameter CustomersQueryInterceptorInvokeCount is 36.
Long Identifier,AstoriaUnitTests.Tests,TestDataService26,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,,The length of the parameter OrdersQueryInterceptorInvokeCount is 33.
Long Identifier,AstoriaUnitTests.Tests,TestDataService26,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,,The length of the parameter QueryCustomersInjectsBrokenExpression is 37.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceOpInvokeAndRights,The length of the statement  "                string queryPortionNotEmpty = DataServicesResourceUtil.GetString("RequestUriProcessor_SegmentDoesNotSupportKeyPredicates"); " is 123.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceOpInvokeAndRights,The length of the statement  "                TestUtil.RunCombinations(serviceOperationRights' providers' requestUris' entitySetRights' (sopRights' resultKind' uri' esRights) => " is 131.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceOpInvokeAndRights,The length of the statement  "                            new Providers.ServiceOperationParameter[] { new Providers.ServiceOperationParameter("id"' Providers.ResourceType.GetPrimitiveResourceType(typeof(int))) }); " is 155.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceOpInvokeAndRights,The length of the statement  "                                return new DSPContext() { ServiceOperations = new Dictionary<string' Func<object[]' object>>() { { "GetEntity"' sopCallBack } } }; " is 130.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceOpInvokeAndRights,The length of the statement  "                                expectedMessage = "The operation 'GetEntity' has the resource set 'Entities' that is not visible. The operation 'GetEntity' should be made hidden or the resource set 'Entities' should be made visible."; " is 202.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceOpInvokeAndRights,The length of the statement  "                            else if ((resultKind == Providers.ServiceOperationResultKind.DirectValue || resultKind == Providers.ServiceOperationResultKind.QueryWithSingleResult)) " is 150.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceOpInvokeAndRights,The length of the statement  "                                    expectedMessage = resultKind == Providers.ServiceOperationResultKind.QueryWithSingleResult ? queryOptionNoSet : queryOptionNotEmpty; " is 132.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceOpInvokeAndRights,The length of the statement  "                                    expectedMessage = "The request URI is not valid. The segment 'GetEntity' must be the last segment in the URI because it is one of the following: $ref' $batch' $count' $value' $metadata' a named media resource' an action' a noncomposable function' an action import' a noncomposable function import' an operation with void return type' or an operation import with void return type."; " is 381.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ErrorMessageShouldReturnEdmBooleanInsteadOfSystemBoolean,The length of the statement  "                    UnitTestsUtil.VerifyWebExceptionXML(ex' HttpStatusCode.BadRequest' ODataLibResourceUtil.GetString("MetadataBinder_FilterExpressionNotSingleValue")); " is 148.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,TestDefaultBatchReaderBufferLength,The length of the statement  "                Type batchStreamType = typeof(Microsoft.OData.ODataBatchReader).Assembly.GetType("Microsoft.OData.Core.ODataBatchReaderStreamBuffer"); " is 134.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,TestDefaultBatchReaderBufferLength,The length of the statement  "                FieldInfo defaultBufferSizeField = batchStreamType.GetField("BufferLength"' BindingFlags.NonPublic | BindingFlags.Static); " is 122.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,TestDefaultBatchReaderBufferLength,The length of the statement  "                string batchContentEnd = "\" }\r\n\r\n--changeset_6e069cca-b4f0-4e89-b37b-f42278d05fa3--\r\n--batch_09c35e58-cefd-401a-97e3-4de640036aa6--"; " is 140.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,VerifyLinqCallsToPublicMethods,The length of the statement  "                    var doc = ExpressionTreeTestUtils.CreateRequestAndGetExpressionTreeXml(typeof(Context)' "/Values?$filter=BinaryValue eq binary'AAAB'"); " is 135.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,VerifyLinqCallsToPublicMethods,The length of the statement  "                    UnitTestsUtil.VerifyXPathResultCount(doc' 1' "//Method[@type='DataServiceProviderMethods' and text()='AreByteArraysEqual']"); " is 125.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,VerifyLinqCallsToPublicMethods,The length of the statement  "                    doc = ExpressionTreeTestUtils.CreateRequestAndGetExpressionTreeXml(typeof(Context)' "/Values?$filter=BinaryValue ne binary'AAAB'"); " is 131.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,VerifyLinqCallsToPublicMethods,The length of the statement  "                    UnitTestsUtil.VerifyXPathResultCount(doc' 1' "//Method[@type='DataServiceProviderMethods' and text()='AreByteArraysNotEqual']"); " is 128.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ApiTests,The length of the statement  "                        Assert.AreEqual(call.Item1' DataServiceProviderMethods.AreByteArraysEqual(call.Item2' call.Item3)' "AreByteArraysEqual returned {0} with parameters {1}' {2}"' !call.Item1' call.Item2' call.Item3); " is 196.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ApiTests,The length of the statement  "                        Assert.AreEqual(!call.Item1' DataServiceProviderMethods.AreByteArraysNotEqual(call.Item2' call.Item3)' "AreByteArraysNotEqual returned {0} with parameters {1}' {2}"' call.Item1' call.Item2' call.Item3); " is 202.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InvalidRequestVersionErrorMsg,The length of the statement  "                        string idealErrorMsg = DataServicesResourceUtil.GetString("DataService_VersionCannotBeParsed"' versionRequested' "OData-MaxVersion"); " is 133.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InvalidRequestVersionErrorMsg,The length of the statement  "                        Assert.IsTrue(errorPayload.Contains(idealErrorMsg)' "making sure we are getting the right error message with the right header name"); " is 133.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InvalidRequestVersionErrorMsg,The length of the statement  "                        string idealErrorMsg = DataServicesResourceUtil.GetString("DataService_VersionCannotBeParsed"' versionRequested' "OData-Version"); " is 130.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InvalidRequestVersionErrorMsg,The length of the statement  "                        Assert.IsTrue(errorPayload.Contains(idealErrorMsg)' "making sure we are getting the right error message with the right header name"); " is 133.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,SettingReferencePropertyWhenFKIsPartOfPKShouldWork,The length of the statement  "                            "<link rel='http://docs.oasis-open.org/odata/ns/related/Order' title='Order' type='application/atom+xml;type=entry' href='Orders(1)' />" + " is 138.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,SettingReferencePropertyWhenFKIsPartOfPKShouldWork,The length of the statement  "                        new string[] { "/atom:entry[atom:category/@term='#AstoriaUnitTests.Stubs.OrderDetail' and atom:id='http://host/OrderDetails(OrderID=1'ProductID=125)' and atom:content/adsm:properties[ads:OrderID='1' and ads:ProductID='125']]" }); " is 229.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,SettingReferencePropertyWhenFKIsPartOfPKShouldWork,The length of the statement  "                        new string[] { "/atom:entry[atom:category/@term='#AstoriaUnitTests.Stubs.Order' and atom:id='http://host/Orders(1)' and atom:content/adsm:properties/ads:ID='1']" }); " is 165.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,SettingReferencePropertyWhenFKIsPartOfPKShouldWork,The length of the statement  "                    UnitTestsUtil.CustomProviderRequest(providerType' "/OrderDetails"' UnitTestsUtil.AtomFormat' atomPayload' new KeyValuePair<string' string[]>[] { atomXPaths1' atomXPaths2 }' "POST"' false /*verifyETagReturned*/); " is 211.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,SettingJustReferencePropertyWhenFKIsPartOfPKShouldFail,The length of the statement  "                string jsonWorkerPayload = "{ ID: 0' FirstName: 'Pratik'' LastName: 'Patel'' Office: {@odata.readLink:'/Offices(1234)'} }"; " is 123.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,FireChangeInterceptorsInPutToEFShouldWork,The length of the statement  "                TestUtil.RunCombinations(new Type[] { typeof(EFFK.CustomObjectContextPOCO)' typeof(EFFK.CustomObjectContextPOCOProxy) }' " is 120.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ShouldThrowDataServiceExceptionInsteadOfInternalExceptions,The length of the statement  "                            Assert.AreEqual(statusCode' HttpStatusCode.BadRequest' "making sure we get bad request when property type is not set correctly"); " is 129.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ShouldThrowDataServiceExceptionInsteadOfInternalExceptions,The length of the statement  "                            Assert.IsTrue(errorPayload.Contains(DataServicesResourceUtil.GetString("BadRequest_ErrorInSettingPropertyValue"' "DollarAmount"))' "making sure we are getting the right error message"); " is 185.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,IgnoreIncludeAssociationLinksInResponseIfMPVLessThan40,The length of the statement  "                        Assert.AreEqual(request.ResponseVersion' expectedResponseVersion' "If the protocol version is set to v3' only then IncludeRelationshipsInPayload knob should come into effect"); " is 176.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,PreferenceAppliedOnPostServiceOps,The length of the statement  "                                Assert.IsFalse(request.ResponseHeaders.Keys.Contains("Preference-Applied")' "Prefer header should not be applied on POST Service Op."); " is 135.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,JsonSerializerNotHandlingEntitiesThatImplementIEnumerable,The length of the statement  "                    String.Format("{1}/value/{0}/{1}/Orders/{0}/{1}[ID=1 and DollarAmount='1000']"' JsonValidator.ArrayString' JsonValidator.ObjectString)' " is 135.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,JsonSerializerNotHandlingEntitiesThatImplementIEnumerable,The length of the statement  "                    String.Format("{1}/value/{0}/{1}/Orders/{0}/{1}[ID=100 and DollarAmount='555']"' JsonValidator.ArrayString' JsonValidator.ObjectString)' " is 136.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,JsonInsertPayloadWithNamedStream,The length of the statement  "                Providers.ResourceProperty stream1 = new Providers.ResourceProperty("Stream1"' Providers.ResourcePropertyKind.Stream' Providers.ResourceType.GetPrimitiveResourceType(typeof(System.IO.Stream))); " is 193.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,JsonInsertPayloadWithNamedStream,The length of the statement  "                string payload = "{ \"Stream1\": { \"@odata.mediaEditLink\":\"http://pqianvm2:33369/TheTest/Entities(0)/Stream1\" }' \"ID\":0}"; " is 128.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,JsonInsertPayloadWithNamedStream,The length of the statement  "                    string expectedErrorMsg = ODataLibResourceUtil.GetString("ODataJsonLightResourceDeserializer_StreamPropertyWithValue"' "Stream1"); " is 130.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,JsonInsertPayloadWithNamedStream,The length of the statement  "                    Assert.AreEqual(HttpStatusCode.BadRequest' statusCode' "Should generate a 400 error since stream properties are not allowed in requests."); " is 139.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,HiddenNavigationPropertiesAppendTypeSegmentToCanonicalUri,The length of the statement  "                                new string[] { "//atom:entry/atom:link[@rel='edit' and substring(@href' string-length(@href) - string-length('People(1)'))]" }); " is 128.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ShouldFailOnServiceOperationsReturningComplexTypeUsedInPropertyAccess,The length of the statement  "                            expectedError = DataServicesResourceUtil.GetString("RequestUriProcessor_IEnumerableServiceOperationsCannotBeFurtherComposed"' test.ServiceOpName); " is 146.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ValueAfterCollectionOfPrimitives,The length of the statement  "                        Assert.AreEqual(HttpStatusCode.BadRequest' statusCode' "Should generate a 400 error since $value can't come after a QueryWithMultipleResults returning primitives"); " is 164.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,SkipTokenEscape_NonStringLiteral,The length of the statement  "                        String.Format("atom:feed/atom:link[@rel = 'next' and contains(@href' \"{0}\") and contains(@href'\"{1}\") and contains(@href'\"{2}\")]"' parameterExpr' filterExpr' orderExpr)); " is 176.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,SkipTokenEscape_NonStringLiteral,The length of the statement  "                    String nextLinkUri = responseBody.SelectSingleNode("atom:feed/atom:link[@rel = 'next']"' TestUtil.TestNamespaceManager).Attributes["href"].Value; " is 145.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ComplexTypePropertyWithLoopShouldReturnValidResponseVersion,The length of the statement  "                    Assert.AreEqual(request.ResponseVersion' "4.0;"' "Response version must be 4.0 since it contains a complex type with collection"); " is 130.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ExpandingReferencePropertyShouldWorkIfEntityInstanceTypeDerivesFromIEnumerable,The length of the statement  "                    String.Format("{1}/value/{0}/{1}[Customer[ID=1 and Name='Customer 1'] and ID=1 and DollarAmount='1000']"' JsonValidator.ArrayString' JsonValidator.ObjectString)' " is 161.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ExpandingReferencePropertyShouldWorkIfEntityInstanceTypeDerivesFromIEnumerable,The length of the statement  "                    String.Format("{1}/value/{0}/{1}[Customer[ID=1 and Name='Customer 1'] and ID=100 and DollarAmount='555']"' JsonValidator.ArrayString' JsonValidator.ObjectString)' " is 162.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ShouldReturn404WhenActionProviderCreateInvokableReturnsNull,The length of the statement  "                        Assert.AreEqual(HttpStatusCode.NotFound' statusCode' "Should generate a 404 error since the Action Provider gave null for CreateInvokable on ClearAddress."); " is 157.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,UpdatingPrimitiveOrComplexOpenPropertyShouldWork,The length of the statement  "                    ////    Content = "{\"value\":{\"@odata.type\":\"#testNamespace.EnumerableComplex\"'\"StringProperty\":\"String Value\"}}"' " is 123.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,UpdatingPrimitiveOrComplexOpenPropertyShouldWork,The length of the statement  "                    TestUtil.RunCombinations(testCases' new string[] { "PUT"' "PATCH"' "PATCH" }' UnitTestsUtil.BooleanValues' (testCase' verb' uriProp) => " is 135.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,GetService2,The length of the statement  "                Providers.ResourceType enumerableComplexType = metadata.AddComplexType("EnumerableComplex"' typeof(TestType1)' null' false); " is 124.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,TestMetadataContainingAbstractComplexTypeInSystemNamespaces,The length of the statement  "                        response.Descendants(UnitTestsUtil.EdmOasisNamespace + "ComplexType").Where(e => e.Attribute("Abstract") != null).Any()' " is 120.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InStreamErrorsDueToXmlExceptionsWrittenOutBackwards,The length of the statement  "                DSPResource resource1 = new DSPResource(myType' new[] { new KeyValuePair<string' object>("ID"' 111)' new KeyValuePair<string' object>("Property Name With Space"' "&nbsp;") }); " is 175.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InStreamErrorsDueToXmlExceptionsWrittenOutBackwards,The length of the statement  "                        //     <m:message>Invalid name character in 'Resolved Reason'. The ' ' character' hexadecimal value 0x20' cannot be included in a name.</m:message> " is 147.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InStreamErrorsDueToXmlExceptionsWrittenOutBackwards,The length of the statement  "                            "Invalid name character in 'Property Name With Space'. The ' ' character' hexadecimal value 0x20' cannot be included in a name."' " is 129.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ExpandReferenceNavigationPropertyDefinedOnDerivedTypeWhenNavigationPropertyTypeIsIEnumerable,The length of the statement  "                    String.Format("{1}/value/{0}/{1}[odata.type='#namespaceName.Employee' and Photo[Id=1] and Id=2]" ' JsonValidator.ArrayString' JsonValidator.ObjectString) " is 153.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,SendNullValueForNonNullableValueTypeOnEF,The length of the statement  "                foreach (var contextType in new[] { typeof(AstoriaUnitTests.ObjectContextStubs.CustomObjectContext)' typeof(EFFK.CustomObjectContextPOCO) }) " is 140.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,SendNullValueForNonNullableValueTypeOnEF,The length of the statement  "                    string requestPayload = @"{ ""@odata.type"": ""AstoriaUnitTests.ObjectContextStubs.Types.Customer""' ""ID"": 123456' ""EditTimeStamp"": null }"; " is 144.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InvalidContentIdReferenceInBatchShouldProduceNullReferenceException,The length of the statement  "                    Assert.IsTrue(responsePayload.Contains(DataServicesResourceUtil.GetString("RequestUriProcessor_ResourceNotFound"' "$1"))' "The error message did not match"); " is 157.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,RunReplaceFunctionTest,The length of the statement  "                            var configFeaturesSection = new DataServicesFeaturesSection() { ReplaceFunction = new DataServicesReplaceFunctionFeature() { Enable = configValue.Value } }; " is 156.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,RunReplaceFunctionTest,The length of the statement  "                            var initializeServiceCodeOptions = new DataServicesFeaturesSection() { ReplaceFunction = new DataServicesReplaceFunctionFeature() { Enable = apivalue.Value } }; " is 160.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,RunReplaceFunctionTest,The length of the statement  "                        sb.AppendLine("Response Version: " + ((request.ResponseVersion == null) ? "NULL" : request.ResponseVersion.ToString())); " is 120.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,RunReplaceFunctionTest,The length of the statement  "                        Assert.AreEqual(replaceAllowed' exception == null' "if replace is allowed' no exception should be thrown. More info: " + sb.ToString()); " is 136.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,RunReplaceFunctionTest,The length of the statement  "                            Assert.IsTrue(responseStream.Contains(DataServicesResourceUtil.GetString("RequestQueryParser_UnknownFunction"' "replace"' "0"))); " is 129.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,MicrosoftDataServicesRequestUriShouldWorkInOnStartProcessingRequest,The length of the statement  "                    request.RequestUriString = "/Something"; // This does not matter since the MicrosoftDataServicesRequestUri will get used. " is 121.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,MicrosoftDataServicesRequestUriShouldWorkInOnStartProcessingRequest,The length of the statement  "                    Assert.IsTrue(response.Contains(xmlBaseUri)' "Document must contain the root uri as specified in the MicrosoftDataServicesRootUri"); " is 132.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,MicrosoftDataServicesRequestUriShouldWorkInOnStartProcessingRequest,The length of the statement  "                    Assert.IsTrue(response.Contains(xmlBaseUri)' "Document must contain the root uri as specified in the MicrosoftDataServicesRootUri"); " is 132.
Long Statement,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,KeysInMetadataShouldBeAlphabetized,The length of the statement  "                    const string expected = @"<EntityType Name=""OrderDetail""><Key><PropertyRef Name=""OrderID"" /><PropertyRef Name=""ProductID"" /></Key>"; " is 138.
Long Statement,AstoriaUnitTests.Tests,ObjectContext<T>,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,OrderChangeInterceptor,The length of the statement  "                    Assert.IsTrue(this.CurrentDataSource.ObjectStateManager.GetObjectStateEntry(order) != null' "the order instance must be tracked by the context"); " is 145.
Long Statement,AstoriaUnitTests.Tests,TestDataService3,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,GetService,The length of the statement  "                        foreach (MethodInfo method in typeof(TestAction).GetMethods(BindingFlags.Public | BindingFlags.Instance).Where(m => m.GetCustomAttributes(typeof(DSPActionAttribute)' false).Any())) " is 180.
Long Statement,AstoriaUnitTests.Tests,DataService,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,GetService,The length of the statement  "                        foreach (MethodInfo method in typeof(Actions).GetMethods(BindingFlags.Public | BindingFlags.Instance).Where(m => m.GetCustomAttributes(typeof(DSPActionAttribute)' false).Any())) " is 177.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PutPayloadReturnedByGet_EdmProvider,The length of the statement  "                        TestWebRequest webRequest = UnitTestsUtil.GetTestWebRequestInstance(responseFormat' "/Customers(1)"' contextType' null' "GET"); " is 127.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PutPayloadReturnedByGet_EdmProvider,The length of the statement  "                        string payload = System.Data.Test.Astoria.Util.JsonPrimitiveTypesUtil.FilterJson((new StreamReader(getResponseStream)).ReadToEnd()); " is 132.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PutPayloadReturnedByGet_EdmProvider,The length of the statement  "                        var headers = new KeyValuePair<string' string>[] { new KeyValuePair<string' string>("If-Match"' webRequest.ResponseETag) }; " is 123.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PutPayloadReturnedByGet_EdmProvider,The length of the statement  "                        webRequest = UnitTestsUtil.GetTestWebRequestInstance(responseFormat' "/Customers(1)"' contextType' headers' "PATCH"' payload); " is 126.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,XmlBaseHRefShouldFormProperUri,The length of the statement  "                    String.Format("/atom:entry[atom:category[@term='#{0}'] and atom:id='http://host/Customers(125)' and atom:content/adsm:properties[ads:Name='Foo' and ads:ID=125 and ads:Address[ads:StreetAddress='Street Number' Street Address' and ads:City='Redmond' and ads:PostalCode='98052']]]"' " is 279.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenBindingInvalidUriInJson,The length of the statement  "                    "<entry xml:base=\"/\" xmlns:ads=\"http://docs.oasis-open.org/odata/ns/data\" xmlns:adsm=\"http://docs.oasis-open.org/odata/ns/metadata\" xmlns='http://www.w3.org/2005/Atom'>" + " is 177.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenBindingInvalidUriInJson,The length of the statement  "                    // UnitTestsUtil.VerifyInvalidRequest(jsonPayload' "/Customers"' typeof(CustomDataContext)' UnitTestsUtil.JsonLightMimeType' "POST"' 400' DataServicesResourceUtil.GetString("BadRequest_ErrorInSettingPropertyValue"' "BestFriend")); " is 230.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenBindingInvalidUriInJson,The length of the statement  "                    UnitTestsUtil.VerifyInvalidRequest(atomPayload' "/Customers"' typeof(CustomDataContext)' UnitTestsUtil.AtomFormat' "POST"' 400' DataServicesResourceUtil.GetString("BadRequest_ErrorInSettingPropertyValue"' "Orders")); " is 216.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenBindingInvalidUriInJson,The length of the statement  "                    //UnitTestsUtil.VerifyInvalidRequest(UnitTestsUtil.ConvertReflectionProviderTypesToEdmProviderTypes(jsonPayload)' "/Customers"' typeof(ocs.CustomObjectContext)' UnitTestsUtil.JsonLightMimeType' "POST"' 400' DataServicesResourceUtil.GetString("BadRequest_ErrorInSettingPropertyValue"' "BestFriend")); " is 299.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenBindingInvalidUriInJson,The length of the statement  "                    UnitTestsUtil.VerifyInvalidRequest(UnitTestsUtil.ConvertReflectionProviderTypesToEdmProviderTypes(atomPayload)' "/Customers"' typeof(ocs.CustomObjectContext)' UnitTestsUtil.AtomFormat' "POST"' 400' DataServicesResourceUtil.GetString("BadRequest_ErrorInSettingPropertyValue"' "Orders")); " is 286.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldNotTrimWhitespaceFromEtag,The length of the statement  "                    string etag = UnitTestsUtil.GetETagFromResponse(typeof(ocs.CustomObjectContext)' "/Customers(0)"' UnitTestsUtil.MimeAny); " is 121.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldNotTrimWhitespaceFromEtag,The length of the statement  "                    Assert.IsTrue(Uri.UnescapeDataString(etag).StartsWith("W/\"'0    '")' "whitespaces should not stripped off for etag values"); " is 125.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CannotSpecifyEtagIfExpandQueryPresent,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequestForVariousProviders(null' "/Customers(1)?$expand=Orders"' UnitTestsUtil.MimeAny' "GET"' 400' ifMatch); " is 136.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CannotSpecifyEtagIfExpandQueryPresent,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequestForVariousProviders(null' "/Customers(1)?$expand=Orders"' UnitTestsUtil.MimeAny' "GET"' 400' ifNoneMatch); " is 140.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowIfLinkTypeAttributeIsInvalid,The length of the statement  "                    "<entry xml:base=\"/\" xmlns:ads=\"http://docs.oasis-open.org/odata/ns/data\" xmlns:adsm=\"http://docs.oasis-open.org/odata/ns/metadata\" xmlns=\"http://www.w3.org/2005/Atom\" adsm:type=\"#AstoriaUnitTests.Stubs.Customer\">" + " is 226.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowIfLinkTypeAttributeIsInvalid,The length of the statement  "                        "<link rel='http://docs.oasis-open.org/odata/ns/related/BestFriend' title='BestFriend' type='application/atom+xml;type=feed' href='Customers(1)' />" + " is 150.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowIfLinkTypeAttributeIsInvalid,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(atomPayload' "/Customers"' typeof(CustomDataContext)' UnitTestsUtil.AtomFormat' "POST"' 400); " is 128.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowIfLinkTypeAttributeIsInvalid,The length of the statement  "                                    "<link rel='http://docs.oasis-open.org/odata/ns/related/Orders' title='Orders' type='application/atom+xml;type=entry'>" + " is 121.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowIfLinkTypeAttributeIsInvalid,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(atomPayload' "/Customers"' typeof(CustomDataContext)' UnitTestsUtil.AtomFormat' "POST"' 400); " is 128.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseRegisterTypeToDiscoverTypesInEdmProvider,The length of the statement  "                    String.Format(@"provider=System.Data.SqlClient;metadata={0};provider connection string='server=tcp:markash420'1432;database=Northwind;uid=DataWorks;pwd=fakepwd;persist security info=true;connect timeout=60;MultipleActiveResultSets=true;'"' " is 239.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseRegisterTypeToDiscoverTypesInEdmProvider,The length of the statement  "                string assemblyLocation1 = TestUtil.GenerateAssembly(schemaFile1' false /*isReflectionServiceProvider*/' connectionString' new string[0]' new string[0]' new string[] { sourceFile }); " is 182.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseRegisterTypeToDiscoverTypesInEdmProvider,The length of the statement  "                string assemblyLocation2 = TestUtil.GenerateAssembly(schemaFile2' false /*isReflectionServiceProvider*/' null' new string[] { schemaFile1 }' new string[] { assemblyLocation1 }' new string[0]); " is 192.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseRegisterTypeToDiscoverTypesInEdmProvider,The length of the statement  "                    objectContextType.InvokeMember("RegisterType"' BindingFlags.Public | BindingFlags.Static | BindingFlags.InvokeMethod' null' null' new object[] { assembly2.GetType("TestDerived.BugEntityDerived") }); " is 198.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseRegisterTypeToDiscoverTypesInEdmProvider,The length of the statement  "                    Assert.IsTrue(model.FindType("TestDerived.BugEntityDerived") != null' "Metadata for the type in another assembly was loaded"); " is 126.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseRegisterTypeToDiscoverTypesInEdmProvider,The length of the statement  "                serviceType.InvokeMember("RegisterType"' BindingFlags.Public | BindingFlags.Static | BindingFlags.InvokeMethod' null' null' new object[] { assembly2.GetType("TestReflectionProvider.TestEntityDerivedRP") }); " is 206.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseRegisterTypeToDiscoverTypesInEdmProvider,The length of the statement  "                Assert.IsTrue(model.FindType("TestReflectionProvider.TestEntityDerivedRP") != null' "Metadata for the type in another assembly was loaded in reflection provider"); " is 163.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestUnbindInManyToManyCases,The length of the statement  "                    UnitTestsUtil.DoInserts(jsonPayload' "/Persons"' new string[0]' typeof(ocs.CustomManyToManyContainer)' UnitTestsUtil.JsonLightMimeType); " is 136.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestUnbindInManyToManyCases,The length of the statement  "                        new KeyValuePair<string' string[]>("/Persons(999)/Homes"' new string[] { String.Format("count(//{0})=1"' JsonValidator.ObjectString) })}; " is 137.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestUnbindInManyToManyCases,The length of the statement  "                    UnitTestsUtil.SendRequestAndVerifyXPath(null' "/Persons(999)/Homes/$ref?$id=Homes(900)"' uriAndXPathsToVerify' typeof(ocs.CustomManyToManyContainer)' UnitTestsUtil.JsonLightMimeType' "DELETE"' null' false); " is 206.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldReturnEdmxMetadataDocument,The length of the statement  "                        new string[] { "/edmx:Edmx[@Version='4.0' and edmx:DataServices/csdl:Schema[@Namespace='AstoriaUnitTests.Stubs']]" }) }; " is 120.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldReturnEdmxMetadataDocument,The length of the statement  "                UnitTestsUtil.SendRequestAndVerifyXPath(null' "/$metadata"' uriAndXPathsToVerify' typeof(CustomDataContext)' UnitTestsUtil.MimeApplicationXml' "GET"' null' false); " is 163.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SettingRelationShipOnReferencePropertyViaEntityKeyShouldWork,The length of the statement  "                var xpaths = new string[] { String.Format("/{0}[ID=45 and DollarAmount=4444 and Customers[ID=0]]"' JsonValidator.ObjectString) }; " is 129.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,BatchErrorShouldDiscardPreviousChanges,The length of the statement  "                        new KeyValuePair<string' string[]>("/Orders(1)"' new string[] { String.Format("/{0}[ID=1]"' JsonValidator.ObjectString) })}; " is 124.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,BatchErrorShouldDiscardPreviousChanges,The length of the statement  "                    UnitTestsUtil.SendRequestAndVerifyXPath(null' "/Orders(1)"' uriAndXPathsToVerify' typeof(CustomDataContext)' UnitTestsUtil.JsonLightMimeType' "GET"' null' false); " is 162.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,BatchErrorShouldDiscardPreviousChanges,The length of the statement  "                        new KeyValuePair<string' string[]>("/Orders(0)"' new string[] { String.Format("/{0}[DollarAmount=0]"' JsonValidator.ObjectString) })}; " is 134.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,BatchErrorShouldDiscardPreviousChanges,The length of the statement  "                    UnitTestsUtil.SendRequestAndVerifyXPath(null' "/Orders(0)"' uriAndXPathsToVerify' typeof(CustomDataContext)' UnitTestsUtil.JsonLightMimeType' "GET"' null' false); " is 162.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EntitySetCanDeriveFromIQueryable,The length of the statement  "                Stream responseStream = UnitTestsUtil.GetResponseStream(WebServerLocation.InProcess' UnitTestsUtil.MimeApplicationXml' "/$metadata"' typeof(TestContext2)); " is 155.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EntitySetCanDeriveFromIQueryable,The length of the statement  "                UnitTestsUtil.VerifyXPaths(responseStream' UnitTestsUtil.MimeApplicationXml' new string[] { "//csdl:Schema[csdl:EntityContainer/csdl:EntitySet[@Name='Values'] and csdl:EntityType[@Name='RegressionUnitTestModule_RegressionTest_TestEntity2']]" }); " is 245.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,InvalidRequestIfSettingTopLevelResourceToNullValue,The length of the statement  "                    "<entry xmlns:ads=\"http://docs.oasis-open.org/odata/ns/data\" adsm:null=\"true\" xmlns=\"http://www.w3.org/2005/Atom\" />"; " is 124.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,InvalidRequestIfSettingTopLevelResourceToNullValue,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(jsonPayload' "/Customers(1)"' typeof(CustomDataContext)' UnitTestsUtil.JsonLightMimeType' "PUT"' 400); " is 137.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,InvalidRequestIfSettingTopLevelResourceToNullValue,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(atomPayload' "/Customers(1)"' typeof(CustomDataContext)' UnitTestsUtil.AtomFormat' "PUT"' 400); " is 130.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowOnCudOperationsOnServiceUri,The length of the statement  "                    new Dimension("WebServerLocation"' new object[] { WebServerLocation.InProcess' WebServerLocation.InProcessWcf' WebServerLocation.Local })' " is 138.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenCannotLoadMetadata,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/$metadata"' typeof(TypedCustomDataContext<TestEntity5>)' UnitTestsUtil.MimeApplicationXml' "GET"' 500); " is 146.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenCannotLoadMetadata,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/$metadata"' typeof(TestDataContext5)' UnitTestsUtil.MimeApplicationXml' "GET"' 500); " is 127.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenIgnoringKeyProperties,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/$metadata"' typeof(TypedCustomDataContext<TestEntity6>)' UnitTestsUtil.MimeApplicationXml' "GET"' 500); " is 146.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,AllowRawBinaryInKeysIfDataTypeNotBinary,The length of the statement  "                    new KeyValuePair<string' Type>(String.Format("{0}"' XmlConvert.ToString(TypeData.ConvertDateTimeToDateTimeOffset(dateTime)))' typeof(DateTime))' " is 144.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,AllowRawBinaryInKeysIfDataTypeNotBinary,The length of the statement  "                    dataContextSetup.Id = TypeData.ValueFromXmlText(keyInfo.Key' keyInfo.Value' true /*keySyntax*/' UnitTestsUtil.AtomFormat); " is 122.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,AllowRawBinaryInKeysIfDataTypeNotBinary,The length of the statement  "                    TestWebRequest request = UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.AtomFormat' uri' dataContextSetup.DataServiceType' null' "GET"); " is 143.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,AllowRawBinaryInKeysIfDataTypeNotBinary,The length of the statement  "                    // In .NET 4.5' EscapeDataString will escape single quotes. However' our payload will still continue to leave them unescaped. " is 125.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,AllowRawBinaryInKeysIfDataTypeNotBinary,The length of the statement  "                    UnitTestsUtil.VerifyXPaths(document' new string[] { String.Format("/atom:entry[atom:id=\"http://host/Values({0})\"]"' key) }); " is 126.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenUpdatingKeyPropertyOrSettingToNull,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest("{ value: 2 }"' "/Orders(2)/ID"' typeof(CustomDataContext)' UnitTestsUtil.JsonLightMimeType' "PATCH"' 400); " is 142.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UpdatingValueUriShouldWork,The length of the statement  "                UnitTestsUtil.SendRequestAndVerifyXPath(payload' "/Values"' new KeyValuePair<string' string[]>[0]' typeof(TypedCustomAllTypesDataContext)' UnitTestsUtil.AtomFormat' "POST"' null' false); " is 186.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UpdatingValueUriShouldWork,The length of the statement  "                        string mimeType = (propertyType != typeof(byte[]) && propertyType != typeof(System.Data.Linq.Binary)) ? UnitTestsUtil.MimeTextPlain + "; charset=UTF-8" : UnitTestsUtil.MimeApplicationOctetStream; " is 195.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UpdatingValueUriShouldWork,The length of the statement  "                        TestWebRequest request = UnitTestsUtil.GetTestWebRequestInstance(mimeType' uri' typeof(TypedCustomAllTypesDataContext)' null' "GET"); " is 133.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CheckForInvalidEtagAndMultipleEtagPropertiesShouldWork,The length of the statement  "                TestWebRequest request = UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.JsonLightMimeType' "/Values(1)"' contextType' headers' "GET"); " is 141.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EtagShouldWorkInServerWhenOneOfPropertyValuesIsNull,The length of the statement  "                    UnitTestsUtil.SendRequestAndVerifyXPath(null' "/Customers(1)/Concurrency/$value"' null' contextType' UnitTestsUtil.JsonLightMimeType' "DELETE"' headers' true); " is 159.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EtagShouldWorkInServerWhenOneOfPropertyValuesIsNull,The length of the statement  "                    UnitTestsUtil.SendRequestAndVerifyXPath(payload' "/Customers(1)"' null' contextType' UnitTestsUtil.JsonLightMimeType' "PATCH"' headers' true); " is 142.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,JsonShouldReadDoubleNumberWithoutPeriod,The length of the statement  "                TestWebRequest request = UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.JsonLightMimeType' "/Values(7E-06)"' contextType' null' "GET"); " is 142.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,JsonShouldReadDoubleNumberWithoutPeriod,The length of the statement  "                UnitTestsUtil.SendRequestAndVerifyXPath(payload' "/Values(7E-06)"' null' contextType' UnitTestsUtil.JsonLightMimeType' "PATCH"' null' false); " is 141.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,JsonShouldReadDoubleNumberGreaterThanInt32Range,The length of the statement  "                TestWebRequest request = UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.JsonLightMimeType' "/Values(9000000000)"' contextType' null' "GET"); " is 147.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,JsonShouldReadDoubleNumberGreaterThanInt32Range,The length of the statement  "                UnitTestsUtil.SendRequestAndVerifyXPath(payload' "/Values(9000000000)"' null' contextType' UnitTestsUtil.JsonLightMimeType' "PATCH"' null' false); " is 146.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestProcessingRequest,The length of the statement  "                        UnitTestsUtil.GetResponseStream(WebServerLocation.InProcess' UnitTestsUtil.JsonLightMimeType' uri' typeof(CustomDataContext)); " is 126.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyMaxObjectCount,The length of the statement  "                    "<entry xml:base=\"/\" xmlns:ads=\"http://docs.oasis-open.org/odata/ns/data\" xmlns:adsm=\"http://docs.oasis-open.org/odata/ns/metadata\" xmlns=\"http://www.w3.org/2005/Atom\">" + " is 179.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyMaxObjectCount,The length of the statement  "                                    "<link rel='http://docs.oasis-open.org/odata/ns/related/Orders' type='application/atom+xml;type=feed' href='Orders(101)' />" + " is 126.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyMaxObjectCount,The length of the statement  "                    UnitTestsUtil.VerifyInvalidRequest(jsonPayload' "/Customers"' typeof(CustomDataContext)' UnitTestsUtil.JsonLightMimeType' "POST"' (int)HttpStatusCode.RequestEntityTooLarge); " is 173.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyMaxObjectCount,The length of the statement  "                    UnitTestsUtil.VerifyInvalidRequest(atomPayload' "/Customers"' typeof(CustomDataContext)' UnitTestsUtil.AtomFormat' "POST"' (int)HttpStatusCode.RequestEntityTooLarge); " is 166.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyServiceOperationRightsIfIsOnlySegment,The length of the statement  "                            //rights == ServiceOperationRights.ReadSingle && (methodName == "SOpEnumerable" || methodName == "SOpMultipleQueryable")' " is 121.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyServiceOperationRightsIfIsOnlySegment,The length of the statement  "                            //rights == ServiceOperationRights.ReadMultiple && (methodName == "SOpDirectValue" || methodName == "SOpSingleQueryable")' " is 122.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyServiceOperationRightsIfIsOnlySegment,The length of the statement  "                            rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadSingle) && (methodName == "SOpEnumerable" || methodName == "SOpMultipleQueryable")' " is 170.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyServiceOperationRightsIfIsOnlySegment,The length of the statement  "                            rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadMultiple) && (methodName == "SOpDirectValue" || methodName == "SOpSingleQueryable") " is 170.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyServiceOperationRightsIfIsOnlySegment,The length of the statement  "                        if (rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadSingle) && (methodName == "SOpEnumerable" || methodName == "SOpMultipleQueryable")) " is 174.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyServiceOperationRightsIfIsOnlySegment,The length of the statement  "                        if (rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadMultiple) && (methodName == "SOpDirectValue" || methodName == "SOpSingleQueryable")) " is 175.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SecurityBug,The length of the statement  "                    UnitTestsUtil.VerifyInvalidRequestForVariousProviders(jsonPayload' "/Customers"' UnitTestsUtil.JsonLightMimeType' "POST"' 400); " is 127.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,FilterOnCustomProvidersOnStrongTypePropertiesShouldWork,The length of the statement  "                UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.AtomFormat' "/Customers?$filter=ID%20eq%201"' typeof(CustomRowBasedContext)' null' "GET"); " is 144.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ConversionShouldNotHappenWhenTypeConversionSetToFale,The length of the statement  "                            UnitTestsUtil.SendRequestAndVerifyXPath(atomPayload' "/Values"' new KeyValuePair<string' string[]>[0]' typeof(TestDataContext2)' UnitTestsUtil.AtomFormat' "POST"' null' false); " is 176.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ConversionShouldNotHappenWhenTypeConversionSetToFale,The length of the statement  "                            UnitTestsUtil.SendRequestAndVerifyXPath(atomPayload' "/Values(1)/Name"' new KeyValuePair<string' string[]>[0]' typeof(TestDataContext2)' UnitTestsUtil.MimeTextXml' "PUT"' null' false); " is 184.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ConversionShouldNotHappenWhenTypeConversionSetToFale,The length of the statement  "                            UnitTestsUtil.SendRequestAndVerifyXPath(atomPayload' "/Values(1)/Description"' new KeyValuePair<string' string[]>[0]' typeof(TestDataContext2)' UnitTestsUtil.MimeTextXml' "PUT"' null' false); " is 191.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ConversionShouldNotHappenWhenTypeConversionSetToFale,The length of the statement  "                            UnitTestsUtil.SendRequestAndVerifyXPath(atomPayload' "/Values(1)/Address/StreetAddress"' new KeyValuePair<string' string[]>[0]' typeof(TestDataContext2)' UnitTestsUtil.MimeTextXml' "PUT"' null' false); " is 201.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,JsonPayloadShouldTerminateProperly_1,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequestForVariousProviders(jsonPayload' "/Customers"' UnitTestsUtil.JsonLightMimeType' "POST"' 400); " is 127.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,JsonDeserializerShouldConvertValuesWhenEnableTypeConversionIsTrue,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(payload' "/Data"' typeof(TestDataContext9)' UnitTestsUtil.JsonLightMimeTypeIeee754Compatible' "POST"' 400); " is 142.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestServiceOperationDefinedInCustomProvider,The length of the statement  "                UnitTestsUtil.CustomProviderRequest(typeof(CustomRowBasedContext)' uri' UnitTestsUtil.AtomFormat' null' xPaths' "GET"' false); " is 126.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IncorrectTokenErrorResponseShouldHaveCorrectSerializationFormat,The length of the statement  "                CombinatorialEngine engine = CombinatorialEngine.FromDimensions(new Dimension("SerializationFormatData"' SerializationFormatData.StructuredValues)); " is 148.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IncorrectTokenErrorResponseShouldHaveCorrectSerializationFormat,The length of the statement  "                        string expectedFormat = format == SerializationFormatData.JsonLight ? UnitTestsUtil.JsonLightMimeType : UnitTestsUtil.MimeApplicationXml; " is 137.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IncorrectTokenErrorResponseShouldHaveCorrectSerializationFormat,The length of the statement  "                        Assert.IsTrue(request.ResponseContentType.StartsWith(expectedFormat' StringComparison.OrdinalIgnoreCase)' string.Format("Expected: '{0}' Actual: {1}"' expectedFormat' request.ResponseContentType)); " is 197.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ChangeInterceptorShouldBeFiredOnDeleteRef,The length of the statement  "                        Assert.AreEqual(testCase.ExpectedCustomersInterceptorCount' GetNumberOfChangeInterceptorCalls(request' "SOP_CustomersInterceptorCount")); " is 137.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ChangeInterceptorShouldBeFiredOnDeleteRef,The length of the statement  "                        Assert.AreEqual(testCase.ExpectedOrdersInterceptorCount' GetNumberOfChangeInterceptorCalls(request' "SOP_OrdersInterceptorCount")); " is 131.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PostInBatchOperationsShouldReturnCorrectLocation,The length of the statement  "<entry xmlns:d=""http://docs.oasis-open.org/odata/ns/data"" xmlns:m=""http://docs.oasis-open.org/odata/ns/metadata"" xmlns=""http://www.w3.org/2005/Atom""> " is 155.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PostInBatchOperationsShouldReturnCorrectLocation,The length of the statement  "<entry xmlns:d=""http://docs.oasis-open.org/odata/ns/data"" xmlns:m=""http://docs.oasis-open.org/odata/ns/metadata"" xmlns=""http://www.w3.org/2005/Atom""> " is 155.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UsingGenericTypeWhileLoadingMetadataShouldNotStackOverflow,The length of the statement  "                UnitTestsUtil.GetResponseStream(WebServerLocation.InProcess' UnitTestsUtil.MimeAny' "/$metadata"' typeof(TypedCustomDataContext<TestDerived>)); " is 143.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,InitializeServiceOfDataServiceConfigurationShouldBeInvoked,The length of the statement  "                UnitTestsUtil.GetResponseStream(WebServerLocation.InProcess' UnitTestsUtil.MimeAny' "/Customers"' typeof(TestContext14)); " is 121.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PostFollowedByPutInSingleChangesetShouldThrow,The length of the statement  "                string fileName = Path.Combine(TestUtil.ServerUnitTestSamples' @"tests\BatchRequests\PostFollowedByPutBatchRequest.txt"); " is 121.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ForceUriElementInVariousNamespaces,The length of the statement  "                UnitTestsUtil.DoInsertsForVariousProviders("/Customers(1)/Orders/$ref"' UnitTestsUtil.AtomFormat' atomPayload' atomUriAndXPaths' false /*verifyETag*/); " is 151.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyEtagInExpandPayload,The length of the statement  "                Stream response = UnitTestsUtil.GetResponseStream(WebServerLocation.InProcess' UnitTestsUtil.AtomFormat' requestUri' typeof(CustomDataContext)); " is 144.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyEtagInExpandPayload,The length of the statement  "                response = UnitTestsUtil.GetResponseStream(WebServerLocation.InProcess' UnitTestsUtil.JsonLightMimeType' requestUri' typeof(CustomDataContext)); " is 144.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CountRequestShouldThrowOnIfMatchOrIfNoneMatchHeaders,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequestForVariousProviders(null' requestUri' UnitTestsUtil.MimeTextPlain' "GET"' 400' ifMatchHeader); " is 128.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CountRequestShouldThrowOnIfMatchOrIfNoneMatchHeaders,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequestForVariousProviders(null' requestUri' UnitTestsUtil.MimeTextPlain' "GET"' 400' ifNoneMatchHeader); " is 132.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,OnStartProcessingRequestShouldBeCalledAfterFiringServiceOperation,The length of the statement  "                    UnitTestsUtil.GetResponseStream(WebServerLocation.InProcess' UnitTestsUtil.MimeAny' "/GetCustomers"' typeof(TestDataService15)); " is 128.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldReturn500ForInvalidEtagValue,The length of the statement  "                    UnitTestsUtil.SendRequestAndVerifyXPath(payload' "/Values"' null' contextTypes[0]' UnitTestsUtil.JsonLightMimeType' "POST"' null' true); " is 136.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldReturn500ForInvalidEtagValue,The length of the statement  "                        new KeyValuePair<string' string>("If-Match"' "W/\"12345678934\"")' // invalid value' since etag is a int property and this value is larger than int32.maxvalue " is 158.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldReturn500ForInvalidEtagValue,The length of the statement  "                        UnitTestsUtil.VerifyInvalidRequest(payload' "/Values(1)"' contextTypes[0]' UnitTestsUtil.JsonLightMimeType' "PATCH"' statusCodes[i]' headerValues[i]); " is 150.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldReturn500ForInvalidEtagValue,The length of the statement  "                        UnitTestsUtil.VerifyInvalidRequest(payload' "/Values(1)"' contextTypes[1]' UnitTestsUtil.JsonLightMimeType' "PATCH"' statusCodes[i]' headerValues[i]); " is 150.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,AtomAuthor,The length of the statement  "                    UnitTestsUtil.VerifyXPaths(request.GetResponseStream()' UnitTestsUtil.AtomFormat' "count(atom:feed/atom:author)=0"' "atom:feed/atom:entry/atom:author"); " is 152.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ETagInPutResponse,The length of the statement  "                        UnitTestsUtil.JsonLightMimeType' "/Customers(1)"' typeof(ocs.CustomObjectContext)' new KeyValuePair<string' string>[0]' "GET"); " is 127.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ETagInPutResponse,The length of the statement  "                        <entry xml:base=""http://host/"" xmlns:d=""http://docs.oasis-open.org/odata/ns/data"" xmlns:m=""http://docs.oasis-open.org/odata/ns/metadata"" xmlns=""http://www.w3.org/2005/Atom""> " is 181.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ETagInPutResponse,The length of the statement  "                          <category term=""#AstoriaUnitTests.ObjectContextStubs.Types.CustomerWithBirthday"" scheme=""http://docs.oasis-open.org/odata/ns/scheme"" /> " is 139.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ETagInPutResponse,The length of the statement  "                    string etagFinal = UnitTestsUtil.GetETagFromResponse(typeof(ocs.CustomObjectContext)' "/Customers(1)"' UnitTestsUtil.AtomFormat); " is 129.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                        UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.MimeApplicationXml' "/$metadata"' typeof(CustomRowBasedContext)' null' "GET"); " is 132.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                        string errorMsg = "The operation 'GetOrderById' has the resource set 'Orders' that is not visible. The operation 'GetOrderById' should be made hidden or the resource set 'Orders' should be made visible."; " is 204.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    var functions = metadata.Descendants(UnitTestsUtil.EdmOasisNamespace + "FunctionImport").Select(f => f.Attribute("Name").Value); " is 128.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    var actions = metadata.Descendants(UnitTestsUtil.EdmOasisNamespace + "ActionImport").Select(f => f.Attribute("Name").Value); " is 124.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    // RequestProcessor issue - to repro enable code comment and disable existing code' set break point where bug number is. NoContent is expected. " is 143.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    // Assert.AreEqual(HttpStatusCode.NoContent' GetRequestStatusCode("/DoNothingOperation"' typeof(CustomRowBasedContext))); " is 121.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    Assert.AreEqual(HttpStatusCode.MethodNotAllowed' GetRequestStatusCode("/DoNothingOperation"' typeof(CustomRowBasedContext))); " is 125.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    var entitySets = metadata.Descendants(UnitTestsUtil.EdmOasisNamespace + "EntitySet").Select(e => e.Attribute("Name").Value); " is 124.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    var entityTypes = metadata.Descendants(UnitTestsUtil.EdmOasisNamespace + "EntityType").Select(e => e.Attribute("Name").Value); " is 126.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    Assert.IsTrue(entityTypes.Contains("CustomerWithBirthday")' "This type should not be affected and should be accessible."); " is 122.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    var complexTypes = metadata.Descendants(UnitTestsUtil.EdmOasisNamespace + "ComplexType").Select(e => e.Attribute("Name").Value); " is 128.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    Assert.IsTrue(complexTypes.Contains("Address")' "This complex type is used by a service operation so it should be visible."); " is 125.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    Assert.IsTrue(navigationPropertiesOnCustomer.Contains("BestFriend")' "This nav property is reference back to the visible Customer' so it should be visible."); " is 158.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    Assert.IsTrue(navigationPropertiesOnCustomer.Contains("Orders")' "MemberOrders set is visible while Orders set is hidden. Order type should still be visible."); " is 160.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    using (TestWebRequest request = UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.MimeApplicationXml' "/$metadata"' typeof(CustomRowBasedContext)' null' "GET")) " is 164.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    entityTypes = metadata.Descendants(UnitTestsUtil.EdmOasisNamespace + "EntityType").Select(e => e.Attribute("Name").Value); " is 122.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    Assert.IsFalse(entityTypes.Contains("Order")' "This type is hidden because its sets Orders and MemberOrders are hidden."); " is 122.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    Assert.IsFalse(navigationPropertiesOnCustomer.Contains("Orders")' "This nav property points to hidden entity set' so it should be hidden as well."); " is 148.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    complexTypes = metadata.Descendants(UnitTestsUtil.EdmOasisNamespace + "ComplexType").Select(e => e.Attribute("Name").Value); " is 124.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    complexTypes = metadata.Descendants(UnitTestsUtil.EdmOasisNamespace + "ComplexType").Select(e => e.Attribute("Name").Value); " is 124.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceOperationWithAccessRightsNoneShouldNotDisplayInMetadata,The length of the statement  "                    Assert.IsFalse(complexTypes.Contains("Address")' "This complex type is used only by hidden entity types and hidden SO' so it should be hidden as well."); " is 153.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DisallowNullableTypeAsKeyProperties,The length of the statement  "                    Assert.AreEqual("Key Properties cannot be of nullable type. Please make sure the type of this property is not of Nullable<> type."' exception.InnerException.Message); " is 166.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TwoEntitySetsCanHaveSameNameWhenUsingIDSP,The length of the statement  "                            ExceptionMessage = "More than one resource type with the name 'AstoriaUnitTests.Tests.EntityTypeA' was found. Resource type names must be unique." " is 146.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TwoEntitySetsCanHaveSameNameWhenUsingIDSP,The length of the statement  "                            ExceptionMessage = "More than one service operation with the name 'ServiceOp' was found. Service operation names must be unique." " is 129.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EmptyComplexTypesNotSupported,The length of the statement  "                    Assert.IsTrue(request.ErrorResponseContent.Contains(DataServicesResourceUtil.GetString("ReflectionProvider_ResourceTypeHasNoPublicallyVisibleProperties"' typeof(AstoriaUnitTests.Stubs.EmptyComplexTypesNotSupported.EmptyComplexType).FullName))' "Error message is invalid"); " is 272.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,NullReferenceOnNonPublicEntityProperty,The length of the statement  "                        Assert.IsTrue(request.ErrorResponseContent.Contains(DataServicesResourceUtil.GetString("ObjectContext_PublicPropertyNotDefinedOnType"' "Customer"' "Name"))' "Error message is invalid"); " is 185.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyStreamWithMissingInterface,The length of the statement  "                Assert.AreEqual("To support streaming' the data service must implement IServiceProvider.GetService() to return an implementation of IDataServiceStreamProvider or the data source must implement IDataServiceStreamProvider."' e.InnerException.Message); " is 249.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SpecifyInvalidContentTypeForOpenPropertiesShouldThrow,The length of the statement  "                        UnitTestsUtil.UpdateAndVerifyPrimitiveProperty(typeof(CustomRowBasedOpenTypesContext)' "PUT"' "/Orders(0)/DollarAmount/$value"' payload' UnitTestsUtil.JsonLightMimeType' null); " is 176.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldNotThrowWhenAddEmptyParenthesisAfterServiceOperationReturningCollectionOfNonEntities,The length of the statement  "                using (MyServiceOperationDS.SetServiceOperationAccessRule("SOpMultipleQueryable"' ServiceOperationRights.All | ServiceOperationRights.OverrideEntitySetRights)) " is 159.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldNotThrowWhenAddEmptyParenthesisAfterServiceOperationReturningCollectionOfNonEntities,The length of the statement  "                    UnitTestsUtil.GetResponseStream(WebServerLocation.InProcess' UnitTestsUtil.MimeAny' "/SOpMultipleQueryable()"' typeof(MyServiceOperationDS)); " is 141.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestAs,The length of the statement  "                var response = UnitTestsUtil.GetResponseStream(WebServerLocation.InProcess' UnitTestsUtil.AtomFormat' "/Bset?$filter=ID eq A/ID"' typeof(MyProvider)); " is 150.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EntitySetRightsForNestedQueries,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/Customers('ALKFI')/Orders"' typeof(TestDataService24)' UnitTestsUtil.AtomFormat' "GET"' 403); " is 136.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EntitySetRightsForNestedQueries,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/Orders?$filter=Customers/ContactName eq 'ALFKI'"' typeof(TestDataService24)' UnitTestsUtil.AtomFormat' "GET"' 403); " is 158.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EntitySetRightsForNestedQueries,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/Orders?$orderby=Customers/CustomerID"' typeof(TestDataService24)' UnitTestsUtil.AtomFormat' "GET"' 403); " is 147.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EntitySetRightsForNestedQueries,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/Orders?$expand=Customers"' typeof(TestDataService24)' UnitTestsUtil.AtomFormat' "GET"' 403); " is 135.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ExpandOnHiddenNavPropShouldThrow,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/Customers?$expand=Orders"' typeof(TestDataService25)' UnitTestsUtil.AtomFormat' "GET"' 400); " is 135.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SingleTypeETagWithProvider,The length of the statement  "                        UnitTestsUtil.JsonLightMimeType' "/Entities(0)"' typeof(FloatPointETagContext)' new KeyValuePair<string' string>[0]' "GET"); " is 124.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SingleTypeETagWithProvider,The length of the statement  "                    string payload = String.Format("{{\"ID\": 0' \"ETagSingle1\": \"{0}\"' \"ETagSingle2\": \"{1}\"' \"ETagDouble1\": \"{2}\"' \"ETagDouble2\": \"{3}\"}}"' " is 151.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SingleTypeETagWithProvider,The length of the statement  "                        UnitTestsUtil.JsonLightMimeType' "/Entities(0)"' typeof(FloatPointETagContext)' new KeyValuePair<string' string>[] { new KeyValuePair<String' String>("If-Match"' etag) }' "PUT"' " is 177.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DoNotMakeUnnecessaryCallToGetQueryRoot,The length of the statement  "                        Assert.AreEqual(0' CustomDataServiceProvider.GetQueryRootForResourceSetInvokeCount' "CustomDataServiceProvider.GetQueryRootForResourceSetInvokeCount"); " is 151.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DoNotMakeUnnecessaryCallToGetQueryRoot,The length of the statement  "                        Assert.AreEqual(0' TestDataService26.CustomersQueryInterceptorInvokeCount' "TestDataService26.CustomersQueryInterceptorInvokeCount"); " is 133.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DoNotMakeUnnecessaryCallToGetQueryRoot,The length of the statement  "                        Assert.AreEqual(1' CustomDataServiceProvider.GetQueryRootForResourceSetInvokeCount' "CustomDataServiceProvider.GetQueryRootForResourceSetInvokeCount"); " is 151.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DoNotMakeUnnecessaryCallToGetQueryRoot,The length of the statement  "                        Assert.AreEqual(1' TestDataService26.CustomersQueryInterceptorInvokeCount' "TestDataService26.CustomersQueryInterceptorInvokeCount"); " is 133.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DoNotMakeUnnecessaryCallToGetQueryRoot,The length of the statement  "                        Assert.AreEqual(0' TestDataService26.OrdersQueryInterceptorInvokeCount' "TestDataService26.CustomersQueryInterceptorInvokeCount"); " is 130.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DoNotMakeUnnecessaryCallToQueryInterceptor,The length of the statement  "                CombinatorialEngine engine = CombinatorialEngine.FromDimensions(new Dimension("RequestType"' new[] { "PUT"' "PATCH" })); " is 120.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DoNotMakeUnnecessaryCallToQueryInterceptor,The length of the statement  "                            Assert.AreEqual(2' TestDataService26.CustomersQueryInterceptorInvokeCount' "TestDataService26.CustomersQueryInterceptorInvokeCount"); " is 133.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseDateTimeOffsetInEFModelShouldThrowNotSupported,The length of the statement  "                    p.ResourceType rt = new p.ResourceType(typeof(KatmaiTypesTable)' p.ResourceTypeKind.EntityType' null' modelNamespace' modelTypeName' false); " is 140.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseDateTimeOffsetInEFModelShouldThrowNotSupported,The length of the statement  "                    ConstructorInfo objectContextMetadataConstructor = objectContextMetadataType.GetConstructor(new Type[] { typeof(edm.MetadataWorkspace) }); " is 138.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseDateTimeOffsetInEFModelShouldThrowNotSupported,The length of the statement  "                    Type primitiveResourceTypeMappingType = serverAssembly.GetType("Microsoft.OData.Service.Providers.PrimitiveResourceTypeMap"); " is 125.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseDateTimeOffsetInEFModelShouldThrowNotSupported,The length of the statement  "                    PropertyInfo primitiveResourceTypeMapPropertyInfo = primitiveResourceTypeMappingType.GetProperty("TypeMap"' BindingFlags.NonPublic | BindingFlags.Static); " is 154.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseDateTimeOffsetInEFModelShouldThrowNotSupported,The length of the statement  "                    Type objectContextServiceProviderType = serverAssembly.GetType("Microsoft.OData.Service.Providers.ObjectContextServiceProvider"); " is 129.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseDateTimeOffsetInEFModelShouldThrowNotSupported,The length of the statement  "                    MethodInfo populateMemberMetadataMethod = objectContextServiceProviderType.GetMethod("PopulateMemberMetadata"' BindingFlags.Static | BindingFlags.NonPublic); " is 157.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UseDateTimeOffsetInEFModelShouldThrowNotSupported,The length of the statement  "                    ConstructorInfo typeCacheItemConstructor = resourceTypeCacheItemType.GetConstructor(new Type[] { typeof(p.ResourceType) }); " is 123.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/GetCustomerByCity?city=''NYC'"' typeof(CustomRowBasedContext)' UnitTestsUtil.AtomFormat' "GET"' 400' "Bad Request - Error in query syntax."); " is 184.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/GetCustomerByCity?city='N'YC'"' typeof(CustomRowBasedContext)' UnitTestsUtil.AtomFormat' "GET"' 400' "Bad Request - Error in query syntax."); " is 184.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/GetCustomerByCity?city='N' 'YC'"' typeof(CustomRowBasedContext)' UnitTestsUtil.AtomFormat' "GET"' 400' "Bad Request - Error in query syntax."); " is 186.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/GetCustomerByCity?city='NYC''"' typeof(CustomRowBasedContext)' UnitTestsUtil.AtomFormat' "GET"' 400' "Bad Request - Error in query syntax."); " is 184.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/GetCustomerByCity?city='NYC''''"' typeof(CustomRowBasedContext)' UnitTestsUtil.AtomFormat' "GET"' 400' "Bad Request - Error in query syntax."); " is 186.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResultCountIfSpecifySelectToCountQuery,The length of the statement  "                TestWebRequest request = UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.MimeTextPlain' "/Customers/$count?$skip=1&$top=1"' typeof(CustomDataContext)' null' "GET"); " is 170.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResultCountIfSpecifySelectToCountQuery,The length of the statement  "                request = UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.MimeTextPlain' "/Customers/$count?$skip=1&$top=1&$select=ID"' typeof(CustomDataContext)' null' "GET"); " is 166.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CountAfterRefQueryNotAllowed,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/Customers(1)/Orders/$ref/$count?$select=ID"' typeof(CustomDataContext)' null' "GET"' 404); " is 133.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CountAfterRefQueryNotAllowed,The length of the statement  "                UnitTestsUtil.VerifyInvalidRequest(null' "/Customers(1)/Orders/$ref?$select=ID"' typeof(CustomDataContext)' null' "GET"' 400); " is 126.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestDeleteRequestWithSelect,The length of the statement  "                    new Dimension("QueryParameter"' new string[] { "$top=1"' "$skip=1"' "$filter=ID%20eq%201"' "$select=ID"' "$orderBy=Name"' "$expand=Orders"' "$skiptoken=1"' "$count=true" })' " is 173.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestDeleteRequestWithSelect,The length of the statement  "                    bool isV2Provider = (model.ServiceModelType != typeof(CustomDataContext) && model.ServiceModelType != typeof(ocs.CustomObjectContext)); " is 135.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestDeleteRequestWithSelect,The length of the statement  "                    bool isV2QueryOption = (queryParameter.StartsWith("$select") || queryParameter.StartsWith("$skiptoken") || queryParameter.StartsWith("$count")); " is 144.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestDeleteRequestWithSelect,The length of the statement  "                                UnitTestsUtil.VerifyInvalidRequest(null' uriWithQueryParameter' model.ServiceModelType' UnitTestsUtil.AtomFormat' methodName' 400' errorString); " is 144.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestDeleteRequestWithSelect,The length of the statement  "                        var uris = new List<string>() { "/Customers(1)"' "/Customers(1)/Orders(1)"' "/Customers(1)/BestFriend"' "/Customers(1)/BestFriend/$ref" }; " is 138.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestDeleteRequestWithSelect,The length of the statement  "                                UnitTestsUtil.VerifyInvalidRequest(null' uriWithQueryParameter' model.ServiceModelType' UnitTestsUtil.AtomFormat' methodName' 400' errorString); " is 144.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowIfPropertyAccessSourceNotSingleValueIfRequired,The length of the statement  "                            Assert.AreEqual(ODataLibResourceUtil.GetString("MetadataBinder_PropertyAccessSourceNotSingleValue"' "ID"' errorLocation)' exception.InnerException.Message); " is 156.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,AccessingHeaderWhenHostInstanceNotImplementIDataServiceHost2ShouldThrow,The length of the statement  "                    OpenWebDataServiceHelper.ProcessedRequest.Value += new EventHandler<DataServiceProcessingPipelineEventArgs>(AccessRequestHeaders); " is 130.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,AccessingHeaderWhenHostInstanceNotImplementIDataServiceHost2ShouldThrow,The length of the statement  "                        UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.AtomFormat' "/Customers(1)"' typeof(CustomDataContext)' null' "GET"' null' WebServerLocation.InProcess); " is 158.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,AccessingHeaderWhenHostInstanceNotImplementIDataServiceHost2ShouldThrow,The length of the statement  "                        Assert.IsTrue(((InvalidOperationException)exception.InnerException).Message.Contains(DataServicesResourceUtil.GetString("DataServiceHost_FeatureRequiresIDataServiceHost2"))); " is 174.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,AccessingHeaderWhenHostInstanceNotImplementIDataServiceHost2ShouldThrow,The length of the statement  "                        OpenWebDataServiceHelper.ProcessedRequest.Value += new EventHandler<DataServiceProcessingPipelineEventArgs>(AccessResponseHeaders); " is 131.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,AccessingHeaderWhenHostInstanceNotImplementIDataServiceHost2ShouldThrow,The length of the statement  "                        UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.AtomFormat' "/Customers(1)"' typeof(CustomDataContext)' null' "GET"' null' WebServerLocation.InProcess); " is 158.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,AccessingHeaderWhenHostInstanceNotImplementIDataServiceHost2ShouldThrow,The length of the statement  "                        Assert.IsTrue(((InvalidOperationException)exception.InnerException).Message.Contains(DataServicesResourceUtil.GetString("DataServiceHost_FeatureRequiresIDataServiceHost2"))); " is 174.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldErrorWhenReturnUntypedIQueryableFromGetQueryRootForResourceSet,The length of the statement  "                    string expectedMsg = DataServicesResourceUtil.GetString("DataServiceProviderWrapper_InvalidQueryRootType"' TestService33.mySet.Name' typeof(IQueryable<TestEntity33>).FullName); " is 176.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,MetadataBinderPropertyNotDeclaredShouldBeCorrect,The length of the statement  "                    string expectedErrorMsg = ODataLibResourceUtil.GetString("MetadataBinder_PropertyNotDeclared"' CustomRowBasedContext.CustomerFullName' "foo"' 0); " is 145.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SpaceInPropertyNameShouldNotThrowDuringEntitySerialization,The length of the statement  "                DSPResource resource1 = new DSPResource(myType' new[] { new KeyValuePair<string' object>("ID"' 111)' new KeyValuePair<string' object>("Property Name With Space"' "Property Value") }); " is 183.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SpaceInPropertyNameShouldNotThrowDuringEntitySerialization,The length of the statement  "                    TestUtil.AssertContains(response' "Invalid name character in 'Property Name With Space'. The ' ' character' hexadecimal value 0x20' cannot be included in a name."); " is 164.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServerShouldRespondToServiceDocRequestIfTypeNotMarkedReadOnly,The length of the statement  "                        string expectedError = DataServicesResourceUtil.GetString("DataServiceProviderWrapper_ResourceContainerNotReadonly"' TestProvider.mySet.Name); " is 142.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ResourceAssociationSetEndShouldNotScanResourceTypeProperties,The length of the statement  "                            p.ResourceProperty id = new p.ResourceProperty("ID"' p.ResourcePropertyKind.Key | p.ResourcePropertyKind.Primitive' p.ResourceType.GetPrimitiveResourceType(typeof(int))) " is 169.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ResourceAssociationSetEndShouldNotScanResourceTypeProperties,The length of the statement  "                            p.ResourceProperty orderDetails = new p.ResourceProperty("OrderDetails"' p.ResourcePropertyKind.ResourceSetReference' orderDetailType) " is 134.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ResourceAssociationSetEndShouldNotScanResourceTypeProperties,The length of the statement  "                        new p.ResourceProperty("ID"' p.ResourcePropertyKind.Key| p.ResourcePropertyKind.Primitive' p.ResourceType.GetPrimitiveResourceType(typeof(int))) " is 144.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ResourceAssociationSetEndShouldNotScanResourceTypeProperties,The length of the statement  "                            p.ResourceProperty id = new p.ResourceProperty("ID"' p.ResourcePropertyKind.Key | p.ResourcePropertyKind.Primitive' p.ResourceType.GetPrimitiveResourceType(typeof(int))) " is 169.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ResourceAssociationSetEndShouldNotScanResourceTypeProperties,The length of the statement  "                        DSPResource customer1 = new DSPResource(customerType' new[] { new KeyValuePair<string' object>("ID"' 11)' new KeyValuePair<string' object>("Orders"' order1) }); " is 160.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ResourceAssociationSetEndShouldNotScanResourceTypeProperties,The length of the statement  "                        DSPServiceDefinition service = new DSPServiceDefinition() { Metadata = metadata' Writable = true' CreateDataSource = m => context }; " is 132.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UpdateOperationShouldFailIfEtagIsIncorrect,The length of the statement  "                    string etag = UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.AtomFormat' uri' contextType' null' "GET").ResponseETag; " is 124.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UpdateOperationShouldFailIfEtagIsIncorrect,The length of the statement  "                    string atomPayload = UnitTestsUtil.ConvertPayload(contextType' "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" + " is 128.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UpdateOperationShouldFailIfEtagIsIncorrect,The length of the statement  "                    string etag1 = UnitTestsUtil.GetTestWebRequestInstance(UnitTestsUtil.AtomFormat' uri' contextType' null' "GET").ResponseETag; " is 125.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UpdateOperationShouldFailIfEtagIsIncorrect,The length of the statement  "                    UnitTestsUtil.VerifyInvalidRequest(atomPayload' uri' contextType' UnitTestsUtil.AtomFormat' "PATCH"' 412' headerValues.ToArray()); " is 130.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UpdateOperationShouldFailIfEtagIsIncorrect,The length of the statement  "                    UnitTestsUtil.VerifyInvalidRequest(atomPayload' uri' contextType' UnitTestsUtil.AtomFormat' "PUT"' 412' headerValues.ToArray()); " is 128.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UpdateOperationShouldFailIfEtagIsIncorrect,The length of the statement  "                    UnitTestsUtil.VerifyInvalidRequest(atomPayload' uri' contextType' UnitTestsUtil.AtomFormat' "DELETE"' 412' headerValues.ToArray()); " is 131.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EtagShouldBeClearedForNamedStreamsWhenNoEtagValuePresent,The length of the statement  "                TestUtil.RunCombinations(new[] { MergeOption.AppendOnly' MergeOption.OverwriteChanges' MergeOption.PreserveChanges' MergeOption.NoTracking }' " is 141.
Long Statement,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EtagShouldBeClearedForNamedStreamsWhenNoEtagValuePresent,The length of the statement  "                            ctx.SetSaveStream(streamEntity' "Stream"' new MemoryStream(new byte[] { 1 })' true' new DataServiceRequestArgs { ContentType = "*/*" }); " is 136.
Long Statement,AstoriaUnitTests.Tests,TestDataContext2,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PopulateMetadata,The length of the statement  "                    p.ResourceProperty streetAddressProperty = new p.ResourceProperty("StreetAddress"' p.ResourcePropertyKind.Primitive' p.ResourceType.GetPrimitiveResourceType(typeof(string))); " is 174.
Long Statement,AstoriaUnitTests.Tests,TestDataContext2,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PopulateMetadata,The length of the statement  "                    return new CustomDataServiceProvider(containers' types' new List<p.ServiceOperation>()' new List<p.ResourceAssociationSet>()' dataSourceInstance); " is 146.
Long Statement,AstoriaUnitTests.Tests,TestDataContext2,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SetValue,The length of the statement  "                    throw new Exception(String.Format("Invalid property value specified. Expected: '{0}'' Actual: '{1}'"' ExpectedType.FullName' actualType.FullName)); " is 147.
Long Statement,AstoriaUnitTests.Tests,TestDataService10,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,GetService,The length of the statement  "                            p.ResourceType baseCustomerType = new p.ResourceType(typeof(CustomerRow)' p.ResourceTypeKind.EntityType' null' "Foo"' "BaseCustomer"' true); " is 140.
Long Statement,AstoriaUnitTests.Tests,TestDataService10,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,GetService,The length of the statement  "                            p.ResourceType customerType = new p.ResourceType(typeof(CustomerRow)' p.ResourceTypeKind.EntityType' baseCustomerType' "Foo"' "Customer"' false); " is 145.
Long Statement,AstoriaUnitTests.Tests,TestDataService10,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,GetService,The length of the statement  "                            p.ResourceProperty keyProperty = new p.ResourceProperty("Id"' p.ResourcePropertyKind.Primitive | p.ResourcePropertyKind.Key' p.ResourceType.GetPrimitiveResourceType(typeof(string))); " is 182.
Long Statement,AstoriaUnitTests.Tests,TestDataService10,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,GetService,The length of the statement  "                            provider = new CustomDataServiceProvider(containers' types' new List<p.ServiceOperation>()' associationSets' new TestDataContext10()); " is 134.
Long Statement,AstoriaUnitTests.Tests,TestDataContext13,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,GetResource,The length of the statement  "                            throw new ArgumentException(String.Format("Invalid Uri specified. The query '{0}' must refer to a single resource"' query.ToString())); " is 135.
Long Statement,AstoriaUnitTests.Tests,TestDataContext13,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,GetValue,The length of the statement  "                    PropertyInfo propertyInfo = targetResource.GetType().GetProperty(propertyName' BindingFlags.Public | BindingFlags.Instance); " is 124.
Long Statement,AstoriaUnitTests.Tests,TestDataContext13,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SetValue,The length of the statement  "                    PropertyInfo propertyInfo = targetResource.GetType().GetProperty(propertyName' BindingFlags.Public | BindingFlags.Instance); " is 124.
Long Statement,AstoriaUnitTests.Tests,TestDataService15,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,GetCustomers,The length of the statement  "                    Assert.IsTrue(onStartProcessRequestMethodCalled' "OnStartProcessRequest method should be called before invoking service operation"); " is 132.
Long Statement,AstoriaUnitTests.Tests,TestService19,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CreateDataSource,The length of the statement  "                    string connectionString = "metadata=" + TestUtil.ServerUnitTestSamples + "\\stubs\\NonPublicPropertiesContext\\;provider=System.Data.SqlClient;provider connection string=\"server=.\\sqlexpress;integrated security=true;\";"; " is 223.
Long Statement,AstoriaUnitTests.Tests,TestService19,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CreateDataSource,The length of the statement  "                    return new CompoundKeyContext.NonPublicPropertiesContext.NonPublicPropertiesContext(new EntityConnection(connectionString)); " is 124.
Long Statement,AstoriaUnitTests.Tests,TestService29,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,InitializeService,The length of the statement  "                        TestUtil.AssertContains(ae.Message' string.Format("The given type '{0}' is not a complex type."' typeof(Customer).FullName)); " is 125.
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,TestDefaultBatchReaderBufferLength,The following statement contains a magic number: i < defaultBufferSize + 100
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InsertShortPayloadInBatchShouldWork,The following statement contains a magic number: BaseStreamProvider2.DefaultBufferSize = 8;
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,IgnoreIfNoneMatchHeaderWhenIfMatchAndIfNonMatchIsSpecified,The following statement contains a magic number: Assert.AreEqual(getRequest.ResponseStatusCode' 200' "The request should succeed");
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,LoadMoreMetadataInReflectionServiceProvider,The following statement contains a magic number: UnitTestsUtil.VerifyXPathResultCount(responsePayload' 2' "//csdl:EntityType");
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,PreferenceAppliedOnPostServiceOps,The following statement contains a magic number: Version[] versions = new Version[] { null' new Version(4' 0) };
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,GetService1,The following statement contains a magic number: order1.Add("DollarAmount"' 1000M);
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,GetService1,The following statement contains a magic number: order2.Add("ID"' 100);
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,GetService1,The following statement contains a magic number: order2.Add("DollarAmount"' 555M);
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ShouldFailOnServiceOperationsReturningComplexTypeUsedInPropertyAccess,The following statement contains a magic number: TestUtil.RunCombinations(serviceOps' test =>                      {                          request.ServiceType = typeof(TestDataService);                          request.RequestUriString = "/" + test.ServiceOpName + "/City";                          request.HttpMethod = test.Operation;                          request.Accept = UnitTestsUtil.JsonLightMimeType;                          Exception e = TestUtil.RunCatching(request.SendRequest);                            int expectedStatusCode = 404;                          string expectedError;                          if (test.Operation == "POST")                          {                              expectedStatusCode = 400;                              expectedError = ODataLibResourceUtil.GetString("RequestUriProcessor_MustBeLeafSegment"' test.ServiceOpName);                          }                          else if (test.ServiceOpName == "AllAddress" || test.ServiceOpName == "AllAddressI")                          {                              expectedStatusCode = 400;                              expectedError = ODataLibResourceUtil.GetString("RequestUriProcessor_MustBeLeafSegment"' test.ServiceOpName);                          }                          else                          {                              expectedError = DataServicesResourceUtil.GetString("RequestUriProcessor_IEnumerableServiceOperationsCannotBeFurtherComposed"' test.ServiceOpName);                          }                          Assert.IsTrue(e.InnerException.Message.Contains(expectedError));                          string responseBody = request.GetResponseStreamAsText();                          Assert.IsTrue(responseBody.Contains(expectedError));                          Assert.AreEqual(expectedStatusCode' request.ResponseStatusCode' "Response Status Code should be 404");                      });
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ShouldFailOnServiceOperationsReturningComplexTypeUsedInPropertyAccess,The following statement contains a magic number: TestUtil.RunCombinations(serviceOps' test =>                      {                          request.ServiceType = typeof(TestDataService);                          request.RequestUriString = "/" + test.ServiceOpName + "/City";                          request.HttpMethod = test.Operation;                          request.Accept = UnitTestsUtil.JsonLightMimeType;                          Exception e = TestUtil.RunCatching(request.SendRequest);                            int expectedStatusCode = 404;                          string expectedError;                          if (test.Operation == "POST")                          {                              expectedStatusCode = 400;                              expectedError = ODataLibResourceUtil.GetString("RequestUriProcessor_MustBeLeafSegment"' test.ServiceOpName);                          }                          else if (test.ServiceOpName == "AllAddress" || test.ServiceOpName == "AllAddressI")                          {                              expectedStatusCode = 400;                              expectedError = ODataLibResourceUtil.GetString("RequestUriProcessor_MustBeLeafSegment"' test.ServiceOpName);                          }                          else                          {                              expectedError = DataServicesResourceUtil.GetString("RequestUriProcessor_IEnumerableServiceOperationsCannotBeFurtherComposed"' test.ServiceOpName);                          }                          Assert.IsTrue(e.InnerException.Message.Contains(expectedError));                          string responseBody = request.GetResponseStreamAsText();                          Assert.IsTrue(responseBody.Contains(expectedError));                          Assert.AreEqual(expectedStatusCode' request.ResponseStatusCode' "Response Status Code should be 404");                      });
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ShouldFailOnServiceOperationsReturningComplexTypeUsedInPropertyAccess,The following statement contains a magic number: TestUtil.RunCombinations(serviceOps' test =>                      {                          request.ServiceType = typeof(TestDataService);                          request.RequestUriString = "/" + test.ServiceOpName + "/City";                          request.HttpMethod = test.Operation;                          request.Accept = UnitTestsUtil.JsonLightMimeType;                          Exception e = TestUtil.RunCatching(request.SendRequest);                            int expectedStatusCode = 404;                          string expectedError;                          if (test.Operation == "POST")                          {                              expectedStatusCode = 400;                              expectedError = ODataLibResourceUtil.GetString("RequestUriProcessor_MustBeLeafSegment"' test.ServiceOpName);                          }                          else if (test.ServiceOpName == "AllAddress" || test.ServiceOpName == "AllAddressI")                          {                              expectedStatusCode = 400;                              expectedError = ODataLibResourceUtil.GetString("RequestUriProcessor_MustBeLeafSegment"' test.ServiceOpName);                          }                          else                          {                              expectedError = DataServicesResourceUtil.GetString("RequestUriProcessor_IEnumerableServiceOperationsCannotBeFurtherComposed"' test.ServiceOpName);                          }                          Assert.IsTrue(e.InnerException.Message.Contains(expectedError));                          string responseBody = request.GetResponseStreamAsText();                          Assert.IsTrue(responseBody.Contains(expectedError));                          Assert.AreEqual(expectedStatusCode' request.ResponseStatusCode' "Response Status Code should be 404");                      });
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ComplexTypePropertyWithLoopShouldReturnValidResponseVersion,The following statement contains a magic number: Assert.AreEqual(request.ResponseStatusCode' 200' "Request must succeed");
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,UpdatingPrimitiveOrComplexOpenPropertyShouldWork,The following statement contains a magic number: var testCases = new[]                  {                      new // Test that a dynamic primitive string property can be updated without issue                      {                          UriString = "/DynamicStr"'                          Content = "{ \"value\":\"New Dynamic String\" }"'                          ExceptionVerifier = new Action<Exception>((Exception ex) => Assert.IsNull(ex' "No exception is expected"))'                          CodeVerifier = new Action<int>((int code) => Assert.AreEqual(code' 200))'                          ResponseVerifier = new Action<string>((string response) => Assert.IsTrue(response.Contains("New Dynamic String")))'                      }'                      new // Test that a dynamic primitive int property can be updated without issue                      {                          UriString = "/DynamicInt"'                          Content = "{ \"value\":42999 }"'                          ExceptionVerifier = new Action<Exception>((Exception ex) => Assert.IsNull(ex' "No exception is expected"))'                          CodeVerifier = new Action<int>((int code) => Assert.AreEqual(code' 200))'                          ResponseVerifier = new Action<string>((string response) => Assert.IsTrue(response.Contains("42999")))'                      }'                      //new // Test that a dynamic complex property can be updated without issue                      //{                      //    UriString = "/DynamicComplex"'                      //    Content = "{\"value\": {\"@odata.type\":\"#testNamespace.Address\"'\"Street\":\"148th Ave\"'\"Zip\":98052}}"'                      //    ExceptionVerifier = new Action<Exception>((Exception ex) => Assert.IsNull(ex' "No exception is expected"))'                      //    CodeVerifier = new Action<int>((int code) => Assert.AreEqual(code' 200))'                      //    ResponseVerifier = new Action<string>((string response) => Assert.IsTrue(response.Contains("98052")))'                      //}'                      ////new // Test that a dynamic IEnumerable complex property can be updated without issue                      ////{                      ////    UriString = "/DynamicComplexEnumerable"'                      ////    Content = "{\"value\":{\"@odata.type\":\"#testNamespace.EnumerableComplex\"'\"StringProperty\":\"String Value\"}}"'                      ////    ExceptionVerifier = new Action<Exception>((Exception ex) => Assert.IsNull(ex' "No exception is expected"))'                      ////    CodeVerifier = new Action<int>((int code) => Assert.AreEqual(code' 200))'                      ////    ResponseVerifier = new Action<string>((string response) => Assert.IsTrue(response.Contains("String Value")))'                      ////}'                  };
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,UpdatingPrimitiveOrComplexOpenPropertyShouldWork,The following statement contains a magic number: var testCases = new[]                  {                      new // Test that a dynamic primitive string property can be updated without issue                      {                          UriString = "/DynamicStr"'                          Content = "{ \"value\":\"New Dynamic String\" }"'                          ExceptionVerifier = new Action<Exception>((Exception ex) => Assert.IsNull(ex' "No exception is expected"))'                          CodeVerifier = new Action<int>((int code) => Assert.AreEqual(code' 200))'                          ResponseVerifier = new Action<string>((string response) => Assert.IsTrue(response.Contains("New Dynamic String")))'                      }'                      new // Test that a dynamic primitive int property can be updated without issue                      {                          UriString = "/DynamicInt"'                          Content = "{ \"value\":42999 }"'                          ExceptionVerifier = new Action<Exception>((Exception ex) => Assert.IsNull(ex' "No exception is expected"))'                          CodeVerifier = new Action<int>((int code) => Assert.AreEqual(code' 200))'                          ResponseVerifier = new Action<string>((string response) => Assert.IsTrue(response.Contains("42999")))'                      }'                      //new // Test that a dynamic complex property can be updated without issue                      //{                      //    UriString = "/DynamicComplex"'                      //    Content = "{\"value\": {\"@odata.type\":\"#testNamespace.Address\"'\"Street\":\"148th Ave\"'\"Zip\":98052}}"'                      //    ExceptionVerifier = new Action<Exception>((Exception ex) => Assert.IsNull(ex' "No exception is expected"))'                      //    CodeVerifier = new Action<int>((int code) => Assert.AreEqual(code' 200))'                      //    ResponseVerifier = new Action<string>((string response) => Assert.IsTrue(response.Contains("98052")))'                      //}'                      ////new // Test that a dynamic IEnumerable complex property can be updated without issue                      ////{                      ////    UriString = "/DynamicComplexEnumerable"'                      ////    Content = "{\"value\":{\"@odata.type\":\"#testNamespace.EnumerableComplex\"'\"StringProperty\":\"String Value\"}}"'                      ////    ExceptionVerifier = new Action<Exception>((Exception ex) => Assert.IsNull(ex' "No exception is expected"))'                      ////    CodeVerifier = new Action<int>((int code) => Assert.AreEqual(code' 200))'                      ////    ResponseVerifier = new Action<string>((string response) => Assert.IsTrue(response.Contains("String Value")))'                      ////}'                  };
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,DeletingNullableValueTypePropertiesShouldWork,The following statement contains a magic number: EventHandler handler = new EventHandler((sender' e) =>                  {                      var context = (TypedCustomDataContext<AllTypes>)sender;                      var theValue = new AllTypes();                        theValue.ID = 1;                      theValue.NullableInt16Type = 15;                        context.SetValues(new object[] { theValue });                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,DeletingNullableValueTypePropertiesShouldWork,The following statement contains a magic number: Assert.AreEqual(request.ResponseStatusCode' 204' "Request must succeed");
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,DeletingNullableValueTypePropertiesShouldWork,The following statement contains a magic number: Assert.AreEqual(request.ResponseStatusCode' 404' "Request must fail' since the value is null");
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InStreamErrorsDueToXmlExceptionsWrittenOutBackwards,The following statement contains a magic number: DSPResource resource1 = new DSPResource(myType' new[] { new KeyValuePair<string' object>("ID"' 111)' new KeyValuePair<string' object>("Property Name With Space"' "&nbsp;") });
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,GetService,The following statement contains a magic number: emploee.SetValue("Id"' 2);
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,EdmVersionShouldBe40IfThereIsAnAction,The following statement contains a magic number: Assert.AreEqual(200' request.ResponseStatusCode' "Status code of OK metadata should be 200");
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,RunReplaceFunctionTest,The following statement contains a magic number: Assert.AreEqual(400' request.ResponseStatusCode' "In case of error' it should be bad request");
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InvalidAcceptHeaderShouldThrow415,The following statement contains a magic number: Assert.AreEqual(415' request.ResponseStatusCode' "Expecting 415 as the status code");
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InvalidAcceptHeaderShouldThrow415,The following statement contains a magic number: Assert.AreEqual(415' request.ResponseStatusCode' "Expecting 415 as the status code");
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,PatchRequestForMaxProtocolVersionV3ShouldReturnSuccess,The following statement contains a magic number: Action<TestWebRequest> validate = (request) =>                      {                          Assert.AreEqual(204' request.ResponseStatusCode);                      };
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,InvalidHttpVerbShouldRetur501NotImplemented,The following statement contains a magic number: Action<TestWebRequest> validate = (request) =>                      {                          Assert.AreEqual(501' request.ResponseStatusCode);                      };
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceWithSingleInstanceContextModeShouldReturnCorrectResults,The following statement contains a magic number: Assert.AreEqual(200' request.ResponseStatusCode' "Response Stream: " + res.ToString());
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceWithSingleInstanceContextModeShouldReturnCorrectResults,The following statement contains a magic number: Assert.AreEqual(200' request.ResponseStatusCode' "Response stream: " + res.ToString());
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceWithSingleInstanceContextModeAndSingleConcurrencyMode_SimultaneousRequestsShouldBeProcessedSequentially,The following statement contains a magic number: string query = (i / 2 == 0) ? "/Products(" + i + ")" : "/Customers(" + i + ")";
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceWithSingleInstanceContextModeAndSingleConcurrencyMode_SimultaneousRequestsShouldBeProcessedSequentially,The following statement contains a magic number: i <= 2
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ServiceWithSingleInstanceContextModeAndSingleConcurrencyMode_SimultaneousRequestsShouldBeProcessedSequentially,The following statement contains a magic number: i < 2
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ReflectionServiceProviderShouldWorkIfGenericParameterInDataServiceIsAnInterface,The following statement contains a magic number: Assert.AreEqual(200' request.ResponseStatusCode' "Response Stream: " + res.ToString());
Magic Number,AstoriaUnitTests.Tests,RegressionTestDev11,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,ReflectionServiceProviderShouldWorkIfGenericParameterInDataServiceIsAnInterface,The following statement contains a magic number: Assert.AreEqual(200' request.ResponseStatusCode' "Response stream: " + res.ToString());
Magic Number,AstoriaUnitTests.Tests,ObjectContext<T>,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,OrderChangeInterceptor,The following statement contains a magic number: Assert.IsTrue(order.DollarAmount == 1111.11' "Make sure the dollar amount is changed");
Magic Number,AstoriaUnitTests.Tests,TestDataContext1,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,GetIntList,The following statement contains a magic number: return new List<int>() { 1' 2' 3' 4' 5 }.AsQueryable();
Magic Number,AstoriaUnitTests.Tests,TestDataContext1,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,GetIntList,The following statement contains a magic number: return new List<int>() { 1' 2' 3' 4' 5 }.AsQueryable();
Magic Number,AstoriaUnitTests.Tests,TestDataContext1,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,GetIntList,The following statement contains a magic number: return new List<int>() { 1' 2' 3' 4' 5 }.AsQueryable();
Magic Number,AstoriaUnitTests.Tests,TestDataContext1,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,GetIntList,The following statement contains a magic number: return new List<int>() { 1' 2' 3' 4' 5 }.AsQueryable();
Magic Number,AstoriaUnitTests.Tests,TestDataContext1,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,GetPeople,The following statement contains a magic number: return new List<Person>() { new Person { ID = 1' Name = "Bob" }' new Person { ID = 2' Name = "Jill" } }.AsQueryable();
Magic Number,AstoriaUnitTests.Tests,TestDataService4,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,TestMethod_Int,The following statement contains a magic number: throw new DataServiceException(400' "code1"' ERROR_INT' null' null);
Magic Number,AstoriaUnitTests.Tests,TestDataService4,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,TestMethod_Void,The following statement contains a magic number: throw new DataServiceException(400' "code1"' ERROR_VOID' null' null);
Magic Number,AstoriaUnitTests.Tests,MyOrderItemData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,MyOrderItemData,The following statement contains a magic number: _items = new MyItem[]                  {                      new MyItem() {Product = "Chai"' Quantity = 10}'                      new MyItem() {Product = "Chang"' Quantity = 25}'                      new MyItem() {Product = "Aniseed Syrup"' Quantity = 5}'                      new MyItem() {Product = "Chef Anton's Cajun Seasoning"' Quantity = 30}                  };
Magic Number,AstoriaUnitTests.Tests,MyOrderItemData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,MyOrderItemData,The following statement contains a magic number: _items = new MyItem[]                  {                      new MyItem() {Product = "Chai"' Quantity = 10}'                      new MyItem() {Product = "Chang"' Quantity = 25}'                      new MyItem() {Product = "Aniseed Syrup"' Quantity = 5}'                      new MyItem() {Product = "Chef Anton's Cajun Seasoning"' Quantity = 30}                  };
Magic Number,AstoriaUnitTests.Tests,MyOrderItemData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,MyOrderItemData,The following statement contains a magic number: _items = new MyItem[]                  {                      new MyItem() {Product = "Chai"' Quantity = 10}'                      new MyItem() {Product = "Chang"' Quantity = 25}'                      new MyItem() {Product = "Aniseed Syrup"' Quantity = 5}'                      new MyItem() {Product = "Chef Anton's Cajun Seasoning"' Quantity = 30}                  };
Magic Number,AstoriaUnitTests.Tests,MyOrderItemData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,MyOrderItemData,The following statement contains a magic number: _items = new MyItem[]                  {                      new MyItem() {Product = "Chai"' Quantity = 10}'                      new MyItem() {Product = "Chang"' Quantity = 25}'                      new MyItem() {Product = "Aniseed Syrup"' Quantity = 5}'                      new MyItem() {Product = "Chef Anton's Cajun Seasoning"' Quantity = 30}                  };
Magic Number,AstoriaUnitTests.Tests,MyOrderItemData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,MyOrderItemData,The following statement contains a magic number: _orders[1].Items.Add(_items[2]);
Magic Number,AstoriaUnitTests.Tests,MyOrderItemData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTestsDev11.cs,MyOrderItemData,The following statement contains a magic number: _orders[1].Items.Add(_items[3]);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenBindingInvalidUriInJson,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(atomPayload' "/Customers"' typeof(CustomDataContext)' UnitTestsUtil.AtomFormat' "POST"' 400' DataServicesResourceUtil.GetString("BadRequest_ErrorInSettingPropertyValue"' "Orders"));
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenBindingInvalidUriInJson,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(UnitTestsUtil.ConvertReflectionProviderTypesToEdmProviderTypes(atomPayload)' "/Customers"' typeof(ocs.CustomObjectContext)' UnitTestsUtil.AtomFormat' "POST"' 400' DataServicesResourceUtil.GetString("BadRequest_ErrorInSettingPropertyValue"' "Orders"));
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CannotSpecifyEtagIfExpandQueryPresent,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequestForVariousProviders(null' "/Customers(1)?$expand=Orders"' UnitTestsUtil.MimeAny' "GET"' 400' ifMatch);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CannotSpecifyEtagIfExpandQueryPresent,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequestForVariousProviders(null' "/Customers(1)?$expand=Orders"' UnitTestsUtil.MimeAny' "GET"' 400' ifNoneMatch);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowIfLinkTypeAttributeIsInvalid,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(atomPayload' "/Customers"' typeof(CustomDataContext)' UnitTestsUtil.AtomFormat' "POST"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowIfLinkTypeAttributeIsInvalid,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(atomPayload' "/Customers"' typeof(CustomDataContext)' UnitTestsUtil.AtomFormat' "POST"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,InvalidRequestIfSettingTopLevelResourceToNullValue,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(jsonPayload' "/Customers(1)"' typeof(CustomDataContext)' UnitTestsUtil.JsonLightMimeType' "PUT"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,InvalidRequestIfSettingTopLevelResourceToNullValue,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(atomPayload' "/Customers(1)"' typeof(CustomDataContext)' UnitTestsUtil.AtomFormat' "PUT"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowOnCudOperationsOnServiceUri,The following statement contains a magic number: TestUtil.RunCombinatorialEngineFail(engine' (values) =>                  {                      WebServerLocation location = (WebServerLocation)values["WebServerLocation"];                      string responseFormat = (string)values["ResponseFormat"];                      if (responseFormat == UnitTestsUtil.AtomFormat)                      {                          responseFormat = UnitTestsUtil.MimeApplicationXml;                      }                        string methodName = (string)values["Method"];                        int expectedErrorCode = 405; // Method Not Allowed                      if (methodName == "GET")                      {                          return;                      }                        Type contextType = typeof(CustomDataContext);                      UnitTestsUtil.VerifyInvalidRequest(null' "/"' contextType' responseFormat' methodName' expectedErrorCode);                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldRequireTypeInformationInInheritance,The following statement contains a magic number: TypedCustomDataContext<TestEntity4>.ValuesRequested += (x' y) =>                  {                      ((TypedCustomDataContext<TestEntity4>)x).SetValues(new object[] {                          new TestEntity4 { ID = 1' X = 5 }'                          new TestDerivedEntity4 { ID = 2' X = 7' Y = 8 }});                  };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldRequireTypeInformationInInheritance,The following statement contains a magic number: TypedCustomDataContext<TestEntity4>.ValuesRequested += (x' y) =>                  {                      ((TypedCustomDataContext<TestEntity4>)x).SetValues(new object[] {                          new TestEntity4 { ID = 1' X = 5 }'                          new TestDerivedEntity4 { ID = 2' X = 7' Y = 8 }});                  };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldRequireTypeInformationInInheritance,The following statement contains a magic number: TypedCustomDataContext<TestEntity4>.ValuesRequested += (x' y) =>                  {                      ((TypedCustomDataContext<TestEntity4>)x).SetValues(new object[] {                          new TestEntity4 { ID = 1' X = 5 }'                          new TestDerivedEntity4 { ID = 2' X = 7' Y = 8 }});                  };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldRequireTypeInformationInInheritance,The following statement contains a magic number: TypedCustomDataContext<TestEntity4>.ValuesRequested += (x' y) =>                  {                      ((TypedCustomDataContext<TestEntity4>)x).SetValues(new object[] {                          new TestEntity4 { ID = 1' X = 5 }'                          new TestDerivedEntity4 { ID = 2' X = 7' Y = 8 }});                  };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldRequireTypeInformationInInheritance,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(payload' "/Values(1)"' contextType' UnitTestsUtil.JsonLightMimeType' "PUT"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldRequireTypeInformationInInheritance,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(payload' "/Values(2)"' contextType' UnitTestsUtil.JsonLightMimeType' "PUT"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldRequireTypeInformationInInheritance,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(payload' "/Values(1)"' contextType' UnitTestsUtil.AtomFormat' "PUT"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldRequireTypeInformationInInheritance,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(payload' "/Values(2)"' contextType' UnitTestsUtil.AtomFormat' "PUT"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenCannotLoadMetadata,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/$metadata"' typeof(TypedCustomDataContext<TestEntity5>)' UnitTestsUtil.MimeApplicationXml' "GET"' 500);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenCannotLoadMetadata,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/$metadata"' typeof(TestDataContext5)' UnitTestsUtil.MimeApplicationXml' "GET"' 500);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenIgnoringKeyProperties,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/$metadata"' typeof(TypedCustomDataContext<TestEntity6>)' UnitTestsUtil.MimeApplicationXml' "GET"' 500);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldReturn204ByVoidServiceOperation,The following statement contains a magic number: Assert.IsTrue(request.ResponseStatusCode == 204' "Void service operation should return 204 - no content");
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,InvalidContentTypeTests,The following statement contains a magic number: TestUtil.RunCombinatorialEngineFail(engine' (values) =>                      {                          Type contextType = (Type)values["ContextType"];                          var uriAndMimeType = (KeyValuePair<string[]' string[]>)values["UriAndMimeType"];                          TestUtil.RunCombinations(                              uriAndMimeType.Key'                              uriAndMimeType.Value'                              (uriAndMethodInfo' mimeType) =>                              {                                  string[] info = uriAndMethodInfo.Split(''');                                  UnitTestsUtil.VerifyInvalidRequest(null' info[0]' contextType' mimeType' info[1]' 415);                              });                      });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenUpdatingKeyPropertyOrSettingToNull,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest("{ value: 2 }"' "/Orders(2)/ID"' typeof(CustomDataContext)' UnitTestsUtil.JsonLightMimeType' "PATCH"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenUpdatingKeyPropertyOrSettingToNull,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/Orders(2)/ID/$value"' typeof(CustomDataContext)' null' "PATCH"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowWhenUpdatingKeyPropertyOrSettingToNull,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/Orders(2)/ID/$value"' typeof(CustomDataContext)' null' "DELETE"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CheckForInvalidEtagAndMultipleEtagPropertiesShouldWork,The following statement contains a magic number: TypedCustomDataContext<TestEntity7>.ValuesRequested += (x' y) =>                  {                      ((TypedCustomDataContext<TestEntity7>)x).SetValues(new object[] {                          new TestEntity7 { ID = 1' ETagProperty1 = 5' ETagProperty2 = "Foo" } });                  };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,JsonShouldReadDoubleNumberWithoutPeriod,The following statement contains a magic number: TypedCustomDataContext<BugBugEntity>.ValuesRequested += (x' y) =>                  {                      ((TypedCustomDataContext<BugBugEntity>)x).SetValues(new object[] {                          new BugBugEntity { ID = 7E-06 } });                  };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,JsonShouldReadDoubleNumberGreaterThanInt32Range,The following statement contains a magic number: TypedCustomDataContext<BugBugEntity>.ValuesRequested += (x' y) =>                  {                      ((TypedCustomDataContext<BugBugEntity>)x).SetValues(new object[] {                          new BugBugEntity { ID = 9000000000 } });                  };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyMaxObjectCount,The following statement contains a magic number: OpenWebDataServiceHelper.MaxObjectCountOnInsert.Value = 6;
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DataServiceExceptionShouldBeSurfacedFromQueryInterceptorException,The following statement contains a magic number: TestUtil.RunCombinatorialEngineFail(engine' (table) =>                  {                      using (OpenWebDataServiceHelper.MaxProtocolVersion.Restore())                      using (OpenWebDataServiceHelper.AcceptAnyAllRequests.Restore())                      using (TestWebRequest request = TestWebRequest.CreateForInProcess())                      {                          OpenWebDataServiceHelper.MaxProtocolVersion.Value = ODataProtocolVersion.V4;                          OpenWebDataServiceHelper.AcceptAnyAllRequests.Value = true;                            request.RequestUriString = (string)table["RequestUriString"];                          request.ServiceType = (Type)table["ServiceType"];                          request.HttpMethod = "GET";                            Exception exception = TestUtil.RunCatching(request.SendRequest);                          Assert.IsNotNull(exception);                            if (request.ServiceType == typeof(QueryInterceptorDataServiceException))                          {                              DataServiceException dse = exception.InnerException as DataServiceException;                              Assert.IsNotNull(dse);                              Assert.AreEqual(403' dse.StatusCode);                              TargetInvocationException tie = dse.InnerException as TargetInvocationException;                              Assert.IsNotNull(tie);                          }                          else                          {                              TargetInvocationException tie = exception.InnerException as TargetInvocationException;                              Assert.IsNotNull(tie);                              ApplicationException ae = tie.InnerException as ApplicationException;                              Assert.IsNotNull(ae);                          }                      }                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyServiceOperationRightsIfIsOnlySegment,The following statement contains a magic number: ServiceOperationRights[] serviceOperationRights = new ServiceOperationRights[4] {                      ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.None'                      ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadSingle'                      ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadMultiple'                      ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.All'                  };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyServiceOperationRightsIfIsOnlySegment,The following statement contains a magic number: TestUtil.RunCombinatorialEngineFail(engine' (table) =>                  {                      ServiceOperationRights rights = (ServiceOperationRights)table["ServiceOperationRights"];                      string methodName = (string)table["ServiceOperationName"];                        using (MyServiceOperationDS.SetServiceOperationAccessRule(methodName' rights))                      using (TestWebRequest request = TestWebRequest.CreateForInProcess())                      {                          request.ServiceType = typeof(MyServiceOperationDS);                          request.RequestUriString = "/" + methodName;                          request.HttpMethod = "GET";                            Exception exception = TestUtil.RunCatching(request.SendRequest);                          TestUtil.AssertExceptionExpected(exception'                              //rights == ServiceOperationRights.None'                              //rights == ServiceOperationRights.ReadSingle && (methodName == "SOpEnumerable" || methodName == "SOpMultipleQueryable")'                              //rights == ServiceOperationRights.ReadMultiple && (methodName == "SOpDirectValue" || methodName == "SOpSingleQueryable")'                              rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.None)'                              rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadSingle) && (methodName == "SOpEnumerable" || methodName == "SOpMultipleQueryable")'                              rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadMultiple) && (methodName == "SOpDirectValue" || methodName == "SOpSingleQueryable")                          );                            if (rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.None))                          {                              Assert.AreEqual(404' request.ResponseStatusCode);                          }                            if (rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadSingle) && (methodName == "SOpEnumerable" || methodName == "SOpMultipleQueryable"))                          {                              Assert.AreEqual(403' request.ResponseStatusCode);                          }                            if (rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadMultiple) && (methodName == "SOpDirectValue" || methodName == "SOpSingleQueryable"))                          {                              Assert.AreEqual(403' request.ResponseStatusCode);                          }                      }                        TestUtil.ClearConfiguration();                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyServiceOperationRightsIfIsOnlySegment,The following statement contains a magic number: TestUtil.RunCombinatorialEngineFail(engine' (table) =>                  {                      ServiceOperationRights rights = (ServiceOperationRights)table["ServiceOperationRights"];                      string methodName = (string)table["ServiceOperationName"];                        using (MyServiceOperationDS.SetServiceOperationAccessRule(methodName' rights))                      using (TestWebRequest request = TestWebRequest.CreateForInProcess())                      {                          request.ServiceType = typeof(MyServiceOperationDS);                          request.RequestUriString = "/" + methodName;                          request.HttpMethod = "GET";                            Exception exception = TestUtil.RunCatching(request.SendRequest);                          TestUtil.AssertExceptionExpected(exception'                              //rights == ServiceOperationRights.None'                              //rights == ServiceOperationRights.ReadSingle && (methodName == "SOpEnumerable" || methodName == "SOpMultipleQueryable")'                              //rights == ServiceOperationRights.ReadMultiple && (methodName == "SOpDirectValue" || methodName == "SOpSingleQueryable")'                              rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.None)'                              rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadSingle) && (methodName == "SOpEnumerable" || methodName == "SOpMultipleQueryable")'                              rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadMultiple) && (methodName == "SOpDirectValue" || methodName == "SOpSingleQueryable")                          );                            if (rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.None))                          {                              Assert.AreEqual(404' request.ResponseStatusCode);                          }                            if (rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadSingle) && (methodName == "SOpEnumerable" || methodName == "SOpMultipleQueryable"))                          {                              Assert.AreEqual(403' request.ResponseStatusCode);                          }                            if (rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadMultiple) && (methodName == "SOpDirectValue" || methodName == "SOpSingleQueryable"))                          {                              Assert.AreEqual(403' request.ResponseStatusCode);                          }                      }                        TestUtil.ClearConfiguration();                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyServiceOperationRightsIfIsOnlySegment,The following statement contains a magic number: TestUtil.RunCombinatorialEngineFail(engine' (table) =>                  {                      ServiceOperationRights rights = (ServiceOperationRights)table["ServiceOperationRights"];                      string methodName = (string)table["ServiceOperationName"];                        using (MyServiceOperationDS.SetServiceOperationAccessRule(methodName' rights))                      using (TestWebRequest request = TestWebRequest.CreateForInProcess())                      {                          request.ServiceType = typeof(MyServiceOperationDS);                          request.RequestUriString = "/" + methodName;                          request.HttpMethod = "GET";                            Exception exception = TestUtil.RunCatching(request.SendRequest);                          TestUtil.AssertExceptionExpected(exception'                              //rights == ServiceOperationRights.None'                              //rights == ServiceOperationRights.ReadSingle && (methodName == "SOpEnumerable" || methodName == "SOpMultipleQueryable")'                              //rights == ServiceOperationRights.ReadMultiple && (methodName == "SOpDirectValue" || methodName == "SOpSingleQueryable")'                              rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.None)'                              rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadSingle) && (methodName == "SOpEnumerable" || methodName == "SOpMultipleQueryable")'                              rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadMultiple) && (methodName == "SOpDirectValue" || methodName == "SOpSingleQueryable")                          );                            if (rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.None))                          {                              Assert.AreEqual(404' request.ResponseStatusCode);                          }                            if (rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadSingle) && (methodName == "SOpEnumerable" || methodName == "SOpMultipleQueryable"))                          {                              Assert.AreEqual(403' request.ResponseStatusCode);                          }                            if (rights == (ServiceOperationRights.OverrideEntitySetRights | ServiceOperationRights.ReadMultiple) && (methodName == "SOpDirectValue" || methodName == "SOpSingleQueryable"))                          {                              Assert.AreEqual(403' request.ResponseStatusCode);                          }                      }                        TestUtil.ClearConfiguration();                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SecurityBug,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequestForVariousProviders(jsonPayload' "/Customers"' UnitTestsUtil.JsonLightMimeType' "POST"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,JsonPayloadShouldTerminateProperly_1,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequestForVariousProviders(jsonPayload' "/Customers"' UnitTestsUtil.JsonLightMimeType' "POST"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,XmlNsOnInnerErrorTagShouldBeCorrect,The following statement contains a magic number: request.TestArguments[CustomDataContext.CustomerCountArgument] = 10;
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,JsonDeserializerShouldConvertValuesWhenEnableTypeConversionIsTrue,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(payload' "/Data"' typeof(TestDataContext9)' UnitTestsUtil.JsonLightMimeTypeIeee754Compatible' "POST"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ReflectionServiceProviderShouldNotThrowIfReturnNull,The following statement contains a magic number: Assert.AreEqual(204' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PutShouldCheckEtagIfTypeHasEtagProperties,The following statement contains a magic number: Assert.AreEqual(400' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IncorrectTokenErrorResponseShouldHaveCorrectSerializationFormat,The following statement contains a magic number: TestUtil.RunCombinatorialEngineFail(engine' (values) =>                  {                      using (TestWebRequest request = TestWebRequest.CreateForLocal())                      {                          SerializationFormatData format = (SerializationFormatData)values["SerializationFormatData"];                            request.DataServiceType = typeof(CustomDataContext);                          request.RequestUriString = "/Customers?$ttop=1";                          request.Accept = format.MimeTypes[0];                          Exception e = TestUtil.RunCatching(request.SendRequest);                          Assert.IsNotNull(e' "Must have caused an error because of bad query parameter");                          Assert.AreEqual(400' request.ResponseStatusCode);                          string expectedFormat = format == SerializationFormatData.JsonLight ? UnitTestsUtil.JsonLightMimeType : UnitTestsUtil.MimeApplicationXml;                          expectedFormat = string.Format("{0};"' expectedFormat);                          Assert.IsTrue(request.ResponseContentType.StartsWith(expectedFormat' StringComparison.OrdinalIgnoreCase)' string.Format("Expected: '{0}' Actual: {1}"' expectedFormat' request.ResponseContentType));                          String result = request.GetResponseStreamAsText();                          Assert.IsTrue(result.Contains("system-reserved")' "Must received error with reserved keyword error");                      }                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,NonGetErrorResponseVersionShouldBe40,The following statement contains a magic number: Assert.AreEqual(404' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,NewlineShouldReadAsPartOfBinaryDataInBatchPayload,The following statement contains a magic number: EventHandler handler = new EventHandler((sender' e) =>                  {                      var context = (TypedCustomDataContext<AllTypes>)sender;                      var theValue = new AllTypes();                        theValue.ID = 1;                      theValue.BinaryType = new byte[] { 1' 2' 3' 4 };                        context.SetValues(new object[] { theValue });                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,NewlineShouldReadAsPartOfBinaryDataInBatchPayload,The following statement contains a magic number: EventHandler handler = new EventHandler((sender' e) =>                  {                      var context = (TypedCustomDataContext<AllTypes>)sender;                      var theValue = new AllTypes();                        theValue.ID = 1;                      theValue.BinaryType = new byte[] { 1' 2' 3' 4 };                        context.SetValues(new object[] { theValue });                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,NewlineShouldReadAsPartOfBinaryDataInBatchPayload,The following statement contains a magic number: EventHandler handler = new EventHandler((sender' e) =>                  {                      var context = (TypedCustomDataContext<AllTypes>)sender;                      var theValue = new AllTypes();                        theValue.ID = 1;                      theValue.BinaryType = new byte[] { 1' 2' 3' 4 };                        context.SetValues(new object[] { theValue });                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,NewlineShouldReadAsPartOfBinaryDataInBatchPayload,The following statement contains a magic number: string boundary = segments[0].Substring(2);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PostFollowedByPutInSingleChangesetShouldThrow,The following statement contains a magic number: string boundary = segments[0].Substring(2);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PostFollowedByPutInSingleChangesetShouldThrow,The following statement contains a magic number: ocs.Hidden.Customer customer = context.Customers.Where(c => c.ID == 123456).ToList().Single();
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CountRequestShouldThrowOnIfMatchOrIfNoneMatchHeaders,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequestForVariousProviders(null' requestUri' UnitTestsUtil.MimeTextPlain' "GET"' 400' ifMatchHeader);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CountRequestShouldThrowOnIfMatchOrIfNoneMatchHeaders,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequestForVariousProviders(null' requestUri' UnitTestsUtil.MimeTextPlain' "GET"' 400' ifNoneMatchHeader);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldReturn500ForInvalidEtagValue,The following statement contains a magic number: var statusCodes = new int[] { 400' 412' 412' 412 };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldReturn500ForInvalidEtagValue,The following statement contains a magic number: var statusCodes = new int[] { 400' 412' 412' 412 };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldReturn500ForInvalidEtagValue,The following statement contains a magic number: var statusCodes = new int[] { 400' 412' 412' 412 };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldReturn500ForInvalidEtagValue,The following statement contains a magic number: var statusCodes = new int[] { 400' 412' 412' 412 };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TwoEntitySetsCanHaveSameNameWhenUsingIDSP,The following statement contains a magic number: var testCases = new[]                      {                          new {                              NumberOfTypes = 2' NumberOfSets = 1' NumberOfServiceOperations = 1'                              ExceptionMessage = "More than one resource type with the name 'AstoriaUnitTests.Tests.EntityTypeA' was found. Resource type names must be unique."                          }'                          new {                              NumberOfTypes = 1' NumberOfSets = 2' NumberOfServiceOperations = 1'                              ExceptionMessage = "More than one entity set with the name 'Entities' was found. Entity set names must be unique."                          }'                          new {                              NumberOfTypes = 1' NumberOfSets = 1' NumberOfServiceOperations = 2'                              ExceptionMessage = "More than one service operation with the name 'ServiceOp' was found. Service operation names must be unique."                          }                        };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TwoEntitySetsCanHaveSameNameWhenUsingIDSP,The following statement contains a magic number: var testCases = new[]                      {                          new {                              NumberOfTypes = 2' NumberOfSets = 1' NumberOfServiceOperations = 1'                              ExceptionMessage = "More than one resource type with the name 'AstoriaUnitTests.Tests.EntityTypeA' was found. Resource type names must be unique."                          }'                          new {                              NumberOfTypes = 1' NumberOfSets = 2' NumberOfServiceOperations = 1'                              ExceptionMessage = "More than one entity set with the name 'Entities' was found. Entity set names must be unique."                          }'                          new {                              NumberOfTypes = 1' NumberOfSets = 1' NumberOfServiceOperations = 2'                              ExceptionMessage = "More than one service operation with the name 'ServiceOp' was found. Service operation names must be unique."                          }                        };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TwoEntitySetsCanHaveSameNameWhenUsingIDSP,The following statement contains a magic number: var testCases = new[]                      {                          new {                              NumberOfTypes = 2' NumberOfSets = 1' NumberOfServiceOperations = 1'                              ExceptionMessage = "More than one resource type with the name 'AstoriaUnitTests.Tests.EntityTypeA' was found. Resource type names must be unique."                          }'                          new {                              NumberOfTypes = 1' NumberOfSets = 2' NumberOfServiceOperations = 1'                              ExceptionMessage = "More than one entity set with the name 'Entities' was found. Entity set names must be unique."                          }'                          new {                              NumberOfTypes = 1' NumberOfSets = 1' NumberOfServiceOperations = 2'                              ExceptionMessage = "More than one service operation with the name 'ServiceOp' was found. Service operation names must be unique."                          }                        };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyStreamWithMissingInterface,The following statement contains a magic number: Assert.AreEqual(500' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DataSourceWithVirtualProperty,The following statement contains a magic number: Assert.AreEqual(200' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IDspDisposeDataSourceShouldBeCalledForOperationsReturn204Or304,The following statement contains a magic number: Assert.AreEqual(200' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IDspDisposeDataSourceShouldBeCalledForOperationsReturn204Or304,The following statement contains a magic number: Assert.AreEqual(304' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IDspDisposeDataSourceShouldBeCalledForOperationsReturn204Or304,The following statement contains a magic number: Assert.AreEqual(2' CustomDataContextWithDispose.DisposedCount);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IDspDisposeDataSourceShouldBeCalledForOperationsReturn204Or304,The following statement contains a magic number: Assert.AreEqual(204' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IDspDisposeDataSourceShouldBeCalledForOperationsReturn204Or304,The following statement contains a magic number: Assert.AreEqual(4' CustomDataContextWithDispose.DisposedCount);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IDspDisposeDataSourceShouldBeCalledForOperationsReturn204Or304,The following statement contains a magic number: Assert.AreEqual(204' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IDspDisposeDataSourceShouldBeCalledForOperationsReturn204Or304,The following statement contains a magic number: Assert.AreEqual(6' CustomDataContextWithDispose.DisposedCount);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IDspDisposeDataSourceShouldBeCalledForOperationsReturn204Or304,The following statement contains a magic number: Assert.AreEqual(204' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,IDspDisposeDataSourceShouldBeCalledForOperationsReturn204Or304,The following statement contains a magic number: Assert.AreEqual(8' CustomDataContextWithDispose.DisposedCount);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EntitySetRightsForNestedQueries,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/Customers('ALKFI')/Orders"' typeof(TestDataService24)' UnitTestsUtil.AtomFormat' "GET"' 403);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EntitySetRightsForNestedQueries,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/Orders?$filter=Customers/ContactName eq 'ALFKI'"' typeof(TestDataService24)' UnitTestsUtil.AtomFormat' "GET"' 403);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EntitySetRightsForNestedQueries,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/Orders?$orderby=Customers/CustomerID"' typeof(TestDataService24)' UnitTestsUtil.AtomFormat' "GET"' 403);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,EntitySetRightsForNestedQueries,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/Orders?$expand=Customers"' typeof(TestDataService24)' UnitTestsUtil.AtomFormat' "GET"' 403);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ExpandOnHiddenNavPropShouldThrow,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/Customers?$expand=Orders"' typeof(TestDataService25)' UnitTestsUtil.AtomFormat' "GET"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DoNotMakeUnnecessaryCallToQueryInterceptor,The following statement contains a magic number: TestUtil.RunCombinatorialEngineFail(engine' (ht) =>                  {                      using (TestUtil.RestoreStaticMembersOnDispose(typeof(CustomDataServiceProvider)))                      using (TestUtil.RestoreStaticMembersOnDispose(typeof(TestDataService26)))                      using (CustomRowBasedContext.CreateChangeScope())                      {                          using (TestWebRequest request = TestWebRequest.CreateForInProcess())                          {                              string payload = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" +                                               "<adsm:ref xmlns:adsm=\"http://docs.oasis-open.org/odata/ns/metadata\" id=\"/Customers(1)\"/>";                                TestDataService26.QueryCustomersInjectsBrokenExpression = false;                              request.ServiceType = typeof(TestDataService26);                              request.HttpMethod = (string)ht["RequestType"];                              request.RequestContentType = UnitTestsUtil.MimeApplicationXml;                              request.RequestUriString = "/Customers(1)/BestFriend/$ref";                              request.SetRequestStreamAsText(payload);                              request.SendRequest();                              Assert.AreEqual(204' request.ResponseStatusCode);                              Assert.AreEqual(2' TestDataService26.CustomersQueryInterceptorInvokeCount' "TestDataService26.CustomersQueryInterceptorInvokeCount");                          }                      }                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DoNotMakeUnnecessaryCallToQueryInterceptor,The following statement contains a magic number: TestUtil.RunCombinatorialEngineFail(engine' (ht) =>                  {                      using (TestUtil.RestoreStaticMembersOnDispose(typeof(CustomDataServiceProvider)))                      using (TestUtil.RestoreStaticMembersOnDispose(typeof(TestDataService26)))                      using (CustomRowBasedContext.CreateChangeScope())                      {                          using (TestWebRequest request = TestWebRequest.CreateForInProcess())                          {                              string payload = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" +                                               "<adsm:ref xmlns:adsm=\"http://docs.oasis-open.org/odata/ns/metadata\" id=\"/Customers(1)\"/>";                                TestDataService26.QueryCustomersInjectsBrokenExpression = false;                              request.ServiceType = typeof(TestDataService26);                              request.HttpMethod = (string)ht["RequestType"];                              request.RequestContentType = UnitTestsUtil.MimeApplicationXml;                              request.RequestUriString = "/Customers(1)/BestFriend/$ref";                              request.SetRequestStreamAsText(payload);                              request.SendRequest();                              Assert.AreEqual(204' request.ResponseStatusCode);                              Assert.AreEqual(2' TestDataService26.CustomersQueryInterceptorInvokeCount' "TestDataService26.CustomersQueryInterceptorInvokeCount");                          }                      }                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DeleteToLinksWithEtagDoesNotFail,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequestForVariousProviders(null' uri' null' method' 400' ifMatchHeader);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,DeleteToLinksWithEtagDoesNotFail,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequestForVariousProviders(null' uri' null' method' 400' ifNoneMatchHeader);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ServiceInitError,The following statement contains a magic number: Exception[] exceptionToThrow = new Exception[]                  {                      new InvalidOperationException()'            // 500                      new DataServiceException()'                 // 500                      new DataServiceException(400' "exception")  // 400                  };
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/GetCustomerByCity?city=''NYC'"' typeof(CustomRowBasedContext)' UnitTestsUtil.AtomFormat' "GET"' 400' "Bad Request - Error in query syntax.");
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/GetCustomerByCity?city='N'YC'"' typeof(CustomRowBasedContext)' UnitTestsUtil.AtomFormat' "GET"' 400' "Bad Request - Error in query syntax.");
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/GetCustomerByCity?city='N' 'YC'"' typeof(CustomRowBasedContext)' UnitTestsUtil.AtomFormat' "GET"' 400' "Bad Request - Error in query syntax.");
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/GetCustomerByCity?city='NYC''"' typeof(CustomRowBasedContext)' UnitTestsUtil.AtomFormat' "GET"' 400' "Bad Request - Error in query syntax.");
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/GetCustomerByCity?city='NYC''''"' typeof(CustomRowBasedContext)' UnitTestsUtil.AtomFormat' "GET"' 400' "Bad Request - Error in query syntax.");
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The following statement contains a magic number: Assert.AreEqual(200' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The following statement contains a magic number: Assert.AreEqual(200' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The following statement contains a magic number: Assert.AreEqual(200' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The following statement contains a magic number: Assert.AreEqual(200' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,VerifyResponseStatusIfServiceOperationArgumentEndsWithUnEscapedSingleQuote,The following statement contains a magic number: Assert.AreEqual(200' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CountAfterRefQueryNotAllowed,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/Customers(1)/Orders/$ref/$count?$select=ID"' typeof(CustomDataContext)' null' "GET"' 404);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,CountAfterRefQueryNotAllowed,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(null' "/Customers(1)/Orders/$ref?$select=ID"' typeof(CustomDataContext)' null' "GET"' 400);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestDeleteRequestWithSelect,The following statement contains a magic number: TestUtil.RunCombinatorialEngineFail(engine' (values) =>                  {                      string queryParameter = (string)values["QueryParameter"];                      string methodName = (string)values["HTTPMethod"];                      ServiceModelData model = (ServiceModelData)values["Provider"];                      bool isV2Provider = (model.ServiceModelType != typeof(CustomDataContext) && model.ServiceModelType != typeof(ocs.CustomObjectContext));                      bool isV2QueryOption = (queryParameter.StartsWith("$select") || queryParameter.StartsWith("$skiptoken") || queryParameter.StartsWith("$count"));                      string errorString = DataServicesResourceUtil.GetString("RequestQueryProcessor_QueryNoOptionsApplicable");                        if (!model.IsUnitTestProvider)                      {                          return;                      }                        // POST uri's - In V1' we allowd                      if (methodName == "POST")                      {                          foreach (string uri in new string[] { "/Customers"' "/Customers(1)/Orders"' "/Customers(1)/Orders/$ref" })                          {                              string uriWithQueryParameter = String.Format("{0}?{1}"' uri' queryParameter);                                if (isV2QueryOption || isV2Provider)                              {                                  UnitTestsUtil.VerifyInvalidRequest(null' uriWithQueryParameter' model.ServiceModelType' UnitTestsUtil.AtomFormat' methodName' 400' errorString);                              }                          }                      }                      else                      {                          var uris = new List<string>() { "/Customers(1)"' "/Customers(1)/Orders(1)"' "/Customers(1)/BestFriend"' "/Customers(1)/BestFriend/$ref" };                            var deleteEntityRefUri = "/Customers(1)/Orders/$ref?$id=Orders(1)";                            if (methodName == "DELETE")                          {                              uris.Add(deleteEntityRefUri);                          }                          else                          {                              uris.Add("/Customers(1)/Orders(1)/$ref");                          }                            // PUT' PATCH DELETE uri's                          foreach (string uri in uris)                          {                              string uriWithQueryParameter = uri == deleteEntityRefUri                                  ? String.Format("{0}&{1}"' uri' queryParameter)                                  : String.Format("{0}?{1}"' uri' queryParameter);                                if (isV2QueryOption || isV2Provider)                              {                                  UnitTestsUtil.VerifyInvalidRequest(null' uriWithQueryParameter' model.ServiceModelType' UnitTestsUtil.AtomFormat' methodName' 400' errorString);                              }                          }                      }                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestDeleteRequestWithSelect,The following statement contains a magic number: TestUtil.RunCombinatorialEngineFail(engine' (values) =>                  {                      string queryParameter = (string)values["QueryParameter"];                      string methodName = (string)values["HTTPMethod"];                      ServiceModelData model = (ServiceModelData)values["Provider"];                      bool isV2Provider = (model.ServiceModelType != typeof(CustomDataContext) && model.ServiceModelType != typeof(ocs.CustomObjectContext));                      bool isV2QueryOption = (queryParameter.StartsWith("$select") || queryParameter.StartsWith("$skiptoken") || queryParameter.StartsWith("$count"));                      string errorString = DataServicesResourceUtil.GetString("RequestQueryProcessor_QueryNoOptionsApplicable");                        if (!model.IsUnitTestProvider)                      {                          return;                      }                        // POST uri's - In V1' we allowd                      if (methodName == "POST")                      {                          foreach (string uri in new string[] { "/Customers"' "/Customers(1)/Orders"' "/Customers(1)/Orders/$ref" })                          {                              string uriWithQueryParameter = String.Format("{0}?{1}"' uri' queryParameter);                                if (isV2QueryOption || isV2Provider)                              {                                  UnitTestsUtil.VerifyInvalidRequest(null' uriWithQueryParameter' model.ServiceModelType' UnitTestsUtil.AtomFormat' methodName' 400' errorString);                              }                          }                      }                      else                      {                          var uris = new List<string>() { "/Customers(1)"' "/Customers(1)/Orders(1)"' "/Customers(1)/BestFriend"' "/Customers(1)/BestFriend/$ref" };                            var deleteEntityRefUri = "/Customers(1)/Orders/$ref?$id=Orders(1)";                            if (methodName == "DELETE")                          {                              uris.Add(deleteEntityRefUri);                          }                          else                          {                              uris.Add("/Customers(1)/Orders(1)/$ref");                          }                            // PUT' PATCH DELETE uri's                          foreach (string uri in uris)                          {                              string uriWithQueryParameter = uri == deleteEntityRefUri                                  ? String.Format("{0}&{1}"' uri' queryParameter)                                  : String.Format("{0}?{1}"' uri' queryParameter);                                if (isV2QueryOption || isV2Provider)                              {                                  UnitTestsUtil.VerifyInvalidRequest(null' uriWithQueryParameter' model.ServiceModelType' UnitTestsUtil.AtomFormat' methodName' 400' errorString);                              }                          }                      }                  });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,NonGetErrorResponseODataVersionMustBe40,The following statement contains a magic number: Assert.AreEqual(400' request.ResponseStatusCode);
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ShouldThrowIfPropertyAccessSourceNotSingleValueIfRequired,The following statement contains a magic number: TestUtil.RunCombinations(                      new Type[] {                          typeof(AstoriaUnitTests.Stubs.CustomRowBasedOpenTypesContext)'                          typeof(AstoriaUnitTests.Stubs.CustomRowBasedContext)'                          typeof(AstoriaUnitTests.Stubs.CustomDataContext)}'                      new string[] {                          "/Customers?$filter=cast(BestFriend' 'AstoriaUnitTests.Stubs.CustomerWithBirthday')/Orders/ID gt 0"'                          "/Customers?$filter=cast('AstoriaUnitTests.Stubs.CustomerWithBirthday')/Orders/ID gt 0"'                          "/Customers?$orderby=Orders/ID"'                          "/Customers?$orderby=cast('AstoriaUnitTests.Stubs.CustomerWithBirthday')/Orders/ID"'                          "/Customers?$filter=Orders/ID gt 0"}'                      (providerType' requestUri) =>                      {                          using (TestWebRequest request = TestWebRequest.CreateForInProcess())                          {                              request.DataServiceType = providerType;                              request.RequestUriString = requestUri;                              Exception exception = TestUtil.RunCatching(request.SendRequest);                              Assert.IsNotNull(exception);                              Assert.AreEqual("4.0;"' request.ResponseVersion);                              int errorLocation = requestUri.IndexOf("ID") - requestUri.IndexOf('=') - 1;                              Assert.IsInstanceOfType(exception.InnerException' typeof(DataServiceException));                              Assert.AreEqual(400' ((DataServiceException)(exception.InnerException)).StatusCode);                                Assert.AreEqual(ODataLibResourceUtil.GetString("MetadataBinder_PropertyAccessSourceNotSingleValue"' "ID"' errorLocation)' exception.InnerException.Message);                          }                      });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SpaceInPropertyNameShouldNotThrowDuringEntitySerialization,The following statement contains a magic number: DSPResource resource1 = new DSPResource(myType' new[] { new KeyValuePair<string' object>("ID"' 111)' new KeyValuePair<string' object>("Property Name With Space"' "Property Value") });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ResourceAssociationSetEndShouldNotScanResourceTypeProperties,The following statement contains a magic number: TestUtil.RunCombinations(UnitTestsUtil.BooleanValues' UnitTestsUtil.BooleanValues'                      (includeRelationshipLinksInResponse' getMethod) =>                      {                          DSPMetadata metadata = new DSPMetadata("TestContainer"' "TestNamespace");                            bool loadPropertiesDeclaredOnOrderCalled = false;                          bool loadPropertiesDeclaredOnCustomerCalled = false;                          bool loadPropertiesDeclaredOnOrderDetailCalled = false;                            p.ResourceType customerType = metadata.AddEntityType("Customer"' null' null' false);                          p.ResourceType orderType = metadata.AddEntityType("Order"' null' null' false);                          p.ResourceType orderDetailType = metadata.AddEntityType("OrderDetail"' null' null' false);                            p.ResourceSet customerSet = metadata.AddResourceSet("Customers"' customerType);                          p.ResourceSet orderSet = metadata.AddResourceSet("Orders"' orderType);                          p.ResourceSet orderDetailSet = metadata.AddResourceSet("OrderDetails"' orderDetailType);                            ((DSPResourceType)orderType).LoadPropertiesDeclaredOnThisTypeDelegate = () =>                          {                              loadPropertiesDeclaredOnOrderCalled = true;                              p.ResourceProperty id = new p.ResourceProperty("ID"' p.ResourcePropertyKind.Key | p.ResourcePropertyKind.Primitive' p.ResourceType.GetPrimitiveResourceType(typeof(int)))                              {                                  CanReflectOnInstanceTypeProperty = false'                                  CustomState = new ResourcePropertyAnnotation()                              };                                p.ResourceProperty orderDetails = new p.ResourceProperty("OrderDetails"' p.ResourcePropertyKind.ResourceSetReference' orderDetailType)                              {                                  CanReflectOnInstanceTypeProperty = false'                              };                                orderDetails.CustomState = new ResourcePropertyAnnotation()                              {                                  ResourceAssociationSet = () =>                                  {                                      return new p.ResourceAssociationSet("Order_OrderDetails"'                                          new p.ResourceAssociationSetEnd(orderSet' orderType' orderDetails)'                                          new p.ResourceAssociationSetEnd(orderDetailSet' orderDetailType' null));                                  }                              };                                return new[] { id' orderDetails };                          };                            ((DSPResourceType)orderDetailType).LoadPropertiesDeclaredOnThisTypeDelegate = () =>                          {                              loadPropertiesDeclaredOnOrderDetailCalled = true;                              return new[]                      {                          new p.ResourceProperty("ID"' p.ResourcePropertyKind.Key| p.ResourcePropertyKind.Primitive' p.ResourceType.GetPrimitiveResourceType(typeof(int)))                          {                              CanReflectOnInstanceTypeProperty = false                          }                      };                          };                            ((DSPResourceType)customerType).LoadPropertiesDeclaredOnThisTypeDelegate = () =>                          {                              loadPropertiesDeclaredOnCustomerCalled = true;                              p.ResourceProperty id = new p.ResourceProperty("ID"' p.ResourcePropertyKind.Key | p.ResourcePropertyKind.Primitive' p.ResourceType.GetPrimitiveResourceType(typeof(int)))                              {                                  CanReflectOnInstanceTypeProperty = false'                                  CustomState = new ResourcePropertyAnnotation()                              };                                p.ResourceProperty orders = new p.ResourceProperty("Orders"' p.ResourcePropertyKind.ResourceSetReference' orderType)                              {                                  CanReflectOnInstanceTypeProperty = false'                              };                                orders.CustomState = new ResourcePropertyAnnotation()                              {                                  ResourceAssociationSet = () =>                                  {                                      return new p.ResourceAssociationSet("Customer_Orders"'                                          new p.ResourceAssociationSetEnd(customerSet' customerType' orders)'                                          new p.ResourceAssociationSetEnd(orderSet' orderType' null));                                  }                              };                                return new[] { id' orders };                          };                            DSPResource order1 = new DSPResource(orderType' new[] { new KeyValuePair<string' object>("ID"' 111) });                          DSPResource customer1 = new DSPResource(customerType' new[] { new KeyValuePair<string' object>("ID"' 11)' new KeyValuePair<string' object>("Orders"' order1) });                          DSPContext context = new DSPContext();                          context.GetResourceSetEntities("Customers").Add(customer1);                          context.GetResourceSetEntities("Orders").Add(order1);                            DSPServiceDefinition service = new DSPServiceDefinition() { Metadata = metadata' Writable = true' CreateDataSource = m => context };                          service.ForceVerboseErrors = true;                          using (TestUtil.MetadataCacheCleaner())                          using (OpenWebDataServiceHelper.IncludeRelationshipLinksInResponse.Restore())                          using (TestWebRequest request = service.CreateForInProcessWcf())                          {                              OpenWebDataServiceHelper.IncludeRelationshipLinksInResponse.Value = includeRelationshipLinksInResponse;                              if (getMethod)                              {                                  request.HttpMethod = "GET";                                  request.RequestUriString = "/Customers(11)";                              }                              else                              {                                  request.HttpMethod = "POST";                                  request.RequestUriString = "/Customers";                                  request.SetRequestStreamAsText("{ ID : 21 }");                                  request.RequestContentType = UnitTestsUtil.JsonLightMimeType;                              }                                request.SendRequest();                              Assert.IsTrue(loadPropertiesDeclaredOnCustomerCalled);                              Assert.IsTrue(loadPropertiesDeclaredOnOrderCalled);                              Assert.IsFalse(loadPropertiesDeclaredOnOrderDetailCalled);                          }                      });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ResourceAssociationSetEndShouldNotScanResourceTypeProperties,The following statement contains a magic number: TestUtil.RunCombinations(UnitTestsUtil.BooleanValues' UnitTestsUtil.BooleanValues'                      (includeRelationshipLinksInResponse' getMethod) =>                      {                          DSPMetadata metadata = new DSPMetadata("TestContainer"' "TestNamespace");                            bool loadPropertiesDeclaredOnOrderCalled = false;                          bool loadPropertiesDeclaredOnCustomerCalled = false;                          bool loadPropertiesDeclaredOnOrderDetailCalled = false;                            p.ResourceType customerType = metadata.AddEntityType("Customer"' null' null' false);                          p.ResourceType orderType = metadata.AddEntityType("Order"' null' null' false);                          p.ResourceType orderDetailType = metadata.AddEntityType("OrderDetail"' null' null' false);                            p.ResourceSet customerSet = metadata.AddResourceSet("Customers"' customerType);                          p.ResourceSet orderSet = metadata.AddResourceSet("Orders"' orderType);                          p.ResourceSet orderDetailSet = metadata.AddResourceSet("OrderDetails"' orderDetailType);                            ((DSPResourceType)orderType).LoadPropertiesDeclaredOnThisTypeDelegate = () =>                          {                              loadPropertiesDeclaredOnOrderCalled = true;                              p.ResourceProperty id = new p.ResourceProperty("ID"' p.ResourcePropertyKind.Key | p.ResourcePropertyKind.Primitive' p.ResourceType.GetPrimitiveResourceType(typeof(int)))                              {                                  CanReflectOnInstanceTypeProperty = false'                                  CustomState = new ResourcePropertyAnnotation()                              };                                p.ResourceProperty orderDetails = new p.ResourceProperty("OrderDetails"' p.ResourcePropertyKind.ResourceSetReference' orderDetailType)                              {                                  CanReflectOnInstanceTypeProperty = false'                              };                                orderDetails.CustomState = new ResourcePropertyAnnotation()                              {                                  ResourceAssociationSet = () =>                                  {                                      return new p.ResourceAssociationSet("Order_OrderDetails"'                                          new p.ResourceAssociationSetEnd(orderSet' orderType' orderDetails)'                                          new p.ResourceAssociationSetEnd(orderDetailSet' orderDetailType' null));                                  }                              };                                return new[] { id' orderDetails };                          };                            ((DSPResourceType)orderDetailType).LoadPropertiesDeclaredOnThisTypeDelegate = () =>                          {                              loadPropertiesDeclaredOnOrderDetailCalled = true;                              return new[]                      {                          new p.ResourceProperty("ID"' p.ResourcePropertyKind.Key| p.ResourcePropertyKind.Primitive' p.ResourceType.GetPrimitiveResourceType(typeof(int)))                          {                              CanReflectOnInstanceTypeProperty = false                          }                      };                          };                            ((DSPResourceType)customerType).LoadPropertiesDeclaredOnThisTypeDelegate = () =>                          {                              loadPropertiesDeclaredOnCustomerCalled = true;                              p.ResourceProperty id = new p.ResourceProperty("ID"' p.ResourcePropertyKind.Key | p.ResourcePropertyKind.Primitive' p.ResourceType.GetPrimitiveResourceType(typeof(int)))                              {                                  CanReflectOnInstanceTypeProperty = false'                                  CustomState = new ResourcePropertyAnnotation()                              };                                p.ResourceProperty orders = new p.ResourceProperty("Orders"' p.ResourcePropertyKind.ResourceSetReference' orderType)                              {                                  CanReflectOnInstanceTypeProperty = false'                              };                                orders.CustomState = new ResourcePropertyAnnotation()                              {                                  ResourceAssociationSet = () =>                                  {                                      return new p.ResourceAssociationSet("Customer_Orders"'                                          new p.ResourceAssociationSetEnd(customerSet' customerType' orders)'                                          new p.ResourceAssociationSetEnd(orderSet' orderType' null));                                  }                              };                                return new[] { id' orders };                          };                            DSPResource order1 = new DSPResource(orderType' new[] { new KeyValuePair<string' object>("ID"' 111) });                          DSPResource customer1 = new DSPResource(customerType' new[] { new KeyValuePair<string' object>("ID"' 11)' new KeyValuePair<string' object>("Orders"' order1) });                          DSPContext context = new DSPContext();                          context.GetResourceSetEntities("Customers").Add(customer1);                          context.GetResourceSetEntities("Orders").Add(order1);                            DSPServiceDefinition service = new DSPServiceDefinition() { Metadata = metadata' Writable = true' CreateDataSource = m => context };                          service.ForceVerboseErrors = true;                          using (TestUtil.MetadataCacheCleaner())                          using (OpenWebDataServiceHelper.IncludeRelationshipLinksInResponse.Restore())                          using (TestWebRequest request = service.CreateForInProcessWcf())                          {                              OpenWebDataServiceHelper.IncludeRelationshipLinksInResponse.Value = includeRelationshipLinksInResponse;                              if (getMethod)                              {                                  request.HttpMethod = "GET";                                  request.RequestUriString = "/Customers(11)";                              }                              else                              {                                  request.HttpMethod = "POST";                                  request.RequestUriString = "/Customers";                                  request.SetRequestStreamAsText("{ ID : 21 }");                                  request.RequestContentType = UnitTestsUtil.JsonLightMimeType;                              }                                request.SendRequest();                              Assert.IsTrue(loadPropertiesDeclaredOnCustomerCalled);                              Assert.IsTrue(loadPropertiesDeclaredOnOrderCalled);                              Assert.IsFalse(loadPropertiesDeclaredOnOrderDetailCalled);                          }                      });
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UpdateOperationShouldFailIfEtagIsIncorrect,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(atomPayload' uri' contextType' UnitTestsUtil.AtomFormat' "PATCH"' 412' headerValues.ToArray());
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UpdateOperationShouldFailIfEtagIsIncorrect,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(atomPayload' uri' contextType' UnitTestsUtil.AtomFormat' "PUT"' 412' headerValues.ToArray());
Magic Number,AstoriaUnitTests.Tests,RegressionTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,UpdateOperationShouldFailIfEtagIsIncorrect,The following statement contains a magic number: UnitTestsUtil.VerifyInvalidRequest(atomPayload' uri' contextType' UnitTestsUtil.AtomFormat' "DELETE"' 412' headerValues.ToArray());
Magic Number,AstoriaUnitTests.Tests,TestService,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,FilterOrders,The following statement contains a magic number: return o => o.ID < 100;
Magic Number,AstoriaUnitTests.Tests,QueryInterceptorDataServiceException,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,FilterOrders,The following statement contains a magic number: throw (new DataServiceException(403' "My DataServiceException"));
Magic Number,AstoriaUnitTests.Tests,TestDataContext2,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,PopulateMetadata,The following statement contains a magic number: List<p.ResourceType> types = new List<p.ResourceType>(2);
Magic Number,AstoriaUnitTests.Tests,TestService20,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,GetCustomers,The following statement contains a magic number: custs.Add(new ocs.Hidden.Customer()                      {                          Name = "Customer 0"'                          ID = 0'                          EditTimeStamp = new byte[] { 1' 3 }                      });
Magic Number,AstoriaUnitTests.Tests,TestDataService24,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,QueryOrders,The following statement contains a magic number: throw new DataServiceException(500' "QueryInterceptor shouldn't be called!");
Magic Number,AstoriaUnitTests.Tests,TestService30,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ItemInterceptor,The following statement contains a magic number: return t => (t.ID % 2 > 0 && t.ID < 5) || t.ID == 1;
Magic Number,AstoriaUnitTests.Tests,TestService30,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,ItemInterceptor,The following statement contains a magic number: return t => (t.ID % 2 > 0 && t.ID < 5) || t.ID == 1;
Magic Number,AstoriaUnitTests.Tests,TestContext32,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestContext32,The following statement contains a magic number: data.Add(new TestType32() { ID = 2' Name = "Customer 1"' BoolValue = false' NullableBoolValue = true' GuidValue = System.Guid.NewGuid()' NullableGuidValue = System.Guid.NewGuid() });
Magic Number,AstoriaUnitTests.Tests,TestContext32,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestContext32,The following statement contains a magic number: data.Add(new TestType32() { ID = 3' Name = "Customer 2"' BoolValue = true' NullableBoolValue = false' GuidValue = System.Guid.NewGuid()' NullableGuidValue = null });
Magic Number,AstoriaUnitTests.Tests,TestContext32,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestContext32,The following statement contains a magic number: data.Add(new TestType32() { ID = 4' Name = "Customer 3"' BoolValue = false' NullableBoolValue = null' GuidValue = System.Guid.NewGuid()' NullableGuidValue = System.Guid.NewGuid() });
Magic Number,AstoriaUnitTests.Tests,TestContext32,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestContext32,The following statement contains a magic number: data.Add(new TestType32() { ID = 5' Name = "Customer 4"' BoolValue = true' NullableBoolValue = true' GuidValue = System.Guid.NewGuid()' NullableGuidValue = null });
Magic Number,AstoriaUnitTests.Tests,TestDataService34,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,InitializeService,The following statement contains a magic number: configuration.SetEntitySetPageSize("SomeEntities"' 3);
Magic Number,AstoriaUnitTests.Tests,TestDataContext34,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,TestDataContext34,The following statement contains a magic number: i < 10
Missing Default,AstoriaUnitTests.Tests,FloatPointETagContext,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,SetValue,The following switch statement is missing a default case: switch (propertyName)                      {                          case "ID": theEntity.ID = (int)propertyValue; break;                          case "ETagSingle1": theEntity.ETagSingle1 = (Single)propertyValue; break;                          case "ETagSingle2": theEntity.ETagSingle2 = (Single)propertyValue; break;                          case "ETagDouble1": theEntity.ETagDouble1 = (Double)propertyValue; break;                          case "ETagDouble2": theEntity.ETagDouble2 = (Double)propertyValue; break;                      }
Missing Default,AstoriaUnitTests.Tests,FloatPointETagContext,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataServices\UnitTests\RegressionUnitTests\Tests\RegressionTest.cs,GetValue,The following switch statement is missing a default case: switch (propertyName)                      {                          case "ID": return theEntity.ID;                          case "ETagSingle1": return theEntity.ETagSingle1;                          case "ETagSingle2": return theEntity.ETagSingle2;                          case "ETagDouble1": return theEntity.ETagDouble1;                          case "ETagDouble2": return theEntity.ETagDouble2;                      }
