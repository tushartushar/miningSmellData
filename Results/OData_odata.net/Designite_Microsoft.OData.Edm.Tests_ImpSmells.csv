Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The method has 724 lines of code.
Long Method,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The method has 365 lines of code.
Long Method,Microsoft.OData.Edm.Tests.Vocabularies,AuthorizationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\AuthorizationVocabularyTests.cs,TestAuthorizationVocabularyModel,The method has 128 lines of code.
Long Method,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The method has 101 lines of code.
Complex Method,Microsoft.OData.Edm.Tests,CsdlBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\CsdlBuilder.cs,Schema,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.OData.Edm.Tests,CsdlBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\CsdlBuilder.cs,EntityContainer,The method has 6 parameters. Parameters: name' extends' entitySets' singletons' operationImports' location
Long Parameter List,Microsoft.OData.Edm.Tests,CsdlBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\CsdlBuilder.cs,EntityType,The method has 9 parameters. Parameters: name' baseName' isAbstract' isOpen' hasStream' csdlKey' properties' navProps' location
Long Parameter List,Microsoft.OData.Edm.Tests,CsdlBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\CsdlBuilder.cs,Function,The method has 7 parameters. Parameters: name' parameters' typeReference' isBound' entitySetPath' isComposable' location
Long Parameter List,Microsoft.OData.Edm.Tests,CsdlBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\CsdlBuilder.cs,Action,The method has 6 parameters. Parameters: name' parameters' typeReference' isBound' entitySetPath' location
Long Parameter List,Microsoft.OData.Edm.Tests,CsdlBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\CsdlBuilder.cs,Schema,The method has 11 parameters. Parameters: namespaceName' alias' version' csdlStructuredTypes' csdlEnumTypes' csdlOperations' csdlTerms' csdlEntityContainers' csdlAnnotations' csdlTypeDefinitions' location
Long Parameter List,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateError,The method has 5 parameters. Parameters: validationRule' model' item' expectedErrorCode' expectedError
Long Parameter List,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateErrorInList,The method has 5 parameters. Parameters: validationRule' model' item' expectedErrorCode' expectedError
Long Identifier,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingInvalidXmlWithMultipleEntityContainersShouldThrow,The length of the parameter EdmxwithMultipleEntityContainers is 32.
Long Identifier,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsNavigationPropertyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsNavigationPropertyTests.cs,,The length of the parameter semanticNavigationWithoutPartner is 32.
Long Identifier,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyIdenticalNamedFunctionImportsWithDifferentEntitySetPropertiesAreWritten,The length of the parameter functionImportWithUniqueEdmPath is 31.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmDecimalTypeReference,The length of the parameter decimalTypeWithPrecisionNotNull is 31.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ShortQualifiedNameForNonPrimitiveTypeShouldBeFullName,The length of the parameter stringOfExpectedShortQualifiedName is 34.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ShortQualifiedNameForNonPrimitiveTypeShouldBeFullName,The length of the parameter stringOfObservedShortQualifiedName is 34.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ShortQualifiedNameForCollectionNonPrimitiveTypeShouldBeNull,The length of the parameter stringOfObservedShortQualifiedName is 34.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ShortQualifiedNameForPrimitiveTypeShouldBeName,The length of the parameter stringOfExpectedShortQualifiedName is 34.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ShortQualifiedNameForPrimitiveTypeShouldBeName,The length of the parameter stringOfObservedShortQualifiedName is 34.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ShortQualifiedNameForCollectionPrimitiveTypeShouldBeNull,The length of the parameter stringOfObservedShortQualifiedName is 34.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,,The length of the parameter DefaultDerivedDefaultEntityType is 31.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,,The length of the parameter DefaultDerivedValidEntityTypeRef is 32.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,,The length of the parameter DefaultValidCollectionEntityType is 32.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,,The length of the parameter DefaultDerivedValidCollectionEntityType is 39.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,,The length of the parameter DefaultValidCollectionEntityTypeRef is 35.
Long Identifier,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,,The length of the parameter DefaultDerivedValidCollectionEntityTypeRef is 42.
Long Identifier,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,,The length of the parameter DefaultValidCollectionEntityType is 32.
Long Identifier,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,,The length of the parameter DefaultValidCollectionEntityType is 32.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,ParseDurationWithYearPartShouldThrowFormatException,The length of the statement  "            // The following values are valid xs:duration so they are successfully converted to TimeSpan if we use XmlConvert.ToTimeSpan alone " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,ParseDurationWithMonthPartShouldThrowFormatException,The length of the statement  "            // The following values are valid xs:duration so they are successfully converted to TimeSpan if we use XmlConvert.ToTimeSpan alone " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,ParseDurationWithYearAndMonthPartsShouldThrowFormatException,The length of the statement  "            // The following values are valid xs:duration so they are successfully converted to TimeSpan if we use XmlConvert.ToTimeSpan alone " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ReadNavigationPropertyPartnerTest,The length of the statement  "                                    "<NavigationProperty Name=\"OuterNavB\" Type=\"NS.EntityType1\" Nullable=\"false\" Partner=\"ComplexProp/InnerNav\" />" + " is 121.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ReadNavigationPropertyPartnerTest,The length of the statement  "            Assert.Equal("ComplexProp/InnerNav"' ((IEdmNavigationProperty)entityType2.FindProperty("OuterNavB")).GetPartnerPath().Path); " is 124.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ReadNavigationPropertyPartnerTest,The length of the statement  "            Assert.Equal("NS.EntityType3/OuterNavC"' ((IEdmNavigationProperty)entityType1.FindProperty("OuterNavB")).GetPartnerPath().Path); " is 128.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ReadNavigationPropertyPartnerTypeHierarchyTest,The length of the statement  "            Assert.Equal("NS.EntityTypeA3/A3Nav"' ((IEdmNavigationProperty)entityTypeB.FindProperty("BNav2")).GetPartnerPath().Path); " is 121.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingvalidXmlWithNavigationPropertyInComplex,The length of the statement  ""<?xml version=\"1.0\" encoding=\"utf-16\"?><edmx:Edmx Version=\"4.0\" xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\">" + " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingvalidXmlWithNavigationPropertyInComplex,The length of the statement  "                    "<NavigationPropertyBinding Path=\"WorkAddress/DefaultNs.WorkAddress/CountryOrRegion\" Target=\"CountriesOrRegions\" />" + " is 122.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingvalidXmlWithNavigationPropertyInComplex,The length of the statement  "            navigationTarget = people.FindNavigationTarget(countryOrRegion' new EdmPathExpression("WorkAddress/DefaultNs.WorkAddress/CountryOrRegion")); " is 140.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingXmlWithCollectionOfNavOnComplex,The length of the statement  "            string complexWithNav = "<?xml version=\"1.0\" encoding=\"utf-16\"?><edmx:Edmx Version=\"4.0\" xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\">" + " is 154.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingOptionalParametersShouldSucceed,The length of the statement  "            IEdmOptionalParameter optionalParam = function.Parameters.Where(p => p.Name == "optionalParam").FirstOrDefault() as IEdmOptionalParameter; " is 138.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingOptionalParametersShouldSucceed,The length of the statement  "            IEdmOptionalParameter optionalParamWithDefault = function.Parameters.Where(p => p.Name == "optionalParamWithDefault").FirstOrDefault() as IEdmOptionalParameter; " is 160.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingReturnTypeAnnotationShouldSucceed,The length of the statement  "            IEdmVocabularyAnnotation annotation = model.FindVocabularyAnnotations<IEdmVocabularyAnnotation>(returnType' termType).FirstOrDefault(); " is 135.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingReturnTypeAnnotationShouldSucceed,The length of the statement  "            Assert.Equal(new[] { "Edm.Int32"' "Edm.Boolean" }' collectConstant.Elements.Select(e => ((IEdmStringConstantExpression)e).Value)); " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingInvalidXmlWithMultipleEntityContainersShouldThrow,The length of the statement  "            string EdmxwithMultipleEntityContainers = @"<edmx:Edmx Version=""4.0"" xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx""> " is 127.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingTermPropertyWithEdmPathTypeWorks,The length of the statement  "            Assert.Same(EdmCoreModel.Instance.GetPathType(EdmPathTypeKind.PropertyPath)' property.Type.AsCollection().ElementType().Definition); " is 132.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingTermPropertyWithEdmPathTypeWorks,The length of the statement  "            Assert.Same(EdmCoreModel.Instance.GetPathType(EdmPathTypeKind.NavigationPropertyPath)' property.Type.AsCollection().ElementType().Definition); " is 142.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingPropertyWithEdmPathTypeWorksButValidationFailed,The length of the statement  "            Assert.Same(EdmCoreModel.Instance.GetPathType(EdmPathTypeKind.PropertyPath)' property.Type.AsCollection().ElementType().Definition); " is 132.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingEnumMemberWithAnnotationsWorks,The length of the statement  "            Assert.True(model.Validate(out errors)' String.Format("Errors in validating model. {0}"' String.Concat(errors.Select(e => e.ErrorMessage)))); " is 141.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingEnumMemberWithAnnotationsWorks,The length of the statement  "            string redAnnotation = GetStringAnnotation(model' red' CoreVocabularyModel.LongDescriptionTerm' EdmVocabularyAnnotationSerializationLocation.Inline); " is 149.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingEnumMemberWithAnnotationsWorks,The length of the statement  "            string blueAnnotation = GetStringAnnotation(model' blue' CoreVocabularyModel.LongDescriptionTerm' EdmVocabularyAnnotationSerializationLocation.OutOfLine); " is 154.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,GetStringAnnotation,The length of the statement  "            IEdmVocabularyAnnotation annotation = model.FindVocabularyAnnotations<IEdmVocabularyAnnotation>(target' term).FirstOrDefault(); " is 127.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingDerivedTypeWithDuplicatedAnnotationsWorksButValidationFailed,The length of the statement  "            var descriptions = model.FindVocabularyAnnotations<IEdmVocabularyAnnotation>(edmType' CoreVocabularyModel.DescriptionTerm); " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingDerivedTypeWithDuplicatedAnnotationsWorksButValidationFailed,The length of the statement  "            Assert.Equal("The annotated element 'NS.Derived' has multiple annotations with the term 'Org.OData.Core.V1.Description' and the qualifier ''."' error.ErrorMessage); " is 164.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ValidateEdmxVersions,The length of the statement  "            string xml = "<?xml version=\"1.0\" encoding=\"utf-16\"?><edmx:Edmx Version=\"" + odataVersion + "\" xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\"><edmx:DataServices /></edmx:Edmx>"; " is 192.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,VerifyAnnotationComputedConcurrency,The length of the statement  "            Assert.Equal(@"<?xml version=""1.0"" encoding=""utf-16""?><edmx:Edmx Version=""4.0"" xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx""><edmx:DataServices><Schema Namespace=""NS1"" xmlns=""http://docs.oasis-open.org/odata/ns/edm""><EntityType Name=""Product""><Key><PropertyRef Name=""Id"" /></Key><Property Name=""Id"" Type=""Edm.Int32"" Nullable=""false""><Annotation Term=""Org.OData.Core.V1.Computed"" Bool=""true"" /></Property><Property Name=""Name"" Type=""Edm.String"" Nullable=""false"" /><Property Name=""UpdatedTime"" Type=""Edm.Date"" Nullable=""false""><Annotation Term=""Org.OData.Core.V1.Computed"" Bool=""true"" /></Property></EntityType><EntityContainer Name=""Container""><EntitySet Name=""Products"" EntityType=""NS1.Product""><Annotation Term=""Org.OData.Core.V1.OptimisticConcurrency""><Collection><PropertyPath>Id</PropertyPath><PropertyPath>UpdatedTime</PropertyPath></Collection></Annotation></EntitySet></EntityContainer></Schema></edmx:DataServices></edmx:Edmx>"' csdlStr); " is 1004.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,WriteNavigationPropertyInComplexType,The length of the statement  "            person.AddStructuralProperty("Addresses"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmComplexTypeReference(complex' false)))); " is 142.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,WriteNavigationPropertyInComplexType,The length of the statement  "            people.AddNavigationTarget(navP2' countriesOrRegions' new EdmPathExpression("WorkAddress/DefaultNs.WorkAddress/CountryOrRegion")); " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,WriteNavigationPropertyInComplexType,The length of the statement  "                "<?xml version=\"1.0\" encoding=\"utf-16\"?><edmx:Edmx Version=\"4.0\" xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\">" + " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,WriteCollectionOfNavigationOnComplex,The length of the statement  "            string expected = "<?xml version=\"1.0\" encoding=\"utf-16\"?><edmx:Edmx Version=\"4.0\" xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\">" + " is 148.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,SetNavigationPropertyPartnerTest,The length of the statement  "                                    "<NavigationProperty Name=\"OuterNavB\" Type=\"NS.EntityType1\" Nullable=\"false\" Partner=\"ComplexProp/InnerNav\" />" + " is 121.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,SetNavigationPropertyPartnerTypeHierarchyTest,The length of the statement  "            entityTypeA2.SetNavigationPropertyPartner(a1Nav' new EdmPathExpression("A1Nav")' bNav1' new EdmPathExpression("BNav1")); " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,SetNavigationPropertyPartnerTypeHierarchyTest,The length of the statement  "            entityTypeA2.SetNavigationPropertyPartner(a3Nav' new EdmPathExpression("NS.EntityTypeA3/A3Nav")' bNav2' new EdmPathExpression("BNav2")); " is 136.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteInLineOptionalParameters,The length of the statement  "            var stringTypeReference = new EdmStringTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.String)' false); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteInLineOptionalParameters,The length of the statement  "            var optionalParamWithDefault = new EdmOptionalParameter(function' "optionalParamWithDefault"' stringTypeReference' "Smith"); " is 124.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteOutofLineOptionalParameters,The length of the statement  "            var stringTypeReference = new EdmStringTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.String)' false); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteOutofLineOptionalParameters,The length of the statement  "            var optionalParamWithDefault = new EdmOptionalParameter(function' "optionalParamWithDefault"' stringTypeReference' "Smith"); " is 124.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteOutofLineOptionalParameters,The length of the statement  "            EdmVocabularyAnnotation annotation = new EdmVocabularyAnnotation(optionalParam' CoreVocabularyModel.OptionalParameterTerm' new EdmRecordExpression()); " is 150.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteOutofLineOptionalParameters,The length of the statement  "            IEdmComplexType optionalParameterType = CoreVocabularyModel.Instance.FindDeclaredType("Org.OData.Core.V1.OptionalParameterType") as IEdmComplexType; " is 148.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteOutofLineOptionalParameters,The length of the statement  "            annotation = new EdmVocabularyAnnotation(optionalParamWithDefault' CoreVocabularyModel.OptionalParameterTerm' optionalParameterRecord); " is 135.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteOutOfLineOptionalParametersOverwriteInLineOptionalParameter,The length of the statement  "            var stringTypeReference = new EdmStringTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.String)' false); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteOutOfLineOptionalParametersOverwriteInLineOptionalParameter,The length of the statement  "            var optionalParamWithDefault = new EdmOptionalParameter(function' "optionalParamWithDefault"' stringTypeReference' "InlineDefaultValue"); " is 137.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteOutOfLineOptionalParametersOverwriteInLineOptionalParameter,The length of the statement  "            IEdmComplexType optionalParameterType = CoreVocabularyModel.Instance.FindDeclaredType("Org.OData.Core.V1.OptionalParameterType") as IEdmComplexType; " is 148.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteOutOfLineOptionalParametersOverwriteInLineOptionalParameter,The length of the statement  "            EdmVocabularyAnnotation annotation = new EdmVocabularyAnnotation(optionalParamWithDefault' CoreVocabularyModel.OptionalParameterTerm' optionalParameterRecord); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,WriteReturnTypeAnnotation,The length of the statement  "            IEdmCollectionExpression collectionExpression = new EdmCollectionExpression(new EdmStringConstant("Edm.Int32")' new EdmStringConstant("Edm.Boolean")); " is 150.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteEdmPathTypeProperty,The length of the statement  "            complexType.AddStructuralProperty("DefaultSelect"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetPropertyPath(true)))); " is 151.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteEdmPathTypeProperty,The length of the statement  "            complexType.AddStructuralProperty("DefaultHidden"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetNavigationPropertyPath(false)))); " is 162.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,CanWriteEdmFunctioneWithCollectionAbstractTypeButValidationFailed,The length of the statement  "            EdmFunction function = new EdmFunction("NS"' "GetCustomer"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetPrimitiveType(true)))); " is 161.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,CanWriteEdmFunctioneWithCollectionAbstractTypeButValidationFailed,The length of the statement  "            function = new EdmFunction("NS"' "GetSomething"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetComplexType(false)))); " is 149.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteAnnotationForEnumMember,The length of the statement  "            EdmVocabularyAnnotation annotation = new EdmVocabularyAnnotation(stove' CoreVocabularyModel.LongDescriptionTerm' new EdmStringConstant("Stove Inline LongDescription")); " is 168.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteAnnotationForEnumMember,The length of the statement  "            annotation = new EdmVocabularyAnnotation(washer' CoreVocabularyModel.LongDescriptionTerm' new EdmStringConstant("Washer OutOfLine LongDescription")); " is 149.
Long Statement,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ValidateEdmxVersions,The length of the statement  "            string xml = "<?xml version=\"1.0\" encoding=\"utf-16\"?><edmx:Edmx Version=\"" + odataVersion + "\" xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\"><edmx:DataServices /></edmx:Edmx>"; " is 192.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsEntityContainerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsEntityContainerTests.cs,EnsureFunctionImportFunctionPropertyIsUnresolvedFunction,The length of the statement  "            var functionImport = new CsdlFunctionImport("GetStuff"' "FQ.NS.GetStuff"' null /*entitySet*/' true /*includeInServiceDocument*/' testLocation); " is 143.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsEntityContainerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsEntityContainerTests.cs,EnsureFunctionImportFunctionPropertyIsUnresolvedFunction,The length of the statement  "            var csdlEntityContainer = CsdlBuilder.EntityContainer("Container"' operationImports: new CsdlOperationImport[] {functionImport}); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsEntityContainerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsEntityContainerTests.cs,EnsureFunctionImportFunctionPropertyIsUnresolvedFunction,The length of the statement  "            var semanticSchema = new CsdlSemanticsSchema(new CsdlSemanticsModel(csdlModel' new EdmDirectValueAnnotationsManager()' Enumerable.Empty<IEdmModel>())' schema); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsEntityContainerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsEntityContainerTests.cs,EnsureActionImportActionPropertyIsUnresolvedAction,The length of the statement  "            var csdlEntityContainer = CsdlBuilder.EntityContainer("Container"' operationImports: new CsdlOperationImport[] { actionImport }); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsEntityContainerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsEntityContainerTests.cs,EnsureActionImportActionPropertyIsUnresolvedAction,The length of the statement  "            var semanticSchema = new CsdlSemanticsSchema(new CsdlSemanticsModel(csdlModel' new EdmDirectValueAnnotationsManager()' Enumerable.Empty<IEdmModel>())' schema); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsEntitySetTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsEntitySetTests.cs,FindNavigationTargetShouldReturnUnresolvedEntitySetIfEntitySetIsNotFound,The length of the statement  "            var testSubject = new CsdlSemanticsEntitySet(this.semanticContainer' new CsdlEntitySet("Fake"' "FQ.NS.EntityType"' new[] { nonExistentBinding }' null)); " is 152.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsEntitySetTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsEntitySetTests.cs,FindNavigationTargetShouldReturnUnresolvedEntitySetIfEntitySetIsNotFound,The length of the statement  "            Assert.Contains(result.Errors()' e => e.ErrorLocation == nonExistentBinding.Location && e.ErrorCode == EdmErrorCode.BadUnresolvedEntitySet); " is 140.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsEntitySetTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsEntitySetTests.cs,FindNavigationTargetShouldReturnNullIfNavigationPropertyHasNoBinding,The length of the statement  "            Assert.True(testSubject.FindNavigationTarget(new CsdlSemanticsNavigationProperty(this.semanticEntityType' new CsdlNavigationProperty("Fake"' "FQ.NS.EntityType"' null' null' false' null' Enumerable.Empty<CsdlReferentialConstraint>()' null))) is IEdmUnknownEntitySet); " is 266.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsEntitySetTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsEntitySetTests.cs,NavigationTargetsShouldStillContainMappingsThatAreCompletelyWrong,The length of the statement  "            Assert.Contains(result.Target.Errors()' e => e.ErrorLocation == location && e.ErrorCode == EdmErrorCode.BadUnresolvedEntitySet); " is 128.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsEntitySetTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsEntitySetTests.cs,NavigationTargetsShouldStillContainMappingsThatAreCompletelyWrong,The length of the statement  "            Assert.Contains(result.NavigationProperty.Errors()' e => e.ErrorLocation == location && e.ErrorCode == EdmErrorCode.BadUnresolvedNavigationPropertyPath); " is 153.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsEntitySetTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsEntitySetTests.cs,ParseSingleBinding,The length of the statement  "            var testSubject = new CsdlSemanticsEntitySet(this.semanticContainer' new CsdlEntitySet("Fake"' "FQ.NS.EntityType"' new[] { binding }' null)); " is 141.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsNavigationPropertyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsNavigationPropertyTests.cs,NavigationPartnerShouldWorkIfExplicitlySpecified,The length of the statement  "            Assert.Equal("Reference"' this.collectionProperty.PartnerPath.Path); // ensure that the test configuration is unchanged. " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsNavigationPropertyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsNavigationPropertyTests.cs,ParseSingleConstraint,The length of the statement  "            var testSubject = new CsdlSemanticsNavigationProperty(this.semanticEntityType' new CsdlNavigationProperty("Fake"' "Fake.Fake"' false' "Fake"' false' null' new[] { constraint }' null)); " is 184.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsNavigationPropertyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsNavigationPropertyTests.cs,ParseAndGetPartner,The length of the statement  "            var testSubject = new CsdlSemanticsNavigationProperty(this.semanticEntityType' new CsdlNavigationProperty("Fake"' targetTypeName' false' partnerName' false' null' Enumerable.Empty<CsdlReferentialConstraint>()' null)); " is 217.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsNavigationPropertyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsNavigationPropertyTests.cs,ParseNavigation,The length of the statement  "            return new CsdlSemanticsNavigationProperty(this.semanticEntityType' new CsdlNavigationProperty("Fake"' typeName' nullable' null' false' null' Enumerable.Empty<CsdlReferentialConstraint>()' null)); " is 196.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsOperationImportTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsOperationImportTests.cs,CsdlSemanticsFunctionImportPropertiesShouldBeInitializedCorrectly,The length of the statement  "            var functionImport = new CsdlFunctionImport("GetStuff"' "FQ.NS.GetStuff"' null /*entitySet*/' true /*includeInServiceDocument*/' testLocation); " is 143.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsOperationImportTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsOperationImportTests.cs,CsdlSemanticsFunctionImportPropertiesShouldBeInitializedCorrectly,The length of the statement  "            var semanticActionImport = new CsdlSemanticsFunctionImport(csdlSemanticEntityContainer' functionImport' semanticFunction); " is 122.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsOperationImportTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsOperationImportTests.cs,CreateCsdlSemanticsSchema,The length of the statement  "            var csdlEntityType = new CsdlEntityType("EntityType"' null' false' false' false' null' new Collection<CsdlProperty>()' new System.Collections.Generic.List<CsdlNavigationProperty>()' null); " is 188.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsOperationImportTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsOperationImportTests.cs,CreateCsdlSemanticsSchema,The length of the statement  "            var schema = CsdlBuilder.Schema("FQ.NS"' csdlOperations: operations' csdlEntityContainers: new CsdlEntityContainer[] { csdlEntityContainer }' csdlStructuredTypes: new CsdlStructuredType[] { csdlEntityType }); " is 208.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsOperationImportTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsOperationImportTests.cs,CreateCsdlSemanticsSchema,The length of the statement  "            var semanticSchema = new CsdlSemanticsSchema(new CsdlSemanticsModel(csdlModel' new EdmDirectValueAnnotationsManager()' Enumerable.Empty<IEdmModel>())' schema); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsOperationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsOperationTests.cs,BoundCsdlSemanticsOperationPropertiesShouldBeCorrect,The length of the statement  "                new CsdlOperationParameter[] { new CsdlOperationParameter("entity"' new CsdlNamedTypeReference("FQ.NS.EntityType"' false' testLocation)' testLocation) }'  " is 153.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsTypeDefinitionDefinitionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsTypeDefinitionDefinitionTests.cs,CsdlSemanticsTypeDefinitionDefinitionUnitTest,The length of the statement  "            CsdlSemanticsTypeDefinitionDefinition typeDefinitionDefinition = new CsdlSemanticsTypeDefinitionDefinition(null' typeDefinition); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,BoundOperationShouldWriteIsBoundEqualTrueAttribute,The length of the statement  "            EdmAction action = new EdmAction("Default.Namespace"' "Checkout"' null /*returnType*/' true /*isBound*/' null /*entitySetPath*/); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,NonBoundOperationShouldNotWriteIsBoundAttribute,The length of the statement  "            EdmFunction function = new EdmFunction("Default.Namespace"' "Checkout"' EdmCoreModel.Instance.GetString(true) /*returnType*/' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 193.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,BoundOperationWithEntitySetPathShouldWriteEntitySetPathAttributeWithCorrectValue,The length of the statement  "            EdmAction action = new EdmAction("Default.Namespace"' "Checkout"' null /*returnType*/' true /*isBound*/' new EdmPathExpression("Customer"' "Orders") /*entitySetPath*/); " is 168.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,BoundOperationWithEntitySetPathShouldWriteEntitySetPathAttributeWithCorrectValue,The length of the statement  "            this.TestWriteActionElementHeaderMethod(action' @"<Action Name=""Checkout"" IsBound=""true"" EntitySetPath=""Customer/Orders"""); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,ComposableFunctionShouldWriteIsComposableEqualTrue,The length of the statement  "            EdmFunction function = new EdmFunction("Default.Namespace"' "Checkout"' EdmCoreModel.Instance.GetString(true) /*returnType*/' false /*isBound*/' null /*entitySetPath*/' true /*isComposable*/); " is 192.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,ValidateEntitySetAtttributeCorrectlyWritesOutEntitySet,The length of the statement  "            EdmActionImport actionImport = new EdmActionImport(defaultContainer' "Checkout"' defaultCheckoutAction' new EdmPathExpression("Customers")); " is 140.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,ValidateEntitySetAtttributeCorrectlyWritesOutEntitySet,The length of the statement  "            TestWriteActionImportElementHeaderMethod(actionImport' @"<ActionImport Name=""Checkout"" Action=""Default.NameSpace2.CheckOut"" EntitySet=""Customers"""); " is 154.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,ValidateEntitySetAtttributeCorrectlyWritesEntitySetPath,The length of the statement  "            EdmFunctionImport functionImport = new EdmFunctionImport(defaultContainer' "GetStuff"' defaultGetStuffFunction' new EdmPathExpression("Customers"' "Orders")' false); " is 165.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,ValidateEntitySetAtttributeCorrectlyWritesEntitySetPath,The length of the statement  "            TestWriteFunctionImportElementHeaderMethod(functionImport' @"<FunctionImport Name=""GetStuff"" Function=""Default.NameSpace2.GetStuff"" EntitySet=""Customers/Orders"""); " is 169.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,ValidateIncorrectEdmExpressionThrows,The length of the statement  "            EdmActionImport actionImport = new EdmActionImport(defaultContainer' "Checkout"' defaultCheckoutAction' new EdmIntegerConstant(EdmCoreModel.Instance.GetInt32(true)' 1)); " is 169.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,ValidateIncorrectEdmExpressionThrows,The length of the statement  "            Assert.Equal(Strings.EdmModel_Validator_Semantic_OperationImportEntitySetExpressionIsInvalid(actionImport.Name)' exception.Message); " is 132.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,ValidateCorrectActionImportNameAndActionAttributeValueWrittenCorrectly,The length of the statement  "            TestWriteActionImportElementHeaderMethod(actionImport' @"<ActionImport Name=""Checkout"" Action=""Default.NameSpace2.CheckOut"""); " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,ValidateCorrectFunctionNameAndFunctionAttributeValueWrittenCorrectly,The length of the statement  "            EdmFunctionImport functionImport = new EdmFunctionImport(defaultContainer' "GetStuff"' defaultGetStuffFunction' new EdmPathExpression("Customers"' "Orders")' false); " is 165.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,ValidateCorrectFunctionNameAndFunctionAttributeValueWrittenCorrectly,The length of the statement  "            TestWriteFunctionImportElementHeaderMethod(functionImport' @"<FunctionImport Name=""GetStuff"" Action=""Default.NameSpace2.GetStuff"" EntitySet=""Customers/Orders"""); " is 167.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,ValidateFunctionIncludeInServiceDocumentWrittenAsTrue,The length of the statement  "            EdmFunctionImport functionImport = new EdmFunctionImport(defaultContainer' "GetStuff"' defaultGetStuffFunction' new EdmPathExpression("Customers"' "Orders")' true); " is 164.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,ValidateFunctionIncludeInServiceDocumentWrittenAsTrue,The length of the statement  "            TestWriteFunctionImportElementHeaderMethod(functionImport' @"<FunctionImport Name=""GetStuff"" Action=""Default.NameSpace2.GetStuff"" EntitySet=""Customers/Orders"" IncludeInServiceDocument=""true"""); " is 201.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyPrimitiveCollectionReturnTypeDefinedInChildReturnTypeElement,The length of the statement  "            var action = new EdmAction("Default.Namespace"' "Checkout"' EdmCoreModel.GetCollection(EdmCoreModel.Instance.GetString(true))); " is 127.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyNullableIsWrittenInChildReturnTypeElementForCollectionElementType,The length of the statement  "            var action = new EdmAction("Default.Namespace"' "Checkout"' EdmCoreModel.GetCollection(EdmCoreModel.Instance.GetString(isUnbounded: false' maxLength: 10' isUnicode: false' isNullable: false))); " is 193.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyNullableIsWrittenInChildReturnTypeElementForCollectionElementType,The length of the statement  "                @"<Action Name=""Checkout""><ReturnType Type=""Collection(Edm.String)"" Nullable=""false"" MaxLength=""10"" Unicode=""false"" /></Action>"); " is 140.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,FunctionShouldWriteOutCorrectly,The length of the statement  "            var function = new EdmFunction("Default.Namespace"' "Checkout"' EdmCoreModel.GetCollection(EdmCoreModel.Instance.GetString(true))); " is 131.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedActionImportsWithSameEntitySetOnlyWrittenOnce,The length of the statement  "            var actionImport = new EdmActionImport(defaultContainer' "Checkout"' defaultCheckoutAction' new EdmPathExpression("Set")); " is 122.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedActionImportsWithSameEntitySetOnlyWrittenOnce,The length of the statement  "            var actionImport2 = new EdmActionImport(defaultContainer' "Checkout"' defaultCheckoutAction' new EdmPathExpression("Set")); " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedActionImportsWithSameEdmPathOnlyWrittenOnce,The length of the statement  "            var actionImport = new EdmActionImport(defaultContainer' "Checkout"' defaultCheckoutAction' new EdmPathExpression("path1"' "path2")); " is 133.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedActionImportsWithSameEdmPathOnlyWrittenOnce,The length of the statement  "            var actionImport2 = new EdmActionImport(defaultContainer' "Checkout"' defaultCheckoutAction' new EdmPathExpression("path1"' "path2")); " is 134.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyIdenticalNamedActionImportsWithDifferentEntitySetPropertiesAreWritten,The length of the statement  "            var actionImportOnSet = new EdmActionImport(defaultContainer' "Checkout"' defaultCheckoutAction' new EdmPathExpression("Set")); " is 127.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyIdenticalNamedActionImportsWithDifferentEntitySetPropertiesAreWritten,The length of the statement  "            var actionImportOnSet2 = new EdmActionImport(defaultContainer' "Checkout"' defaultCheckoutAction' new EdmPathExpression("Set2")); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyIdenticalNamedActionImportsWithDifferentEntitySetPropertiesAreWritten,The length of the statement  "            var actionImportWithUniqueEdmPath = new EdmActionImport(defaultContainer' "Checkout"' defaultCheckoutAction' new EdmPathExpression("path1"' "path2")); " is 150.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyIdenticalNamedActionImportsWithDifferentEntitySetPropertiesAreWritten,The length of the statement  "                    visitor.VisitEntityContainerElements(new IEdmEntityContainerElement[] { actionImportOnSet' actionImportOnSet2' actionImportWithNoEntitySet' actionImportWithUniqueEdmPath }); " is 173.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyIdenticalNamedActionImportsWithDifferentEntitySetPropertiesAreWritten,The length of the statement  "                @"<ActionImport Name=""Checkout"" Action=""Default.NameSpace2.CheckOut"" EntitySet=""Set"" /><ActionImport Name=""Checkout"" Action=""Default.NameSpace2.CheckOut"" EntitySet=""Set2"" /><ActionImport Name=""Checkout"" Action=""Default.NameSpace2.CheckOut"" /><ActionImport Name=""Checkout"" Action=""Default.NameSpace2.CheckOut"" EntitySet=""path1/path2"" />"); " is 360.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedFunctionImportsWithoutEntitySetValueOnlyWrittenOnce,The length of the statement  "                (visitor) => visitor.VisitEntityContainerElements(new IEdmEntityContainerElement[] { functionImport' functionImport2 })' " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedFunctionImportsWithSameEntitySetValueOnlyWrittenOnce,The length of the statement  "            var functionImport = new EdmFunctionImport(defaultContainer' "GetStuff"' defaultGetStuffFunction' new EdmPathExpression("Set")' true); " is 134.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedFunctionImportsWithSameEntitySetValueOnlyWrittenOnce,The length of the statement  "            var functionImport2 = new EdmFunctionImport(defaultContainer' "GetStuff"' defaultGetStuffFunction' new EdmPathExpression("Set")' true); " is 135.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedFunctionImportsWithSameEntitySetValueOnlyWrittenOnce,The length of the statement  "                (visitor) => visitor.VisitEntityContainerElements(new IEdmEntityContainerElement[] { functionImport' functionImport2 })' " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedFunctionImportsWithSameEntitySetValueOnlyWrittenOnce,The length of the statement  "                @"<FunctionImport Name=""GetStuff"" Function=""Default.NameSpace2.GetStuff"" EntitySet=""Set"" IncludeInServiceDocument=""true"" />"); " is 134.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedFunctionImportsWithSameEntitySetPathValueOnlyWrittenOnce,The length of the statement  "            var functionImport = new EdmFunctionImport(defaultContainer' "GetStuff"' defaultGetStuffFunction' new EdmPathExpression("path1"' "path2")' true); " is 145.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedFunctionImportsWithSameEntitySetPathValueOnlyWrittenOnce,The length of the statement  "            var functionImport2 = new EdmFunctionImport(defaultContainer' "GetStuff"' defaultGetStuffFunction' new EdmPathExpression("path1"' "path2")' true); " is 146.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedFunctionImportsWithSameEntitySetPathValueOnlyWrittenOnce,The length of the statement  "                (visitor) => visitor.VisitEntityContainerElements(new IEdmEntityContainerElement[] { functionImport' functionImport2 })' " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyTwoIdenticalNamedFunctionImportsWithSameEntitySetPathValueOnlyWrittenOnce,The length of the statement  "                @"<FunctionImport Name=""GetStuff"" Function=""Default.NameSpace2.GetStuff"" EntitySet=""path1/path2"" IncludeInServiceDocument=""true"" />"); " is 142.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyIdenticalNamedFunctionImportsWithDifferentEntitySetPropertiesAreWritten,The length of the statement  "            var functionImportOnSet = new EdmFunctionImport(defaultContainer' "Checkout"' defaultGetStuffFunction' new EdmPathExpression("Set")' false); " is 140.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyIdenticalNamedFunctionImportsWithDifferentEntitySetPropertiesAreWritten,The length of the statement  "            var functionImportOnSet2 = new EdmFunctionImport(defaultContainer' "Checkout"' defaultGetStuffFunction' new EdmPathExpression("Set2")' false); " is 142.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyIdenticalNamedFunctionImportsWithDifferentEntitySetPropertiesAreWritten,The length of the statement  "            var functionmportWithNoEntitySet = new EdmFunctionImport(defaultContainer' "Checkout"' defaultGetStuffFunction' null' false); " is 125.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyIdenticalNamedFunctionImportsWithDifferentEntitySetPropertiesAreWritten,The length of the statement  "            var functionImportWithUniqueEdmPath = new EdmFunctionImport(defaultContainer' "Checkout"' defaultGetStuffFunction' new EdmPathExpression("path1"' "path2")' false); " is 163.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyIdenticalNamedFunctionImportsWithDifferentEntitySetPropertiesAreWritten,The length of the statement  "                    visitor.VisitEntityContainerElements(new IEdmEntityContainerElement[] { functionImportOnSet' functionImportOnSet2' functionmportWithNoEntitySet' functionImportWithUniqueEdmPath }); " is 180.
Long Statement,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyIdenticalNamedFunctionImportsWithDifferentEntitySetPropertiesAreWritten,The length of the statement  "                @"<FunctionImport Name=""Checkout"" Function=""Default.NameSpace2.GetStuff"" EntitySet=""Set"" /><FunctionImport Name=""Checkout"" Function=""Default.NameSpace2.GetStuff"" EntitySet=""Set2"" /><FunctionImport Name=""Checkout"" Function=""Default.NameSpace2.GetStuff"" /><FunctionImport Name=""Checkout"" Function=""Default.NameSpace2.GetStuff"" EntitySet=""path1/path2"" />"); " is 376.
Long Statement,Microsoft.OData.Edm.Tests,EdmUtilTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\EdmUtilTests.cs,EntitySetShouldProduceCorrectFullyQualifiedName,The length of the statement  "            var entitySet = new EdmEntitySet(new EdmEntityContainer("d.s"' "container")' "entitySet"' new EdmEntityType("foo"' "type")); " is 124.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmStringTypeReference,The length of the statement  "            var stringTypeCopy = new EdmStringTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.String)' true); " is 123.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmStringTypeReference,The length of the statement  "            var stringTypeWithNullableFalse = new EdmStringTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.String)' false); " is 137.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmStringTypeReference,The length of the statement  "            var primitiveType = new EdmPrimitiveTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.String)' true); " is 125.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmDecimalTypeReference,The length of the statement  "            var decimalTypeWithPrecisionNull = new EdmDecimalTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.Decimal)' false' null' null); " is 152.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmDecimalTypeReference,The length of the statement  "            var decimalTypeWithPrecisionNotNull = new EdmDecimalTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.Decimal)' false' 1' null); " is 152.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmDecimalTypeReference,The length of the statement  "            var primitiveType = new EdmPrimitiveTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.Decimal)' true); " is 126.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmBinaryTypeReference,The length of the statement  "            var binaryTypeWithDefaultValue = new EdmBinaryTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.Binary)' true); " is 135.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmBinaryTypeReference,The length of the statement  "            var binaryType = new EdmBinaryTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.Binary)' true' false' null); " is 132.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmBinaryTypeReference,The length of the statement  "            var primitiveType = new EdmPrimitiveTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.Binary)' true); " is 125.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmTemporalTypeReference,The length of the statement  "            var duration = new EdmTemporalTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.Duration)' true); " is 121.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmTemporalTypeReference,The length of the statement  "            var offset = new EdmTemporalTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.DateTimeOffset)' true); " is 125.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmTemporalTypeReference,The length of the statement  "            var primitiveType = new EdmPrimitiveTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.Duration)' true); " is 127.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmSpatialTypeReference,The length of the statement  "            var geoCollection = new EdmSpatialTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.GeographyCollection)' true); " is 136.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmSpatialTypeReference,The length of the statement  "            var point = new EdmSpatialTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.GeographyPoint)' true); " is 123.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,EdmElementComparerTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\EdmElementComparerTests.cs,TestComparingEdmSpatialTypeReference,The length of the statement  "            var point2 = new EdmSpatialTypeReference(EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.GeographyPoint)' true); " is 124.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ShortQualifiedNameForPrimitiveTypeShouldBeName,The length of the statement  "                var stringOfObservedShortQualifiedName = EdmCoreModel.Instance.GetPrimitiveType(edmPrimitiveTypeKind).ShortQualifiedName(); " is 123.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,CollectionUnNamedStructuralType,The length of the statement  "            var fakeStructuredCollectionType = EdmCoreModel.GetCollection(new FakeEdmStructuredTypeReference(new FakeStructuredType(false' false' null))); " is 142.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,CollectionEntityTypeTypeReferenceFullNameTest,The length of the statement  "            var entityTypeCollection = EdmCoreModel.GetCollection(new EdmEntityTypeReference(new EdmEntityType("n"' "type")' false)); " is 121.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateCorrectNoEntitySetPathOnOperationImport,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' EdmCoreModel.Instance.GetString(false)' true /*isBound*/' null' false); " is 128.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateCorrectNoEntitySetPathOnOperationImport,The length of the statement  "            EdmFunctionImport functionImport = new EdmFunctionImport(new EdmEntityContainer("ds"' "d")' "GetStuff"' function' null' false); " is 127.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateCorrectNoEntitySetPathOnOperationImport,The length of the statement  "            var result = functionImport.TryGetRelativeEntitySetPath(model' out operationParameter' out navigationProperties' out errorsFound); " is 130.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateCorrectEntitySetPathOnOperationImport,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' EdmCoreModel.Instance.GetString(false)' true /*isBound*/' null' false); " is 128.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateCorrectEntitySetPathOnOperationImport,The length of the statement  "            EdmFunctionImport functionImport = new EdmFunctionImport(new EdmEntityContainer("ds"' "d")' "GetStuff"' function' new EdmPathExpression("param")' false); " is 153.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateCorrectEntitySetPathOnOperationImport,The length of the statement  "            var result = functionImport.TryGetRelativeEntitySetPath(model' out operationParameter' out navigationProperties' out errorsFound); " is 130.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,TryGetRelativeEntitySetWithNullEntitySetPathShouldReturnFalseAndHaveNoErrors,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' EdmCoreModel.Instance.GetString(false)' true /*isBound*/' null' false); " is 128.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,TryGetRelativeEntitySetWithNullEntitySetPathShouldReturnFalseAndHaveNoErrors,The length of the statement  "            var result = function.TryGetRelativeEntitySetPath(model' out operationParameter' out navigationProperties' out entityType' out errorsFound); " is 140.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,TryGetRelativeEntitySetWithJustBindingParameterShouldReturnTrueAndHaveNoErrors,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' DefaultValidEntityTypeRef' true /*isBound*/' new EdmPathExpression("param")' false); " is 141.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,TryGetRelativeEntitySetWithJustBindingParameterShouldReturnTrueAndHaveNoErrors,The length of the statement  "            var result = function.TryGetRelativeEntitySetPath(model' out operationParameter' out navigationProperties' out entityType' out errorsFound); " is 140.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,TryGetEntitySetWithBoundCsdlSemanticOperationParameterShouldReturnTrueAndHaveNoErrors,The length of the statement  "            var csdlEntityType = new CsdlEntityType("EntityType"' null' false' false' false' null' Enumerable.Empty<CsdlProperty>()' Enumerable.Empty<CsdlNavigationProperty>()' null); " is 171.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,TryGetEntitySetWithBoundCsdlSemanticOperationParameterShouldReturnTrueAndHaveNoErrors,The length of the statement  "            var semanticModel = new CsdlSemanticsModel(csdlModel' new EdmDirectValueAnnotationsManager()' Enumerable.Empty<IEdmModel>()); " is 125.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,TryGetEntitySetWithBoundCsdlSemanticOperationParameterShouldReturnTrueAndHaveNoErrors,The length of the statement  "                new CsdlOperationParameter[] { new CsdlOperationParameter("entity"' new CsdlNamedTypeReference("FQ.NS.EntityType"' false' testLocation)' testLocation) }' " is 153.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,TryGetEntitySetWithBoundCsdlSemanticOperationParameterShouldReturnTrueAndHaveNoErrors,The length of the statement  "            var result = semanticAction.TryGetRelativeEntitySetPath(semanticSchema.Model' out edmParameter' out navigationProperties' out entityType' out errors); " is 150.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,AnyNonBoundOperationWithAnEntitySetPathSpecifiedShouldFailWithError,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' EdmCoreModel.Instance.GetString(false)' false /*isBound*/' new EdmPathExpression("path1"' "path2")' false); " is 164.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,OperationWithEntitySetPathWithBindingParameterNotFoundShouldFailWithError,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' DefaultValidEntityTypeRef' true /*isBound*/' new EdmPathExpression("incorrectBindingParameterName"' "path2")' false); " is 174.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,OperationWithEntitySetPathWithBindingParameterNotFoundShouldFailWithError,The length of the statement  "                Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathWithFirstPathParameterNotMatchingFirstParameterName("EntitySetPath"' "incorrectBindingParameterName/path2"' "incorrectBindingParameterName"' "bindingParameter")); " is 218.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithZeroSegmentsShouldFailWithError,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' DefaultValidEntityTypeRef' true /*isBound*/' new EdmPathExpression()' false); " is 134.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithBindingParameterNotAnEntityShouldError,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' DefaultValidEntityTypeRef' true /*isBound*/' new EdmPathExpression("complexParam/People")' false); " is 155.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithBindingParameterNotAnEntityShouldError,The length of the statement  "                Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathWithNonEntityBindingParameter("EntitySetPath"' "complexParam/People"' "complexParam")); " is 143.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithCollectionBindingParameterNotAnEntityShouldError,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' DefaultValidEntityTypeRef' true /*isBound*/' new EdmPathExpression("collectionComplexParam/People")' false); " is 165.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithCollectionBindingParameterNotAnEntityShouldError,The length of the statement  "            function.AddParameter("collectionComplexParam"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmComplexTypeReference(complexType' false)))); " is 152.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithCollectionBindingParameterNotAnEntityShouldError,The length of the statement  "                Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathWithNonEntityBindingParameter("EntitySetPath"' "collectionComplexParam/People"' "collectionComplexParam")); " is 163.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithUnknownNavigationPropertyShouldError,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' DefaultValidEntityTypeRef' true /*isBound*/' new EdmPathExpression("bindingEntity/People")' false); " is 156.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithUnknownNavigationPropertyShouldError,The length of the statement  "                Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathUnknownNavigationProperty("EntitySetPath"' "bindingEntity/People"' "People")); " is 134.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithUnknownTypeCastSegmentShouldError,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' DefaultValidEntityTypeRef' true /*isBound*/' new EdmPathExpression("bindingEntity/unknown.EntityType")' false); " is 168.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithUnknownTypeCastSegmentShouldError,The length of the statement  "                Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathUnknownTypeCastSegment("EntitySetPath"' "bindingEntity/unknown.EntityType"' "unknown.EntityType")); " is 155.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithInvalidComplexTypeCaseForTypeCastSegmentShouldError,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmEntityTypeReference(entityType' true)' true /*isBound*/' new EdmPathExpression("bindingEntity/ds.s.complexType")' false); " is 185.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithInvalidComplexTypeCaseForTypeCastSegmentShouldError,The length of the statement  "                Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathTypeCastSegmentMustBeEntityType("EntitySetPath"' "bindingEntity/ds.s.complexType"' "ds.s.complexType")); " is 160.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithInvalidNonInheritedTypeCastSegmentShouldError,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmEntityTypeReference(entityType' true)' true /*isBound*/' new EdmPathExpression("bindingEntity/ds.s.otherEntityType")' false); " is 189.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmPathExpressionWithInvalidNonInheritedTypeCastSegmentShouldError,The length of the statement  "                Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathInvalidTypeCastSegment("EntitySetPath"' "bindingEntity/ds.s.otherEntityType"' entityType.FullName()' otherEntityType.FullName())); " is 186.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateTypeCaseWithDerivedPropertyEntitySetPathReturnsNoErrors,The length of the statement  "            ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 183.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateTypeCaseWithDerivedPropertyEntitySetPathReturnsNoErrors,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmEntityTypeReference(testModelContainer.T3' false)' true /*isBound*/' new EdmPathExpression("bindingEntity/Bunk.T1/P101")' false); " is 193.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathNavPropertyTypeCastNavPropertyReturnsNoErrors,The length of the statement  "            ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 183.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathNavPropertyTypeCastNavPropertyReturnsNoErrors,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmEntityTypeReference(testModelContainer.T3' false)' true /*isBound*/' new EdmPathExpression("bindingEntity/Nav1/Bunk.T1/P101")' false); " is 198.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathColNavPropertyTypeCastNavPropertyReturnsNoErrors,The length of the statement  "            ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 183.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathColNavPropertyTypeCastNavPropertyReturnsNoErrors,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmEntityTypeReference(testModelContainer.T3' false)' true /*isBound*/' new EdmPathExpression("bindingEntity/ColNav/Bunk.T1/P101")' false); " is 200.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathTypeCastColNavPropertyTypeCastNavPropertyReturnsNoErrors,The length of the statement  "            ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 183.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathTypeCastColNavPropertyTypeCastNavPropertyReturnsNoErrors,The length of the statement  "            var returnType = new EdmCollectionTypeReference(new EdmCollectionType(new EdmEntityTypeReference(testModelContainer.T3' false))); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathTypeCastColNavPropertyTypeCastNavPropertyReturnsNoErrors,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' returnType' true /*isBound*/' new EdmPathExpression("bindingEntity/Bunk.T1/ColP101")' false); " is 150.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathColNavPropertyNavPropertyReturnsNoErrors,The length of the statement  "            ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 183.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathColNavPropertyNavPropertyReturnsNoErrors,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmEntityTypeReference(testModelContainer.T3' false)' true /*isBound*/' new EdmPathExpression("bindingEntity/ColNav/RefNav")' false); " is 194.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathBindingParameterWithEntityCollectionAndValidEntitySetPathSucceeds,The length of the statement  "            ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 183.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathBindingParameterWithEntityCollectionAndValidEntitySetPathSucceeds,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmEntityTypeReference(testModelContainer.T3' false)' true /*isBound*/' new EdmPathExpression("bindingEntity/ColNav/RefNav")' false); " is 194.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathBindingParameterWithEntityCollectionAndValidEntitySetPathSucceeds,The length of the statement  "            function.AddParameter("bindingEntity"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmEntityTypeReference(testModelContainer.T3' false)))); " is 152.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathNavPropertyTypeCastUnknownNavPropertyReturnsUnknownNavigationPropertyError,The length of the statement  "            ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 183.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathNavPropertyTypeCastUnknownNavPropertyReturnsUnknownNavigationPropertyError,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmEntityTypeReference(testModelContainer.T3' false)' true /*isBound*/' new EdmPathExpression("bindingEntity/Bunk.T1/UnknownNav")' false); " is 199.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathNavPropertyTypeCastUnknownNavPropertyReturnsUnknownNavigationPropertyError,The length of the statement  "                Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathUnknownNavigationProperty("EntitySetPath"' "bindingEntity/Bunk.T1/UnknownNav"' "UnknownNav")); " is 150.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathNavPropertyUnknownTypeCastShouldError,The length of the statement  "            ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new ValidationRulesTests.OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 183.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathNavPropertyUnknownTypeCastShouldError,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmEntityTypeReference(testModelContainer.T3' false)' true /*isBound*/' new EdmPathExpression("bindingEntity/Nav1/Bunk.T1Foo")' false); " is 196.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateEntitySetPathNavPropertyUnknownTypeCastShouldError,The length of the statement  "                Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathUnknownTypeCastSegment("EntitySetPath"' "bindingEntity/Nav1/Bunk.T1Foo"' "Bunk.T1Foo")); " is 144.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateNoError,The length of the statement  "            operation.TryGetRelativeEntitySetPath(model' out operationParameter' out navigationProperties' out entityType' out errorsFound); " is 128.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateError,The length of the statement  "            operation.TryGetRelativeEntitySetPath(model' out operationParameter' out navigationProperties' out entityType' out errorsFound); " is 128.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,ValidateErrorInList,The length of the statement  "            operation.TryGetRelativeEntitySetPath(model' out operationParameter' out navigationProperties' out entityType' out errorsFound); " is 128.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,FindDeclaredEntitySetWithContainerName,The length of the statement  "            var entitySet = TestModel.Instance.Model.FindDeclaredEntitySet(TestModel.Instance.Container.Name + "." + TestModel.Instance.EntitySet.Name); " is 140.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,FindDeclaredEntitySetWithContainerQualifiedName,The length of the statement  "            var entitySet = TestModel.Instance.Model.FindDeclaredEntitySet(TestModel.Instance.Container.ShortQualifiedName() + "." + TestModel.Instance.EntitySet.Name); " is 156.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,FindDeclaredSingletonWithContainerName,The length of the statement  "            var singleton = TestModel.Instance.Model.FindDeclaredSingleton(TestModel.Instance.Container.Name + "." + TestModel.Instance.Singleton.Name); " is 140.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,FindDeclaredSingletonWithContainerQualifiedName,The length of the statement  "            var singleton = TestModel.Instance.Model.FindDeclaredSingleton(TestModel.Instance.Container.ShortQualifiedName() + "." + TestModel.Instance.Singleton.Name); " is 156.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,FindDeclaredOperationImportsWithContainerQualifiedName,The length of the statement  "            var operationImportName = TestModel.Instance.Container.ShortQualifiedName() + "." + TestModel.Instance.functionImport.Name; " is 123.
Long Statement,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,FindTypeByMultiPartAliasQualfiedName,The length of the statement  "            Assert.Equal("Multi.Part.TestModelNameSpace.E1"' TestModel.Instance.Model.FindType("MultipartTestModelAlias.E1").FullName()); " is 125.
Long Statement,Microsoft.OData.Edm.Tests.Library,AmbiguousOperationBindingTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\AmbiguousOperationBindingTests.cs,AmbigiousOperationBindingShouldReferToFirstOperationAlwaysWhenNotNull,The length of the statement  "            var function = new EdmFunction("DS2"' "name2"' EdmCoreModel.Instance.GetBoolean(false)' true' new EdmPathExpression("path1")' true); " is 132.
Long Statement,Microsoft.OData.Edm.Tests.Library,AmbiguousOperationImportBindingTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\AmbiguousOperationImportBindingTests.cs,AmbigiousOperationBindingShouldReferToFirstOperationAlwaysWhenNotNull,The length of the statement  "            var functionImport = new EdmFunctionImport(container2' "name"' new EdmFunction("n"' "name"' EdmCoreModel.Instance.GetString(true))); " is 132.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmActionImportTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmActionImportTests.cs,EdmActionImportConstructorShouldHaveSpecifiedConstructorValues,The length of the statement  "            var edmActionImport = new EdmActionImport(this.entityContainer' "checkoutImport"' edmAction' actionImportEntitySetPath); " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmFunctionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmFunctionTests.cs,EdmFunctionConstructorShouldHaveSpecifiedConstructorValues,The length of the statement  "            var edmFunction = new EdmFunction(defaultNamespaceName' checkout' this.boolType' true' entitySetPath' true /*IsComposable*/); " is 125.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmFunctionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmFunctionTests.cs,EdmFunctionConstructorShouldHaveSpecifiedConstructorValues,The length of the statement  "            edmFunction.AddParameter(new EdmOperationParameter(edmFunction' "Param1"' new EdmEntityTypeReference(personType' false))); " is 122.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldSucceedForTwoPropertyKey,The length of the statement  "            var testSubject = EdmReferentialConstraint.Create(new[] {this.otherTypeProperty1' this.otherTypeProperty2}' this.typeWithTwoKeys.Key()); " is 136.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldSucceedForTwoPropertyKey,The length of the statement  "            Assert.Contains(testSubject.PropertyPairs' p => p.DependentProperty == this.otherTypeProperty1 && p.PrincipalProperty == this.key2_1); " is 134.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldSucceedForTwoPropertyKey,The length of the statement  "            Assert.Contains(testSubject.PropertyPairs' p => p.DependentProperty == this.otherTypeProperty2 && p.PrincipalProperty == this.key2_2); " is 134.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldNotChangeOrderOfProperties,The length of the statement  "            var testSubject = EdmReferentialConstraint.Create(new[] {this.otherTypeProperty2' this.otherTypeProperty1}' this.typeWithTwoKeys.Key()); " is 136.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldNotChangeOrderOfProperties,The length of the statement  "            Assert.Contains(testSubject.PropertyPairs' p => p.DependentProperty == this.otherTypeProperty2 && p.PrincipalProperty == this.key2_1); " is 134.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldNotChangeOrderOfProperties,The length of the statement  "            Assert.Contains(testSubject.PropertyPairs' p => p.DependentProperty == this.otherTypeProperty1 && p.PrincipalProperty == this.key2_2); " is 134.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldFailIfTooFewPropertiesAreGiven,The length of the statement  "            Action createWithTooFewProperties = () => EdmReferentialConstraint.Create(new[] { this.otherTypeProperty1 }' this.typeWithTwoKeys.Key()); " is 137.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldFailIfTooFewPropertiesAreGiven,The length of the statement  "            Assert.Equal(Strings.Constructable_DependentPropertyCountMustMatchNumberOfPropertiesOnPrincipalType(2' 1)' exception.Message); " is 126.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldFailIfTooManyPropertiesAreGiven,The length of the statement  "            Action createWithTooManyProperties = () => EdmReferentialConstraint.Create(new[] { this.otherTypeProperty1' this.otherTypeProperty2 }' this.typeWithOneKey.Key()); " is 162.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldFailIfTooManyPropertiesAreGiven,The length of the statement  "            Assert.Equal(Strings.Constructable_DependentPropertyCountMustMatchNumberOfPropertiesOnPrincipalType(1' 2)' exception.Message); " is 126.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldFailIfPrincipalPropertiesAreNull,The length of the statement  "            Action createWithNullProperties = () => EdmReferentialConstraint.Create(Enumerable.Empty<IEdmStructuralProperty>()' null); " is 122.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmSingletonTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmSingletonTests.cs,EdmSingletonBasicNavigationPropertyBindingTest,The length of the statement  "            var internalOrderProperty = customerType.AddUnidirectionalNavigation(new EdmNavigationPropertyInfo(){Name = "InternalOrder"' Target = this.orderType' TargetMultiplicity = EdmMultiplicity.ZeroOrOne}); " is 199.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmSingletonTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmSingletonTests.cs,EdmSingletonBasicNavigationPropertyBindingTest,The length of the statement  "            var externalOrderProperty = customerType.AddUnidirectionalNavigation(new EdmNavigationPropertyInfo(){Name = "ExternalOrders"' Target = this.orderType' TargetMultiplicity = EdmMultiplicity.Many}); " is 195.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmSingletonTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmSingletonTests.cs,EdmSingletonBasicNavigationPropertyBindingTest,The length of the statement  "                new EdmNavigationPropertyInfo() { Name = "Products"' Target = this.productType' TargetMultiplicity = EdmMultiplicity.Many }'  " is 124.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmSingletonTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmSingletonTests.cs,EdmSingletonBasicNavigationPropertyBindingTest,The length of the statement  "                new EdmNavigationPropertyInfo() { Name = "Buyer"' Target = this.customerType' TargetMultiplicity = EdmMultiplicity.One }); " is 122.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmSingletonTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmSingletonTests.cs,EdmSingletonBasicNavigationPropertyBindingTest,The length of the statement  "            Assert.Contains(vipCustomer.NavigationPropertyBindings' m => m.NavigationProperty == internalOrderProperty && m.Target == orderSet); " is 132.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmSingletonTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmSingletonTests.cs,EdmSingletonBasicNavigationPropertyBindingTest,The length of the statement  "            Assert.Contains(vipCustomer.NavigationPropertyBindings' m => m.NavigationProperty == externalOrderProperty && m.Target == orderSet); " is 132.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmSingletonTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmSingletonTests.cs,EdmSingletonBasicNavigationPropertyBindingTest,The length of the statement  "            Assert.Contains(vipCustomer.NavigationPropertyBindings' m => m.NavigationProperty ==  customerProductProperty && m.Target == productSet); " is 137.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmSingletonTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmSingletonTests.cs,EdmSingletonAnnotationTests,The length of the statement  "            EdmStructuralProperty customerProperty = new EdmStructuralProperty(customerType' "Name"' EdmCoreModel.Instance.GetString(false)); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmSingletonTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmSingletonTests.cs,EdmSingletonAnnotationTests,The length of the statement  "            var propertyAnnotation = new EdmVocabularyAnnotation(customerProperty' propertyTerm' new EdmStringConstant("Singleton Property Annotation")); " is 141.
Long Statement,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtorInvalid,The length of the statement  "                Assert.Equal(Strings.TimeOfDay_InvalidTimeOfDayParameters(tuple.Item1' tuple.Item2' tuple.Item3' tuple.Item4)' exception.Message); " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmTypeDefinitionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmTypeDefinitionTests.cs,TestEdmTypeDefinitionConstructorWithPrimitiveType,The length of the statement  "            var intAlias = new EdmTypeDefinition("MyNS"' "TestInt"' EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.Int32)); " is 124.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmTypeDefinitionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmTypeDefinitionTests.cs,TestEdmTypeDefinitionConstructorWithPrimitiveType,The length of the statement  "            var stringAlias = new EdmTypeDefinition("MyNamespace"' "TestString"' EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.String)); " is 138.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmTypeDefinitionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmTypeDefinitionTests.cs,TestEdmTypeDefinitionConstructorWithPrimitiveType,The length of the statement  "            var decimalAlias = new EdmTypeDefinition("TestNS"' "TestDecimal"' EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.Decimal)); " is 136.
Long Statement,Microsoft.OData.Edm.Tests.Library,EdmTypeDefinitionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmTypeDefinitionTests.cs,TestEdmTypeDefinitionConstructorWithPrimitiveType,The length of the statement  "            var booleanAlias = new EdmTypeDefinition("TestNamespace"' "TestBoolean"' EdmCoreModel.Instance.GetPrimitiveType(EdmPrimitiveTypeKind.Boolean)); " is 143.
Long Statement,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,ValidateEntitySetPathExpressionCannotHaveValueWhenActionNonBound,The length of the statement  "            Assert.Equal(Strings.CsdlParser_InvalidEntitySetPathWithUnboundAction(CsdlConstants.Element_Action' "Add")' error.ErrorMessage); " is 128.
Long Statement,Microsoft.OData.Edm.Tests.ScenarioTests,OasisRelationshipChangesAcceptanceTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisRelationshipChangesAcceptanceTests.cs,ReferentialConstraintShouldWorkForNonKeyPrincipalProperties,The length of the statement  "            Assert.Contains(this.entityType.FindProperty("ForeignKeyProperty") as IEdmStructuralProperty' this.nonKeyPrincipalNavigation.DependentProperties()); " is 148.
Long Statement,Microsoft.OData.Edm.Tests.ScenarioTests,OasisRelationshipChangesAcceptanceTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisRelationshipChangesAcceptanceTests.cs,ParsingShouldFailIfNavigationNullableIsNotTrueOrFalse,The length of the statement  "            this.ParseNavigationExpectedErrors(@"<NavigationProperty Name=""Navigation"" Type=""Test.EntityType"" Nullable=""foo""/>"' " is 122.
Long Statement,Microsoft.OData.Edm.Tests.ScenarioTests,OasisRelationshipChangesAcceptanceTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisRelationshipChangesAcceptanceTests.cs,ValidationShouldFailIfNavigationNullableIsSpecifiedOnCollection,The length of the statement  "            this.ValidateNavigationWithExpectedErrors(@"<NavigationProperty Name=""Navigation"" Type=""Collection(Test.EntityType)"" Nullable=""false""/>"' " is 143.
Long Statement,Microsoft.OData.Edm.Tests.ScenarioTests,OasisRelationshipChangesAcceptanceTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisRelationshipChangesAcceptanceTests.cs,ValidationShouldFailIfNavigationTypeIsACollectionButElementTypeDoesNotExist,The length of the statement  "            this.ValidateNavigationWithExpectedErrors(@"<NavigationProperty Name=""Navigation"" Type=""Collection(Fake.Nonexistent)"" />"' " is 126.
Long Statement,Microsoft.OData.Edm.Tests.ScenarioTests,OasisRelationshipChangesAcceptanceTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisRelationshipChangesAcceptanceTests.cs,ValidationShouldFailIfNavigationParterIsSpecifiedButCannotBeFound,The length of the statement  "            this.ValidateNavigationWithExpectedErrors(@"<NavigationProperty Name=""Navigation"" Type=""Test.EntityType"" Partner=""Nonexistent"" />"' " is 137.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionOverloadsWithOnlyNamespaceDifferentShouldNotError,The length of the statement  "            var edmFunction = new EdmFunction("n.s1"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionOverloadsWithOnlyNamespaceDifferentShouldNotError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s2"' "GetStuff"' EdmCoreModel.Instance.GetInt16(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateBoundFunctionOverloadsSameParameterNamesShouldError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateBoundFunctionOverloadsSameParameterNamesShouldError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetInt16(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateBoundFunctionOverloadsSameParameterNamesShouldError,The length of the statement  "            ValidateError(model' EdmErrorCode.DuplicateFunctions' Strings.EdmModel_Validator_Semantic_ModelDuplicateBoundFunctionParameterNames("n.s.GetStuff")); " is 149.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateUnBoundFunctionOverloadsSameParameterNamesShouldError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateUnBoundFunctionOverloadsSameParameterNamesShouldError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetInt16(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateUnBoundFunctionOverloadsSameParameterNamesShouldError,The length of the statement  "            ValidateError(model' EdmErrorCode.DuplicateFunctions' Strings.EdmModel_Validator_Semantic_ModelDuplicateUnBoundFunctionsParameterNames("n.s.GetStuff")); " is 152.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionOverloadsWithDifferentBindingTypesAndSameNameWithDifferentReturnTypesShouldNotError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionOverloadsWithDifferentBindingTypesAndSameNameWithDifferentReturnTypesShouldNotError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetInt16(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsUnBoundFunctionsWithSameNameWhereBindingTypeDifferentonNullabilityAndSameParametersShouldError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsUnBoundFunctionsWithSameNameWhereBindingTypeDifferentonNullabilityAndSameParametersShouldError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsUnBoundFunctionsWithSameNameWhereBindingTypeDifferentonNullabilityAndSameParametersShouldError,The length of the statement  "            ValidateError(model' EdmErrorCode.DuplicateFunctions' Strings.EdmModel_Validator_Semantic_ModelDuplicateBoundFunctionParameterTypes("n.s.GetStuff")); " is 149.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsBoundFunctionsWithDifferentBindingParameterNameButSameTypeShouldError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsBoundFunctionsWithDifferentBindingParameterNameButSameTypeShouldError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsBoundFunctionsWithDifferentBindingParameterNameButSameTypeShouldError,The length of the statement  "            ValidateError(model' EdmErrorCode.DuplicateFunctions' Strings.EdmModel_Validator_Semantic_ModelDuplicateBoundFunctionParameterTypes("n.s.GetStuff")); " is 149.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsUnBoundFunctionsWithDifferentBindingParameterNameButSameTypeShouldError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsUnBoundFunctionsWithDifferentBindingParameterNameButSameTypeShouldError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 160.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsUnBoundFunctionsWithDifferentBindingParameterNameButSameTypeShouldError,The length of the statement  "            ValidateError(model' EdmErrorCode.DuplicateFunctions' Strings.EdmModel_Validator_Semantic_ModelDuplicateUnBoundFunctionsParameterTypes("n.s.GetStuff")); " is 152.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsUnBoundAndBoundFunctionWithSameNameAndParametersShouldNotError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsUnBoundAndBoundFunctionWithSameNameAndParametersShouldNotError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 160.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsBoundFunctionsWithSameNameBindingTypeAndDifferentParametersShouldNotError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsBoundFunctionsWithSameNameBindingTypeAndDifferentParametersShouldNotError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsBoundFunctionsWithSameNameDifferentBindingTypeAndSameParametersShouldNotError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,DuplicateFunctionsBoundFunctionsWithSameNameDifferentBindingTypeAndSameParametersShouldNotError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureUnBoundFunctionWithDifferentOrderedParameterNamesShouldError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureUnBoundFunctionWithDifferentOrderedParameterNamesShouldError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 160.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureUnBoundFunctionWithDifferentOrderedParameterNamesShouldError,The length of the statement  "            ValidateError(model' EdmErrorCode.DuplicateFunctions' Strings.EdmModel_Validator_Semantic_ModelDuplicateUnBoundFunctionsParameterNames("n.s.GetStuff")); " is 152.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundFunctionWithDifferentOrderedParameterNamesShouldError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundFunctionWithDifferentOrderedParameterNamesShouldError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundFunctionWithDifferentOrderedParameterNamesShouldError,The length of the statement  "            ValidateError(model' EdmErrorCode.DuplicateFunctions' Strings.EdmModel_Validator_Semantic_ModelDuplicateBoundFunctionParameterNames("n.s.GetStuff")); " is 149.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundFunctionWithDifferentSameOrderedParameterTypesShouldError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundFunctionWithDifferentSameOrderedParameterTypesShouldError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundFunctionWithDifferentSameOrderedParameterTypesShouldError,The length of the statement  "            ValidateError(model' EdmErrorCode.DuplicateFunctions' Strings.EdmModel_Validator_Semantic_ModelDuplicateBoundFunctionParameterTypes("n.s.GetStuff")); " is 149.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureUnBoundFunctionWithDifferentSameOrderedParameterTypesShouldError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureUnBoundFunctionWithDifferentSameOrderedParameterTypesShouldError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 160.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureUnBoundFunctionWithDifferentSameOrderedParameterTypesShouldError,The length of the statement  "            ValidateError(model' EdmErrorCode.DuplicateFunctions' Strings.EdmModel_Validator_Semantic_ModelDuplicateUnBoundFunctionsParameterTypes("n.s.GetStuff")); " is 152.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundAndUnBoundFunctionsNamedTheSameShouldNotError,The length of the statement  "            var edmFunction= new EdmFunction("n.s"' "DoStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false); " is 139.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundAndUnBoundFunctionsNamedTheSameShouldNotError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "DoStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false); " is 142.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundFunctionWithDifferentOrderedParameterTypesShouldNotError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundFunctionWithDifferentOrderedParameterTypesShouldNotError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundAndUnBoundActionsNamedTheSameShouldNotError,The length of the statement  "            var edmAction = new EdmAction("n.s"' "DoStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundAndUnBoundActionsNamedTheSameShouldNotError,The length of the statement  "            var edmAction2 = new EdmAction("n.s"' "DoStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/); " is 131.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundActionWithSameBindingParameterTypesShouldError,The length of the statement  "            var edmAction = new EdmAction("n.s"' "DoStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundActionWithSameBindingParameterTypesShouldError,The length of the statement  "            var edmAction2 = new EdmAction("n.s"' "DoStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/); " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureBoundActionWithSameBindingParameterTypesShouldError,The length of the statement  "            ValidateError(model' EdmErrorCode.DuplicateActions' Strings.EdmModel_Validator_Semantic_ModelDuplicateBoundActions("n.s.DoStuff")); " is 131.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureNonBoundActionWithSameNameShouldError,The length of the statement  "            var edmAction = new EdmAction("n.s"' "DoStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/); " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureNonBoundActionWithSameNameShouldError,The length of the statement  "            var edmAction2 = new EdmAction("n.s"' "DoStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/); " is 131.
Long Statement,Microsoft.OData.Edm.Tests.Validation,DuplicateOperationValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\DuplicateOperationValidatorTests.cs,EnsureNonBoundActionWithSameNameShouldError,The length of the statement  "            ValidateError(model' EdmErrorCode.DuplicateActions' Strings.EdmModel_Validator_Semantic_ModelDuplicateUnBoundActions("n.s.DoStuff")); " is 133.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationImportCannotImportBoundOperationTestShouldIndicateError,The length of the statement  "            EdmFunctionImport functionImport = new EdmFunctionImport(new EdmEntityContainer("ds.n"' "Container")' "function1"' new EdmFunction("ds"' "func"' EdmCoreModel.Instance.GetString(true)' true /*IsBound*/' null' false)); " is 216.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,EntityTypeComposableEscapeFunctionMoreThanOneAreInvalid,The length of the statement  "                Strings.EdmModel_Validator_Semantic_EntityComposableBoundEscapeFunctionMustBeLessOne("NS.Entity"' "GetStuff1'GetStuff2")); " is 122.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,EntityTypeNoncomposableEscapeFunctionMoreThanOneAreInvalid,The length of the statement  "                Strings.EdmModel_Validator_Semantic_EntityNoncomposableBoundEscapeFunctionMustBeLessOne("NS.Entity"' "GetStuff1'GetStuff2")); " is 125.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationReturnTypeWithCollectionOfAbstractTypeShouldError,The length of the statement  "                Strings.EdmModel_Validator_Semantic_OperationReturnTypeCannotBeCollectionOfAbstractType(collectionType.FullName()' function.FullName())); " is 137.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationImportEntitySetReferencesEntitySetNotOnFunctionImportContainerShouldError,The length of the statement  "            var edmFunctionImport = new EdmFunctionImport(defaultContainer' "GetStuff"' edmFunction' new EdmPathExpression("Set")' true); " is 125.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationImportEntitySetReferencesEntitySetOnFunctionImportContainerShouldNotError,The length of the statement  "            var edmFunctionImport = new EdmFunctionImport(defaultContainer' "GetStuff"' edmFunction' new EdmPathExpression("Set")' false); " is 126.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationImportEntitySetReferenceSingletonShouldError,The length of the statement  "            var edmFunctionImport = new EdmFunctionImport(defaultContainer' "GetStuff"' edmFunction' new EdmPathExpression("Schema.EntityContainer/Singleton")' true); " is 154.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationImportEntitySetReferenceSingletonShouldError,The length of the statement  "            var edmActionImport = new EdmActionImport(defaultContainer' "UpdateStuff"' edmAction' new EdmPathExpression("Schema.EntityContainer/Singleton")); " is 145.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationImportEntitySetReferenceEntitySetTargetPathShouldNotError,The length of the statement  "            var edmFunctionImport = new EdmFunctionImport(defaultContainer' "GetStuff"' edmFunction' new EdmPathExpression("EntitySet")' true); " is 131.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationImportEntitySetReferencesBadEntityShouldNotError,The length of the statement  "            var edmFunctionImport = new EdmFunctionImport(defaultContainer' "GetStuff"' edmFunction' new EdmPathExpression("Set")' true); " is 125.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationImportInvalidEntitySetWithNonEntityNonCollectionReturnType,The length of the statement  "            var edmFunctionImport = new EdmFunctionImport(new EdmEntityContainer("f"' "d")' "GetStuff"' edmFunction' new EdmPathExpression("param")' true); " is 143.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationImportInvalidEntitySetWithNonEntityCollectionReturnType,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetString(true)))); " is 147.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationImportInvalidEntitySetWithNonEntityCollectionReturnType,The length of the statement  "            var edmFunctionImport = new EdmFunctionImport(new EdmEntityContainer("f"' "d")' "GetStuff"' edmFunction' new EdmPathExpression("param")' true); " is 143.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationImportInvalidEntitySetShouldNotReturnErrorIfNoEntitySetIsSpecified,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetString(true)))); " is 147.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ShortIntegrationTestEnsuresTryGetRelativeEntitySetInvoked,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' EdmCoreModel.Instance.GetString(false)' false /*isBound*/' new EdmPathExpression("path1"' "path2")' false); " is 164.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ShortIntegrationTestEnsuresTryGetRelativeEntitySetInvoked2,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' DefaultValidEntityType' true /*isBound*/' new EdmPathExpression()' false); " is 131.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationWithEntitySetPathWithNonEntityReturnTypeMustFail,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' EdmCoreModel.Instance.GetString(false)' false /*isBound*/' new EdmPathExpression("param")' false); " is 155.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationWithEntitySetPathWithNonEntityCollectionReturnTypeMustFail,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetString(false)))' true /*isBound*/' new EdmPathExpression("param")' false); " is 209.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateEntitySetPathResolvedTypeFailsWithNotAssignableToReturnTypeError,The length of the statement  "            OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 141.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateEntitySetPathResolvedTypeFailsWithNotAssignableToReturnTypeError,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmEntityTypeReference(testModelContainer.T3' false)' true /*isBound*/' new EdmPathExpression("bindingEntity/ColP101/Nav1")' false); " is 193.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateEntitySetPathResolvedTypeFailsWithNotAssignableToReturnTypeError,The length of the statement  "                Strings.EdmModel_Validator_Semantic_OperationWithEntitySetPathAndReturnTypeTypeNotAssignable(function.Name' testModelContainer.T3.FullName()' testModelContainer.T2.FullName())); " is 177.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateNonEntityReturnTypeInvalid,The length of the statement  "            OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 141.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateNonEntityReturnTypeInvalid,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmComplexTypeReference(new EdmComplexType("ns"'"complexType")' false)' true /*isBound*/' new EdmPathExpression("bindingEntity/ColNav")' false); " is 205.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateNonEntityReturnTypeInvalid,The length of the statement  "            function.AddParameter("bindingEntity"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmEntityTypeReference(testModelContainer.T3' false)))); " is 152.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateEntitySetPathInvalidAsResolvesToCollectionEntityTypeWhenReturnTypeIsEntityType,The length of the statement  "            OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 141.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateEntitySetPathInvalidAsResolvesToCollectionEntityTypeWhenReturnTypeIsEntityType,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' new EdmEntityTypeReference(testModelContainer.T2' false)' true /*isBound*/' new EdmPathExpression("bindingEntity/ColNav")' false); " is 187.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateEntitySetPathInvalidAsResolvesToCollectionEntityTypeWhenReturnTypeIsEntityType,The length of the statement  "            function.AddParameter("bindingEntity"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmEntityTypeReference(testModelContainer.T3' false)))); " is 152.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateEntitySetPathInvalidAsResolvesToEntityTypeWhenReturnTypeIsCollectionEntityType,The length of the statement  "            OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 141.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateEntitySetPathInvalidAsResolvesToEntityTypeWhenReturnTypeIsCollectionEntityType,The length of the statement  "            var returnType = new EdmCollectionTypeReference(new EdmCollectionType(new EdmEntityTypeReference(testModelContainer.T3' false))); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateEntitySetPathInvalidAsResolvesToEntityTypeWhenReturnTypeIsCollectionEntityType,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' returnType' true /*isBound*/' new EdmPathExpression("bindingEntity/ColNav/RefNav")' false); " is 148.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateEntitySetPathInvalidAsResolvesToEntityTypeWhenReturnTypeIsCollectionEntityType,The length of the statement  "            function.AddParameter("bindingEntity"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmEntityTypeReference(testModelContainer.T3' false)))); " is 152.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateEntitySetPathInvalidAsResolvesToEntityTypeWhenReturnTypeIsCollectionEntityType,The length of the statement  "                Strings.EdmModel_Validator_Semantic_OperationWithEntitySetPathResolvesToCollectionEntityTypeMismatchesEntityTypeReturnType(function.Name)); " is 139.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateReturnTypeShouldReturnNoErrorWhenNoEntitySetPathNotValid,The length of the statement  "            OperationOperationEntitySetPathMustBeValidValidTestModel testModelContainer = new OperationOperationEntitySetPathMustBeValidValidTestModel(); " is 141.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,ValidateReturnTypeShouldReturnNoErrorWhenNoEntitySetPathNotValid,The length of the statement  "            EdmFunction function = new EdmFunction("ns"' "GetStuff"' EdmCoreModel.Instance.GetString(false)' true /*isBound*/' new EdmPathExpression("bindingEntity/Nav1/Bunk.T1Foo")' false); " is 178.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionImportIncludedInServiceDocumentHasParametersShouldError,The length of the statement  "            var functionImport = container.AddFunctionImport("OtherName"' function' new EdmPathExpression("Set")' true) as IEdmFunctionImport; " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionImportNotIncludedInServiceDocumentHasParametersShouldNotError,The length of the statement  "            var functionImport = container.AddFunctionImport("OtherName"' function' new EdmPathExpression("Set")' false) as IEdmFunctionImport; " is 131.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionOverloadsWithSameBindingTypesAndSameNameWithDifferentReturnTypesShouldError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionOverloadsWithSameBindingTypesAndSameNameWithDifferentReturnTypesShouldError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetInt16(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionOverloadsWithSameBindingTypesAndSameNameWithDifferentReturnTypesShouldError,The length of the statement  "                Strings.EdmModel_Validator_Semantic_BoundFunctionOverloadsMustHaveSameReturnType("GetStuff"' edmFunction.ReturnType.FullName())); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionOverloadsWithSameBindingTypesAndSameNameWithDifferentReturnTypesButWithOneInvalidFunctionWithNoParametersShouldNotError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionOverloadsWithSameBindingTypesAndSameNameWithDifferentReturnTypesButWithOneInvalidFunctionWithNoParametersShouldNotError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetInt16(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionOverloadsWithSameBindingTypesAndSameNameWithDifferentReturnTypesButWithOneInvalidFunctionWithNullReturnTypeShouldNotError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionOverloadsWithSameBindingTypesAndSameNameWithDifferentReturnTypesShouldErrorMultipleTimesAndNotStopAfterOne,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionOverloadsWithSameBindingTypesAndSameNameWithDifferentReturnTypesShouldErrorMultipleTimesAndNotStopAfterOne,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetInt16(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionOverloadsWithSameBindingTypesAndSameNameWithDifferentReturnTypesShouldErrorMultipleTimesAndNotStopAfterOne,The length of the statement  "            var edmFunction3 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetInt32(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionOverloadsWithSameBindingTypesAndSameNameWithDifferentReturnTypesShouldErrorMultipleTimesAndNotStopAfterOne,The length of the statement  "                new Tuple<EdmErrorCode' string>(EdmErrorCode.BoundFunctionOverloadsMustHaveSameReturnType' Strings.EdmModel_Validator_Semantic_BoundFunctionOverloadsMustHaveSameReturnType("GetStuff"' edmFunction.ReturnType.FullName()))' " is 220.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionOverloadsWithSameBindingTypesAndSameNameWithDifferentReturnTypesShouldErrorMultipleTimesAndNotStopAfterOne,The length of the statement  "                new Tuple<EdmErrorCode' string>(EdmErrorCode.BoundFunctionOverloadsMustHaveSameReturnType' Strings.EdmModel_Validator_Semantic_BoundFunctionOverloadsMustHaveSameReturnType("GetStuff"' edmFunction.ReturnType.FullName()))); " is 221.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,DuplicateFunctionOverloadsWithOnlyNamespaceDifferentShouldNotError,The length of the statement  "            var edmFunction = new EdmFunction("n.s1"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,DuplicateFunctionOverloadsWithOnlyNamespaceDifferentShouldNotError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s2"' "GetStuff"' EdmCoreModel.Instance.GetInt16(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,DuplicateFunctionsDuplicateFunctionErrorShouldOccur,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,DuplicateFunctionsDuplicateFunctionErrorShouldOccur,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetInt16(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionWithSameNameAsEntityTypeShouldError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,FunctionWithSameNameAsEntityTypeInOtherModelShouldError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,SameFunctionsShouldInWithOneInReferencedModelShouldRaiseError,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,SameFunctionsShouldInWithOneInReferencedModelShouldRaiseError,The length of the statement  "            var edmFunction2 = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,NavigationPropertyTypeMismatchOnReferentialConstraint,The length of the statement  "                Strings.EdmModel_Validator_Semantic_TypeMismatchRelationshipConstraint("foreignKey"'"ns.type2"'"Id1"' "type1"' "Fred")); " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationWithDuplicateParameterNameShouldError,The length of the statement  "            var function = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 156.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,OperationWithOptionalParametersBeforeRequiredShouldError,The length of the statement  "            var function = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 156.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,BoundOperationWithoutParameterShouldError,The length of the statement  "            var function = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 155.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,BoundOperationWithOnlyOptionalParametersShouldError,The length of the statement  "            var function = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' true /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 155.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceEntityTypeBaseTypeOfEdmEntityType,The length of the statement  "                Strings.EdmModel_Validator_Semantic_StructuredTypeBaseTypeCannotBeAbstractType("Edm.EntityType"' "entity"' "NS.MyEntity")); " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceComplexTypeBaseTypeOfEdmEntityType,The length of the statement  "                Strings.EdmModel_Validator_Semantic_StructuredTypeBaseTypeCannotBeAbstractType("Edm.ComplexType"' "complex"' "NS.MyComplex")); " is 126.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceTypeDefinitionUnderlyingTypeOfEdmPrimitiveType,The length of the statement  "                Strings.EdmModel_Validator_Semantic_EdmPrimitiveTypeCannotBeUsedAsUnderlyingType("type definition"' typeDefinition.FullName())); " is 128.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceEdmPropertyTypeOfEdmPrimitiveType,The length of the statement  "                Strings.EdmModel_Validator_Semantic_PropertyTypeCannotBeCollectionOfAbstractType(property.Type.FullName()' "Property")); " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceDeclaringTypeOfEntitySetCannotHavePathTypeProperty,The length of the statement  "                Strings.EdmModel_Validator_Semantic_DeclaringTypeOfNavigationSourceCannotHavePathProperty("NS.Entity"' "entity set"' "Entities")); " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceDeclaringTypeOfSingletonCannotHavePathTypeProperty,The length of the statement  "                Strings.EdmModel_Validator_Semantic_DeclaringTypeOfNavigationSourceCannotHavePathProperty("NS.Entity"' "singleton"' "MyEntity")); " is 129.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceComplexTypeOfDeclaringTypeOfEntitySetCannotHavePathTypeProperty,The length of the statement  "            complex.AddStructuralProperty("PathProperty"' EdmCoreModel.Instance.GetPropertyPath(false)); // path property on complex " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceComplexTypeOfDeclaringTypeOfEntitySetCannotHavePathTypeProperty,The length of the statement  "                Strings.EdmModel_Validator_Semantic_DeclaringTypeOfNavigationSourceCannotHavePathProperty("NS.Entity"' "entity set"' "Entities")); " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceBaseDeclaringTypeOfEntitySetCannotHavePathTypeProperty,The length of the statement  "                Strings.EdmModel_Validator_Semantic_DeclaringTypeOfNavigationSourceCannotHavePathProperty("NS.Derived"' "entity set"' "Deriveds")); " is 131.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceBaseComplexTypeOfDeclaringTypeOfEntitySetCannotHavePathTypeProperty,The length of the statement  "            baseType.AddStructuralProperty("PathProperty"' EdmCoreModel.Instance.GetPropertyPath(false)); // path property on complex base " is 126.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceBaseComplexTypeOfDeclaringTypeOfEntitySetCannotHavePathTypeProperty,The length of the statement  "                Strings.EdmModel_Validator_Semantic_DeclaringTypeOfNavigationSourceCannotHavePathProperty("NS.Entity"' "entity set"' "Entities")); " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceTypeOfNavigationPropertyCannotHavePathTypeProperty,The length of the statement  "                Strings.EdmModel_Validator_Semantic_TypeOfNavigationPropertyCannotHavePathProperty("Collection(NS.OtherEntity)"' "NavigationProperty"' "NS.Entity")); " is 149.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceTypeOfNavigationPropertyOnComplexCannotHavePathTypeProperty,The length of the statement  "                Strings.EdmModel_Validator_Semantic_TypeOfNavigationPropertyCannotHavePathProperty("NS.OtherEntity"' "NavigationProperty"' "NS.Complex")); " is 138.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceTypeOfNavigationPropertyOnComplexRecursiveCannotHavePathTypeProperty,The length of the statement  "                Strings.EdmModel_Validator_Semantic_TypeOfNavigationPropertyCannotHavePathProperty("NS.Entity"' "NavigationProperty"' "NS.Entity")); " is 132.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceTypeOfDeclaringTypeOfEntitySetRecursiveCannotHavePathTypeProperty,The length of the statement  "                Strings.EdmModel_Validator_Semantic_DeclaringTypeOfNavigationSourceCannotHavePathProperty("NS.Entity"' "entity set"' "Entities")); " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Validation,ValidationRulesTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRulesTests.cs,TestInterfaceTypeOfDeclaringTypeOfSingletonRecursiveCannotHavePathTypeProperty,The length of the statement  "                Strings.EdmModel_Validator_Semantic_DeclaringTypeOfNavigationSourceCannotHavePathProperty("NS.Entity"' "singleton"' "Me")); " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Validation.Internal,ValidationHelperTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\Internal\ValidationHelperTests.cs,EnsureDuplicateEntityTypeAndFunctionReturnTrue,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' new EdmEntityTypeReference(entityType' false)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 167.
Long Statement,Microsoft.OData.Edm.Tests.Validation.Internal,ValidationHelperTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\Internal\ValidationHelperTests.cs,EnsureDuplicateTermAndFunctionReturnTrue,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation.Internal,ValidationHelperTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\Internal\ValidationHelperTests.cs,EnsureDuplicateContainerFunctionReturnTrue,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' EdmCoreModel.Instance.GetString(true)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Validation.Internal,ValidationHelperTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\Internal\ValidationHelperTests.cs,EnsureNoDuplicateFoundForFunctionShouldReturnFalse,The length of the statement  "            var edmFunction = new EdmFunction("n.s"' "GetStuff"' new EdmEntityTypeReference(entityType' false)' false /*isBound*/' null /*entitySetPath*/' false /*isComposable*/); " is 167.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,AlternateKeysVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\AlternateKeysVocabularyTests.cs,TestAlternateKeysVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""A path expression resolving to a primitive property of the entity type itself or to a primitive property of a complex property (recursively) of the entity type. The names of the properties in the path are joined together by forward slashes."" /> " is 292.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,AlternateKeysVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\AlternateKeysVocabularyTests.cs,TestAlternateKeysVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""A SimpleIdentifier that MUST be unique within the set of aliases' structural and navigation properties of the containing entity type that MUST be used in the key predicate of URLs"" /> " is 231.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "<Schema Namespace=""Org.OData.Capabilities.V1"" Alias=""Capabilities"" xmlns=""http://docs.oasis-open.org/odata/ns/edm""> " is 121.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""A non-empty collection lists the full set of supported protocols. A empty collection means 'only HTTP is supported'"" /> " is 167.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""URL Template including parameters. Parameters are enclosed in curly braces {} as defined in RFC6570"" /> " is 151.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Human readable description of the meaning of the URL Template parameters"" /> " is 124.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.LongDescription"" String=""If no properties are specified or FilterableProperties is omitted' clients cannot assume support for filtering on any properties in combination with change tracking."" /> " is 221.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.LongDescription"" String=""If no properties are specified or ExpandableProperties is omitted' clients cannot assume support for expanding any properties in combination with change tracking."" /> " is 218.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Default navigability for all navigation properties of the annotation target. Individual navigation properties can override this value via `RestrictedProperties/Navigability`."" /> " is 226.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Property Name=""RestrictedProperties"" Type=""Collection(Capabilities.NavigationPropertyRestriction)"" Nullable=""false""> " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.LongDescription"" String=""If not specified' null' or empty' all functions and operators may be attempted."" /> " is 135.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Deep Insert Support of the annotated resource (the whole service' an entity set' or a collection-valued resource)"" /> " is 165.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Deep Update Support of the annotated resource (the whole service' an entity set' or a collection-valued resource)"" /> " is 165.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Data modification (including insert) along this navigation property requires the use of ETags"" /> " is 145.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""These properties must be specified in the $filter clause (properties of derived types are not allowed here)"" /> " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Property Name=""FilterExpressionRestrictions"" Type=""Collection(Capabilities.FilterExpressionRestrictionType)"" Nullable=""false""> " is 133.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""These properties only allow a subset of filter expressions. A valid filter expression for a single property can be enclosed in parentheses and combined by `and` with valid expressions for other properties."" /> " is 257.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""The maximum number of levels (including recursion) that can be traversed in a filter expression. A value of -1 indicates there is no restriction."" /> " is 197.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""The maximum number of levels that can be expanded in a expand expression. A value of -1 indicates there is no restriction."" /> " is 174.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Property Name=""UnsupportedExpressions"" Type=""Capabilities.SearchExpressions"" DefaultValue=""none"" Nullable=""false""> " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Property Name=""NonInsertableNavigationProperties"" Type=""Collection(Edm.NavigationPropertyPath)"" Nullable=""false""> " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""The maximum number of navigation properties that can be traversed when addressing the collection to insert into. A value of -1 indicates there is no restriction."" /> " is 213.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Entities of a specific derived type can be created by specifying a type-cast segment"" /> " is 136.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Required permissions. One of the specified sets of scopes is required to perform the insert."" /> " is 144.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Comma-separated string value of all properties that will be included or excluded when using the scope."" /> " is 154.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.LongDescription"" String=""Possible string value identifiers when specifying properties are '*'' _PropertyName_' '-'_PropertyName_. Where' '*' denotes all properties are accessible''-'_PropertyName_ excludes that specific property and _PropertyName_ explicitly provides access to the specific property. The absence of 'RestrictedProperties' denotes all properties are accessible using that scope."" /> " is 425.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Annotation target supports accepting and returning nested entities annotated with the `Core.ContentID` instance annotation."" /> " is 175.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Entities can be inserted' updated' and deleted via a PATCH request with a delta payload"" /> " is 139.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Members of collections can be updated via a PATCH request with a `/$filter(...)/$each` segment"" /> " is 146.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Members of collections can be updated via a PATCH request with a type-cast segment and a `/$each` segment"" /> " is 157.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""The maximum number of navigation properties that can be traversed when addressing the collection or entity to update. A value of -1 indicates there is no restriction."" /> " is 218.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Required permissions. One of the specified sets of scopes is required to perform the update."" /> " is 144.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Annotation target supports accepting and returning nested entities annotated with the `Core.ContentID` instance annotation."" /> " is 175.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""The maximum number of navigation properties that can be traversed when addressing the collection to delete from or the entity to delete. A value of -1 indicates there is no restriction."" /> " is 237.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Members of collections can be updated via a PATCH request with a `/$filter(...)/$each` segment"" /> " is 146.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Members of collections can be updated via a PATCH request with a type-cast segment and a `/$each` segment"" /> " is 157.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Required permissions. One of the specified sets of scopes is required to perform the delete."" /> " is 144.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.LongDescription"" String=""If not specified' null' or empty' all functions and operators may be attempted."" /> " is 135.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.LongDescription"" String=""If additionally annotated with [Core.PositionalInsert](Org.OData.Core.V1.md#PositionalInsert)' members can be inserted at a specific position"" /> " is 197.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Bound action or function can be invoked on a collection-valued binding parameter path with a `/$filter(...)` segment"" /> " is 168.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Required permissions. One of the specified sets of scopes is required to invoke an action or function"" /> " is 153.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Required permissions. One of the specified sets of scopes is required to read."" /> " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.LongDescription"" String=""Only valid when applied to a collection. If a property of `ReadByKeyRestrictions` is not specified' the corresponding property value of `ReadRestrictions` applies."" /> " is 219.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""true: parameter is required' false or not specified: parameter is optional"" /> " is 126.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.LongDescription"" String=""The type of a custom parameter is always a string. Restrictions on the parameter values can be expressed by annotating the record expression describing the parameter with terms from the Validation vocabulary' e.g. Validation.Pattern or Validation.AllowedValues."" /> " is 317.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""All data returned for a request' including multiple requests within a batch or results retrieved across multiple pages' will be consistent as of a single point in time"" /> " is 219.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""SupportedMetadataFormats"" Type=""Collection(Edm.String)"" AppliesTo=""EntityContainer"" Nullable=""false""> " is 121.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Media types of supported formats for $metadata' including format parameters"" /> " is 127.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""List of acceptable compression methods for ($batch) requests' e.g. gzip"" /> " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""AsynchronousRequestsSupported"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""EntityContainer"" Nullable=""false""> " is 134.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""BatchContinueOnErrorSupported"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""EntityContainer"" Nullable=""false""> " is 134.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Service supports the continue on error preference. Supports $batch requests. Services that apply the BatchContinueOnErrorSupported term should also specify the ContinueOnErrorSupported property from the BatchSupport term."" /> " is 273.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""CrossJoinSupported"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""EntityContainer"" Nullable=""false""> " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""ChangeTracking"" Type=""Capabilities.ChangeTrackingType"" AppliesTo=""EntitySet Singleton Function FunctionImport NavigationProperty""> " is 148.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Restrictions on /$count path suffix and $count=true system query option"" /> " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""NavigationRestrictions"" Type=""Capabilities.NavigationRestrictionsType"" AppliesTo=""EntitySet Singleton""> " is 121.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Restrictions on navigating properties according to OData URL conventions"" /> " is 124.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.LongDescription"" String=""Restrictions specified on an entity set are valid whether the request is directly to the entity set or through a navigation property bound to that entity set. Services can specify a different set of restrictions specific to a path' in which case the more specific restrictions take precedence."" /> " is 349.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""SelectSupport"" Type=""Capabilities.SelectSupportType"" AppliesTo=""EntityContainer EntitySet Singleton"" Nullable=""false""> " is 138.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Supports $batch requests. Services that apply the BatchSupported term should also apply the more comprehensive BatchSupport term."" /> " is 181.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""FilterFunctions"" Type=""Collection(Edm.String)"" AppliesTo=""EntityContainer EntitySet"" Nullable=""false""> " is 122.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.LongDescription"" String=""If not specified' null' or empty' all functions and operators may be attempted."" /> " is 135.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""KeyAsSegmentSupported"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""EntityContainer"" Nullable=""false""> " is 126.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Supports [key-as-segment convention](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_KeyasSegmentConvention) for addressing entities within a collection"" /> " is 244.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""QuerySegmentSupported"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""EntityContainer"" Nullable=""false""> " is 126.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Supports [passing query options in the request body](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_PassingQueryOptionsintheRequestBody)"" /> " is 229.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Deep Insert Support of the annotated resource (the whole service' an entity set' or a collection-valued resource)"" /> " is 165.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Deep Update Support of the annotated resource (the whole service' an entity set' or a collection-valued resource)"" /> " is 165.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""CollectionPropertyRestrictions"" Type=""Collection(Capabilities.CollectionPropertyRestrictionsType)"" AppliesTo=""EntitySet Singleton"" Nullable=""false""> " is 168.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Describes restrictions on operations applied to collection-valued structural properties"" /> " is 139.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""OperationRestrictions"" Type=""Capabilities.OperationRestrictionsType"" AppliesTo=""Action Function"" Nullable=""false""> " is 134.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""AnnotationValuesInQuerySupported"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""EntityContainer"" Nullable=""false""> " is 137.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""ModificationQueryOptions"" Type=""Capabilities.ModificationQueryOptionsType"" AppliesTo=""EntityContainer Action ActionImport""> " is 141.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Support for query options with modification requests (insert' update' action invocation)"" /> " is 140.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Restrictions for retrieving a collection of entities' retrieving a singleton instance."" /> " is 138.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Custom headers that are supported/required for the annotated resource"" /> " is 121.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Custom query options that are supported/required for the annotated resource"" /> " is 127.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.LongDescription"" String=""If the entity container is annotated' the query option is supported/required by all resources in that container."" /> " is 168.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "  <Term Name=""MediaLocationUpdateSupported"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""Property"" Nullable=""false""> " is 126.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Stream property supports update of its media edit URL and/or media read URL"" /> " is 127.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyDependentOnValidationVocabulary,The length of the statement  "            var annotation = this.capVocModel.FindVocabularyAnnotations<IEdmVocabularyAnnotation>(edmProperty' allowedValuesTerm).FirstOrDefault(); " is 135.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyDependentOnValidationVocabulary,The length of the statement  "                Assert.Contains(((IEdmStringConstantExpression)recordProperty.Value).Value' new[] { "multipart/mixed"' "application/json" }); " is 125.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Validation.Pattern"" String=""^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9](:[0-5][0-9](\\.[0-9]+)?)?$"" /> " is 161.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Link relation type' see [IANA Link Relations](http://www.iana.org/assignments/link-relations/link-relations.xhtml)"" /> " is 166.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""The Link term is inspired by the `atom:link` element' see [RFC4287](https://tools.ietf.org/html/rfc4287#section-4.2.7)' and the `Link` HTTP header' see [RFC5988](https://tools.ietf.org/html/rfc5988)"" /> " is 250.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""A path to the target of the message detail' relative to the annotated instance"" /> " is 130.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""A GET request to this URL retries retrieving the problematic instance"" /> " is 121.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Response code of the failed operation' e.g. 424 for a failed dependency"" /> " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""A path expression resolving to a primitive property of the entity type itself or to a primitive property of a complex or navigation property (recursively) of the entity type. The names of the properties in the path are joined together by forward slashes."" /> " is 306.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""A SimpleIdentifier that MUST be unique within the set of aliases' structural and navigation properties of the containing entity type that MUST be used in the key predicate of URLs"" /> " is 231.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""A dictionary of name-value pairs. Names must be valid property names' values may be restricted to a list of types via an annotation with term `Validation.OpenPropertyTypeConstraint`."" /> " is 234.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.LongDescription"" String=""&#xA;Property|Type&#xA;:-------|:---&#xA;Any simple identifier | Any type listed in `Validation.OpenPropertyTypeConstraint`' or any type if there is no constraint&#xA;"" /> " is 223.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Default value for an optional parameter of primitive or enumeration type' using the same rules as the `cast` function in URLs."" /> " is 178.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "      <Annotation Term=""Core.LongDescription"" String=""If no explicit DefaultValue is specified' the service is free on how to interpret omitting the parameter from the request. For example' a service might interpret an omitted optional parameter `KeyDate` as having the current date."" /> " is 285.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""A space-separated list of supported versions of the OData Protocol. Note that 4.0 is implied by 4.01 and does not need to be separately listed."" /> " is 195.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Service-defined value representing the version of the schema. Services MAY use semantic versioning' but clients MUST NOT assume this is the case."" /> " is 197.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""Example"" Type=""Core.ExampleValue"" AppliesTo=""EntityType ComplexType TypeDefinition Term Property NavigationProperty Parameter ReturnType"" Nullable=""false""> " is 175.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "        <PropertyValue Property=""Description"" String=""The value of Core.Example is a record/object containing the example value and/or annotation examples."" /> " is 155.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""A modification operation failed on the annotated instance or collection within a success payload"" /> " is 148.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""IsLanguageDependent"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""Term Property"" Nullable=""false""> " is 122.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Properties and terms annotated with this term are language-dependent"" /> " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Terms annotated with this term can only be applied to elements that have a type that is identical to or derived from the given type name"" /> " is 188.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Resource path for entity container child' can be relative to xml:base and the request URL"" /> " is 141.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""DereferenceableIDs"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""EntityContainer"" Nullable=""false""> " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""ConventionalIDs"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""EntityContainer"" Nullable=""false""> " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""Permissions"" Type=""Core.Permission"" AppliesTo=""Property ComplexType TypeDefinition EntityType EntitySet NavigationProperty Action Function""> " is 158.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""DefaultNamespace"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""Schema Include"" Nullable=""false""> " is 120.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Functions' actions and types in this namespace can be referenced in URLs with or without namespace- or alias- qualification."" /> " is 176.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.LongDescription"" String=""Data Modelers should ensure uniqueness of schema children across all default namespaces' and should avoid naming bound functions' actions' or derived types with the same name as a structural or navigational property of the type."" /> " is 284.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""A value for this non-key property can be provided by the client on insert and remains unchanged on update"" /> " is 157.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""A value for this property can be provided by the client on insert and update. If no value is provided on insert' a non-static default value is generated"" /> " is 204.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Properties and terms annotated with this term MUST contain a valid URL"" /> " is 122.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""AcceptableMediaTypes"" Type=""Collection(Edm.String)"" AppliesTo=""EntityType Property"" Nullable=""false""> " is 121.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Lists the MIME types acceptable for the annotated entity type marked with HasStream=&quot;true&quot; or the annotated stream property"" /> " is 185.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Properties and terms annotated with this term MUST contain a valid MIME type"" /> " is 128.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Data modification requires the use of ETags. A non-empty collection contains the set of properties that are used to compute the ETag. An empty collection means that the service won't tell how it computes the ETag."" /> " is 265.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""AdditionalProperties"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""EntityType ComplexType"" Nullable=""false""> " is 132.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Instances of this type may contain properties in addition to those declared in $metadata"" /> " is 140.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.LongDescription"" String=""If specified as false clients can assume that instances will not contain dynamic properties' irrespective of the value of the OpenType attribute."" /> " is 201.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""AutoExpand"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""NavigationProperty Property"" Nullable=""false""> " is 127.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""The service will automatically expand this stream or navigation property even if not requested with $expand"" /> " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""AutoExpandReferences"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""NavigationProperty"" Nullable=""false""> " is 128.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""The service will automatically expand this navigation property as entity references even if not requested with $expand=.../$ref"" /> " is 179.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""A collection of qualified type names outside of the type hierarchy that instances of this type might be addressable as by using a type-cast segment."" /> " is 200.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""Ordered"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""Property NavigationProperty EntitySet ReturnType"" Nullable=""false""> " is 145.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Collection has a stable order. Ordered collections of primitive or complex types can be indexed by ordinal."" /> " is 159.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""PositionalInsert"" Type=""Core.Tag"" DefaultValue=""true"" AppliesTo=""Property NavigationProperty EntitySet"" Nullable=""false""> " is 143.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "  <Term Name=""AlternateKeys"" Type=""Collection(Core.AlternateKey)"" AppliesTo=""EntityType EntitySet NavigationProperty"" Nullable=""false""> " is 141.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.LongDescription"" String=""All parameters marked as optional must come after any parameters not marked as optional. The binding parameter must not be marked as optional."" /> " is 198.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CoreVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CoreVocabularyTests.cs,TestBaseCoreVocabularyModel,The length of the statement  "    <Annotation Term=""Core.LongDescription"" String=""The annotation value will usually be an expression' e.g. using properties of the binding parameter type for instance-dependent availability' or using properties of a singleton for global availability. The static value `null` means that availability cannot be determined upfront and is instead expressed as an operation advertisement."" /> " is 389.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,AuthorizationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\AuthorizationVocabularyTests.cs,TestAuthorizationVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Issuer location for the OpenID Provider. Configuration information can be obtained by appending `/.well-known/openid-configuration` to this Url."" /> " is 196.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,AuthorizationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\AuthorizationVocabularyTests.cs,TestAuthorizationVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""HTTP Authorization scheme to be used in the Authorization header' as per RFC7235"" /> " is 132.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,AuthorizationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\AuthorizationVocabularyTests.cs,TestAuthorizationVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Identity that has access to the scope or can grant access to the scope."" /> " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,AuthorizationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\AuthorizationVocabularyTests.cs,TestAuthorizationVocabularyModel,The length of the statement  "  <Term Name=""SecuritySchemes"" Type=""Collection(Auth.SecurityScheme)"" AppliesTo=""EntityContainer"" Nullable=""false""> " is 121.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,AuthorizationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\AuthorizationVocabularyTests.cs,TestAuthorizationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""At least one of the specified security schemes are required to make a request against the service."" /> " is 150.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Human-readable message that can be shown to end users if the constraint is not fulfilled"" /> " is 140.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "      <Annotation Term=""Core.Description"" String=""Value MUST be a dynamic expression that evaluates to true if and only if the constraint is fulfilled"" /> " is 152.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Entities related via the single- or collection-valued navigation property identified by `path` are also related via the collection-valued navigation property identified by `target`."" /> " is 233.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""The pattern that a string property' parameter' or term must match. This SHOULD be a valid regular expression' according to the ECMA 262 regular expression dialect."" /> " is 215.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Tags a Minimum or Maximum as exclusive' i.e. an open interval boundary."" /> " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "  <Term Name=""AllowedValues"" Type=""Collection(Validation.AllowedValue)"" AppliesTo=""Property Parameter TypeDefinition"" Nullable=""false""> " is 141.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""A collection of valid values for the annotated property' parameter' or type definition"" /> " is 138.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""The value of the annotated property' parameter' or term must be an integer multiple of this positive value. For temporal types' the value is measured in seconds."" /> " is 213.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "  <Term Name=""ItemsOf"" Type=""Collection(Validation.ItemsOfType)"" AppliesTo=""EntityType ComplexType"" Nullable=""false""> " is 123.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""A list of constraints describing that entities related via one navigation property MUST also be related via another' collection-valued navigation property. The same `path` value MUST NOT occur more than once."" /> " is 260.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.LongDescription"" String=""Example: entity type `Customer` has navigation properties `AllOrders`' `OpenOrders`' and `ClosedOrders`. &#xA;The term allows to express that items of `OpenOrders` and `ClosedOrders` are also items of the `AllOrders` navigation property'&#xA;even though they are defined in an `Orders` entity set."" /> " is 353.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "  <Term Name=""OpenPropertyTypeConstraint"" Type=""Collection(Core.QualifiedTypeName)"" AppliesTo=""ComplexType EntityType"" Nullable=""false""> " is 142.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Dynamic properties added to the annotated open structured type are restricted to the listed types"" /> " is 149.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "  <Term Name=""DerivedTypeConstraint"" Type=""Collection(Core.QualifiedTypeName)"" AppliesTo=""EntitySet Singleton NavigationProperty Property TypeDefinition Parameter ReturnType"" Nullable=""false""> " is 198.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Values are restricted to types that are both identical to or derived from the declared type and a type listed in this collection."" /> " is 181.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.LongDescription"" String=""This allows restricting values to certain sub-trees of an inheritance hierarchy. Types listed in this collection that are not derived from the declared type of the annotated model element are ignored."" /> " is 256.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Annotate a term of type Edm.AnnotationPath' or a property of type Edm.AnnotationPath that is used within a structured term' to restrict the terms that can be targeted by the path."" /> " is 231.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.LongDescription"" String=""The annotation path expression is intended to end in a path segment with one of the listed terms. For forward compatibility' clients should be prepared for the annotation to reference terms besides those listed."" /> " is 267.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Names of specific terms that are applicable and may be applied in the current context. This annotation does not restrict the use of other terms."" /> " is 196.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""The annotated collection must have at most the specified number of items."" /> " is 125.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,ValidationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\ValidationVocabularyTests.cs,TestValidationVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""The annotated collection must have at least the specified number of items."" /> " is 126.
Long Statement,Microsoft.OData.Edm.Tests.Vocabularies,CommunityVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CommunityVocabularyTests.cs,TestCommunityVocabularyModel,The length of the statement  "    <Annotation Term=""Core.Description"" String=""Annotates a function to be substituted for a colon-escaped segment in a Url path"" /> " is 132.
Virtual Method Call from Constructor,Microsoft.OData.Edm.Tests.ExtensionMethods,TestModel,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,TestModel,The constructor "TestModel" calls a virtual method "AddFunctionImport".
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmEnumValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmEnumValueParserTests.cs,TryParseEnumMemberOfMultipleInvalidTypeShouldBeTrue,The following statement contains a magic number: Assert.Equal(2' parsedMember.Count());
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmEnumValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmEnumValueParserTests.cs,TryParseEnumMemberWithFlagsOfTwoValuesShouldBeTrue,The following statement contains a magic number: Assert.Equal(2' parsedMember.Count());
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmEnumValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmEnumValueParserTests.cs,TryParseEnumMemberWithFlagsOfMultiValueShouldBeTrue,The following statement contains a magic number: var write = enumType.AddMember("Write"' new EdmEnumMemberValue(2));
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmEnumValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmEnumValueParserTests.cs,TryParseEnumMemberWithFlagsOfMultiValueShouldBeTrue,The following statement contains a magic number: var readwrite = enumType.AddMember("ReadWrite"' new EdmEnumMemberValue(3));
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmEnumValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmEnumValueParserTests.cs,TryParseEnumMemberWithFlagsOfMultiValueShouldBeTrue,The following statement contains a magic number: Assert.Equal(3' parsedMember.Count());
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseDateWithValidParameterShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new Date(2012' 07' 28)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseDateWithValidParameterShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new Date(2012' 07' 28)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseDateWithValidParameterShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new Date(2012' 07' 28)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseDateTimeOffsetThatProvidesEverythingShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new DateTimeOffset(2012' 7' 28' 13' 22' 16' 123' new TimeSpan(-7' -15' 0))' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseDateTimeOffsetThatProvidesEverythingShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new DateTimeOffset(2012' 7' 28' 13' 22' 16' 123' new TimeSpan(-7' -15' 0))' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseDateTimeOffsetThatProvidesEverythingShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new DateTimeOffset(2012' 7' 28' 13' 22' 16' 123' new TimeSpan(-7' -15' 0))' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseDateTimeOffsetThatProvidesEverythingShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new DateTimeOffset(2012' 7' 28' 13' 22' 16' 123' new TimeSpan(-7' -15' 0))' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseDateTimeOffsetThatProvidesEverythingShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new DateTimeOffset(2012' 7' 28' 13' 22' 16' 123' new TimeSpan(-7' -15' 0))' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseDateTimeOffsetThatProvidesEverythingShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new DateTimeOffset(2012' 7' 28' 13' 22' 16' 123' new TimeSpan(-7' -15' 0))' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseDateTimeOffsetThatProvidesEverythingShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new DateTimeOffset(2012' 7' 28' 13' 22' 16' 123' new TimeSpan(-7' -15' 0))' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseDateTimeOffsetThatProvidesEverythingShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new DateTimeOffset(2012' 7' 28' 13' 22' 16' 123' new TimeSpan(-7' -15' 0))' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseDateTimeOffsetThatProvidesEverythingShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new DateTimeOffset(2012' 7' 28' 13' 22' 16' 123' new TimeSpan(-7' -15' 0))' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,ParseDurationWith1DecimalPlaceShouldNotLosePrecision,The following statement contains a magic number: Assert.Equal(new TimeSpan(9000000)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,ParseDurationWith2DecimalPlacesShouldNotLosePrecision,The following statement contains a magic number: Assert.Equal(new TimeSpan(900000)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,ParseDurationWith3DecimalPlacesShouldNotLosePrecision,The following statement contains a magic number: Assert.Equal(new TimeSpan(90000)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,ParseDurationWith4DecimalPlacesShouldNotLosePrecision,The following statement contains a magic number: Assert.Equal(new TimeSpan(9000)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,ParseDurationWith5DecimalPlacesShouldNotLosePrecision,The following statement contains a magic number: Assert.Equal(new TimeSpan(900)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,ParseDurationWith6DecimalPlacesShouldNotLosePrecision,The following statement contains a magic number: Assert.Equal(new TimeSpan(90)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,ParseDurationWith7DecimalPlacesShouldNotLosePrecision,The following statement contains a magic number: Assert.Equal(new TimeSpan(9)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,ParseDurationWithMoreThan7DecimalPlacesShouldNotLosePrecisionUpTo7,The following statement contains a magic number: Assert.Equal(new TimeSpan(1234567)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseTimeOfDayWithValidParameterShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new TimeOfDay(1' 12' 5' 9)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseTimeOfDayWithValidParameterShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new TimeOfDay(1' 12' 5' 9)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,EdmValueParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\EdmValueParserTests.cs,TryParseTimeOfDayWithValidParameterShouldParseCorrectly,The following statement contains a magic number: Assert.Equal(new TimeOfDay(1' 12' 5' 9)' result);
Magic Number,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ValidateNavigationPropertyBindingPathTraversesContainmentNavigationProperties,The following statement contains a magic number: Assert.Equal(2' targetSegments.Count());
Magic Number,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ValidateNavigationPropertyBindingPathTraversesContainmentNavigationProperties,The following statement contains a magic number: Assert.Equal(2' pathSegments.Count());
Magic Number,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ValidateEducationModel,The following statement contains a magic number: Assert.Equal(2' targetSegments.Count());
Magic Number,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ValidateEducationModel,The following statement contains a magic number: Assert.Equal(2' pathSegments.Count());
Magic Number,Microsoft.OData.Edm.Tests.Csdl,CsdlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlReaderTests.cs,ParsingNavigationPropertyWithEdmPathTypeWorksButValidationFailed,The following statement contains a magic number: Assert.Equal(3' errors.Count());
Magic Number,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,CanWriteEdmEntitySetWithEdmEntityTypeButValidationFailed,The following statement contains a magic number: Assert.Equal(2' errors.Count());
Magic Number,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,CanWriteEdmEntityTypeWithCollectionAbstractTypeButValidationFailed,The following statement contains a magic number: Assert.Equal(2' errors.Count());
Magic Number,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,CanWriteEdmStructuredTypeWithAbstractBaseTypeButValidationFailed,The following statement contains a magic number: Assert.Equal(2' errors.Count());
Magic Number,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,CanWriteEdmFunctioneWithCollectionAbstractTypeButValidationFailed,The following statement contains a magic number: Assert.Equal(2' errors.Count());
Magic Number,Microsoft.OData.Edm.Tests.Csdl,CsdlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\CsdlWriterTests.cs,ShouldWriteAnnotationForEnumMember,The following statement contains a magic number: var washer = new EdmEnumMember(appliance' "Washer"' new EdmEnumMemberValue(2));
Magic Number,Microsoft.OData.Edm.Tests.Csdl.Parsing.Ast,CsdlTypeDefinitionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Parsing\Ast\CsdlTypeDefinitionTests.cs,TestCsdlTypeDefinitionConstructor,The following statement contains a magic number: var loc = new CsdlLocation(17' 4);
Magic Number,Microsoft.OData.Edm.Tests.Csdl.Parsing.Ast,CsdlTypeDefinitionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Parsing\Ast\CsdlTypeDefinitionTests.cs,TestCsdlTypeDefinitionConstructor,The following statement contains a magic number: var loc = new CsdlLocation(17' 4);
Magic Number,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsOperationImportTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsOperationImportTests.cs,CsdlSemanticsOperationImportTests,The following statement contains a magic number: this.testLocation = new CsdlLocation(1' 3);
Magic Number,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsOperationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsOperationTests.cs,CsdlSemanticsOperationTests,The following statement contains a magic number: this.testLocation = new CsdlLocation(1' 3);
Magic Number,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsTypeDefinitionDefinitionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsTypeDefinitionDefinitionTests.cs,CsdlSemanticsTypeDefinitionDefinitionUnitTest,The following statement contains a magic number: CsdlTypeDefinition typeDefinition = new CsdlTypeDefinition("Length"' "Edm.String"' new CsdlLocation(5' 6));
Magic Number,Microsoft.OData.Edm.Tests.Csdl.Semantics,CsdlSemanticsTypeDefinitionDefinitionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Semantics\CsdlSemanticsTypeDefinitionDefinitionTests.cs,CsdlSemanticsTypeDefinitionDefinitionUnitTest,The following statement contains a magic number: CsdlTypeDefinition typeDefinition = new CsdlTypeDefinition("Length"' "Edm.String"' new CsdlLocation(5' 6));
Magic Number,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSchemaWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSchemaWriterTests.cs,CreateEdmModelCsdlSchemaWriter,The following statement contains a magic number: model.SetEdmxVersion(new Version(4' 0));
Magic Number,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VerifyNullableIsWrittenInChildReturnTypeElementForCollectionElementType,The following statement contains a magic number: var action = new EdmAction("Default.Namespace"' "Checkout"' EdmCoreModel.GetCollection(EdmCoreModel.Instance.GetString(isUnbounded: false' maxLength: 10' isUnicode: false' isNullable: false)));
Magic Number,Microsoft.OData.Edm.Tests.Csdl.Serialization,EdmModelCsdlSerializationVisitorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Csdl\Serialization\EdmModelCsdlSerializationVisitorTests.cs,VisitAndVerifyXml,The following statement contains a magic number: model.SetEdmxVersion(new Version(4' 0));
Magic Number,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,FilterByPartialNameShouldReturnBothActionsWithDifferenceNamespacesButSameName,The following statement contains a magic number: Assert.Equal(2' new IEdmOperation[] { action' action2 }.FilterByName(false' "action").Count());
Magic Number,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,EdmNavigationPropertyPrincipalPropertiesShouldReturnPrincipalProperties,The following statement contains a magic number: Assert.Equal(2' properties.Count());
Magic Number,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,TryGetEntitySetWithBoundCsdlSemanticOperationParameterShouldReturnTrueAndHaveNoErrors,The following statement contains a magic number: var testLocation = new CsdlLocation(1' 3);
Magic Number,Microsoft.OData.Edm.Tests.ExtensionMethods,ExtensionMethodTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ExtensionMethods\ExtensionMethodTests.cs,FindTypeForUndefinedTypeDoesnotGetIntoInfiniteSearchLoop,The following statement contains a magic number: Assert.Equal(7' model.ReferencedModels.Count());
Magic Number,Microsoft.OData.Edm.Tests.Library,EdmCoreModelTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmCoreModelTests.cs,SchemaElementsShouldReturnCorrectSchemaElementCount,The following statement contains a magic number: Assert.Equal(40' EdmCoreModel.Instance.SchemaElements.Count());
Magic Number,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldSucceedForTwoPropertyKey,The following statement contains a magic number: Assert.Equal(2' testSubject.PropertyPairs.Count());
Magic Number,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldNotChangeOrderOfProperties,The following statement contains a magic number: Assert.Equal(2' testSubject.PropertyPairs.Count());
Magic Number,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldFailIfTooFewPropertiesAreGiven,The following statement contains a magic number: Assert.Equal(Strings.Constructable_DependentPropertyCountMustMatchNumberOfPropertiesOnPrincipalType(2' 1)' exception.Message);
Magic Number,Microsoft.OData.Edm.Tests.Library,EdmReferentialConstraintTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmReferentialConstraintTests.cs,CreateReferentialConstraintShouldFailIfTooManyPropertiesAreGiven,The following statement contains a magic number: Assert.Equal(Strings.Constructable_DependentPropertyCountMustMatchNumberOfPropertiesOnPrincipalType(1' 2)' exception.Message);
Magic Number,Microsoft.OData.Edm.Tests.Library,EdmSingletonTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\EdmSingletonTests.cs,EdmSingletonBasicNavigationPropertyBindingTest,The following statement contains a magic number: Assert.Equal(3' vipCustomer.NavigationPropertyBindings.Count());
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCtor,The following statement contains a magic number: Action test = () => new Date(-2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCtor,The following statement contains a magic number: Action test = () => new Date(-2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCtor,The following statement contains a magic number: Action test = () => new Date(-2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCtor,The following statement contains a magic number: Assert.Equal(Strings.Date_InvalidDateParameters(-2013' 8' 12)' exception.Message);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCtor,The following statement contains a magic number: Assert.Equal(Strings.Date_InvalidDateParameters(-2013' 8' 12)' exception.Message);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCtor,The following statement contains a magic number: Assert.Equal(Strings.Date_InvalidDateParameters(-2013' 8' 12)' exception.Message);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateToDateTime,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateToDateTime,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateToDateTime,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateToDateTime,The following statement contains a magic number: Assert.Equal(new DateTime(2013' 8' 12)' dt);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateToDateTime,The following statement contains a magic number: Assert.Equal(new DateTime(2013' 8' 12)' dt);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateToDateTime,The following statement contains a magic number: Assert.Equal(new DateTime(2013' 8' 12)' dt);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateTimeToDate,The following statement contains a magic number: DateTime dateTime = new DateTime(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateTimeToDate,The following statement contains a magic number: DateTime dateTime = new DateTime(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateTimeToDate,The following statement contains a magic number: DateTime dateTime = new DateTime(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateTimeToDate,The following statement contains a magic number: Assert.Equal(new Date(2013' 8' 12)' d);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateTimeToDate,The following statement contains a magic number: Assert.Equal(new Date(2013' 8' 12)' d);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateTimeToDate,The following statement contains a magic number: Assert.Equal(new Date(2013' 8' 12)' d);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYears,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYears,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYears,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYears,The following statement contains a magic number: Date result = date.AddYears(100);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYears,The following statement contains a magic number: Assert.Equal(new Date(2113' 8' 12)' result);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYears,The following statement contains a magic number: Assert.Equal(new Date(2113' 8' 12)' result);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYears,The following statement contains a magic number: Assert.Equal(new Date(2113' 8' 12)' result);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYearsInvalidResults,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYearsInvalidResults,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYearsInvalidResults,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYearsInvalidResults,The following statement contains a magic number: Action test = () => date.AddYears(-5000);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYearsInvalidParmeters,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYearsInvalidParmeters,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYearsInvalidParmeters,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddYearsInvalidParmeters,The following statement contains a magic number: Action test = () => date.AddYears(12000);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TesDatetAddMonths,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TesDatetAddMonths,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TesDatetAddMonths,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TesDatetAddMonths,The following statement contains a magic number: Assert.Equal(new Date(2013' 9' 12)' result);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TesDatetAddMonths,The following statement contains a magic number: Assert.Equal(new Date(2013' 9' 12)' result);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TesDatetAddMonths,The following statement contains a magic number: Assert.Equal(new Date(2013' 9' 12)' result);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddMonthsInvalidResults,The following statement contains a magic number: Action test = () => date.AddMonths(-5000);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddMonthsInvalidParmeters,The following statement contains a magic number: Action test = () => date.AddMonths(120001);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddDays,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddDays,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddDays,The following statement contains a magic number: Date date = new Date(2013' 8' 12);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddDays,The following statement contains a magic number: Assert.Equal(new Date(2013' 8' 13)' result);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddDays,The following statement contains a magic number: Assert.Equal(new Date(2013' 8' 13)' result);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddDays,The following statement contains a magic number: Assert.Equal(new Date(2013' 8' 13)' result);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddDaysInvalidResults,The following statement contains a magic number: Action test = () => date.AddDays(-2);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateAddDaysInvalidParmeters,The following statement contains a magic number: Action test = () => date.AddDays(999999999);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestMaxDate,The following statement contains a magic number: Assert.Equal(new Date(9999' 12' 31)' date);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestMaxDate,The following statement contains a magic number: Assert.Equal(new Date(9999' 12' 31)' date);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestMaxDate,The following statement contains a magic number: Assert.Equal(new Date(9999' 12' 31)' date);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseDateSuccess,The following statement contains a magic number: var lists = new List<Tuple<string' Date>>()              {                  new Tuple<string' Date>("2001-01-2"' new Date(2001' 1' 2))'                  new Tuple<string' Date>("2001-1-02"' new Date(2001' 1' 2))'                  new Tuple<string' Date>("0001-12-13"' new Date(1' 12' 13))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseDateSuccess,The following statement contains a magic number: var lists = new List<Tuple<string' Date>>()              {                  new Tuple<string' Date>("2001-01-2"' new Date(2001' 1' 2))'                  new Tuple<string' Date>("2001-1-02"' new Date(2001' 1' 2))'                  new Tuple<string' Date>("0001-12-13"' new Date(1' 12' 13))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseDateSuccess,The following statement contains a magic number: var lists = new List<Tuple<string' Date>>()              {                  new Tuple<string' Date>("2001-01-2"' new Date(2001' 1' 2))'                  new Tuple<string' Date>("2001-1-02"' new Date(2001' 1' 2))'                  new Tuple<string' Date>("0001-12-13"' new Date(1' 12' 13))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseDateSuccess,The following statement contains a magic number: var lists = new List<Tuple<string' Date>>()              {                  new Tuple<string' Date>("2001-01-2"' new Date(2001' 1' 2))'                  new Tuple<string' Date>("2001-1-02"' new Date(2001' 1' 2))'                  new Tuple<string' Date>("0001-12-13"' new Date(1' 12' 13))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseDateSuccess,The following statement contains a magic number: var lists = new List<Tuple<string' Date>>()              {                  new Tuple<string' Date>("2001-01-2"' new Date(2001' 1' 2))'                  new Tuple<string' Date>("2001-1-02"' new Date(2001' 1' 2))'                  new Tuple<string' Date>("0001-12-13"' new Date(1' 12' 13))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseDateSuccess,The following statement contains a magic number: var lists = new List<Tuple<string' Date>>()              {                  new Tuple<string' Date>("2001-01-2"' new Date(2001' 1' 2))'                  new Tuple<string' Date>("2001-1-02"' new Date(2001' 1' 2))'                  new Tuple<string' Date>("0001-12-13"' new Date(1' 12' 13))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateEquals,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()              {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MinValue' true)'                  new Tuple<Date' Date' bool>(Date.MaxValue' Date.MaxValue' true)'                   new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 31)' true)'                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 30)' false)'                  new Tuple<Date' Date' bool>(new Date(1' 1' 1)' Date.MinValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateEquals,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()              {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MinValue' true)'                  new Tuple<Date' Date' bool>(Date.MaxValue' Date.MaxValue' true)'                   new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 31)' true)'                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 30)' false)'                  new Tuple<Date' Date' bool>(new Date(1' 1' 1)' Date.MinValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateEquals,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()              {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MinValue' true)'                  new Tuple<Date' Date' bool>(Date.MaxValue' Date.MaxValue' true)'                   new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 31)' true)'                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 30)' false)'                  new Tuple<Date' Date' bool>(new Date(1' 1' 1)' Date.MinValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateEquals,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()              {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MinValue' true)'                  new Tuple<Date' Date' bool>(Date.MaxValue' Date.MaxValue' true)'                   new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 31)' true)'                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 30)' false)'                  new Tuple<Date' Date' bool>(new Date(1' 1' 1)' Date.MinValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateEquals,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()              {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MinValue' true)'                  new Tuple<Date' Date' bool>(Date.MaxValue' Date.MaxValue' true)'                   new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 31)' true)'                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 30)' false)'                  new Tuple<Date' Date' bool>(new Date(1' 1' 1)' Date.MinValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateEquals,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()              {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MinValue' true)'                  new Tuple<Date' Date' bool>(Date.MaxValue' Date.MaxValue' true)'                   new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 31)' true)'                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 30)' false)'                  new Tuple<Date' Date' bool>(new Date(1' 1' 1)' Date.MinValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateEquals,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()              {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MinValue' true)'                  new Tuple<Date' Date' bool>(Date.MaxValue' Date.MaxValue' true)'                   new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 31)' true)'                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 30)' false)'                  new Tuple<Date' Date' bool>(new Date(1' 1' 1)' Date.MinValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateEquals,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()              {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MinValue' true)'                  new Tuple<Date' Date' bool>(Date.MaxValue' Date.MaxValue' true)'                   new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 31)' true)'                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 30)' false)'                  new Tuple<Date' Date' bool>(new Date(1' 1' 1)' Date.MinValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateEquals,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()              {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MinValue' true)'                  new Tuple<Date' Date' bool>(Date.MaxValue' Date.MaxValue' true)'                   new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 31)' true)'                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 30)' false)'                  new Tuple<Date' Date' bool>(new Date(1' 1' 1)' Date.MinValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateEquals,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()              {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MinValue' true)'                  new Tuple<Date' Date' bool>(Date.MaxValue' Date.MaxValue' true)'                   new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 31)' true)'                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 30)' false)'                  new Tuple<Date' Date' bool>(new Date(1' 1' 1)' Date.MinValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateEquals,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()              {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MinValue' true)'                  new Tuple<Date' Date' bool>(Date.MaxValue' Date.MaxValue' true)'                   new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 31)' true)'                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 30)' false)'                  new Tuple<Date' Date' bool>(new Date(1' 1' 1)' Date.MinValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateEquals,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()              {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MinValue' true)'                  new Tuple<Date' Date' bool>(Date.MaxValue' Date.MaxValue' true)'                   new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 31)' true)'                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(new Date(2010' 12' 31)' new Date(2010' 12' 30)' false)'                  new Tuple<Date' Date' bool>(new Date(1' 1' 1)' Date.MinValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateCompareTo,The following statement contains a magic number: var list = new List<Tuple<Date' Date' int>>()               {                  new Tuple<Date' Date' int>(Date.MinValue' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(Date.MinValue' Date.MinValue' 0)'                  new Tuple<Date' Date' int>(Date.MaxValue' Date.MaxValue' 0)'                  new Tuple<Date' Date' int>(Date.MinValue' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MaxValue' -1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' Date.MinValue' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 30)' 1)'                  new Tuple<Date' Date' int>(Date.MaxValue' new Date(2013' 12' 31)' 1)'                  new Tuple<Date' Date' int>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateGetHashCode,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()               {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(Date.MinValue' new Date(1' 1' 1)' true)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' false)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateGetHashCode,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()               {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(Date.MinValue' new Date(1' 1' 1)' true)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' false)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateGetHashCode,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()               {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(Date.MinValue' new Date(1' 1' 1)' true)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' false)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateGetHashCode,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()               {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(Date.MinValue' new Date(1' 1' 1)' true)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' false)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateGetHashCode,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()               {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(Date.MinValue' new Date(1' 1' 1)' true)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' false)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateGetHashCode,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()               {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(Date.MinValue' new Date(1' 1' 1)' true)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' false)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateGetHashCode,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()               {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(Date.MinValue' new Date(1' 1' 1)' true)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' false)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateGetHashCode,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()               {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(Date.MinValue' new Date(1' 1' 1)' true)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' false)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateGetHashCode,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()               {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(Date.MinValue' new Date(1' 1' 1)' true)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' false)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateGetHashCode,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()               {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(Date.MinValue' new Date(1' 1' 1)' true)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' false)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateGetHashCode,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()               {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(Date.MinValue' new Date(1' 1' 1)' true)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' false)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateGetHashCode,The following statement contains a magic number: var list = new List<Tuple<Date' Date' bool>>()               {                  new Tuple<Date' Date' bool>(Date.MinValue' Date.MaxValue' false)'                  new Tuple<Date' Date' bool>(Date.MinValue' new Date(1' 1' 1)' true)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 30)' new Date(2013' 12' 31)' false)'                  new Tuple<Date' Date' bool>(new Date(2013' 12' 31)' new Date(2013' 12' 31)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateToString,The following statement contains a magic number: var list = new List<Tuple<Date' string>>()              {                  new Tuple<Date' string>(Date.MinValue' "0001-01-01")'                  new Tuple<Date' string>(Date.MaxValue' "9999-12-31")'                  new Tuple<Date' string>(new Date(2014' 12' 31)' "2014-12-31")'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateToString,The following statement contains a magic number: var list = new List<Tuple<Date' string>>()              {                  new Tuple<Date' string>(Date.MinValue' "0001-01-01")'                  new Tuple<Date' string>(Date.MaxValue' "9999-12-31")'                  new Tuple<Date' string>(new Date(2014' 12' 31)' "2014-12-31")'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateToString,The following statement contains a magic number: var list = new List<Tuple<Date' string>>()              {                  new Tuple<Date' string>(Date.MinValue' "0001-01-01")'                  new Tuple<Date' string>(Date.MaxValue' "9999-12-31")'                  new Tuple<Date' string>(new Date(2014' 12' 31)' "2014-12-31")'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateOperator,The following statement contains a magic number: Date d1 = new Date(2014' 9' 18);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateOperator,The following statement contains a magic number: Date d1 = new Date(2014' 9' 18);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateOperator,The following statement contains a magic number: Date d1 = new Date(2014' 9' 18);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateOperator,The following statement contains a magic number: Date d2 = new Date(2014' 9' 20);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateOperator,The following statement contains a magic number: Date d2 = new Date(2014' 9' 20);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateOperator,The following statement contains a magic number: Date d2 = new Date(2014' 9' 20);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateOperator,The following statement contains a magic number: Date d3 = new Date(2014' 9' 20);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateOperator,The following statement contains a magic number: Date d3 = new Date(2014' 9' 20);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateOperator,The following statement contains a magic number: Date d3 = new Date(2014' 9' 20);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateOperator,The following statement contains a magic number: Date d4 = new Date(2014' 10' 1);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestDateOperator,The following statement contains a magic number: Date d4 = new Date(2014' 10' 1);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtorInvalid,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(-1' 1' 1' 1)'                  new Tuple<int' int' int' int>(1' -1' 1' 1)'                  new Tuple<int' int' int' int>(1' 1' -1' 1)'                  new Tuple<int' int' int' int>(1' 1' 1' -1)'                  new Tuple<int' int' int' int>(24' 1' 1' 1)'                  new Tuple<int' int' int' int>(23' 60' 1' 1)'                  new Tuple<int' int' int' int>(23' 59' 60' 1)'                  new Tuple<int' int' int' int>(23' 59' 59' 1000)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtorInvalid,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(-1' 1' 1' 1)'                  new Tuple<int' int' int' int>(1' -1' 1' 1)'                  new Tuple<int' int' int' int>(1' 1' -1' 1)'                  new Tuple<int' int' int' int>(1' 1' 1' -1)'                  new Tuple<int' int' int' int>(24' 1' 1' 1)'                  new Tuple<int' int' int' int>(23' 60' 1' 1)'                  new Tuple<int' int' int' int>(23' 59' 60' 1)'                  new Tuple<int' int' int' int>(23' 59' 59' 1000)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtorInvalid,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(-1' 1' 1' 1)'                  new Tuple<int' int' int' int>(1' -1' 1' 1)'                  new Tuple<int' int' int' int>(1' 1' -1' 1)'                  new Tuple<int' int' int' int>(1' 1' 1' -1)'                  new Tuple<int' int' int' int>(24' 1' 1' 1)'                  new Tuple<int' int' int' int>(23' 60' 1' 1)'                  new Tuple<int' int' int' int>(23' 59' 60' 1)'                  new Tuple<int' int' int' int>(23' 59' 59' 1000)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtorInvalid,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(-1' 1' 1' 1)'                  new Tuple<int' int' int' int>(1' -1' 1' 1)'                  new Tuple<int' int' int' int>(1' 1' -1' 1)'                  new Tuple<int' int' int' int>(1' 1' 1' -1)'                  new Tuple<int' int' int' int>(24' 1' 1' 1)'                  new Tuple<int' int' int' int>(23' 60' 1' 1)'                  new Tuple<int' int' int' int>(23' 59' 60' 1)'                  new Tuple<int' int' int' int>(23' 59' 59' 1000)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtorInvalid,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(-1' 1' 1' 1)'                  new Tuple<int' int' int' int>(1' -1' 1' 1)'                  new Tuple<int' int' int' int>(1' 1' -1' 1)'                  new Tuple<int' int' int' int>(1' 1' 1' -1)'                  new Tuple<int' int' int' int>(24' 1' 1' 1)'                  new Tuple<int' int' int' int>(23' 60' 1' 1)'                  new Tuple<int' int' int' int>(23' 59' 60' 1)'                  new Tuple<int' int' int' int>(23' 59' 59' 1000)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtorInvalid,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(-1' 1' 1' 1)'                  new Tuple<int' int' int' int>(1' -1' 1' 1)'                  new Tuple<int' int' int' int>(1' 1' -1' 1)'                  new Tuple<int' int' int' int>(1' 1' 1' -1)'                  new Tuple<int' int' int' int>(24' 1' 1' 1)'                  new Tuple<int' int' int' int>(23' 60' 1' 1)'                  new Tuple<int' int' int' int>(23' 59' 60' 1)'                  new Tuple<int' int' int' int>(23' 59' 59' 1000)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtorInvalid,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(-1' 1' 1' 1)'                  new Tuple<int' int' int' int>(1' -1' 1' 1)'                  new Tuple<int' int' int' int>(1' 1' -1' 1)'                  new Tuple<int' int' int' int>(1' 1' 1' -1)'                  new Tuple<int' int' int' int>(24' 1' 1' 1)'                  new Tuple<int' int' int' int>(23' 60' 1' 1)'                  new Tuple<int' int' int' int>(23' 59' 60' 1)'                  new Tuple<int' int' int' int>(23' 59' 59' 1000)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtorInvalid,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(-1' 1' 1' 1)'                  new Tuple<int' int' int' int>(1' -1' 1' 1)'                  new Tuple<int' int' int' int>(1' 1' -1' 1)'                  new Tuple<int' int' int' int>(1' 1' 1' -1)'                  new Tuple<int' int' int' int>(24' 1' 1' 1)'                  new Tuple<int' int' int' int>(23' 60' 1' 1)'                  new Tuple<int' int' int' int>(23' 59' 60' 1)'                  new Tuple<int' int' int' int>(23' 59' 59' 1000)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtorInvalid,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(-1' 1' 1' 1)'                  new Tuple<int' int' int' int>(1' -1' 1' 1)'                  new Tuple<int' int' int' int>(1' 1' -1' 1)'                  new Tuple<int' int' int' int>(1' 1' 1' -1)'                  new Tuple<int' int' int' int>(24' 1' 1' 1)'                  new Tuple<int' int' int' int>(23' 60' 1' 1)'                  new Tuple<int' int' int' int>(23' 59' 60' 1)'                  new Tuple<int' int' int' int>(23' 59' 59' 1000)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtorInvalid,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(-1' 1' 1' 1)'                  new Tuple<int' int' int' int>(1' -1' 1' 1)'                  new Tuple<int' int' int' int>(1' 1' -1' 1)'                  new Tuple<int' int' int' int>(1' 1' 1' -1)'                  new Tuple<int' int' int' int>(24' 1' 1' 1)'                  new Tuple<int' int' int' int>(23' 60' 1' 1)'                  new Tuple<int' int' int' int>(23' 59' 60' 1)'                  new Tuple<int' int' int' int>(23' 59' 59' 1000)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCtor,The following statement contains a magic number: var list = new List<Tuple<int' int' int' int>>()              {                  new Tuple<int' int' int' int>(0' 0' 0' 0)'                  new Tuple<int' int' int' int>(23' 59' 59' 999)'                  new Tuple<int' int' int' int>(12' 0' 0' 0)'                  new Tuple<int' int' int' int>(0' 1' 2' 12)'                  new Tuple<int' int' int' int>(3' 12' 13' 9)'                  new Tuple<int' int' int' int>(23' 59' 59' 1)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToTimeSpan,The following statement contains a magic number: var list = new List<TimeOfDay>()              {                  new TimeOfDay(12' 59' 0' 123)'                  new TimeOfDay(23' 59' 58' 1)'                  new TimeOfDay(23' 59' 58' 345)'                  new TimeOfDay(0' 0' 0' 0)'                  new TimeOfDay(163999999999)'                  new TimeOfDay(TimeOfDay.MaxTickValue)'                  new TimeOfDay(TimeOfDay.MinTickValue)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToTimeSpan,The following statement contains a magic number: var list = new List<TimeOfDay>()              {                  new TimeOfDay(12' 59' 0' 123)'                  new TimeOfDay(23' 59' 58' 1)'                  new TimeOfDay(23' 59' 58' 345)'                  new TimeOfDay(0' 0' 0' 0)'                  new TimeOfDay(163999999999)'                  new TimeOfDay(TimeOfDay.MaxTickValue)'                  new TimeOfDay(TimeOfDay.MinTickValue)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToTimeSpan,The following statement contains a magic number: var list = new List<TimeOfDay>()              {                  new TimeOfDay(12' 59' 0' 123)'                  new TimeOfDay(23' 59' 58' 1)'                  new TimeOfDay(23' 59' 58' 345)'                  new TimeOfDay(0' 0' 0' 0)'                  new TimeOfDay(163999999999)'                  new TimeOfDay(TimeOfDay.MaxTickValue)'                  new TimeOfDay(TimeOfDay.MinTickValue)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToTimeSpan,The following statement contains a magic number: var list = new List<TimeOfDay>()              {                  new TimeOfDay(12' 59' 0' 123)'                  new TimeOfDay(23' 59' 58' 1)'                  new TimeOfDay(23' 59' 58' 345)'                  new TimeOfDay(0' 0' 0' 0)'                  new TimeOfDay(163999999999)'                  new TimeOfDay(TimeOfDay.MaxTickValue)'                  new TimeOfDay(TimeOfDay.MinTickValue)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToTimeSpan,The following statement contains a magic number: var list = new List<TimeOfDay>()              {                  new TimeOfDay(12' 59' 0' 123)'                  new TimeOfDay(23' 59' 58' 1)'                  new TimeOfDay(23' 59' 58' 345)'                  new TimeOfDay(0' 0' 0' 0)'                  new TimeOfDay(163999999999)'                  new TimeOfDay(TimeOfDay.MaxTickValue)'                  new TimeOfDay(TimeOfDay.MinTickValue)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToTimeSpan,The following statement contains a magic number: var list = new List<TimeOfDay>()              {                  new TimeOfDay(12' 59' 0' 123)'                  new TimeOfDay(23' 59' 58' 1)'                  new TimeOfDay(23' 59' 58' 345)'                  new TimeOfDay(0' 0' 0' 0)'                  new TimeOfDay(163999999999)'                  new TimeOfDay(TimeOfDay.MaxTickValue)'                  new TimeOfDay(TimeOfDay.MinTickValue)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToTimeSpan,The following statement contains a magic number: var list = new List<TimeOfDay>()              {                  new TimeOfDay(12' 59' 0' 123)'                  new TimeOfDay(23' 59' 58' 1)'                  new TimeOfDay(23' 59' 58' 345)'                  new TimeOfDay(0' 0' 0' 0)'                  new TimeOfDay(163999999999)'                  new TimeOfDay(TimeOfDay.MaxTickValue)'                  new TimeOfDay(TimeOfDay.MinTickValue)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToTimeSpan,The following statement contains a magic number: var list = new List<TimeOfDay>()              {                  new TimeOfDay(12' 59' 0' 123)'                  new TimeOfDay(23' 59' 58' 1)'                  new TimeOfDay(23' 59' 58' 345)'                  new TimeOfDay(0' 0' 0' 0)'                  new TimeOfDay(163999999999)'                  new TimeOfDay(TimeOfDay.MaxTickValue)'                  new TimeOfDay(TimeOfDay.MinTickValue)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToTimeSpan,The following statement contains a magic number: var list = new List<TimeOfDay>()              {                  new TimeOfDay(12' 59' 0' 123)'                  new TimeOfDay(23' 59' 58' 1)'                  new TimeOfDay(23' 59' 58' 345)'                  new TimeOfDay(0' 0' 0' 0)'                  new TimeOfDay(163999999999)'                  new TimeOfDay(TimeOfDay.MaxTickValue)'                  new TimeOfDay(TimeOfDay.MinTickValue)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToTimeSpan,The following statement contains a magic number: var list = new List<TimeOfDay>()              {                  new TimeOfDay(12' 59' 0' 123)'                  new TimeOfDay(23' 59' 58' 1)'                  new TimeOfDay(23' 59' 58' 345)'                  new TimeOfDay(0' 0' 0' 0)'                  new TimeOfDay(163999999999)'                  new TimeOfDay(TimeOfDay.MaxTickValue)'                  new TimeOfDay(TimeOfDay.MinTickValue)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToTimeSpan,The following statement contains a magic number: var list = new List<TimeOfDay>()              {                  new TimeOfDay(12' 59' 0' 123)'                  new TimeOfDay(23' 59' 58' 1)'                  new TimeOfDay(23' 59' 58' 345)'                  new TimeOfDay(0' 0' 0' 0)'                  new TimeOfDay(163999999999)'                  new TimeOfDay(TimeOfDay.MaxTickValue)'                  new TimeOfDay(TimeOfDay.MinTickValue)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeSpanToTimeOfDay,The following statement contains a magic number: var list = new List<TimeSpan>()              {                  new TimeSpan(0)'                   new TimeSpan(123)'                   new TimeSpan(TimeOfDay.MaxTickValue)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayEquals,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()              {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' true)'                   new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(21' 12' 31' 0)' new TimeOfDay(21' 12' 31' 0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 1)' new TimeOfDay(1' 2' 3' 10)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MinTickValue)' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MaxTickValue)' TimeOfDay.MaxValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayEquals,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()              {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' true)'                   new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(21' 12' 31' 0)' new TimeOfDay(21' 12' 31' 0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 1)' new TimeOfDay(1' 2' 3' 10)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MinTickValue)' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MaxTickValue)' TimeOfDay.MaxValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayEquals,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()              {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' true)'                   new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(21' 12' 31' 0)' new TimeOfDay(21' 12' 31' 0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 1)' new TimeOfDay(1' 2' 3' 10)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MinTickValue)' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MaxTickValue)' TimeOfDay.MaxValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayEquals,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()              {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' true)'                   new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(21' 12' 31' 0)' new TimeOfDay(21' 12' 31' 0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 1)' new TimeOfDay(1' 2' 3' 10)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MinTickValue)' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MaxTickValue)' TimeOfDay.MaxValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayEquals,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()              {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' true)'                   new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(21' 12' 31' 0)' new TimeOfDay(21' 12' 31' 0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 1)' new TimeOfDay(1' 2' 3' 10)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MinTickValue)' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MaxTickValue)' TimeOfDay.MaxValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayEquals,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()              {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' true)'                   new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(21' 12' 31' 0)' new TimeOfDay(21' 12' 31' 0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 1)' new TimeOfDay(1' 2' 3' 10)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MinTickValue)' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MaxTickValue)' TimeOfDay.MaxValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayEquals,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()              {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' true)'                   new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(21' 12' 31' 0)' new TimeOfDay(21' 12' 31' 0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 1)' new TimeOfDay(1' 2' 3' 10)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MinTickValue)' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MaxTickValue)' TimeOfDay.MaxValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayEquals,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()              {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' true)'                   new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(21' 12' 31' 0)' new TimeOfDay(21' 12' 31' 0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 1)' new TimeOfDay(1' 2' 3' 10)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MinTickValue)' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MaxTickValue)' TimeOfDay.MaxValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayEquals,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()              {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' true)'                   new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(21' 12' 31' 0)' new TimeOfDay(21' 12' 31' 0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 1)' new TimeOfDay(1' 2' 3' 10)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MinTickValue)' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MaxTickValue)' TimeOfDay.MaxValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayEquals,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()              {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' true)'                   new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(21' 12' 31' 0)' new TimeOfDay(21' 12' 31' 0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 1)' new TimeOfDay(1' 2' 3' 10)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MinTickValue)' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MaxTickValue)' TimeOfDay.MaxValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayEquals,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()              {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' true)'                   new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(21' 12' 31' 0)' new TimeOfDay(21' 12' 31' 0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 1)' new TimeOfDay(1' 2' 3' 10)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MinTickValue)' TimeOfDay.MinValue' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(TimeOfDay.MaxTickValue)' TimeOfDay.MaxValue' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayGetHashCode,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()               {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' new TimeOfDay(0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 0)' new TimeOfDay(1' 2' 4' 0)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 0)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayGetHashCode,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()               {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' new TimeOfDay(0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 0)' new TimeOfDay(1' 2' 4' 0)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 0)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayGetHashCode,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()               {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' new TimeOfDay(0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 0)' new TimeOfDay(1' 2' 4' 0)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 0)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayGetHashCode,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()               {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' new TimeOfDay(0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 0)' new TimeOfDay(1' 2' 4' 0)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 0)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayGetHashCode,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()               {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' new TimeOfDay(0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 0)' new TimeOfDay(1' 2' 4' 0)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 0)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayGetHashCode,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()               {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' new TimeOfDay(0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 0)' new TimeOfDay(1' 2' 4' 0)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 0)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayGetHashCode,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()               {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' new TimeOfDay(0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 0)' new TimeOfDay(1' 2' 4' 0)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 0)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayGetHashCode,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()               {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' new TimeOfDay(0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 0)' new TimeOfDay(1' 2' 4' 0)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 0)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayGetHashCode,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()               {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' new TimeOfDay(0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 0)' new TimeOfDay(1' 2' 4' 0)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 0)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayGetHashCode,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' bool>>()               {                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' TimeOfDay.MaxValue' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(TimeOfDay.MinValue' new TimeOfDay(0)' true)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(1' 2' 3' 0)' new TimeOfDay(1' 2' 4' 0)' false)'                  new Tuple<TimeOfDay' TimeOfDay' bool>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 0)' true)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayCompareTo,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' TimeOfDay' int>>()               {                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' TimeOfDay.MinValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' TimeOfDay.MaxValue' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(23' 59' 59' 0)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 0)' new TimeOfDay(23' 59' 59' 1)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' new TimeOfDay(23' 59' 59' 10)' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 1)' TimeOfDay.MaxValue' -1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(0' 0' 0' 1)' TimeOfDay.MinValue' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(23' 59' 59' 100)' new TimeOfDay(23' 59' 59' 10)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MinValue' new TimeOfDay(0' 0' 0' 0)' 0)'                  new Tuple<TimeOfDay' TimeOfDay' int>(TimeOfDay.MaxValue' new TimeOfDay(23' 59' 59' 999)' 1)'                  new Tuple<TimeOfDay' TimeOfDay' int>(new TimeOfDay(12' 13' 14' 15)' new TimeOfDay(12' 13' 14' 15)' 0)'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToString,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' string>>()              {                  new Tuple<TimeOfDay' string>(TimeOfDay.MinValue' "00:00:00.0000000")'                  new Tuple<TimeOfDay' string>(TimeOfDay.MaxValue' "23:59:59.9999999")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(12' 0' 1' 1)' "12:00:01.0010000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(1' 0' 1' 10)' "01:00:01.0100000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(2' 1' 2' 100)' "02:01:02.1000000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(10' 12' 30' 100)' "10:12:30.1000000")'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToString,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' string>>()              {                  new Tuple<TimeOfDay' string>(TimeOfDay.MinValue' "00:00:00.0000000")'                  new Tuple<TimeOfDay' string>(TimeOfDay.MaxValue' "23:59:59.9999999")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(12' 0' 1' 1)' "12:00:01.0010000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(1' 0' 1' 10)' "01:00:01.0100000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(2' 1' 2' 100)' "02:01:02.1000000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(10' 12' 30' 100)' "10:12:30.1000000")'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToString,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' string>>()              {                  new Tuple<TimeOfDay' string>(TimeOfDay.MinValue' "00:00:00.0000000")'                  new Tuple<TimeOfDay' string>(TimeOfDay.MaxValue' "23:59:59.9999999")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(12' 0' 1' 1)' "12:00:01.0010000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(1' 0' 1' 10)' "01:00:01.0100000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(2' 1' 2' 100)' "02:01:02.1000000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(10' 12' 30' 100)' "10:12:30.1000000")'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToString,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' string>>()              {                  new Tuple<TimeOfDay' string>(TimeOfDay.MinValue' "00:00:00.0000000")'                  new Tuple<TimeOfDay' string>(TimeOfDay.MaxValue' "23:59:59.9999999")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(12' 0' 1' 1)' "12:00:01.0010000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(1' 0' 1' 10)' "01:00:01.0100000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(2' 1' 2' 100)' "02:01:02.1000000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(10' 12' 30' 100)' "10:12:30.1000000")'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToString,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' string>>()              {                  new Tuple<TimeOfDay' string>(TimeOfDay.MinValue' "00:00:00.0000000")'                  new Tuple<TimeOfDay' string>(TimeOfDay.MaxValue' "23:59:59.9999999")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(12' 0' 1' 1)' "12:00:01.0010000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(1' 0' 1' 10)' "01:00:01.0100000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(2' 1' 2' 100)' "02:01:02.1000000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(10' 12' 30' 100)' "10:12:30.1000000")'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToString,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' string>>()              {                  new Tuple<TimeOfDay' string>(TimeOfDay.MinValue' "00:00:00.0000000")'                  new Tuple<TimeOfDay' string>(TimeOfDay.MaxValue' "23:59:59.9999999")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(12' 0' 1' 1)' "12:00:01.0010000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(1' 0' 1' 10)' "01:00:01.0100000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(2' 1' 2' 100)' "02:01:02.1000000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(10' 12' 30' 100)' "10:12:30.1000000")'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToString,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' string>>()              {                  new Tuple<TimeOfDay' string>(TimeOfDay.MinValue' "00:00:00.0000000")'                  new Tuple<TimeOfDay' string>(TimeOfDay.MaxValue' "23:59:59.9999999")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(12' 0' 1' 1)' "12:00:01.0010000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(1' 0' 1' 10)' "01:00:01.0100000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(2' 1' 2' 100)' "02:01:02.1000000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(10' 12' 30' 100)' "10:12:30.1000000")'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToString,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' string>>()              {                  new Tuple<TimeOfDay' string>(TimeOfDay.MinValue' "00:00:00.0000000")'                  new Tuple<TimeOfDay' string>(TimeOfDay.MaxValue' "23:59:59.9999999")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(12' 0' 1' 1)' "12:00:01.0010000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(1' 0' 1' 10)' "01:00:01.0100000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(2' 1' 2' 100)' "02:01:02.1000000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(10' 12' 30' 100)' "10:12:30.1000000")'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayToString,The following statement contains a magic number: var list = new List<Tuple<TimeOfDay' string>>()              {                  new Tuple<TimeOfDay' string>(TimeOfDay.MinValue' "00:00:00.0000000")'                  new Tuple<TimeOfDay' string>(TimeOfDay.MaxValue' "23:59:59.9999999")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(12' 0' 1' 1)' "12:00:01.0010000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(1' 0' 1' 10)' "01:00:01.0100000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(2' 1' 2' 100)' "02:01:02.1000000")'                  new Tuple<TimeOfDay' string>(new TimeOfDay(10' 12' 30' 100)' "10:12:30.1000000")'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestParseTimeOfDaySuccess,The following statement contains a magic number: var lists = new List<Tuple<string' TimeOfDay>>()              {                  new Tuple<string' TimeOfDay>("00:00:00.0000000"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("0:0:0.0"' TimeOfDay.MinValue)'                  new Tuple<string' TimeOfDay>("23:59:59.9999999"' TimeOfDay.MaxValue)'                  new Tuple<string' TimeOfDay>("12:00:01.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("12:0:1.0010000"' new TimeOfDay(12' 0' 1' 1))'                  new Tuple<string' TimeOfDay>("01:00:01.0100000"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("1:0:1.01"' new TimeOfDay(1' 0' 1' 10))'                  new Tuple<string' TimeOfDay>("02:01:02.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("2:1:2.01"' new TimeOfDay(2' 1' 2' 10))'                  new Tuple<string' TimeOfDay>("10:12:30.1000000"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("10:12:30.1"' new TimeOfDay(10' 12' 30' 100))'                  new Tuple<string' TimeOfDay>("00:00:00.0000001"' new TimeOfDay(1))'                  new Tuple<string' TimeOfDay>("10:00"' new TimeOfDay(10' 0' 0' 0))'                  new Tuple<string' TimeOfDay>("13:30:25"' new TimeOfDay(13' 30' 25' 0))'              };
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayOperator,The following statement contains a magic number: TimeOfDay t1 = new TimeOfDay(14' 9' 18' 0);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayOperator,The following statement contains a magic number: TimeOfDay t1 = new TimeOfDay(14' 9' 18' 0);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayOperator,The following statement contains a magic number: TimeOfDay t1 = new TimeOfDay(14' 9' 18' 0);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayOperator,The following statement contains a magic number: TimeOfDay t2 = new TimeOfDay(14' 9' 20' 0);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayOperator,The following statement contains a magic number: TimeOfDay t2 = new TimeOfDay(14' 9' 20' 0);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayOperator,The following statement contains a magic number: TimeOfDay t2 = new TimeOfDay(14' 9' 20' 0);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayOperator,The following statement contains a magic number: TimeOfDay t3 = new TimeOfDay(14' 9' 20' 0);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayOperator,The following statement contains a magic number: TimeOfDay t3 = new TimeOfDay(14' 9' 20' 0);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayOperator,The following statement contains a magic number: TimeOfDay t3 = new TimeOfDay(14' 9' 20' 0);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayOperator,The following statement contains a magic number: TimeOfDay t4 = new TimeOfDay(14' 10' 1' 0);
Magic Number,Microsoft.OData.Edm.Tests.Library,DateAndTimeOfDayTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Schema\DateAndTimeOfDayTests.cs,TestTimeOfDayOperator,The following statement contains a magic number: TimeOfDay t4 = new TimeOfDay(14' 10' 1' 0);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureReadingCsdlResultsInTwoFunctionImportsAndActionImports,The following statement contains a magic number: Assert.Equal(6' operations.Count());
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureReadingCsdlResultsInTwoFunctionImportsAndActionImports,The following statement contains a magic number: Assert.Equal(4' operationImports.Count);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureReadingCsdlResultsInTwoFunctionImportsAndActionImports,The following statement contains a magic number: Assert.Equal("Get1"' operationImports[2].Name);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureReadingCsdlResultsInTwoFunctionImportsAndActionImports,The following statement contains a magic number: Assert.Equal("Get1"' operationImports[2].Operation.Name);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureReadingCsdlResultsInTwoFunctionImportsAndActionImports,The following statement contains a magic number: Assert.Empty(operationImports[2].Operation.Parameters);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureReadingCsdlResultsInTwoFunctionImportsAndActionImports,The following statement contains a magic number: Assert.Equal("Get1"' operationImports[3].Name);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureReadingCsdlResultsInTwoFunctionImportsAndActionImports,The following statement contains a magic number: Assert.Equal("Get1"' operationImports[3].Operation.Name);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureReadingCsdlResultsInTwoFunctionImportsAndActionImports,The following statement contains a magic number: Assert.Single(operationImports[3].Operation.Parameters);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal(8' operations.Count());
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.True(operations[2] is IEdmFunction);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal("FunctionWithPrimitiveReturnType"' operations[2].Name);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal("Edm.String"' operations[2].ReturnType.FullName());
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.False(operations[2].ReturnType.IsNullable);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal(10' operations[2].ReturnType.AsString().MaxLength);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal(10' operations[2].ReturnType.AsString().MaxLength);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.True(operations[3] is IEdmFunction);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal("FunctionWithPrimitiveCollectionReturnType"' operations[3].Name);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal("Collection(Edm.String)"' operations[3].ReturnType.FullName());
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.False(operations[3].ReturnType.AsCollection().ElementType().IsNullable);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal(20' operations[3].ReturnType.AsCollection().ElementType().AsString().MaxLength);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal(20' operations[3].ReturnType.AsCollection().ElementType().AsString().MaxLength);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.True(operations[4] is IEdmAction);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal("ActionWithComplexReturnType"' operations[4].Name);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal("Test.Complex"' operations[4].ReturnType.FullName());
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.False(operations[4].ReturnType.IsNullable);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.True(operations[5] is IEdmAction);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal("ActionWithComplexCollectionReturnType"' operations[5].Name);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal("Collection(Test.Complex)"' operations[5].ReturnType.FullName());
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.False(operations[5].ReturnType.AsCollection().ElementType().IsNullable);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.True(operations[6] is IEdmAction);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal("ActionWithPrimitiveReturnType"' operations[6].Name);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal("Edm.String"' operations[6].ReturnType.FullName());
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.False(operations[6].ReturnType.IsNullable);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal(10' operations[6].ReturnType.AsString().MaxLength);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal(10' operations[6].ReturnType.AsString().MaxLength);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.True(operations[7] is IEdmAction);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal("ActionWithPrimitiveCollectionReturnType"' operations[7].Name);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal("Collection(Edm.String)"' operations[7].ReturnType.FullName());
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.False(operations[7].ReturnType.AsCollection().ElementType().IsNullable);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal(20' operations[7].ReturnType.AsCollection().ElementType().AsString().MaxLength);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisActionsFunctionsRelationshipChangesAcceptanceTest,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisActionsFunctionsRelationshipChangesAcceptanceTests.cs,EnsureOperationReturnTypesAreReadCorrectlyFromCsdl,The following statement contains a magic number: Assert.Equal(20' operations[7].ReturnType.AsCollection().ElementType().AsString().MaxLength);
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisRelationshipChangesAcceptanceTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisRelationshipChangesAcceptanceTests.cs,NavigationTargetMappingsShouldContainAllBindings,The following statement contains a magic number: Assert.Equal(4' bindings.Count());
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisRelationshipChangesAcceptanceTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisRelationshipChangesAcceptanceTests.cs,NavigationTargetMappingsShouldContainAllBindings,The following statement contains a magic number: Assert.Equal(4' bindings.Count());
Magic Number,Microsoft.OData.Edm.Tests.ScenarioTests,OasisRelationshipChangesAcceptanceTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\ScenarioTests\OasisRelationshipChangesAcceptanceTests.cs,ValidationShouldFailIfEnumMemberIsSpecifiedButCannotBeFoundTheMember,The following statement contains a magic number: Assert.Equal(2' errors.Count());
Magic Number,Microsoft.OData.Edm.Tests.Validation,ValidationRuleSetTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Validation\ValidationRuleSetTests.cs,NewValidationRulesShouldBeInTheRuleSetExceptBaselinedExceptionRules,The following statement contains a magic number: ValidationRuleSet.GetEdmModelRuleSet(new Version(4' 0))
Magic Number,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyDependsOnCoreAuthorizationValidationVocabularies,The following statement contains a magic number: Assert.Equal(4' referencedModels.Count());
Magic Number,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyReferenceMultiCoreVocabularyTerms,The following statement contains a magic number: Assert.Equal(2' annotations.Count());
Magic Number,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyNavigationRestrictions,The following statement contains a magic number: Assert.Equal(3' navType.Members.Count());
Magic Number,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyConformanceLevel,The following statement contains a magic number: Assert.Equal(3' enumType.Members.Count());
Magic Number,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyDependentOnValidationVocabulary,The following statement contains a magic number: Assert.Equal(2' collectionExpression.Elements.Count());
Magic Number,Microsoft.OData.Edm.Tests.Vocabularies,AuthorizationVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\AuthorizationVocabularyTests.cs,TestAuthorizationVocabularyDependsOnCoreVocabulary,The following statement contains a magic number: Assert.Equal(2' referencedModels.Count());
Duplicate Code,Microsoft.OData.Edm.Tests.Vocabularies,CapabilitiesVocabularyTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.OData.Edm.Tests\Vocabularies\CapabilitiesVocabularyTests.cs,TestCapabilitiesVocabularyModel,The method contains a code clone-set at the following line numbers (starting from the method definition): ((84' 106)' (412' 434))
