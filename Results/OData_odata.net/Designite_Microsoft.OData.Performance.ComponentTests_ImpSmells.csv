Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The method has 431 lines of code.
Long Method,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The method has 100 lines of code.
Complex Method,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,Cyclomatic complexity of the method is 18
Long Parameter List,Microsoft.OData.Performance,WriteReadFeedTestBase,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\WriteReadFeedTestBase.cs,WriteFeed,The method has 5 parameters. Parameters: writeStream' edmModel' numberOfEntries' innerWrite' entitySet
Long Identifier,Microsoft.OData.Performance,BatchRoundTripPerfTest,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BatchRoundTripPerfTest.cs,,The length of the parameter batchContentTypeApplicationJson is 31.
Long Statement,Microsoft.OData.Performance,ODataMessageHelper,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Common\ODataMessageHelper.cs,CreateMessageWriter,The length of the statement  "                return new ODataMessageWriter(new StreamBasedRequestMessage(stream) { Container = GetSharedContainer() }' settings' model); " is 123.
Long Statement,Microsoft.OData.Performance,ODataMessageHelper,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Common\ODataMessageHelper.cs,CreateMessageWriter,The length of the statement  "            return new ODataMessageWriter(new StreamBasedResponseMessage(stream) { Container = GetSharedContainer() }' settings' model); " is 124.
Long Statement,Microsoft.OData.Performance,ODataMessageHelper,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Common\ODataMessageHelper.cs,CreateMessageWriter,The length of the statement  "            return new ODataMessageWriter(new StreamBasedRequestMessage(stream) { Container = GetSharedContainer() }' settings' model); " is 123.
Long Statement,Microsoft.OData.Performance,TestUtils,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Common\TestUtils.cs,ReadModelFromResources,The length of the statement  "                throw new InvalidOperationException("Failed to load model : " + string.Join(Environment.NewLine' errors.Select(e => e.ErrorMessage))); " is 134.
Long Statement,Microsoft.OData.Performance,ODataReaderFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataReader\ODataReaderFeedTests.cs,ReadFeedTestAndMeasure,The length of the statement  "                        using (var messageReader = ODataMessageHelper.CreateMessageReader(stream' Model' ODataMessageKind.Response' isFullValidation)) " is 126.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriteFeed_NoValidation,The length of the statement  "            WriteFeedTestAndMeasure(expandNavigationLinks: false' includeSpatial: false' entryCount: 1000' isFullValidation: false); " is 120.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriteFeedTestAndMeasure,The length of the statement  "                    using (var messageWriter = ODataMessageHelper.CreateMessageWriter(WriteStream' Model' ODataMessageKind.Request' isFullValidation)) " is 130.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The length of the statement  "                    writer.WriteStart(new ODataResourceSet { Id = new Uri("http://www.odata.org/Perf.svc/Product(2)/ProductCostHistory") }); " is 120.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The length of the statement  "                    writer.WriteStart(new ODataResourceSet { Id = new Uri("http://www.odata.org/Perf.svc/Product(2)/ProductListPriceHistory") }); " is 125.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The length of the statement  "                    writer.WriteStart(new ODataResourceSet { Id = new Uri("http://www.odata.org/Perf.svc/Product(2)/ProductProductPhoto") }); " is 121.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The length of the statement  "                    writer.WriteStart(new ODataResourceSet { Id = new Uri("http://www.odata.org/Perf.svc/Product(2)/PurchaseOrderDetail") }); " is 121.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The length of the statement  "                    writer.WriteStart(new ODataResourceSet { Id = new Uri("http://www.odata.org/Perf.svc/Product(2)/SpecialOfferProduct") }); " is 121.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The length of the statement  "                    writer.WriteStart(new ODataResourceSet { Id = new Uri("http://www.odata.org/Perf.svc/Product(2)/TransactionHistory") }); " is 120.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The length of the statement  "                    new ODataProperty {Name = "OpenProperty3"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}' " is 123.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The length of the statement  "                                    Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() " is 192.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The length of the statement  "                            new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}' " is 122.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The length of the statement  "                            new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}' " is 154.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The length of the statement  "                            new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}' " is 212.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The length of the statement  "                            new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}' " is 431.
Long Statement,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithoutSpatialData,The length of the statement  "                    new ODataProperty {Name = "OpenProperty4"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}' " is 123.
Long Statement,Microsoft.OData.Performance,WriteFeedPropertyTypeTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\WriteFeedPropertyTypeTests.cs,TestAndMeasure,The length of the statement  "                    using (var messageWriter = ODataMessageHelper.CreateMessageWriter(WriteStream' Model' ODataMessageKind.Response' isFullValidation: true)) " is 137.
Long Statement,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,WriteEntry,The length of the statement  "                        new ODataProperty { Name = "LastModifiedTime"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }' " is 127.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}' " is 200.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}' " is 178.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}' " is 178.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}' " is 252.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}' " is 190.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}' " is 222.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}' " is 187.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}' " is 187.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}' " is 187.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}' " is 185.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}' " is 179.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}' " is 207.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }' " is 214.
Long Statement,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The length of the statement  "                    new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }' " is 214.
Long Statement,Microsoft.OData.Performance,UriParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\UriParser\UriParserTests.cs,ParseUri,The length of the statement  "                           "&$expand=ProductInventory'WorkOrder($expand=Product($select=BillOfMaterials'ProductModel;$orderby=StandardCost;$top=4;$skip=3;$search=NOT clothing))" + " is 152.
Long Statement,Microsoft.OData.Performance,UriParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\UriParser\UriParserTests.cs,ParsePath,The length of the statement  "            string query = "Employee(1)/PurchaseOrderHeader/Vendor/ProductVendor/Product/ProductInventory(ProductID = 1'LocationID = 1)/Location/WorkOrderRouting/WorkOrder/Product/BillOfMaterials(1)/UnitMeasure/ModifiedDate"; " is 213.
Long Statement,Microsoft.OData.Performance,UriParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\UriParser\UriParserTests.cs,ParseOrderBy,The length of the statement  "            string query = "Product?$orderby=Name'ProductNumber'MakeFlag'Color'SizeUnitMeasureCode desc'SellStartDate desc'ListPrice'StandardCost asc'ModifiedDate asc"; " is 156.
Long Statement,Microsoft.OData.Performance,UriParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\UriParser\UriParserTests.cs,ParseSelectAndExpand,The length of the statement  "            string query = "Product?$select=BillOfMaterials'ProductModel'ProductSubcategory'ProductCostHistory'ProductListPriceHistory" + " is 125.
Long Statement,Microsoft.OData.Performance,UriParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\UriParser\UriParserTests.cs,ParseSelectAndExpand,The length of the statement  "                           "&$expand=ProductInventory'WorkOrder($expand=Product($select=BillOfMaterials'ProductModel;$orderby=StandardCost;$top=4;$skip=3;$search=NOT clothing))"; " is 151.
Magic Number,Microsoft.OData.Performance,ODataReaderFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataReader\ODataReaderFeedTests.cs,ReadFeed,The following statement contains a magic number: ReadFeedTestAndMeasure("Entry.json"' 1000' true);
Magic Number,Microsoft.OData.Performance,ODataReaderFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataReader\ODataReaderFeedTests.cs,ReadFeedIncludeSpatial,The following statement contains a magic number: ReadFeedTestAndMeasure("EntryIncludeSpatial.json"' 1000' true);
Magic Number,Microsoft.OData.Performance,ODataReaderFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataReader\ODataReaderFeedTests.cs,ReadFeedWithExpansions,The following statement contains a magic number: ReadFeedTestAndMeasure("EntryWithExpansions.json"' 100' true);
Magic Number,Microsoft.OData.Performance,ODataReaderFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataReader\ODataReaderFeedTests.cs,ReadFeedIncludeSpatialWithExpansions,The following statement contains a magic number: ReadFeedTestAndMeasure("EntryIncludeSpatialWithExpansions.json"' 100' true);
Magic Number,Microsoft.OData.Performance,ODataReaderFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataReader\ODataReaderFeedTests.cs,ReadFeed_NoValidation,The following statement contains a magic number: ReadFeedTestAndMeasure("Entry.json"' 1000' false);
Magic Number,Microsoft.OData.Performance,ODataReaderFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataReader\ODataReaderFeedTests.cs,ReadFeedIncludeSpatial_NoValidation,The following statement contains a magic number: ReadFeedTestAndMeasure("EntryIncludeSpatial.json"' 1000' false);
Magic Number,Microsoft.OData.Performance,ODataReaderFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataReader\ODataReaderFeedTests.cs,ReadFeedWithExpansions_NoValidation,The following statement contains a magic number: ReadFeedTestAndMeasure("EntryWithExpansions.json"' 100' false);
Magic Number,Microsoft.OData.Performance,ODataReaderFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataReader\ODataReaderFeedTests.cs,ReadFeedIncludeSpatialWithExpansions_NoValidation,The following statement contains a magic number: ReadFeedTestAndMeasure("EntryIncludeSpatialWithExpansions.json"' 100' false);
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriteFeed,The following statement contains a magic number: WriteFeedTestAndMeasure(expandNavigationLinks: false' includeSpatial: false' entryCount: 1000' isFullValidation: true);
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriteFeedIncludeSpatial,The following statement contains a magic number: WriteFeedTestAndMeasure(expandNavigationLinks: false' includeSpatial: true' entryCount: 1000' isFullValidation: true);
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriteFeedWithExpansions,The following statement contains a magic number: WriteFeedTestAndMeasure(expandNavigationLinks: true' includeSpatial: false' entryCount: 100' isFullValidation: true);
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriteFeedIncludeSpatialWithExpansions,The following statement contains a magic number: WriteFeedTestAndMeasure(expandNavigationLinks: true' includeSpatial: true' entryCount: 100' isFullValidation: true);
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriteFeed_NoValidation,The following statement contains a magic number: WriteFeedTestAndMeasure(expandNavigationLinks: false' includeSpatial: false' entryCount: 1000' isFullValidation: false);
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriteFeedIncludeSpatial_NoValidation,The following statement contains a magic number: WriteFeedTestAndMeasure(expandNavigationLinks: false' includeSpatial: true' entryCount: 1000' isFullValidation: false);
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriteFeedWithExpansions_NoValidation,The following statement contains a magic number: WriteFeedTestAndMeasure(expandNavigationLinks: true' includeSpatial: false' entryCount: 100' isFullValidation: false);
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriteFeedIncludeSpatialWithExpansions_NoValidation,The following statement contains a magic number: WriteFeedTestAndMeasure(expandNavigationLinks: true' includeSpatial: true' entryCount: 100' isFullValidation: false);
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry4 = new ODataResource                          {                              Properties = new[]                              {                                  new ODataProperty {Name = "BillOfMaterialsID"' Value = 5}'                                  new ODataProperty {Name = "ProductAssemblyID"' Value = -1}'                                  new ODataProperty {Name = "ComponentID"' Value = 1}'                                  new ODataProperty {Name = "StartDate"' Value = DateTimeOffset.Now}'                                  new ODataProperty {Name = "EndDate"' Value = null}'                                  new ODataProperty {Name = "UnitMeasureCode"' Value = "abc"}'                                  new ODataProperty {Name = "BOMLevel"' Value = (short)0}'                                  new ODataProperty {Name = "PerAssemblyQty"' Value = Decimal.MinusOne}'                                  new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.Now}'                              }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i3 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry7 = new ODataResource                          {                              Properties = new[]                              {                                  new ODataProperty {Name = "BillOfMaterialsID"' Value = 8}'                                  new ODataProperty {Name = "ProductAssemblyID"' Value = 1}'                                  new ODataProperty {Name = "ComponentID"' Value = -1}'                                  new ODataProperty {Name = "StartDate"' Value = DateTimeOffset.MaxValue}'                                  new ODataProperty {Name = "EndDate"' Value = DateTimeOffset.Now}'                                  new ODataProperty {Name = "UnitMeasureCode"' Value = "abc"}'                                  new ODataProperty {Name = "BOMLevel"' Value = Int16.MaxValue}'                                  new ODataProperty {Name = "PerAssemblyQty"' Value = Decimal.MinusOne}'                                  new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                              }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i6 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry9 = new ODataResource                      {                          Properties = new[]                          {                              new ODataProperty {Name = "ProductModelID"' Value = 10}'                              new ODataProperty {Name = "Name"' Value = "abc123"}'                              new ODataProperty {Name = "CatalogDescription"' Value = "abc123"}'                              new ODataProperty {Name = "Instructions"' Value = "abc123"}'                              new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                              new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.Now}'                          }                      };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry11 = new ODataResource                      {                          Properties = new[]                          {                              new ODataProperty {Name = "ProductSubcategoryID"' Value = 12}'                              new ODataProperty {Name = "ProductCategoryID"' Value = 1}'                              new ODataProperty {Name = "Name"' Value = string.Empty}'                              new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                              new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MinValue}'                          }                      };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry16 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "ProductID"' Value = 17}'                                      new ODataProperty {Name = "StartDate"' Value = DateTimeOffset.Parse("2012-06-08T16:20:53.2388635-07:00")}'                                      new ODataProperty {Name = "EndDate"' Value = DateTimeOffset.Now}'                                      new ODataProperty {Name = "StandardCost"' Value = Decimal.Zero}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i15 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry19 = new ODataResource                          {                              Properties = new[]                              {                                  new ODataProperty {Name = "ProductID"' Value = 20}'                                  new ODataProperty {Name = "DocumentID"' Value = 21}'                                  new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MinValue}'                              }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry19 = new ODataResource                          {                              Properties = new[]                              {                                  new ODataProperty {Name = "ProductID"' Value = 20}'                                  new ODataProperty {Name = "DocumentID"' Value = 21}'                                  new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MinValue}'                              }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i18 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry23 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "ProductID"' Value = 24}'                                      new ODataProperty {Name = "LocationID"' Value = (short)25}'                                      new ODataProperty {Name = "Shelf"' Value = "abc123"}'                                      new ODataProperty {Name = "Bin"' Value = Byte.MinValue}'                                      new ODataProperty {Name = "Quantity"' Value = (short)0}'                                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.Now}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry23 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "ProductID"' Value = 24}'                                      new ODataProperty {Name = "LocationID"' Value = (short)25}'                                      new ODataProperty {Name = "Shelf"' Value = "abc123"}'                                      new ODataProperty {Name = "Bin"' Value = Byte.MinValue}'                                      new ODataProperty {Name = "Quantity"' Value = (short)0}'                                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.Now}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i22 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry27 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "ProductID"' Value = 28}'                                      new ODataProperty {Name = "StartDate"' Value = DateTimeOffset.Parse("2012-06-08T16:20:53.2544949-07:00")}'                                      new ODataProperty {Name = "EndDate"' Value = DateTimeOffset.MaxValue}'                                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MinValue}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i26 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry30 = new ODataResource                          {                              Properties = new[]                              {                                  new ODataProperty {Name = "ProductID"' Value = 31}'                                  new ODataProperty {Name = "ProductPhotoID"' Value = 32}'                                  new ODataProperty {Name = "Primary"' Value = false}'                                  new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.Now}'                              }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry30 = new ODataResource                          {                              Properties = new[]                              {                                  new ODataProperty {Name = "ProductID"' Value = 31}'                                  new ODataProperty {Name = "ProductPhotoID"' Value = 32}'                                  new ODataProperty {Name = "Primary"' Value = false}'                                  new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.Now}'                              }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i29 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry34 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "ProductReviewID"' Value = 35}'                                      new ODataProperty {Name = "ProductID"' Value = Int32.MaxValue}'                                      new ODataProperty {Name = "ReviewerName"' Value = string.Empty}'                                      new ODataProperty {Name = "ReviewDate"' Value = DateTimeOffset.MinValue}'                                      new ODataProperty {Name = "EmailAddress"' Value = string.Empty}'                                      new ODataProperty {Name = "Rating"' Value = 0}'                                      new ODataProperty {Name = "Comments"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MinValue}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i33 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry37 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "ProductID"' Value = 38}'                                      new ODataProperty {Name = "VendorID"' Value = 39}'                                      new ODataProperty {Name = "AverageLeadTime"' Value = Int32.MinValue}'                                      new ODataProperty {Name = "StandardPrice"' Value = Decimal.MinValue}'                                      new ODataProperty {Name = "LastReceiptCost"' Value = Decimal.MinValue}'                                      new ODataProperty {Name = "LastReceiptDate"' Value = DateTimeOffset.MaxValue}'                                      new ODataProperty {Name = "MinOrderQty"' Value = 0}'                                      new ODataProperty {Name = "MaxOrderQty"' Value = 1}'                                      new ODataProperty {Name = "OnOrderQty"' Value = 1}'                                      new ODataProperty {Name = "UnitMeasureCode"' Value = string.Empty}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MinValue}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry37 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "ProductID"' Value = 38}'                                      new ODataProperty {Name = "VendorID"' Value = 39}'                                      new ODataProperty {Name = "AverageLeadTime"' Value = Int32.MinValue}'                                      new ODataProperty {Name = "StandardPrice"' Value = Decimal.MinValue}'                                      new ODataProperty {Name = "LastReceiptCost"' Value = Decimal.MinValue}'                                      new ODataProperty {Name = "LastReceiptDate"' Value = DateTimeOffset.MaxValue}'                                      new ODataProperty {Name = "MinOrderQty"' Value = 0}'                                      new ODataProperty {Name = "MaxOrderQty"' Value = 1}'                                      new ODataProperty {Name = "OnOrderQty"' Value = 1}'                                      new ODataProperty {Name = "UnitMeasureCode"' Value = string.Empty}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MinValue}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i36 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry41 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "PurchaseOrderID"' Value = 42}'                                      new ODataProperty {Name = "PurchaseOrderDetailID"' Value = 43}'                                      new ODataProperty {Name = "DueDate"' Value = DateTimeOffset.Now}'                                      new ODataProperty {Name = "OrderQty"' Value = (short)0}'                                      new ODataProperty {Name = "ProductID"' Value = Int32.MaxValue}'                                      new ODataProperty {Name = "UnitPrice"' Value = Decimal.Zero}'                                      new ODataProperty {Name = "LineTotal"' Value = Decimal.MinValue}'                                      new ODataProperty {Name = "ReceivedQty"' Value = 123.456m}'                                      new ODataProperty {Name = "RejectedQty"' Value = 123.456m}'                                      new ODataProperty {Name = "StockedQty"' Value = Decimal.MaxValue}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.Now}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry41 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "PurchaseOrderID"' Value = 42}'                                      new ODataProperty {Name = "PurchaseOrderDetailID"' Value = 43}'                                      new ODataProperty {Name = "DueDate"' Value = DateTimeOffset.Now}'                                      new ODataProperty {Name = "OrderQty"' Value = (short)0}'                                      new ODataProperty {Name = "ProductID"' Value = Int32.MaxValue}'                                      new ODataProperty {Name = "UnitPrice"' Value = Decimal.Zero}'                                      new ODataProperty {Name = "LineTotal"' Value = Decimal.MinValue}'                                      new ODataProperty {Name = "ReceivedQty"' Value = 123.456m}'                                      new ODataProperty {Name = "RejectedQty"' Value = 123.456m}'                                      new ODataProperty {Name = "StockedQty"' Value = Decimal.MaxValue}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.Now}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry41 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "PurchaseOrderID"' Value = 42}'                                      new ODataProperty {Name = "PurchaseOrderDetailID"' Value = 43}'                                      new ODataProperty {Name = "DueDate"' Value = DateTimeOffset.Now}'                                      new ODataProperty {Name = "OrderQty"' Value = (short)0}'                                      new ODataProperty {Name = "ProductID"' Value = Int32.MaxValue}'                                      new ODataProperty {Name = "UnitPrice"' Value = Decimal.Zero}'                                      new ODataProperty {Name = "LineTotal"' Value = Decimal.MinValue}'                                      new ODataProperty {Name = "ReceivedQty"' Value = 123.456m}'                                      new ODataProperty {Name = "RejectedQty"' Value = 123.456m}'                                      new ODataProperty {Name = "StockedQty"' Value = Decimal.MaxValue}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.Now}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry41 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "PurchaseOrderID"' Value = 42}'                                      new ODataProperty {Name = "PurchaseOrderDetailID"' Value = 43}'                                      new ODataProperty {Name = "DueDate"' Value = DateTimeOffset.Now}'                                      new ODataProperty {Name = "OrderQty"' Value = (short)0}'                                      new ODataProperty {Name = "ProductID"' Value = Int32.MaxValue}'                                      new ODataProperty {Name = "UnitPrice"' Value = Decimal.Zero}'                                      new ODataProperty {Name = "LineTotal"' Value = Decimal.MinValue}'                                      new ODataProperty {Name = "ReceivedQty"' Value = 123.456m}'                                      new ODataProperty {Name = "RejectedQty"' Value = 123.456m}'                                      new ODataProperty {Name = "StockedQty"' Value = Decimal.MaxValue}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.Now}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i40 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry45 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "ShoppingCartItemID"' Value = 46}'                                      new ODataProperty {Name = "ShoppingCartID"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                                      new ODataProperty {Name = "Quantity"' Value = -1}'                                      new ODataProperty {Name = "ProductID"' Value = 0}'                                      new ODataProperty {Name = "DateCreated"' Value = DateTimeOffset.Now}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.Now}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i44 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry48 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "SpecialOfferID"' Value = 49}'                                      new ODataProperty {Name = "ProductID"' Value = 50}'                                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MinValue}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry48 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "SpecialOfferID"' Value = 49}'                                      new ODataProperty {Name = "ProductID"' Value = 50}'                                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MinValue}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i47 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry52 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "TransactionID"' Value = 53}'                                      new ODataProperty {Name = "ProductID"' Value = -1}'                                      new ODataProperty {Name = "ReferenceOrderID"' Value = Int32.MaxValue}'                                      new ODataProperty {Name = "ReferenceOrderLineID"' Value = 1}'                                      new ODataProperty {Name = "TransactionDate"' Value = DateTimeOffset.MinValue}'                                      new ODataProperty {Name = "TransactionType"' Value = "a"}'                                      new ODataProperty {Name = "Quantity"' Value = Int32.MinValue}'                                      new ODataProperty {Name = "ActualCost"' Value = Decimal.MaxValue}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MinValue}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i51 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: var entry55 = new ODataResource                          {                              Properties = new[]                                  {                                      new ODataProperty {Name = "WorkOrderID"' Value = 56}'                                      new ODataProperty {Name = "ProductID"' Value = Int32.MinValue}'                                      new ODataProperty {Name = "OrderQty"' Value = 1}'                                      new ODataProperty {Name = "StockedQty"' Value = -1}'                                      new ODataProperty {Name = "ScrappedQty"' Value = (short)1}'                                      new ODataProperty {Name = "StartDate"' Value = DateTimeOffset.MaxValue}'                                      new ODataProperty {Name = "EndDate"' Value = DateTimeOffset.Now}'                                      new ODataProperty {Name = "DueDate"' Value = DateTimeOffset.MinValue}'                                      new ODataProperty {Name = "ScrapReasonID"' Value = Int16.MaxValue}'                                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.Now}'                                  }                          };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,WriterTestMetaProperties,The following statement contains a magic number: i54 < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty3"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty3"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty3"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty3"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty3"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty3"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty3"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty3"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: var complexEntry = new ODataResource                  {                      TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                      Properties = new[]                              {                                  new ODataProperty                                  {                                      Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()                                  }'                                  new ODataProperty                                  {                                      Name = "Offset"' Value = DateTimeOffset.Now                                  }'                                  new ODataProperty                                  {                                      Name = "StartTime"' Value = TimeSpan.MaxValue                                  }'                              }                  };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: i < 10
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithSpatialData,The following statement contains a magic number: writer.WriteStart(new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.AddressSpatial"'                  Properties = new[]                          {                              new ODataProperty {Name = "Coordinates"' Value = GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                              new ODataProperty {Name = "StreetCoordinates"' Value = GeographyFactory.LineString(32' -100).LineTo(0' 100).LineTo(0.9' -10.3).LineTo(16.85' 35).Build()}'                              new ODataProperty {Name = "Region"' Value = GeometryFactory.Polygon().Ring(33.1' -110).LineTo(1' 2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build()}'                              new ODataProperty {Name = "NeighbouringRegions"' Value = GeographyFactory.MultiPolygon().Polygon().Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(-1' -0.9).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(9.01' 1).Polygon().Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).LineTo(0.9' 100.5).Ring(33.1' -110).LineTo(35.97' -110.15).LineTo(11.45' 87.75).LineTo(88.77' 33.55).Build()}'                          }              });
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithoutSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty4"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithoutSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty4"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithoutSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty4"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithoutSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty4"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithoutSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty4"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithoutSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty4"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithoutSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty4"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithoutSpatialData,The following statement contains a magic number: var entry = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "ProductID"' Value = 2}'                      new ODataProperty {Name = "Name"' Value = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"}'                      new ODataProperty {Name = "ProductNumber"' Value = "abcdefghijklmnopqrstuvwxy"}'                      new ODataProperty {Name = "MakeFlag"' Value = false}'                      new ODataProperty {Name = "FinishedGoodsFlag"' Value = false}'                      new ODataProperty {Name = "Color"' Value = "abcdefghijklmno"}'                      new ODataProperty {Name = "SafetyStockLevel"' Value = (short)0}'                      new ODataProperty {Name = "ReorderPoint"' Value = (short)-1}'                      new ODataProperty {Name = "StandardCost"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "ListPrice"' Value = Decimal.Zero}'                      new ODataProperty {Name = "Size"' Value = null}'                      new ODataProperty {Name = "SizeUnitMeasureCode"' Value = string.Empty}'                      new ODataProperty {Name = "WeightUnitMeasureCode"' Value = "abc"}'                      new ODataProperty {Name = "Weight"' Value = Decimal.MaxValue}'                      new ODataProperty {Name = "DaysToManufacture"' Value = 0}'                      new ODataProperty {Name = "ProductLine"' Value = "ab"}'                      new ODataProperty {Name = "Class"' Value = "ab"}'                      new ODataProperty {Name = "Style"' Value = "ab"}'                      new ODataProperty {Name = "ProductSubcategoryID"' Value = Int32.MinValue}'                      new ODataProperty {Name = "ProductModelID"' Value = null}'                      new ODataProperty {Name = "SellStartDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "SellEndDate"' Value = null}'                      new ODataProperty {Name = "DiscontinuedDate"' Value = DateTimeOffset.Now}'                      new ODataProperty {Name = "rowguid"' Value = Guid.NewGuid()}'                      new ODataProperty {Name = "ModifiedDate"' Value = DateTimeOffset.MaxValue}'                      new ODataProperty {Name = "LuckyNumbers"' Value = new ODataCollectionValue                      {                          TypeName = "Collection(Edm.Int64)"'                          Items = Enumerable.Range(0' 10).Select(n => (object)-1L)                      }}'                      new ODataProperty {Name = "OpenProperty0"' Value = Byte.MinValue}'                      new ODataProperty {Name = "OpenProperty1"' Value = 0L}'                      new ODataProperty {Name = "OpenProperty2"' Value = GeographyFactory.Point(32' -100).Build()}'                      new ODataProperty {Name = "OpenProperty4"' Value = GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(0.1' 0.1).Build()}'                  }              };
Magic Number,Microsoft.OData.Performance,ODataWriterFeedTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\ODataWriter\ODataWriterFeedTests.cs,EntryWithoutSpatialData,The following statement contains a magic number: i < 10
Magic Number,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,WriteFeedBinaryData_4MB,The following statement contains a magic number: Action<ODataWriter> writeEntry = (writer) => this.WriteEntry(writer' 4 * 1024);
Magic Number,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,WriteFeedBinaryData_4MB,The following statement contains a magic number: Action<ODataWriter> writeEntry = (writer) => this.WriteEntry(writer' 4 * 1024);
Magic Number,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,ReadFeedBinaryData_4MB,The following statement contains a magic number: Action<ODataWriter> writeEntry = (writer) => this.WriteEntry(writer' 4 * 1024);
Magic Number,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,ReadFeedBinaryData_4MB,The following statement contains a magic number: Action<ODataWriter> writeEntry = (writer) => this.WriteEntry(writer' 4 * 1024);
Magic Number,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,WriteEntry,The following statement contains a magic number: var attachment = dataSizeKb == 0 ? null                  : new ODataResource()                  {                      TypeName = "PerformanceServices.Edm.ExchangeAttachment.Attachment"'                      Properties = new[]                      {                          new ODataProperty { Name = "Name"' Value = "attachment" }'                          new ODataProperty { Name = "IsInline"' Value = false }'                          new ODataProperty { Name = "LastModifiedTime"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                          new ODataProperty { Name = "Content"' Value = new byte[dataSizeKb * 1024]}'                       }                  };
Magic Number,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,WriteEntry,The following statement contains a magic number: var attachment = dataSizeKb == 0 ? null                  : new ODataResource()                  {                      TypeName = "PerformanceServices.Edm.ExchangeAttachment.Attachment"'                      Properties = new[]                      {                          new ODataProperty { Name = "Name"' Value = "attachment" }'                          new ODataProperty { Name = "IsInline"' Value = false }'                          new ODataProperty { Name = "LastModifiedTime"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                          new ODataProperty { Name = "Content"' Value = new byte[dataSizeKb * 1024]}'                       }                  };
Magic Number,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,WriteEntry,The following statement contains a magic number: var attachment = dataSizeKb == 0 ? null                  : new ODataResource()                  {                      TypeName = "PerformanceServices.Edm.ExchangeAttachment.Attachment"'                      Properties = new[]                      {                          new ODataProperty { Name = "Name"' Value = "attachment" }'                          new ODataProperty { Name = "IsInline"' Value = false }'                          new ODataProperty { Name = "LastModifiedTime"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                          new ODataProperty { Name = "Content"' Value = new byte[dataSizeKb * 1024]}'                       }                  };
Magic Number,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,WriteEntry,The following statement contains a magic number: var attachment = dataSizeKb == 0 ? null                  : new ODataResource()                  {                      TypeName = "PerformanceServices.Edm.ExchangeAttachment.Attachment"'                      Properties = new[]                      {                          new ODataProperty { Name = "Name"' Value = "attachment" }'                          new ODataProperty { Name = "IsInline"' Value = false }'                          new ODataProperty { Name = "LastModifiedTime"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                          new ODataProperty { Name = "Content"' Value = new byte[dataSizeKb * 1024]}'                       }                  };
Magic Number,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,WriteEntry,The following statement contains a magic number: var attachment = dataSizeKb == 0 ? null                  : new ODataResource()                  {                      TypeName = "PerformanceServices.Edm.ExchangeAttachment.Attachment"'                      Properties = new[]                      {                          new ODataProperty { Name = "Name"' Value = "attachment" }'                          new ODataProperty { Name = "IsInline"' Value = false }'                          new ODataProperty { Name = "LastModifiedTime"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                          new ODataProperty { Name = "Content"' Value = new byte[dataSizeKb * 1024]}'                       }                  };
Magic Number,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,WriteEntry,The following statement contains a magic number: var attachment = dataSizeKb == 0 ? null                  : new ODataResource()                  {                      TypeName = "PerformanceServices.Edm.ExchangeAttachment.Attachment"'                      Properties = new[]                      {                          new ODataProperty { Name = "Name"' Value = "attachment" }'                          new ODataProperty { Name = "IsInline"' Value = false }'                          new ODataProperty { Name = "LastModifiedTime"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                          new ODataProperty { Name = "Content"' Value = new byte[dataSizeKb * 1024]}'                       }                  };
Magic Number,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,WriteEntry,The following statement contains a magic number: var attachment = dataSizeKb == 0 ? null                  : new ODataResource()                  {                      TypeName = "PerformanceServices.Edm.ExchangeAttachment.Attachment"'                      Properties = new[]                      {                          new ODataProperty { Name = "Name"' Value = "attachment" }'                          new ODataProperty { Name = "IsInline"' Value = false }'                          new ODataProperty { Name = "LastModifiedTime"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                          new ODataProperty { Name = "Content"' Value = new byte[dataSizeKb * 1024]}'                       }                  };
Magic Number,Microsoft.OData.Performance,BinaryDataScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BinaryDataScaleTests.cs,WriteEntry,The following statement contains a magic number: var attachment = dataSizeKb == 0 ? null                  : new ODataResource()                  {                      TypeName = "PerformanceServices.Edm.ExchangeAttachment.Attachment"'                      Properties = new[]                      {                          new ODataProperty { Name = "Name"' Value = "attachment" }'                          new ODataProperty { Name = "IsInline"' Value = false }'                          new ODataProperty { Name = "LastModifiedTime"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                          new ODataProperty { Name = "Content"' Value = new byte[dataSizeKb * 1024]}'                       }                  };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteFeedDataSize_4MB,The following statement contains a magic number: int dataSizeKb = 4 * 1024;
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteFeedDataSize_4MB,The following statement contains a magic number: int dataSizeKb = 4 * 1024;
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteFeedDataSize_4MB,The following statement contains a magic number: numberOfEntries = (dataSizeKb * 1024) * BaseNumberOfEntries / basePayLoadLength;
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteFeedDataSize_8MB,The following statement contains a magic number: int dataSizeKb = 8 * 1024;
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteFeedDataSize_8MB,The following statement contains a magic number: int dataSizeKb = 8 * 1024;
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteFeedDataSize_8MB,The following statement contains a magic number: numberOfEntries = (dataSizeKb * 1024) * BaseNumberOfEntries / basePayLoadLength;
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,ReadFeedDataSize_4MB,The following statement contains a magic number: int dataSizeKb = 4 * 1024;
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,ReadFeedDataSize_4MB,The following statement contains a magic number: int dataSizeKb = 4 * 1024;
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,ReadFeedDataSize_4MB,The following statement contains a magic number: numberOfEntries = (dataSizeKb * 1024) * BaseNumberOfEntries / basePayLoadLength;
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,ReadFeedDataSize_8MB,The following statement contains a magic number: int dataSizeKb = 8 * 1024;
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,ReadFeedDataSize_8MB,The following statement contains a magic number: int dataSizeKb = 8 * 1024;
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,ReadFeedDataSize_8MB,The following statement contains a magic number: numberOfEntries = (dataSizeKb * 1024) * BaseNumberOfEntries / basePayLoadLength;
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c1 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.ManyPropertiedComplexType"'                  Properties = new[]                  {                      new ODataProperty{ Name = "Property1"' Value = new byte[] {0' 1' 2' 3' 4' 5' 6' 7}}'                      new ODataProperty{ Name = "Property2"' Value = true}'                      new ODataProperty{ Name = "Property3"' Value = (byte)1}'                      new ODataProperty{ Name = "Property4"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))}'                      new ODataProperty{ Name = "Property5"' Value = Decimal.MaxValue}'                      new ODataProperty{ Name = "Property13"' Value = new Guid("00005259-2341-5431-5432-234234234234")}'                      new ODataProperty{ Name = "Property14"' Value = Int16.MaxValue}'                      new ODataProperty{ Name = "Property15"' Value = Int32.MaxValue}'                      new ODataProperty{ Name = "Property16"' Value = Int64.MaxValue}'                      new ODataProperty{ Name = "Property17"' Value = (Single)5.4}'                      new ODataProperty{ Name = "Property18"' Value = "Hello World"}'                      new ODataProperty{ Name = "Property19"' Value = new TimeSpan(1987' 6' 54' 32)}'                      new ODataProperty{ Name = "CollectionProperty1"' Value = new ODataCollectionValue { TypeName = "Collection(Binary)"' Items = Enumerable.Range(0' 10).Select(n => new byte[] {0' 1' 2' 3' 4' 5' 6' 7})}}'                      new ODataProperty{ Name = "CollectionProperty2"' Value = new ODataCollectionValue { TypeName = "Collection(Boolean)"' Items = Enumerable.Range(0' 10).Select(n => (object)true)}}'                      new ODataProperty{ Name = "CollectionProperty3"' Value = new ODataCollectionValue { TypeName = "Collection(Byte)"' Items = Enumerable.Range(0' 10).Select(n => (object)(byte)1)}}'                      new ODataProperty{ Name = "CollectionProperty4"' Value = new ODataCollectionValue { TypeName = "Collection(DateTimeOffset)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0))))}}'                      new ODataProperty{ Name = "CollectionProperty5"' Value = new ODataCollectionValue { TypeName = "Collection(Decimal)"' Items = Enumerable.Range(0' 10).Select(n => (object)Decimal.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty13"' Value = new ODataCollectionValue { TypeName = "Collection(Guid)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new Guid("00005259-2341-5431-5432-234234234234")))}}'                      new ODataProperty{ Name = "CollectionProperty14"' Value = new ODataCollectionValue { TypeName = "Collection(Int16)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int16.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty15"' Value = new ODataCollectionValue { TypeName = "Collection(Int32)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int32.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty16"' Value = new ODataCollectionValue { TypeName = "Collection(Int64)"' Items = Enumerable.Range(0' 10).Select(n => (object)Int64.MaxValue)}}'                      new ODataProperty{ Name = "CollectionProperty17"' Value = new ODataCollectionValue { TypeName = "Collection(Single)"' Items = Enumerable.Range(0' 10).Select(n => (object)(Single)5.4)}}'                      new ODataProperty{ Name = "CollectionProperty18"' Value = new ODataCollectionValue { TypeName = "Collection(String)"' Items = Enumerable.Range(0' 10).Select(n => "Hello World")}}'                      new ODataProperty{ Name = "CollectionProperty19"' Value = new ODataCollectionValue { TypeName = "Collection(Duration)"' Items = Enumerable.Range(0' 10).Select(n => (object)(new TimeSpan(1987' 6' 54' 32)))}}'                    }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var c2 = new ODataResource()              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              };
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,DataSizeScaleTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\DataSizeScaleTests.cs,WriteEntry,The following statement contains a magic number: var complexColItems = Enumerable.Range(0' 10).Select(n => new ODataResource              {                  TypeName = "PerformanceServices.Edm.AdventureWorks.TimeZone"'                  Properties = new[]                  {                      new ODataProperty { Name = "Region"' Value = GeographyFactory.Polygon().Ring(33.1' -110).LineTo(1'2).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(0.03' -0.01).LineTo(45.23' 23.10).Build() }'                      new ODataProperty { Name = "Offset"' Value = new DateTimeOffset(1987' 6' 5' 4' 3' 21' 0' new TimeSpan(0' 0' 3' 0)) }'                      new ODataProperty { Name = "StartTime"' Value = TimeSpan.MaxValue }'                  }              });
Magic Number,Microsoft.OData.Performance,BatchRoundTripPerfTest,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BatchRoundTripPerfTest.cs,BatchRoundTripPerfTest,The following statement contains a magic number: int len = 1 << 10;
Magic Number,Microsoft.OData.Performance,BatchRoundTripPerfTest,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BatchRoundTripPerfTest.cs,BatchNCreationsTest,The following statement contains a magic number: const int N = 1 << 10;
Magic Number,Microsoft.OData.Performance,BatchRoundTripPerfTest,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BatchRoundTripPerfTest.cs,BatchNRoundTripsTest,The following statement contains a magic number: const int N = 1<<10;
Magic Number,Microsoft.OData.Performance,BatchRoundTripPerfTest,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BatchRoundTripPerfTest.cs,PrintProgress,The following statement contains a magic number: i%100 == 0
Magic Number,Microsoft.OData.Performance,BatchRoundTripPerfTest,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BatchRoundTripPerfTest.cs,CreateBatchRequest,The following statement contains a magic number: ODataBatchOperationRequestMessage queryOperationMessage = batchWriter.CreateOperationRequestMessage(                          "GET"'                          new Uri(string.Format(CultureInfo.InvariantCulture' "{0}/{1}"' serviceDocumentUri' "MySingleton"))'                          (idx + 2).ToString());
Magic Number,Microsoft.OData.Performance,BatchRoundTripPerfTest,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BatchRoundTripPerfTest.cs,ServiceReadReferenceUriBatchRequestAndWriteResponse,The following statement contains a magic number: switch (batchReader.State)                          {                              case ODataBatchReaderState.Operation:                                  // Encountered an operation (either top-level or in a change set)                                  ODataBatchOperationRequestMessage operationMessage =                                      batchReader.CreateOperationRequestMessage();                                    ODataBatchOperationResponseMessage response =                                      batchWriter.CreateOperationResponseMessage(operationMessage.ContentId);                                    if (operationMessage.Method == "PUT")                                  {                                      using (ODataMessageReader operationMessageReader = new ODataMessageReader(                                          operationMessage' new ODataMessageReaderSettings()' this.userModel))                                      {                                          ODataReader reader = operationMessageReader.CreateODataResourceReader();                                      }                                        response.StatusCode = 201;                                      response.SetHeader("Content-Type"' "application/json;odata.metadata=none");                                  }                                  else if (operationMessage.Method == "PATCH")                                  {                                      using (ODataMessageReader operationMessageReader = new ODataMessageReader(                                          operationMessage' new ODataMessageReaderSettings()' this.userModel))                                      {                                          ODataReader reader = operationMessageReader.CreateODataResourceReader();                                      }                                        response.StatusCode = 204;                                  }                                  else if (operationMessage.Method == "GET")                                  {                                      response.StatusCode = 200;                                      response.SetHeader("Content-Type"' "application/json;");                                      ODataMessageWriterSettings writerSettings = new ODataMessageWriterSettings();                                      writerSettings.ODataUri.ServiceRoot = new Uri(serviceDocumentUri);                                        using (                                          ODataMessageWriter operationMessageWriter = new ODataMessageWriter(response'                                              writerSettings' this.userModel))                                      {                                          ODataWriter entryWriter =                                              operationMessageWriter.CreateODataResourceWriter(this.singleton'                                                  this.webType);                                          ODataResource entry = new ODataResource()                                          {                                              TypeName = "NS.Web"'                                              Properties = new[]                                              {                                                  new ODataProperty() {Name = "WebId"' Value = -1}'                                                  new ODataProperty() {Name = "Name"' Value = aLongString}                                              }                                          };                                          entryWriter.WriteStart(entry);                                          entryWriter.WriteEnd();                                      }                                  }                                    break;                              case ODataBatchReaderState.ChangesetStart:                                  // Set the group Id on the writer side to correlate with request.                                  // Use API available in OData 7.2. Don't need to have same group Id for this test.                                  batchWriter.WriteStartChangeset();                                  break;                              case ODataBatchReaderState.ChangesetEnd:                                  batchWriter.WriteEndChangeset();                                  break;                          }
Magic Number,Microsoft.OData.Performance,BatchRoundTripPerfTest,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BatchRoundTripPerfTest.cs,ServiceReadReferenceUriBatchRequestAndWriteResponse,The following statement contains a magic number: switch (batchReader.State)                          {                              case ODataBatchReaderState.Operation:                                  // Encountered an operation (either top-level or in a change set)                                  ODataBatchOperationRequestMessage operationMessage =                                      batchReader.CreateOperationRequestMessage();                                    ODataBatchOperationResponseMessage response =                                      batchWriter.CreateOperationResponseMessage(operationMessage.ContentId);                                    if (operationMessage.Method == "PUT")                                  {                                      using (ODataMessageReader operationMessageReader = new ODataMessageReader(                                          operationMessage' new ODataMessageReaderSettings()' this.userModel))                                      {                                          ODataReader reader = operationMessageReader.CreateODataResourceReader();                                      }                                        response.StatusCode = 201;                                      response.SetHeader("Content-Type"' "application/json;odata.metadata=none");                                  }                                  else if (operationMessage.Method == "PATCH")                                  {                                      using (ODataMessageReader operationMessageReader = new ODataMessageReader(                                          operationMessage' new ODataMessageReaderSettings()' this.userModel))                                      {                                          ODataReader reader = operationMessageReader.CreateODataResourceReader();                                      }                                        response.StatusCode = 204;                                  }                                  else if (operationMessage.Method == "GET")                                  {                                      response.StatusCode = 200;                                      response.SetHeader("Content-Type"' "application/json;");                                      ODataMessageWriterSettings writerSettings = new ODataMessageWriterSettings();                                      writerSettings.ODataUri.ServiceRoot = new Uri(serviceDocumentUri);                                        using (                                          ODataMessageWriter operationMessageWriter = new ODataMessageWriter(response'                                              writerSettings' this.userModel))                                      {                                          ODataWriter entryWriter =                                              operationMessageWriter.CreateODataResourceWriter(this.singleton'                                                  this.webType);                                          ODataResource entry = new ODataResource()                                          {                                              TypeName = "NS.Web"'                                              Properties = new[]                                              {                                                  new ODataProperty() {Name = "WebId"' Value = -1}'                                                  new ODataProperty() {Name = "Name"' Value = aLongString}                                              }                                          };                                          entryWriter.WriteStart(entry);                                          entryWriter.WriteEnd();                                      }                                  }                                    break;                              case ODataBatchReaderState.ChangesetStart:                                  // Set the group Id on the writer side to correlate with request.                                  // Use API available in OData 7.2. Don't need to have same group Id for this test.                                  batchWriter.WriteStartChangeset();                                  break;                              case ODataBatchReaderState.ChangesetEnd:                                  batchWriter.WriteEndChangeset();                                  break;                          }
Magic Number,Microsoft.OData.Performance,BatchRoundTripPerfTest,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BatchRoundTripPerfTest.cs,ServiceReadReferenceUriBatchRequestAndWriteResponse,The following statement contains a magic number: switch (batchReader.State)                          {                              case ODataBatchReaderState.Operation:                                  // Encountered an operation (either top-level or in a change set)                                  ODataBatchOperationRequestMessage operationMessage =                                      batchReader.CreateOperationRequestMessage();                                    ODataBatchOperationResponseMessage response =                                      batchWriter.CreateOperationResponseMessage(operationMessage.ContentId);                                    if (operationMessage.Method == "PUT")                                  {                                      using (ODataMessageReader operationMessageReader = new ODataMessageReader(                                          operationMessage' new ODataMessageReaderSettings()' this.userModel))                                      {                                          ODataReader reader = operationMessageReader.CreateODataResourceReader();                                      }                                        response.StatusCode = 201;                                      response.SetHeader("Content-Type"' "application/json;odata.metadata=none");                                  }                                  else if (operationMessage.Method == "PATCH")                                  {                                      using (ODataMessageReader operationMessageReader = new ODataMessageReader(                                          operationMessage' new ODataMessageReaderSettings()' this.userModel))                                      {                                          ODataReader reader = operationMessageReader.CreateODataResourceReader();                                      }                                        response.StatusCode = 204;                                  }                                  else if (operationMessage.Method == "GET")                                  {                                      response.StatusCode = 200;                                      response.SetHeader("Content-Type"' "application/json;");                                      ODataMessageWriterSettings writerSettings = new ODataMessageWriterSettings();                                      writerSettings.ODataUri.ServiceRoot = new Uri(serviceDocumentUri);                                        using (                                          ODataMessageWriter operationMessageWriter = new ODataMessageWriter(response'                                              writerSettings' this.userModel))                                      {                                          ODataWriter entryWriter =                                              operationMessageWriter.CreateODataResourceWriter(this.singleton'                                                  this.webType);                                          ODataResource entry = new ODataResource()                                          {                                              TypeName = "NS.Web"'                                              Properties = new[]                                              {                                                  new ODataProperty() {Name = "WebId"' Value = -1}'                                                  new ODataProperty() {Name = "Name"' Value = aLongString}                                              }                                          };                                          entryWriter.WriteStart(entry);                                          entryWriter.WriteEnd();                                      }                                  }                                    break;                              case ODataBatchReaderState.ChangesetStart:                                  // Set the group Id on the writer side to correlate with request.                                  // Use API available in OData 7.2. Don't need to have same group Id for this test.                                  batchWriter.WriteStartChangeset();                                  break;                              case ODataBatchReaderState.ChangesetEnd:                                  batchWriter.WriteEndChangeset();                                  break;                          }
Magic Number,Microsoft.OData.Performance,BatchRoundTripPerfTest,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BatchRoundTripPerfTest.cs,ClientReadBatchResponse,The following statement contains a magic number: switch (batchReader.State)                      {                          case ODataBatchReaderState.Operation:                              ODataBatchOperationResponseMessage operationMessage = batchReader.CreateOperationResponseMessage();                              if (operationMessage.StatusCode == 200)                              {                                  using (ODataMessageReader innerMessageReader = new ODataMessageReader(                                      operationMessage' new ODataMessageReaderSettings()' this.userModel))                                  {                                      ODataReader reader = innerMessageReader.CreateODataResourceReader();                                        while (reader.Read()) { }                                  }                              }                              break;                          default:                              break;                      }
Magic Number,Microsoft.OData.Performance,UriParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\UriParser\UriParserTests.cs,ParseUri,The following statement contains a magic number: int roundPerIteration = 1000;
Magic Number,Microsoft.OData.Performance,UriParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\UriParser\UriParserTests.cs,ParsePath,The following statement contains a magic number: int roundPerIteration = 5000;
Magic Number,Microsoft.OData.Performance,UriParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\UriParser\UriParserTests.cs,ParseFilter,The following statement contains a magic number: int roundPerIteration = 5000;
Magic Number,Microsoft.OData.Performance,UriParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\UriParser\UriParserTests.cs,ParseOrderBy,The following statement contains a magic number: int roundPerIteration = 5000;
Magic Number,Microsoft.OData.Performance,UriParserTests,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\UriParser\UriParserTests.cs,ParseSelectAndExpand,The following statement contains a magic number: int roundPerIteration = 5000;
Missing Default,Microsoft.OData.Performance,BatchRoundTripPerfTest,C:\research\architectureSmells\repos\OData_odata.net\test\PerformanceTests\ComponentTests\Scenario\BatchRoundTripPerfTest.cs,ServiceReadReferenceUriBatchRequestAndWriteResponse,The following switch statement is missing a default case: switch (batchReader.State)                          {                              case ODataBatchReaderState.Operation:                                  // Encountered an operation (either top-level or in a change set)                                  ODataBatchOperationRequestMessage operationMessage =                                      batchReader.CreateOperationRequestMessage();                                    ODataBatchOperationResponseMessage response =                                      batchWriter.CreateOperationResponseMessage(operationMessage.ContentId);                                    if (operationMessage.Method == "PUT")                                  {                                      using (ODataMessageReader operationMessageReader = new ODataMessageReader(                                          operationMessage' new ODataMessageReaderSettings()' this.userModel))                                      {                                          ODataReader reader = operationMessageReader.CreateODataResourceReader();                                      }                                        response.StatusCode = 201;                                      response.SetHeader("Content-Type"' "application/json;odata.metadata=none");                                  }                                  else if (operationMessage.Method == "PATCH")                                  {                                      using (ODataMessageReader operationMessageReader = new ODataMessageReader(                                          operationMessage' new ODataMessageReaderSettings()' this.userModel))                                      {                                          ODataReader reader = operationMessageReader.CreateODataResourceReader();                                      }                                        response.StatusCode = 204;                                  }                                  else if (operationMessage.Method == "GET")                                  {                                      response.StatusCode = 200;                                      response.SetHeader("Content-Type"' "application/json;");                                      ODataMessageWriterSettings writerSettings = new ODataMessageWriterSettings();                                      writerSettings.ODataUri.ServiceRoot = new Uri(serviceDocumentUri);                                        using (                                          ODataMessageWriter operationMessageWriter = new ODataMessageWriter(response'                                              writerSettings' this.userModel))                                      {                                          ODataWriter entryWriter =                                              operationMessageWriter.CreateODataResourceWriter(this.singleton'                                                  this.webType);                                          ODataResource entry = new ODataResource()                                          {                                              TypeName = "NS.Web"'                                              Properties = new[]                                              {                                                  new ODataProperty() {Name = "WebId"' Value = -1}'                                                  new ODataProperty() {Name = "Name"' Value = aLongString}                                              }                                          };                                          entryWriter.WriteStart(entry);                                          entryWriter.WriteEnd();                                      }                                  }                                    break;                              case ODataBatchReaderState.ChangesetStart:                                  // Set the group Id on the writer side to correlate with request.                                  // Use API available in OData 7.2. Don't need to have same group Id for this test.                                  batchWriter.WriteStartChangeset();                                  break;                              case ODataBatchReaderState.ChangesetEnd:                                  batchWriter.WriteEndChangeset();                                  break;                          }
