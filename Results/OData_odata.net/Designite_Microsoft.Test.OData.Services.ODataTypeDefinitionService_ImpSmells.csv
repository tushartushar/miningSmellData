Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The method has 139 lines of code.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,TypeDefinitionInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionInMemoryModel.cs,CreateModel,The length of the statement  "            addressType.AddProperty(new EdmStructuralProperty(addressType' "Road"' new EdmTypeDefinitionReference(nameType' false))); " is 121.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,TypeDefinitionInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionInMemoryModel.cs,CreateModel,The length of the statement  "            personType.AddProperty(new EdmStructuralProperty(personType' "FirstName"' new EdmTypeDefinitionReference(nameType' false))); " is 124.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,TypeDefinitionInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionInMemoryModel.cs,CreateModel,The length of the statement  "            personType.AddProperty(new EdmStructuralProperty(personType' "LastName"' new EdmTypeDefinitionReference(nameType' false))); " is 123.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,TypeDefinitionInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionInMemoryModel.cs,CreateModel,The length of the statement  "            personType.AddProperty(new EdmStructuralProperty(personType' "Address"' new EdmComplexTypeReference(addressType' true))); " is 121.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,TypeDefinitionInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionInMemoryModel.cs,CreateModel,The length of the statement  "            personType.AddProperty(new EdmStructuralProperty(personType' "Descriptions"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmTypeDefinitionReference(nameType' false))))); " is 182.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,TypeDefinitionInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionInMemoryModel.cs,CreateModel,The length of the statement  "            productType.AddProperty(new EdmStructuralProperty(productType' "TheCombo"' new EdmComplexTypeReference(numberComboType' true))); " is 128.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,TypeDefinitionInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionInMemoryModel.cs,CreateModel,The length of the statement  "            productType.AddProperty(new EdmStructuralProperty(productType' "LargeNumbers"' new EdmCollectionTypeReference(new EdmCollectionType(model.GetUInt64(ns' false))))); " is 163.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,TypeDefinitionInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionInMemoryModel.cs,CreateModel,The length of the statement  "            var getFullNameFunction = new EdmFunction(ns' "GetFullName"' new EdmTypeDefinitionReference(nameType' false)' true' null' false); " is 129.
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Person                  {                      PersonId = 1'                      FirstName = "Bob"'                      LastName = "Cat"'                      Address = new Address                      {                          Road = "Zixing Road"'                          City = "Shanghai"                      }'                      Descriptions = new Collection<string> { "Nice"' "Tall" }                  }'                  new Person                  {                      PersonId = 2'                      FirstName = "Jill"'                      LastName = "Jones"'                      Address = new Address                      {                          Road = "Hongqiao Road"'                          City = "Shanghai"                      }'                      Descriptions = new Collection<string> { "Nice" }                  }'                  new Person                  {                      PersonId = 3'                      FirstName = "Jacob"'                      LastName = "Zip"'                      Address = new Address                      {                          Road = "1 Microsoft Way"'                          City = "Redmond"                      }'                      Descriptions = new Collection<string> { "Easy going"' "Smile" }                  }'                  new Person                  {                      PersonId = 4'                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Address = new Address                      {                          Road = "1 Microsoft Way"'                          City = "Redmond"                      }'                      Descriptions = new Collection<string> { "Patient" }                  }'                  new Person                  {                      PersonId = 5'                      FirstName = "Peter"'                      LastName = "Bee"'                      Address = new Address                      {                          Road = "Zixing Road"'                          City = "Shanghai"                      }'                      Descriptions = new Collection<string>()                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Person                  {                      PersonId = 1'                      FirstName = "Bob"'                      LastName = "Cat"'                      Address = new Address                      {                          Road = "Zixing Road"'                          City = "Shanghai"                      }'                      Descriptions = new Collection<string> { "Nice"' "Tall" }                  }'                  new Person                  {                      PersonId = 2'                      FirstName = "Jill"'                      LastName = "Jones"'                      Address = new Address                      {                          Road = "Hongqiao Road"'                          City = "Shanghai"                      }'                      Descriptions = new Collection<string> { "Nice" }                  }'                  new Person                  {                      PersonId = 3'                      FirstName = "Jacob"'                      LastName = "Zip"'                      Address = new Address                      {                          Road = "1 Microsoft Way"'                          City = "Redmond"                      }'                      Descriptions = new Collection<string> { "Easy going"' "Smile" }                  }'                  new Person                  {                      PersonId = 4'                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Address = new Address                      {                          Road = "1 Microsoft Way"'                          City = "Redmond"                      }'                      Descriptions = new Collection<string> { "Patient" }                  }'                  new Person                  {                      PersonId = 5'                      FirstName = "Peter"'                      LastName = "Bee"'                      Address = new Address                      {                          Road = "Zixing Road"'                          City = "Shanghai"                      }'                      Descriptions = new Collection<string>()                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Person                  {                      PersonId = 1'                      FirstName = "Bob"'                      LastName = "Cat"'                      Address = new Address                      {                          Road = "Zixing Road"'                          City = "Shanghai"                      }'                      Descriptions = new Collection<string> { "Nice"' "Tall" }                  }'                  new Person                  {                      PersonId = 2'                      FirstName = "Jill"'                      LastName = "Jones"'                      Address = new Address                      {                          Road = "Hongqiao Road"'                          City = "Shanghai"                      }'                      Descriptions = new Collection<string> { "Nice" }                  }'                  new Person                  {                      PersonId = 3'                      FirstName = "Jacob"'                      LastName = "Zip"'                      Address = new Address                      {                          Road = "1 Microsoft Way"'                          City = "Redmond"                      }'                      Descriptions = new Collection<string> { "Easy going"' "Smile" }                  }'                  new Person                  {                      PersonId = 4'                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Address = new Address                      {                          Road = "1 Microsoft Way"'                          City = "Redmond"                      }'                      Descriptions = new Collection<string> { "Patient" }                  }'                  new Person                  {                      PersonId = 5'                      FirstName = "Peter"'                      LastName = "Bee"'                      Address = new Address                      {                          Road = "Zixing Road"'                          City = "Shanghai"                      }'                      Descriptions = new Collection<string>()                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Person                  {                      PersonId = 1'                      FirstName = "Bob"'                      LastName = "Cat"'                      Address = new Address                      {                          Road = "Zixing Road"'                          City = "Shanghai"                      }'                      Descriptions = new Collection<string> { "Nice"' "Tall" }                  }'                  new Person                  {                      PersonId = 2'                      FirstName = "Jill"'                      LastName = "Jones"'                      Address = new Address                      {                          Road = "Hongqiao Road"'                          City = "Shanghai"                      }'                      Descriptions = new Collection<string> { "Nice" }                  }'                  new Person                  {                      PersonId = 3'                      FirstName = "Jacob"'                      LastName = "Zip"'                      Address = new Address                      {                          Road = "1 Microsoft Way"'                          City = "Redmond"                      }'                      Descriptions = new Collection<string> { "Easy going"' "Smile" }                  }'                  new Person                  {                      PersonId = 4'                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Address = new Address                      {                          Road = "1 Microsoft Way"'                          City = "Redmond"                      }'                      Descriptions = new Collection<string> { "Patient" }                  }'                  new Person                  {                      PersonId = 5'                      FirstName = "Peter"'                      LastName = "Bee"'                      Address = new Address                      {                          Road = "Zixing Road"'                          City = "Shanghai"                      }'                      Descriptions = new Collection<string>()                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService.DataSource,TypeDefinitionDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataTypeDefinitionService\TypeDefinitionDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product                  {                      ProductId = 11'                      Quantity = 100'                      NullableUInt32 = 12'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 36'12' 9 }                  }'                  new Product                  {                      ProductId = 12'                      Quantity = UInt32.MaxValue'                      NullableUInt32 = UInt32.MaxValue'                      LifeTimeInSeconds = UInt64.MaxValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MaxValue'                          Middle = UInt32.MaxValue'                          Large = UInt64.MaxValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MaxValue' UInt64.MaxValue }                  }'                  new Product                  {                      ProductId = 13'                      Quantity = UInt32.MinValue'                      NullableUInt32 = null'                      LifeTimeInSeconds = UInt64.MinValue'                      TheCombo = new NumberCombo                      {                          Small = UInt16.MinValue'                          Middle = UInt32.MinValue'                          Large = UInt64.MinValue                      }'                      LargeNumbers = new Collection<UInt64> { UInt64.MinValue }                  }'                  new Product                  {                      ProductId = 14'                      Quantity = 30'                      NullableUInt32 = 109'                      LifeTimeInSeconds = 3600'                      TheCombo = new NumberCombo                      {                          Small = 12'                          Middle = 133333'                          Large = 99889986                      }'                      LargeNumbers = new Collection<UInt64>()                  }'                  new Product                  {                      ProductId = 15'                      Quantity = 105'                      NullableUInt32 = null'                      LifeTimeInSeconds = 1800'                      TheCombo = new NumberCombo                      {                          Small = 80'                          Middle = 196'                          Large = 3                      }'                      LargeNumbers = new Collection<UInt64> { 99' 38 }                  }              });
